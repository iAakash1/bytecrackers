{"id":"357f01dbd111f89ec0ba04c09f9aa418","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {IFunctionsRouter} from \"./interfaces/IFunctionsRouter.sol\";\nimport {IFunctionsClient} from \"./interfaces/IFunctionsClient.sol\";\n\nimport {FunctionsRequest} from \"./libraries/FunctionsRequest.sol\";\n\n/// @title The Chainlink Functions client contract\n/// @notice Contract developers can inherit this contract in order to make Chainlink Functions requests\nabstract contract FunctionsClient is IFunctionsClient {\n  using FunctionsRequest for FunctionsRequest.Request;\n\n  IFunctionsRouter internal immutable i_router;\n\n  event RequestSent(bytes32 indexed id);\n  event RequestFulfilled(bytes32 indexed id);\n\n  error OnlyRouterCanFulfill();\n\n  constructor(address router) {\n    i_router = IFunctionsRouter(router);\n  }\n\n  /// @notice Sends a Chainlink Functions request\n  /// @param data The CBOR encoded bytes data for a Functions request\n  /// @param subscriptionId The subscription ID that will be charged to service the request\n  /// @param callbackGasLimit the amount of gas that will be available for the fulfillment callback\n  /// @return requestId The generated request ID for this request\n  function _sendRequest(\n    bytes memory data,\n    uint64 subscriptionId,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) internal returns (bytes32) {\n    bytes32 requestId = i_router.sendRequest(\n      subscriptionId,\n      data,\n      FunctionsRequest.REQUEST_DATA_VERSION,\n      callbackGasLimit,\n      donId\n    );\n    emit RequestSent(requestId);\n    return requestId;\n  }\n\n  /// @notice User defined function to handle a response from the DON\n  /// @param requestId The request ID, returned by sendRequest()\n  /// @param response Aggregated response from the execution of the user's source code\n  /// @param err Aggregated error from the execution of the user code or from the execution pipeline\n  /// @dev Either response or error parameter will be set, but never both\n  function fulfillRequest(bytes32 requestId, bytes memory response, bytes memory err) internal virtual;\n\n  /// @inheritdoc IFunctionsClient\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external override {\n    if (msg.sender != address(i_router)) {\n      revert OnlyRouterCanFulfill();\n    }\n    fulfillRequest(requestId, response, err);\n    emit RequestFulfilled(requestId);\n  }\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/// @title Chainlink Functions client interface.\ninterface IFunctionsClient {\n  /// @notice Chainlink Functions response handler called by the Functions Router\n  /// during fullilment from the designated transmitter node in an OCR round.\n  /// @param requestId The requestId returned by FunctionsClient.sendRequest().\n  /// @param response Aggregated response from the request's source code.\n  /// @param err Aggregated error either from the request's source code or from the execution pipeline.\n  /// @dev Either response or error parameter will be set, but never both.\n  function handleOracleFulfillment(bytes32 requestId, bytes memory response, bytes memory err) external;\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {FunctionsResponse} from \"../libraries/FunctionsResponse.sol\";\n\n/// @title Chainlink Functions Router interface.\ninterface IFunctionsRouter {\n  /// @notice The identifier of the route to retrieve the address of the access control contract\n  /// The access control contract controls which accounts can manage subscriptions\n  /// @return id - bytes32 id that can be passed to the \"getContractById\" of the Router\n  function getAllowListId() external view returns (bytes32);\n\n  /// @notice Set the identifier of the route to retrieve the address of the access control contract\n  /// The access control contract controls which accounts can manage subscriptions\n  function setAllowListId(bytes32 allowListId) external;\n\n  /// @notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\n  /// @return adminFee\n  function getAdminFee() external view returns (uint72 adminFee);\n\n  /// @notice Sends a request using the provided subscriptionId\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\n  /// a client can make requests from different contracts referencing the same subscription\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n  /// @param dataVersion - Gas limit for the fulfillment callback\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\n  /// @param donId - An identifier used to determine which route to send the request along\n  /// @return requestId - A unique request identifier\n  function sendRequest(\n    uint64 subscriptionId,\n    bytes calldata data,\n    uint16 dataVersion,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) external returns (bytes32);\n\n  /// @notice Sends a request to the proposed contracts\n  /// @param subscriptionId - A unique subscription ID allocated by billing system,\n  /// a client can make requests from different contracts referencing the same subscription\n  /// @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n  /// @param dataVersion - Gas limit for the fulfillment callback\n  /// @param callbackGasLimit - Gas limit for the fulfillment callback\n  /// @param donId - An identifier used to determine which route to send the request along\n  /// @return requestId - A unique request identifier\n  function sendRequestToProposed(\n    uint64 subscriptionId,\n    bytes calldata data,\n    uint16 dataVersion,\n    uint32 callbackGasLimit,\n    bytes32 donId\n  ) external returns (bytes32);\n\n  /// @notice Fulfill the request by:\n  /// - calling back the data that the Oracle returned to the client contract\n  /// - pay the DON for processing the request\n  /// @dev Only callable by the Coordinator contract that is saved in the commitment\n  /// @param response response data from DON consensus\n  /// @param err error from DON consensus\n  /// @param juelsPerGas - current rate of juels/gas\n  /// @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\n  /// @param transmitter - The Node that transmitted the OCR report\n  /// @param commitment - The parameters of the request that must be held consistent between request and response time\n  /// @return fulfillResult -\n  /// @return callbackGasCostJuels -\n  function fulfill(\n    bytes memory response,\n    bytes memory err,\n    uint96 juelsPerGas,\n    uint96 costWithoutFulfillment,\n    address transmitter,\n    FunctionsResponse.Commitment memory commitment\n  ) external returns (FunctionsResponse.FulfillResult, uint96);\n\n  /// @notice Validate requested gas limit is below the subscription max.\n  /// @param subscriptionId subscription ID\n  /// @param callbackGasLimit desired callback gas limit\n  function isValidCallbackGasLimit(uint64 subscriptionId, uint32 callbackGasLimit) external view;\n\n  /// @notice Get the current contract given an ID\n  /// @param id A bytes32 identifier for the route\n  /// @return contract The current contract address\n  function getContractById(bytes32 id) external view returns (address);\n\n  /// @notice Get the proposed next contract given an ID\n  /// @param id A bytes32 identifier for the route\n  /// @return contract The current or proposed contract address\n  function getProposedContractById(bytes32 id) external view returns (address);\n\n  /// @notice Return the latest proprosal set\n  /// @return ids The identifiers of the contracts to update\n  /// @return to The addresses of the contracts that will be updated to\n  function getProposedContractSet() external view returns (bytes32[] memory, address[] memory);\n\n  /// @notice Proposes one or more updates to the contract routes\n  /// @dev Only callable by owner\n  function proposeContractsUpdate(bytes32[] memory proposalSetIds, address[] memory proposalSetAddresses) external;\n\n  /// @notice Updates the current contract routes to the proposed contracts\n  /// @dev Only callable by owner\n  function updateContracts() external;\n\n  /// @dev Puts the system into an emergency stopped state.\n  /// @dev Only callable by owner\n  function pause() external;\n\n  /// @dev Takes the system out of an emergency stopped state.\n  /// @dev Only callable by owner\n  function unpause() external;\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport {CBOR} from \"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol\";\n\n/// @title Library for encoding the input data of a Functions request into CBOR\nlibrary FunctionsRequest {\n  using CBOR for CBOR.CBORBuffer;\n\n  uint16 public constant REQUEST_DATA_VERSION = 1;\n  uint256 internal constant DEFAULT_BUFFER_SIZE = 256;\n\n  enum Location {\n    Inline, // Provided within the Request\n    Remote, // Hosted through remote location that can be accessed through a provided URL\n    DONHosted // Hosted on the DON's storage\n  }\n\n  enum CodeLanguage {\n    JavaScript\n    // In future version we may add other languages\n  }\n\n  struct Request {\n    Location codeLocation; // ════════════╸ The location of the source code that will be executed on each node in the DON\n    Location secretsLocation; // ═════════╸ The location of secrets that will be passed into the source code. *Only Remote secrets are supported\n    CodeLanguage language; // ════════════╸ The coding language that the source code is written in\n    string source; // ════════════════════╸ Raw source code for Request.codeLocation of Location.Inline, URL for Request.codeLocation of Location.Remote, or slot decimal number for Request.codeLocation of Location.DONHosted\n    bytes encryptedSecretsReference; // ══╸ Encrypted URLs for Request.secretsLocation of Location.Remote (use addSecretsReference()), or CBOR encoded slotid+version for Request.secretsLocation of Location.DONHosted (use addDONHostedSecrets())\n    string[] args; // ════════════════════╸ String arguments that will be passed into the source code\n    bytes[] bytesArgs; // ════════════════╸ Bytes arguments that will be passed into the source code\n  }\n\n  error EmptySource();\n  error EmptySecrets();\n  error EmptyArgs();\n  error NoInlineSecrets();\n\n  /// @notice Encodes a Request to CBOR encoded bytes\n  /// @param self The request to encode\n  /// @return CBOR encoded bytes\n  function encodeCBOR(Request memory self) internal pure returns (bytes memory) {\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\n\n    buffer.writeString(\"codeLocation\");\n    buffer.writeUInt256(uint256(self.codeLocation));\n\n    buffer.writeString(\"language\");\n    buffer.writeUInt256(uint256(self.language));\n\n    buffer.writeString(\"source\");\n    buffer.writeString(self.source);\n\n    if (self.args.length > 0) {\n      buffer.writeString(\"args\");\n      buffer.startArray();\n      for (uint256 i = 0; i < self.args.length; ++i) {\n        buffer.writeString(self.args[i]);\n      }\n      buffer.endSequence();\n    }\n\n    if (self.encryptedSecretsReference.length > 0) {\n      if (self.secretsLocation == Location.Inline) {\n        revert NoInlineSecrets();\n      }\n      buffer.writeString(\"secretsLocation\");\n      buffer.writeUInt256(uint256(self.secretsLocation));\n      buffer.writeString(\"secrets\");\n      buffer.writeBytes(self.encryptedSecretsReference);\n    }\n\n    if (self.bytesArgs.length > 0) {\n      buffer.writeString(\"bytesArgs\");\n      buffer.startArray();\n      for (uint256 i = 0; i < self.bytesArgs.length; ++i) {\n        buffer.writeBytes(self.bytesArgs[i]);\n      }\n      buffer.endSequence();\n    }\n\n    return buffer.buf.buf;\n  }\n\n  /// @notice Initializes a Chainlink Functions Request\n  /// @dev Sets the codeLocation and code on the request\n  /// @param self The uninitialized request\n  /// @param codeLocation The user provided source code location\n  /// @param language The programming language of the user code\n  /// @param source The user provided source code or a url\n  function initializeRequest(\n    Request memory self,\n    Location codeLocation,\n    CodeLanguage language,\n    string memory source\n  ) internal pure {\n    if (bytes(source).length == 0) revert EmptySource();\n\n    self.codeLocation = codeLocation;\n    self.language = language;\n    self.source = source;\n  }\n\n  /// @notice Initializes a Chainlink Functions Request\n  /// @dev Simplified version of initializeRequest for PoC\n  /// @param self The uninitialized request\n  /// @param javaScriptSource The user provided JS code (must not be empty)\n  function initializeRequestForInlineJavaScript(Request memory self, string memory javaScriptSource) internal pure {\n    initializeRequest(self, Location.Inline, CodeLanguage.JavaScript, javaScriptSource);\n  }\n\n  /// @notice Adds Remote user encrypted secrets to a Request\n  /// @param self The initialized request\n  /// @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets\n  function addSecretsReference(Request memory self, bytes memory encryptedSecretsReference) internal pure {\n    if (encryptedSecretsReference.length == 0) revert EmptySecrets();\n\n    self.secretsLocation = Location.Remote;\n    self.encryptedSecretsReference = encryptedSecretsReference;\n  }\n\n  /// @notice Adds DON-hosted secrets reference to a Request\n  /// @param self The initialized request\n  /// @param slotID Slot ID of the user's secrets hosted on DON\n  /// @param version User data version (for the slotID)\n  function addDONHostedSecrets(Request memory self, uint8 slotID, uint64 version) internal pure {\n    CBOR.CBORBuffer memory buffer = CBOR.create(DEFAULT_BUFFER_SIZE);\n\n    buffer.writeString(\"slotID\");\n    buffer.writeUInt64(slotID);\n    buffer.writeString(\"version\");\n    buffer.writeUInt64(version);\n\n    self.secretsLocation = Location.DONHosted;\n    self.encryptedSecretsReference = buffer.buf.buf;\n  }\n\n  /// @notice Sets args for the user run function\n  /// @param self The initialized request\n  /// @param args The array of string args (must not be empty)\n  function setArgs(Request memory self, string[] memory args) internal pure {\n    if (args.length == 0) revert EmptyArgs();\n\n    self.args = args;\n  }\n\n  /// @notice Sets bytes args for the user run function\n  /// @param self The initialized request\n  /// @param args The array of bytes args (must not be empty)\n  function setBytesArgs(Request memory self, bytes[] memory args) internal pure {\n    if (args.length == 0) revert EmptyArgs();\n\n    self.bytesArgs = args;\n  }\n}\n"},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\n/// @title Library of types that are used for fulfillment of a Functions request\nlibrary FunctionsResponse {\n  // Used to send request information from the Router to the Coordinator\n  struct RequestMeta {\n    bytes data; // ══════════════════╸ CBOR encoded Chainlink Functions request data, use FunctionsRequest library to encode a request\n    bytes32 flags; // ═══════════════╸ Per-subscription flags\n    address requestingContract; // ══╗ The client contract that is sending the request\n    uint96 availableBalance; // ═════╝ Common LINK balance of the subscription that is controlled by the Router to be used for all consumer requests.\n    uint72 adminFee; // ═════════════╗ Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\n    uint64 subscriptionId; //        ║ Identifier of the billing subscription that will be charged for the request\n    uint64 initiatedRequests; //     ║ The number of requests that have been started\n    uint32 callbackGasLimit; //      ║ The amount of gas that the callback to the consuming contract will be given\n    uint16 dataVersion; // ══════════╝ The version of the structure of the CBOR encoded request data\n    uint64 completedRequests; // ════╗ The number of requests that have successfully completed or timed out\n    address subscriptionOwner; // ═══╝ The owner of the billing subscription\n  }\n\n  enum FulfillResult {\n    FULFILLED, // 0\n    USER_CALLBACK_ERROR, // 1\n    INVALID_REQUEST_ID, // 2\n    COST_EXCEEDS_COMMITMENT, // 3\n    INSUFFICIENT_GAS_PROVIDED, // 4\n    SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION, // 5\n    INVALID_COMMITMENT // 6\n  }\n\n  struct Commitment {\n    bytes32 requestId; // ═════════════════╸ A unique identifier for a Chainlink Functions request\n    address coordinator; // ═══════════════╗ The Coordinator contract that manages the DON that is servicing a request\n    uint96 estimatedTotalCostJuels; // ════╝ The maximum cost in Juels (1e18) of LINK that will be charged to fulfill a request\n    address client; // ════════════════════╗ The client contract that sent the request\n    uint64 subscriptionId; //              ║ Identifier of the billing subscription that will be charged for the request\n    uint32 callbackGasLimit; // ═══════════╝ The amount of gas that the callback to the consuming contract will be given\n    uint72 adminFee; // ═══════════════════╗ Flat fee (in Juels of LINK) that will be paid to the Router Owner for operation of the network\n    uint72 donFee; //                      ║ Fee (in Juels of LINK) that will be split between Node Operators for servicing a request\n    uint40 gasOverheadBeforeCallback; //   ║ Represents the average gas execution cost before the fulfillment callback.\n    uint40 gasOverheadAfterCallback; //    ║ Represents the average gas execution cost after the fulfillment callback.\n    uint32 timeoutTimestamp; // ═══════════╝ The timestamp at which a request will be eligible to be timed out\n  }\n}\n"},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"content":"// SPDX-License-Identifier: BSD-2-Clause\npragma solidity ^0.8.4;\n\n/**\n* @dev A library for working with mutable byte buffers in Solidity.\n*\n* Byte buffers are mutable and expandable, and provide a variety of primitives\n* for appending to them. At any time you can fetch a bytes object containing the\n* current contents of the buffer. The bytes object should not be stored between\n* operations, as it may change due to resizing of the buffer.\n*/\nlibrary Buffer {\n    /**\n    * @dev Represents a mutable buffer. Buffers have a current value (buf) and\n    *      a capacity. The capacity may be longer than the current value, in\n    *      which case it can be extended without the need to allocate more memory.\n    */\n    struct buffer {\n        bytes buf;\n        uint capacity;\n    }\n\n    /**\n    * @dev Initializes a buffer with an initial capacity.\n    * @param buf The buffer to initialize.\n    * @param capacity The number of bytes of space to allocate the buffer.\n    * @return The buffer, for chaining.\n    */\n    function init(buffer memory buf, uint capacity) internal pure returns(buffer memory) {\n        if (capacity % 32 != 0) {\n            capacity += 32 - (capacity % 32);\n        }\n        // Allocate space for the buffer data\n        buf.capacity = capacity;\n        assembly {\n            let ptr := mload(0x40)\n            mstore(buf, ptr)\n            mstore(ptr, 0)\n            let fpm := add(32, add(ptr, capacity))\n            if lt(fpm, ptr) {\n                revert(0, 0)\n            }\n            mstore(0x40, fpm)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Initializes a new buffer from an existing bytes object.\n    *      Changes to the buffer may mutate the original value.\n    * @param b The bytes object to initialize the buffer with.\n    * @return A new buffer.\n    */\n    function fromBytes(bytes memory b) internal pure returns(buffer memory) {\n        buffer memory buf;\n        buf.buf = b;\n        buf.capacity = b.length;\n        return buf;\n    }\n\n    function resize(buffer memory buf, uint capacity) private pure {\n        bytes memory oldbuf = buf.buf;\n        init(buf, capacity);\n        append(buf, oldbuf);\n    }\n\n    /**\n    * @dev Sets buffer length to 0.\n    * @param buf The buffer to truncate.\n    * @return The original buffer, for chaining..\n    */\n    function truncate(buffer memory buf) internal pure returns (buffer memory) {\n        assembly {\n            let bufptr := mload(buf)\n            mstore(bufptr, 0)\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to copy.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data, uint len) internal pure returns(buffer memory) {\n        require(len <= data.length);\n\n        uint off = buf.buf.length;\n        uint newCapacity = off + len;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        uint dest;\n        uint src;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Length of existing buffer data\n            let buflen := mload(bufptr)\n            // Start address = buffer address + offset + sizeof(buffer length)\n            dest := add(add(bufptr, 32), off)\n            // Update buffer length if we're extending it\n            if gt(newCapacity, buflen) {\n                mstore(bufptr, newCapacity)\n            }\n            src := add(data, 32)\n        }\n\n        // Copy word-length chunks while possible\n        for (; len >= 32; len -= 32) {\n            assembly {\n                mstore(dest, mload(src))\n            }\n            dest += 32;\n            src += 32;\n        }\n\n        // Copy remaining bytes\n        unchecked {\n            uint mask = (256 ** (32 - len)) - 1;\n            assembly {\n                let srcpart := and(mload(src), not(mask))\n                let destpart := and(mload(dest), mask)\n                mstore(dest, or(destpart, srcpart))\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes memory data) internal pure returns (buffer memory) {\n        return append(buf, data, data.length);\n    }\n\n    /**\n    * @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n    *      capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendUint8(buffer memory buf, uint8 data) internal pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint offPlusOne = off + 1;\n        if (off >= buf.capacity) {\n            resize(buf, offPlusOne * 2);\n        }\n\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + off\n            let dest := add(add(bufptr, off), 32)\n            mstore8(dest, data)\n            // Update buffer length if we extended it\n            if gt(offPlusOne, mload(bufptr)) {\n                mstore(bufptr, offPlusOne)\n            }\n        }\n\n        return buf;\n    }\n\n    /**\n    * @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\n    *      exceed the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @param len The number of bytes to write (left-aligned).\n    * @return The original buffer, for chaining.\n    */\n    function append(buffer memory buf, bytes32 data, uint len) private pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint newCapacity = len + off;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        unchecked {\n            uint mask = (256 ** len) - 1;\n            // Right-align data\n            data = data >> (8 * (32 - len));\n            assembly {\n                // Memory address of the buffer data\n                let bufptr := mload(buf)\n                // Address = buffer address + sizeof(buffer length) + newCapacity\n                let dest := add(bufptr, newCapacity)\n                mstore(dest, or(and(mload(dest), not(mask)), data))\n                // Update buffer length if we extended it\n                if gt(newCapacity, mload(bufptr)) {\n                    mstore(bufptr, newCapacity)\n                }\n            }\n        }\n        return buf;\n    }\n\n    /**\n    * @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chhaining.\n    */\n    function appendBytes20(buffer memory buf, bytes20 data) internal pure returns (buffer memory) {\n        return append(buf, bytes32(data), 20);\n    }\n\n    /**\n    * @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n    *      the capacity of the buffer.\n    * @param buf The buffer to append to.\n    * @param data The data to append.\n    * @return The original buffer, for chaining.\n    */\n    function appendBytes32(buffer memory buf, bytes32 data) internal pure returns (buffer memory) {\n        return append(buf, data, 32);\n    }\n\n    /**\n     * @dev Appends a byte to the end of the buffer. Resizes if doing so would\n     *      exceed the capacity of the buffer.\n     * @param buf The buffer to append to.\n     * @param data The data to append.\n     * @param len The number of bytes to write (right-aligned).\n     * @return The original buffer.\n     */\n    function appendInt(buffer memory buf, uint data, uint len) internal pure returns(buffer memory) {\n        uint off = buf.buf.length;\n        uint newCapacity = len + off;\n        if (newCapacity > buf.capacity) {\n            resize(buf, newCapacity * 2);\n        }\n\n        uint mask = (256 ** len) - 1;\n        assembly {\n            // Memory address of the buffer data\n            let bufptr := mload(buf)\n            // Address = buffer address + sizeof(buffer length) + newCapacity\n            let dest := add(bufptr, newCapacity)\n            mstore(dest, or(and(mload(dest), not(mask)), data))\n            // Update buffer length if we extended it\n            if gt(newCapacity, mload(bufptr)) {\n                mstore(bufptr, newCapacity)\n            }\n        }\n        return buf;\n    }\n}"},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"../../@ensdomains/buffer/v0.1.0/Buffer.sol\";\n\n/**\n* @dev A library for populating CBOR encoded payload in Solidity.\n*\n* https://datatracker.ietf.org/doc/html/rfc7049\n*\n* The library offers various write* and start* methods to encode values of different types.\n* The resulted buffer can be obtained with data() method.\n* Encoding of primitive types is staightforward, whereas encoding of sequences can result\n* in an invalid CBOR if start/write/end flow is violated.\n* For the purpose of gas saving, the library does not verify start/write/end flow internally,\n* except for nested start/end pairs.\n*/\n\nlibrary CBOR {\n    using Buffer for Buffer.buffer;\n\n    struct CBORBuffer {\n        Buffer.buffer buf;\n        uint256 depth;\n    }\n\n    uint8 private constant MAJOR_TYPE_INT = 0;\n    uint8 private constant MAJOR_TYPE_NEGATIVE_INT = 1;\n    uint8 private constant MAJOR_TYPE_BYTES = 2;\n    uint8 private constant MAJOR_TYPE_STRING = 3;\n    uint8 private constant MAJOR_TYPE_ARRAY = 4;\n    uint8 private constant MAJOR_TYPE_MAP = 5;\n    uint8 private constant MAJOR_TYPE_TAG = 6;\n    uint8 private constant MAJOR_TYPE_CONTENT_FREE = 7;\n\n    uint8 private constant TAG_TYPE_BIGNUM = 2;\n    uint8 private constant TAG_TYPE_NEGATIVE_BIGNUM = 3;\n\n    uint8 private constant CBOR_FALSE = 20;\n    uint8 private constant CBOR_TRUE = 21;\n    uint8 private constant CBOR_NULL = 22;\n    uint8 private constant CBOR_UNDEFINED = 23;\n\n    function create(uint256 capacity) internal pure returns(CBORBuffer memory cbor) {\n        Buffer.init(cbor.buf, capacity);\n        cbor.depth = 0;\n        return cbor;\n    }\n\n    function data(CBORBuffer memory buf) internal pure returns(bytes memory) {\n        require(buf.depth == 0, \"Invalid CBOR\");\n        return buf.buf.buf;\n    }\n\n    function writeUInt256(CBORBuffer memory buf, uint256 value) internal pure {\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_BIGNUM));\n        writeBytes(buf, abi.encode(value));\n    }\n\n    function writeInt256(CBORBuffer memory buf, int256 value) internal pure {\n        if (value < 0) {\n            buf.buf.appendUint8(\n                uint8((MAJOR_TYPE_TAG << 5) | TAG_TYPE_NEGATIVE_BIGNUM)\n            );\n            writeBytes(buf, abi.encode(uint256(-1 - value)));\n        } else {\n            writeUInt256(buf, uint256(value));\n        }\n    }\n\n    function writeUInt64(CBORBuffer memory buf, uint64 value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_INT, value);\n    }\n\n    function writeInt64(CBORBuffer memory buf, int64 value) internal pure {\n        if(value >= 0) {\n            writeFixedNumeric(buf, MAJOR_TYPE_INT, uint64(value));\n        } else{\n            writeFixedNumeric(buf, MAJOR_TYPE_NEGATIVE_INT, uint64(-1 - value));\n        }\n    }\n\n    function writeBytes(CBORBuffer memory buf, bytes memory value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_BYTES, uint64(value.length));\n        buf.buf.append(value);\n    }\n\n    function writeString(CBORBuffer memory buf, string memory value) internal pure {\n        writeFixedNumeric(buf, MAJOR_TYPE_STRING, uint64(bytes(value).length));\n        buf.buf.append(bytes(value));\n    }\n\n    function writeBool(CBORBuffer memory buf, bool value) internal pure {\n        writeContentFree(buf, value ? CBOR_TRUE : CBOR_FALSE);\n    }\n\n    function writeNull(CBORBuffer memory buf) internal pure {\n        writeContentFree(buf, CBOR_NULL);\n    }\n\n    function writeUndefined(CBORBuffer memory buf) internal pure {\n        writeContentFree(buf, CBOR_UNDEFINED);\n    }\n\n    function startArray(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_ARRAY);\n        buf.depth += 1;\n    }\n\n    function startFixedArray(CBORBuffer memory buf, uint64 length) internal pure {\n        writeDefiniteLengthType(buf, MAJOR_TYPE_ARRAY, length);\n    }\n\n    function startMap(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_MAP);\n        buf.depth += 1;\n    }\n\n    function startFixedMap(CBORBuffer memory buf, uint64 length) internal pure {\n        writeDefiniteLengthType(buf, MAJOR_TYPE_MAP, length);\n    }\n\n    function endSequence(CBORBuffer memory buf) internal pure {\n        writeIndefiniteLengthType(buf, MAJOR_TYPE_CONTENT_FREE);\n        buf.depth -= 1;\n    }\n\n    function writeKVString(CBORBuffer memory buf, string memory key, string memory value) internal pure {\n        writeString(buf, key);\n        writeString(buf, value);\n    }\n\n    function writeKVBytes(CBORBuffer memory buf, string memory key, bytes memory value) internal pure {\n        writeString(buf, key);\n        writeBytes(buf, value);\n    }\n\n    function writeKVUInt256(CBORBuffer memory buf, string memory key, uint256 value) internal pure {\n        writeString(buf, key);\n        writeUInt256(buf, value);\n    }\n\n    function writeKVInt256(CBORBuffer memory buf, string memory key, int256 value) internal pure {\n        writeString(buf, key);\n        writeInt256(buf, value);\n    }\n\n    function writeKVUInt64(CBORBuffer memory buf, string memory key, uint64 value) internal pure {\n        writeString(buf, key);\n        writeUInt64(buf, value);\n    }\n\n    function writeKVInt64(CBORBuffer memory buf, string memory key, int64 value) internal pure {\n        writeString(buf, key);\n        writeInt64(buf, value);\n    }\n\n    function writeKVBool(CBORBuffer memory buf, string memory key, bool value) internal pure {\n        writeString(buf, key);\n        writeBool(buf, value);\n    }\n\n    function writeKVNull(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        writeNull(buf);\n    }\n\n    function writeKVUndefined(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        writeUndefined(buf);\n    }\n\n    function writeKVMap(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        startMap(buf);\n    }\n\n    function writeKVArray(CBORBuffer memory buf, string memory key) internal pure {\n        writeString(buf, key);\n        startArray(buf);\n    }\n\n    function writeFixedNumeric(\n        CBORBuffer memory buf,\n        uint8 major,\n        uint64 value\n    ) private pure {\n        if (value <= 23) {\n            buf.buf.appendUint8(uint8((major << 5) | value));\n        } else if (value <= 0xFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 24));\n            buf.buf.appendInt(value, 1);\n        } else if (value <= 0xFFFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 25));\n            buf.buf.appendInt(value, 2);\n        } else if (value <= 0xFFFFFFFF) {\n            buf.buf.appendUint8(uint8((major << 5) | 26));\n            buf.buf.appendInt(value, 4);\n        } else {\n            buf.buf.appendUint8(uint8((major << 5) | 27));\n            buf.buf.appendInt(value, 8);\n        }\n    }\n\n    function writeIndefiniteLengthType(CBORBuffer memory buf, uint8 major)\n        private\n        pure\n    {\n        buf.buf.appendUint8(uint8((major << 5) | 31));\n    }\n\n    function writeDefiniteLengthType(CBORBuffer memory buf, uint8 major, uint64 length)\n        private\n        pure\n    {\n        writeFixedNumeric(buf, major, length);\n    }\n\n    function writeContentFree(CBORBuffer memory buf, uint8 value) private pure {\n        buf.buf.appendUint8(uint8((MAJOR_TYPE_CONTENT_FREE << 5) | value));\n    }\n}"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Base64.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Base64.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to operate with Base64 strings.\n */\nlibrary Base64 {\n    /**\n     * @dev Base64 Encoding/Decoding Table\n     * See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\n     */\n    string internal constant _TABLE = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n    string internal constant _TABLE_URL = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64 `string` representation.\n     */\n    function encode(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE, true);\n    }\n\n    /**\n     * @dev Converts a `bytes` to its Bytes64Url `string` representation.\n     * Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648].\n     */\n    function encodeURL(bytes memory data) internal pure returns (string memory) {\n        return _encode(data, _TABLE_URL, false);\n    }\n\n    /**\n     * @dev Internal table-agnostic conversion\n     */\n    function _encode(bytes memory data, string memory table, bool withPadding) private pure returns (string memory) {\n        /**\n         * Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n         * https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol\n         */\n        if (data.length == 0) return \"\";\n\n        // If padding is enabled, the final length should be `bytes` data length divided by 3 rounded up and then\n        // multiplied by 4 so that it leaves room for padding the last chunk\n        // - `data.length + 2`  -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // - `4 *`              -> 4 characters for each chunk\n        // This is equivalent to: 4 * Math.ceil(data.length / 3)\n        //\n        // If padding is disabled, the final length should be `bytes` data length multiplied by 4/3 rounded up as\n        // opposed to when padding is required to fill the last chunk.\n        // - `4 * data.length`  -> 4 characters for each chunk\n        // - ` + 2`             -> Prepare for division rounding up\n        // - `/ 3`              -> Number of 3-bytes chunks (rounded up)\n        // This is equivalent to: Math.ceil((4 * data.length) / 3)\n        uint256 resultLength = withPadding ? 4 * ((data.length + 2) / 3) : (4 * data.length + 2) / 3;\n\n        string memory result = new string(resultLength);\n\n        assembly (\"memory-safe\") {\n            // Prepare the lookup table (skip the first \"length\" byte)\n            let tablePtr := add(table, 1)\n\n            // Prepare result pointer, jump over length\n            let resultPtr := add(result, 0x20)\n            let dataPtr := data\n            let endPtr := add(data, mload(data))\n\n            // In some cases, the last iteration will read bytes after the end of the data. We cache the value, and\n            // set it to zero to make sure no dirty bytes are read in that section.\n            let afterPtr := add(endPtr, 0x20)\n            let afterCache := mload(afterPtr)\n            mstore(afterPtr, 0x00)\n\n            // Run over the input, 3 bytes at a time\n            for {\n\n            } lt(dataPtr, endPtr) {\n\n            } {\n                // Advance 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // To write each character, shift the 3 byte (24 bits) chunk\n                // 4 times in blocks of 6 bits for each character (18, 12, 6, 0)\n                // and apply logical AND with 0x3F to bitmask the least significant 6 bits.\n                // Use this as an index into the lookup table, mload an entire word\n                // so the desired character is in the least significant byte, and\n                // mstore8 this least significant byte into the result and continue.\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n\n                mstore8(resultPtr, mload(add(tablePtr, and(input, 0x3F))))\n                resultPtr := add(resultPtr, 1) // Advance\n            }\n\n            // Reset the value that was cached\n            mstore(afterPtr, afterCache)\n\n            if withPadding {\n                // When data `bytes` is not exactly 3 bytes long\n                // it is padded with `=` characters at the end\n                switch mod(mload(data), 3)\n                case 1 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                    mstore8(sub(resultPtr, 2), 0x3d)\n                }\n                case 2 {\n                    mstore8(sub(resultPtr, 1), 0x3d)\n                }\n            }\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Pausable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/AuthenticityNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"erc721a/contracts/ERC721A.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Strings.sol\";\nimport \"@openzeppelin/contracts/utils/Base64.sol\";\n\n/**\n * @title AuthenticityNFT\n * @dev ERC721A NFT contract for authenticity certificates\n * @notice This contract creates NFT certificates for verified authentic content\n */\ncontract AuthenticityNFT is ERC721A, Ownable, ReentrancyGuard {\n    using Strings for uint256;\n\n    // Struct to store NFT metadata\n    struct AuthenticityMetadata {\n        string ipfsHash;\n        uint256 confidenceScore;\n        string aiModel;\n        uint256 verificationTimestamp;\n        address originalRequester;\n        bool isRevoked;\n    }\n\n    // Contract state\n    string private _baseTokenURI;\n    mapping(uint256 => AuthenticityMetadata) public tokenMetadata;\n    mapping(string => uint256) public ipfsToTokenId; // ipfsHash => tokenId\n    mapping(address => bool) public authorizedMinters;\n    \n    // Statistics\n    uint256 public totalMinted;\n    uint256 public totalRevoked;\n    \n    // Events\n    event AuthenticityNFTMinted(\n        address indexed to,\n        uint256 indexed tokenId,\n        string ipfsHash,\n        uint256 confidenceScore,\n        string aiModel,\n        uint256 timestamp\n    );\n    \n    event NFTRevoked(\n        uint256 indexed tokenId,\n        string reason,\n        uint256 timestamp\n    );\n    \n    event BaseURIUpdated(\n        string oldBaseURI,\n        string newBaseURI,\n        uint256 timestamp\n    );\n    \n    event MinterAuthorized(\n        address indexed minter,\n        bool authorized,\n        uint256 timestamp\n    );\n\n    /**\n     * @dev Constructor\n     * @param _name Token name\n     * @param _symbol Token symbol\n     * @param _baseURI Base URI for token metadata\n     * @param _initialOwner Initial owner of the contract\n     */\n    constructor(\n        string memory _name,\n        string memory _symbol,\n        string memory _baseURI,\n        address _initialOwner\n    ) ERC721A(_name, _symbol) Ownable(_initialOwner) {\n        _baseTokenURI = _baseURI;\n    }\n\n    /**\n     * @notice Mint authenticity NFT (only authorized minters)\n     * @param _to Address to mint NFT to\n     * @param _ipfsHash IPFS hash of verified content\n     * @param _confidenceScore AI confidence score (0-100)\n     * @param _aiModel AI model used for verification\n     * @return tokenId The ID of the minted token\n     */\n    function mintAuthenticityNFT(\n        address _to,\n        string memory _ipfsHash,\n        uint256 _confidenceScore,\n        string memory _aiModel\n    ) external nonReentrant returns (uint256) {\n        require(authorizedMinters[msg.sender], \"Not authorized to mint\");\n        require(_to != address(0), \"Cannot mint to zero address\");\n        require(bytes(_ipfsHash).length > 0, \"Invalid IPFS hash\");\n        require(_confidenceScore >= 50 && _confidenceScore <= 100, \"Invalid confidence score\");\n        require(ipfsToTokenId[_ipfsHash] == 0, \"NFT already exists for this content\");\n\n        uint256 tokenId = _nextTokenId();\n        \n        // Store metadata\n        tokenMetadata[tokenId] = AuthenticityMetadata({\n            ipfsHash: _ipfsHash,\n            confidenceScore: _confidenceScore,\n            aiModel: _aiModel,\n            verificationTimestamp: block.timestamp,\n            originalRequester: _to,\n            isRevoked: false\n        });\n\n        // Update mappings\n        ipfsToTokenId[_ipfsHash] = tokenId;\n        totalMinted++;\n\n        // Mint token\n        _mint(_to, 1);\n\n        emit AuthenticityNFTMinted(\n            _to,\n            tokenId,\n            _ipfsHash,\n            _confidenceScore,\n            _aiModel,\n            block.timestamp\n        );\n\n        return tokenId;\n    }\n\n    /**\n     * @notice Revoke NFT (owner only - for emergency cases)\n     * @param _tokenId Token ID to revoke\n     * @param _reason Reason for revocation\n     */\n    function revokeNFT(\n        uint256 _tokenId,\n        string memory _reason\n    ) external onlyOwner {\n        require(_exists(_tokenId), \"Token does not exist\");\n        require(!tokenMetadata[_tokenId].isRevoked, \"Token already revoked\");\n\n        tokenMetadata[_tokenId].isRevoked = true;\n        totalRevoked++;\n\n        emit NFTRevoked(_tokenId, _reason, block.timestamp);\n    }\n\n    /**\n     * @notice Get NFT metadata for a token\n     * @param _tokenId Token ID\n     * @return metadata The token metadata\n     */\n    function getTokenMetadata(\n        uint256 _tokenId\n    ) external view returns (AuthenticityMetadata memory) {\n        require(_exists(_tokenId), \"Token does not exist\");\n        return tokenMetadata[_tokenId];\n    }\n\n    /**\n     * @notice Check if content has an NFT\n     * @param _ipfsHash IPFS hash of content\n     * @return tokenId Token ID (0 if no NFT exists)\n     */\n    function getTokenIdByIPFS(\n        string memory _ipfsHash\n    ) external view returns (uint256) {\n        return ipfsToTokenId[_ipfsHash];\n    }\n\n    /**\n     * @notice Get tokens owned by an address\n     * @param _owner Owner address\n     * @return tokenIds Array of token IDs\n     */\n    function getTokensByOwner(\n        address _owner\n    ) external view returns (uint256[] memory) {\n        require(_owner != address(0), \"Invalid owner address\");\n        \n        uint256 balance = balanceOf(_owner);\n        uint256[] memory tokenIds = new uint256[](balance);\n        uint256 currentIndex = 0;\n        \n        uint256 totalSupply = _nextTokenId() - _startTokenId();\n        \n        for (uint256 i = _startTokenId(); i < _startTokenId() + totalSupply && currentIndex < balance; i++) {\n            if (_exists(i) && ownerOf(i) == _owner) {\n                tokenIds[currentIndex] = i;\n                currentIndex++;\n            }\n        }\n        \n        return tokenIds;\n    }\n\n    /**\n     * @notice Generate token URI with dynamic metadata\n     * @param _tokenId Token ID\n     * @return Token URI string\n     */\n    function tokenURI(uint256 _tokenId) public view virtual override returns (string memory) {\n        require(_exists(_tokenId), \"Token does not exist\");\n\n        AuthenticityMetadata memory metadata = tokenMetadata[_tokenId];\n        \n        if (metadata.isRevoked) {\n            return _buildRevokedTokenURI(_tokenId);\n        }\n\n        return _buildTokenURI(_tokenId, metadata);\n    }\n\n    /**\n     * @notice Build token URI for active tokens\n     * @param _tokenId Token ID\n     * @param _metadata Token metadata\n     * @return URI string\n     */\n    function _buildTokenURI(\n        uint256 _tokenId,\n        AuthenticityMetadata memory _metadata\n    ) internal view returns (string memory) {\n        string memory json = Base64.encode(\n            bytes(\n                string(\n                    abi.encodePacked(\n                        '{\"name\": \"Authenticity Certificate #',\n                        _tokenId.toString(),\n                        '\", \"description\": \"This NFT certifies the authenticity of digital content verified by AI analysis.\", ',\n                        '\"image\": \"',\n                        _baseTokenURI,\n                        'certificate.png\", ',\n                        '\"external_url\": \"https://gateway.pinata.cloud/ipfs/',\n                        _metadata.ipfsHash,\n                        '\", ',\n                        '\"attributes\": [',\n                        '{\"trait_type\": \"Confidence Score\", \"value\": ',\n                        _metadata.confidenceScore.toString(),\n                        '}, ',\n                        '{\"trait_type\": \"AI Model\", \"value\": \"',\n                        _metadata.aiModel,\n                        '\"}, ',\n                        '{\"trait_type\": \"Verification Date\", \"value\": ',\n                        _metadata.verificationTimestamp.toString(),\n                        '}, ',\n                        '{\"trait_type\": \"Status\", \"value\": \"Verified Authentic\"}, ',\n                        '{\"trait_type\": \"IPFS Hash\", \"value\": \"',\n                        _metadata.ipfsHash,\n                        '\"}',\n                        ']}'\n                    )\n                )\n            )\n        );\n\n        return string(abi.encodePacked(\"data:application/json;base64,\", json));\n    }\n\n    /**\n     * @notice Build token URI for revoked tokens\n     * @param _tokenId Token ID\n     * @return URI string\n     */\n    function _buildRevokedTokenURI(uint256 _tokenId) internal view returns (string memory) {\n        string memory json = Base64.encode(\n            bytes(\n                string(\n                    abi.encodePacked(\n                        '{\"name\": \"Revoked Certificate #',\n                        _tokenId.toString(),\n                        '\", \"description\": \"This authenticity certificate has been revoked.\", ',\n                        '\"image\": \"',\n                        _baseTokenURI,\n                        'revoked.png\", ',\n                        '\"attributes\": [',\n                        '{\"trait_type\": \"Status\", \"value\": \"Revoked\"}',\n                        ']}'\n                    )\n                )\n            )\n        );\n\n        return string(abi.encodePacked(\"data:application/json;base64,\", json));\n    }\n\n    /**\n     * @notice Set base URI (owner only)\n     * @param _baseURI New base URI\n     */\n    function setBaseURI(string memory _baseURI) external onlyOwner {\n        string memory oldBaseURI = _baseTokenURI;\n        _baseTokenURI = _baseURI;\n        \n        emit BaseURIUpdated(oldBaseURI, _baseURI, block.timestamp);\n    }\n\n    /**\n     * @notice Authorize/deauthorize minter (owner only)\n     * @param _minter Minter address\n     * @param _authorized Authorization status\n     */\n    function setAuthorizedMinter(\n        address _minter,\n        bool _authorized\n    ) external onlyOwner {\n        require(_minter != address(0), \"Invalid minter address\");\n        authorizedMinters[_minter] = _authorized;\n        \n        emit MinterAuthorized(_minter, _authorized, block.timestamp);\n    }\n\n    /**\n     * @notice Get contract statistics\n     * @return totalMinted_ Total NFTs minted\n     * @return totalRevoked_ Total NFTs revoked\n     * @return totalActive Total active NFTs\n     */\n    function getStatistics() external view returns (\n        uint256 totalMinted_,\n        uint256 totalRevoked_,\n        uint256 totalActive\n    ) {\n        return (totalMinted, totalRevoked, totalMinted - totalRevoked);\n    }\n\n    /**\n     * @notice Check if NFT is valid (not revoked)\n     * @param _tokenId Token ID\n     * @return isValid Whether the NFT is valid\n     */\n    function isValidNFT(uint256 _tokenId) external view returns (bool) {\n        if (!_exists(_tokenId)) {\n            return false;\n        }\n        return !tokenMetadata[_tokenId].isRevoked;\n    }\n\n    /**\n     * @notice Override _startTokenId to start from 1\n     */\n    function _startTokenId() internal pure override returns (uint256) {\n        return 1;\n    }\n\n    /**\n     * @notice Override transfer functions to prevent transfers of revoked tokens\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address /* to */,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal view override {\n        // Allow minting (from == address(0))\n        if (from == address(0)) {\n            return;\n        }\n\n        // Check if any token in the range is revoked\n        for (uint256 i = 0; i < quantity; i++) {\n            uint256 tokenId = startTokenId + i;\n            require(!tokenMetadata[tokenId].isRevoked, \"Cannot transfer revoked NFT\");\n        }\n    }\n\n    /**\n     * @notice Get base URI\n     * @return Base URI string\n     */\n    function baseURI() external view returns (string memory) {\n        return _baseTokenURI;\n    }\n\n    /**\n     * @notice Check if contract supports interface\n     * @param interfaceId Interface ID\n     * @return Whether interface is supported\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @notice Get contract version\n     * @return Version string\n     */\n    function version() external pure returns (string memory) {\n        return \"1.0.0\";\n    }\n}\n"},"contracts/AuthenticityRegistry.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\";\nimport \"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"./AuthenticityNFT.sol\";\n\n/**\n * @title AuthenticityRegistry\n * @dev Smart contract for verifying media authenticity using Chainlink Functions\n * @notice This contract integrates with AI services via Chainlink Functions to detect deepfakes\n */\ncontract AuthenticityRegistry is FunctionsClient, Ownable, ReentrancyGuard, Pausable {\n    using FunctionsRequest for FunctionsRequest.Request;\n\n    // Struct to store verification request data\n    struct VerificationRequest {\n        address requester;\n        string ipfsHash;\n        string mediaType;\n        uint256 timestamp;\n        bool isProcessed;\n        bool isAuthentic;\n        uint256 confidenceScore; // 0-100\n        string aiModel;\n        uint256 nftTokenId; // 0 if no NFT minted\n    }\n\n    // Struct to store verification result\n    struct VerificationResult {\n        bytes32 requestId;\n        bool isAuthentic;\n        uint256 confidenceScore;\n        string aiModel;\n        string reasoning;\n        uint256 timestamp;\n    }\n\n    // Contract state variables\n    AuthenticityNFT public immutable authenticityNFT;\n    uint64 public subscriptionId;\n    uint32 public gasLimit;\n    bytes32 public donID;\n    string public sourceCode;\n    \n    // Mappings\n    mapping(bytes32 => VerificationRequest) public verificationRequests;\n    mapping(string => VerificationResult) public verificationResults; // ipfsHash => result\n    mapping(address => bytes32[]) public userRequests;\n    mapping(string => bool) public flaggedContent; // ipfsHash => flagged\n    \n    // Arrays for public access\n    bytes32[] public allRequestIds;\n    string[] public allVerifiedContent;\n    string[] public allFlaggedContent;\n    \n    // Statistics\n    uint256 public totalVerifications;\n    uint256 public totalAuthentic;\n    uint256 public totalFake;\n    uint256 public totalNFTsMinted;\n    \n    // Fee structure\n    uint256 public verificationFee = 0.001 ether; // Fee in native token\n    uint256 public nftMintFee = 0.01 ether; // Additional fee for NFT minting\n    \n    // Events\n    event VerificationRequested(\n        bytes32 indexed requestId,\n        address indexed requester,\n        string ipfsHash,\n        string mediaType,\n        uint256 timestamp\n    );\n    \n    event VerificationCompleted(\n        bytes32 indexed requestId,\n        string indexed ipfsHash,\n        bool isAuthentic,\n        uint256 confidenceScore,\n        string aiModel,\n        uint256 timestamp\n    );\n    \n    event ContentFlagged(\n        string indexed ipfsHash,\n        address indexed reporter,\n        uint256 timestamp\n    );\n    \n    event NFTMinted(\n        string indexed ipfsHash,\n        address indexed owner,\n        uint256 tokenId,\n        uint256 timestamp\n    );\n    \n    event FeesUpdated(\n        uint256 verificationFee,\n        uint256 nftMintFee,\n        uint256 timestamp\n    );\n    \n    event FundsWithdrawn(\n        address indexed owner,\n        uint256 amount,\n        uint256 timestamp\n    );\n\n    /**\n     * @dev Constructor to initialize the contract\n     * @param _router Chainlink Functions router address\n     * @param _subscriptionId Chainlink subscription ID\n     * @param _gasLimit Gas limit for Functions requests\n     * @param _donID Decentralized Oracle Network ID\n     * @param _sourceCode JavaScript source code for Chainlink Functions\n     * @param _nftContract Address of the AuthenticityNFT contract\n     * @param _initialOwner Initial owner of the contract\n     */\n    constructor(\n        address _router,\n        uint64 _subscriptionId,\n        uint32 _gasLimit,\n        bytes32 _donID,\n        string memory _sourceCode,\n        address _nftContract,\n        address _initialOwner\n    ) FunctionsClient(_router) Ownable(_initialOwner) {\n        subscriptionId = _subscriptionId;\n        gasLimit = _gasLimit;\n        donID = _donID;\n        sourceCode = _sourceCode;\n        authenticityNFT = AuthenticityNFT(_nftContract);\n    }\n\n    /**\n     * @notice Request verification for media content\n     * @param _ipfsHash IPFS hash of the media to verify\n     * @param _mediaType Type of media (image, video, audio)\n     * @return requestId The ID of the verification request\n     */\n    function requestVerification(\n        string memory _ipfsHash,\n        string memory _mediaType\n    ) external payable nonReentrant whenNotPaused returns (bytes32) {\n        require(msg.value >= verificationFee, \"Insufficient fee\");\n        require(bytes(_ipfsHash).length > 0, \"Invalid IPFS hash\");\n        require(bytes(_mediaType).length > 0, \"Invalid media type\");\n        require(\n            verificationResults[_ipfsHash].timestamp == 0,\n            \"Content already verified\"\n        );\n\n        // Create Chainlink Functions request\n        FunctionsRequest.Request memory req;\n        req.initializeRequestForInlineJavaScript(sourceCode);\n        \n        // Set arguments: [ipfsHash, mediaType]\n        string[] memory args = new string[](2);\n        args[0] = _ipfsHash;\n        args[1] = _mediaType;\n        req.setArgs(args);\n\n        // Send request\n        bytes32 requestId = _sendRequest(\n            req.encodeCBOR(),\n            subscriptionId,\n            gasLimit,\n            donID\n        );\n\n        // Store request data\n        verificationRequests[requestId] = VerificationRequest({\n            requester: msg.sender,\n            ipfsHash: _ipfsHash,\n            mediaType: _mediaType,\n            timestamp: block.timestamp,\n            isProcessed: false,\n            isAuthentic: false,\n            confidenceScore: 0,\n            aiModel: \"\",\n            nftTokenId: 0\n        });\n\n        // Update mappings and arrays\n        userRequests[msg.sender].push(requestId);\n        allRequestIds.push(requestId);\n        totalVerifications++;\n\n        emit VerificationRequested(\n            requestId,\n            msg.sender,\n            _ipfsHash,\n            _mediaType,\n            block.timestamp\n        );\n\n        return requestId;\n    }\n\n    /**\n     * @notice Chainlink Functions callback - processes verification result\n     * @param requestId The ID of the request\n     * @param response The verification result from AI service\n     * @param err Any error that occurred during processing\n     */\n    function fulfillRequest(\n        bytes32 requestId,\n        bytes memory response,\n        bytes memory err\n    ) internal override {\n        VerificationRequest storage request = verificationRequests[requestId];\n        require(request.timestamp > 0, \"Request not found\");\n        require(!request.isProcessed, \"Request already processed\");\n\n        if (err.length > 0) {\n            // Handle error case\n            request.isProcessed = true;\n            return;\n        }\n\n        // Decode response: [isAuthentic, confidenceScore, aiModel, reasoning]\n        (bool isAuthentic, uint256 confidenceScore, string memory aiModel, string memory reasoning) = \n            abi.decode(response, (bool, uint256, string, string));\n\n        // Update request\n        request.isProcessed = true;\n        request.isAuthentic = isAuthentic;\n        request.confidenceScore = confidenceScore;\n        request.aiModel = aiModel;\n\n        // Store result\n        verificationResults[request.ipfsHash] = VerificationResult({\n            requestId: requestId,\n            isAuthentic: isAuthentic,\n            confidenceScore: confidenceScore,\n            aiModel: aiModel,\n            reasoning: reasoning,\n            timestamp: block.timestamp\n        });\n\n        // Update statistics\n        if (isAuthentic) {\n            totalAuthentic++;\n            allVerifiedContent.push(request.ipfsHash);\n        } else {\n            totalFake++;\n            flaggedContent[request.ipfsHash] = true;\n            allFlaggedContent.push(request.ipfsHash);\n        }\n\n        emit VerificationCompleted(\n            requestId,\n            request.ipfsHash,\n            isAuthentic,\n            confidenceScore,\n            aiModel,\n            block.timestamp\n        );\n    }\n\n    /**\n     * @notice Mint NFT certificate for authentic content\n     * @param _ipfsHash IPFS hash of the verified authentic content\n     * @return tokenId The ID of the minted NFT\n     */\n    function mintAuthenticityNFT(\n        string memory _ipfsHash\n    ) external payable nonReentrant whenNotPaused returns (uint256) {\n        require(msg.value >= nftMintFee, \"Insufficient NFT mint fee\");\n        \n        VerificationResult memory result = verificationResults[_ipfsHash];\n        require(result.timestamp > 0, \"Content not verified\");\n        require(result.isAuthentic, \"Content is not authentic\");\n        require(result.confidenceScore >= 80, \"Confidence score too low\");\n\n        // Find the original request to check ownership\n        bytes32 requestId = result.requestId;\n        VerificationRequest storage request = verificationRequests[requestId];\n        require(request.requester == msg.sender, \"Only requester can mint NFT\");\n        require(request.nftTokenId == 0, \"NFT already minted\");\n\n        // Mint NFT\n        uint256 tokenId = authenticityNFT.mintAuthenticityNFT(\n            msg.sender,\n            _ipfsHash,\n            result.confidenceScore,\n            result.aiModel\n        );\n\n        // Update request\n        request.nftTokenId = tokenId;\n        totalNFTsMinted++;\n\n        emit NFTMinted(_ipfsHash, msg.sender, tokenId, block.timestamp);\n\n        return tokenId;\n    }\n\n    /**\n     * @notice Get verification result for content\n     * @param _ipfsHash IPFS hash of the content\n     * @return result The verification result\n     */\n    function getVerificationResult(\n        string memory _ipfsHash\n    ) external view returns (VerificationResult memory) {\n        return verificationResults[_ipfsHash];\n    }\n\n    /**\n     * @notice Get user's verification requests\n     * @param _user Address of the user\n     * @return requestIds Array of request IDs\n     */\n    function getUserRequests(\n        address _user\n    ) external view returns (bytes32[] memory) {\n        return userRequests[_user];\n    }\n\n    /**\n     * @notice Get all verified authentic content\n     * @return Array of IPFS hashes\n     */\n    function getAllVerifiedContent() external view returns (string[] memory) {\n        return allVerifiedContent;\n    }\n\n    /**\n     * @notice Get all flagged content\n     * @return Array of IPFS hashes\n     */\n    function getAllFlaggedContent() external view returns (string[] memory) {\n        return allFlaggedContent;\n    }\n\n    /**\n     * @notice Get platform statistics\n     * @return totalVerifications_ Total number of verifications\n     * @return totalAuthentic_ Total authentic content\n     * @return totalFake_ Total fake content\n     * @return totalNFTsMinted_ Total NFTs minted\n     */\n    function getStatistics() external view returns (\n        uint256 totalVerifications_,\n        uint256 totalAuthentic_,\n        uint256 totalFake_,\n        uint256 totalNFTsMinted_\n    ) {\n        return (totalVerifications, totalAuthentic, totalFake, totalNFTsMinted);\n    }\n\n    /**\n     * @notice Update verification fees (owner only)\n     * @param _verificationFee New verification fee\n     * @param _nftMintFee New NFT mint fee\n     */\n    function updateFees(\n        uint256 _verificationFee,\n        uint256 _nftMintFee\n    ) external onlyOwner {\n        verificationFee = _verificationFee;\n        nftMintFee = _nftMintFee;\n        \n        emit FeesUpdated(_verificationFee, _nftMintFee, block.timestamp);\n    }\n\n    /**\n     * @notice Update Chainlink Functions configuration (owner only)\n     * @param _subscriptionId New subscription ID\n     * @param _gasLimit New gas limit\n     * @param _donID New DON ID\n     * @param _sourceCode New source code\n     */\n    function updateChainlinkConfig(\n        uint64 _subscriptionId,\n        uint32 _gasLimit,\n        bytes32 _donID,\n        string memory _sourceCode\n    ) external onlyOwner {\n        subscriptionId = _subscriptionId;\n        gasLimit = _gasLimit;\n        donID = _donID;\n        sourceCode = _sourceCode;\n    }\n\n    /**\n     * @notice Withdraw contract funds (owner only)\n     */\n    function withdrawFunds() external onlyOwner {\n        uint256 balance = address(this).balance;\n        require(balance > 0, \"No funds to withdraw\");\n        \n        (bool success, ) = payable(owner()).call{value: balance}(\"\");\n        require(success, \"Withdrawal failed\");\n        \n        emit FundsWithdrawn(owner(), balance, block.timestamp);\n    }\n\n    /**\n     * @notice Pause contract (owner only)\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Unpause contract (owner only)\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @notice Emergency function to flag content manually (owner only)\n     * @param _ipfsHash IPFS hash of content to flag\n     */\n    function emergencyFlagContent(string memory _ipfsHash) external onlyOwner {\n        require(!flaggedContent[_ipfsHash], \"Content already flagged\");\n        \n        flaggedContent[_ipfsHash] = true;\n        allFlaggedContent.push(_ipfsHash);\n        \n        emit ContentFlagged(_ipfsHash, msg.sender, block.timestamp);\n    }\n\n    /**\n     * @notice Get contract version\n     * @return Version string\n     */\n    function version() external pure returns (string memory) {\n        return \"1.0.0\";\n    }\n}\n"},"erc721a/contracts/ERC721A.sol":{"content":"// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * The `_sequentialUpTo()` function can be overriden to enable spot mints\n * (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // The amount of tokens minted above `_sequentialUpTo()`.\n    // We call these spot mints (i.e. non-sequential mints).\n    uint256 private _spotMinted;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n\n        if (_sequentialUpTo() < _startTokenId()) _revert(SequentialUpToTooSmall.selector);\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID for sequential mints.\n     *\n     * Override this function to change the starting token ID for sequential mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the maximum token ID (inclusive) for sequential mints.\n     *\n     * Override this function to return a value less than 2**256 - 1,\n     * but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _sequentialUpTo() internal view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256 result) {\n        // Counter underflow is impossible as `_burnCounter` cannot be incremented\n        // more than `_currentIndex + _spotMinted - _startTokenId()` times.\n        unchecked {\n            // With spot minting, the intermediate `result` can be temporarily negative,\n            // and the computation must be unchecked.\n            result = _currentIndex - _burnCounter - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256 result) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            result = _currentIndex - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev Returns the total number of tokens that are spot-minted.\n     */\n    function _totalSpotMinted() internal view virtual returns (uint256) {\n        return _spotMinted;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * @dev Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n\n            if (tokenId > _sequentialUpTo()) {\n                if (_packedOwnershipExists(packed)) return packed;\n                _revert(OwnerQueryForNonexistentToken.selector);\n            }\n\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId > _sequentialUpTo()) return _packedOwnershipExists(_packedOwnerships[tokenId]);\n\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `packed` represents a token that exists.\n     */\n    function _packedOwnershipExists(uint256 packed) private pure returns (bool result) {\n        assembly {\n            // The following is equivalent to `owner != address(0) && burned == false`.\n            // Symbolically tested.\n            result := gt(and(packed, _BITMASK_ADDRESS), and(packed, _BITMASK_BURNED))\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            if (end - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            if (startTokenId + quantity - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // This prevents reentrancy to `_safeMint`.\n                // It does not prevent reentrancy to `_safeMintSpot`.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mintSpot(address to, uint256 tokenId) internal virtual {\n        if (tokenId <= _sequentialUpTo()) _revert(SpotMintTokenIdTooSmall.selector);\n        uint256 prevOwnershipPacked = _packedOwnerships[tokenId];\n        if (_packedOwnershipExists(prevOwnershipPacked)) _revert(TokenAlreadyExists.selector);\n\n        _beforeTokenTransfers(address(0), to, tokenId, 1);\n\n        // Overflows are incredibly unrealistic.\n        // The `numberMinted` for `to` is incremented by 1, and has a max limit of 2**64 - 1.\n        // `_spotMinted` is incremented by 1, and has a max limit of 2**256 - 1.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true` (as `quantity == 1`).\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(1) | _nextExtraData(address(0), to, prevOwnershipPacked)\n            );\n\n            // Updates:\n            // - `balance += 1`.\n            // - `numberMinted += 1`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += (1 << _BITPOS_NUMBER_MINTED) | 1;\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            assembly {\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    tokenId // `tokenId`.\n                )\n            }\n\n            ++_spotMinted;\n        }\n\n        _afterTokenTransfers(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Safely mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * See {_mintSpot}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMintSpot(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mintSpot(to, tokenId);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 currentSpotMinted = _spotMinted;\n                if (!_checkContractOnERC721Received(address(0), to, tokenId, _data)) {\n                    _revert(TransferToNonERC721ReceiverImplementer.selector);\n                }\n                // This prevents reentrancy to `_safeMintSpot`.\n                // It does not prevent reentrancy to `_safeMint`.\n                if (_spotMinted != currentSpotMinted) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMintSpot(to, tokenId, '')`.\n     */\n    function _safeMintSpot(address to, uint256 tokenId) internal virtual {\n        _safeMintSpot(to, tokenId, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as `_burnCounter` cannot be exceed `_currentIndex + _spotMinted` times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"},"erc721a/contracts/IERC721A.sol":{"content":"// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    /**\n     * `_sequentialUpTo()` must be greater than `_startTokenId()`.\n     */\n    error SequentialUpToTooSmall();\n\n    /**\n     * The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\n     */\n    error SequentialMintExceedsLimit();\n\n    /**\n     * Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\n     */\n    error SpotMintTokenIdTooSmall();\n\n    /**\n     * Cannot mint over a token that already exists.\n     */\n    error TokenAlreadyExists();\n\n    /**\n     * The feature is not compatible with spot mints.\n     */\n    error NotCompatibleWithSpotMints();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol","exportedSymbols":{"FunctionsClient":[117],"FunctionsRequest":[728],"IFunctionsClient":[131],"IFunctionsRouter":[265]},"id":118,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:0"},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol","file":"./interfaces/IFunctionsRouter.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":118,"sourceUnit":266,"src":"58:67:0","symbolAliases":[{"foreign":{"id":2,"name":"IFunctionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"66:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol","file":"./interfaces/IFunctionsClient.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":118,"sourceUnit":132,"src":"126:67:0","symbolAliases":[{"foreign":{"id":4,"name":"IFunctionsClient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":131,"src":"134:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","file":"./libraries/FunctionsRequest.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":118,"sourceUnit":729,"src":"195:66:0","symbolAliases":[{"foreign":{"id":6,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"203:16:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":9,"name":"IFunctionsClient","nameLocations":["455:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":131,"src":"455:16:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"455:16:0"}],"canonicalName":"FunctionsClient","contractDependencies":[],"contractKind":"contract","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"263:155:0","text":"@title The Chainlink Functions client contract\n @notice Contract developers can inherit this contract in order to make Chainlink Functions requests"},"fullyImplemented":false,"id":117,"linearizedBaseContracts":[117,131],"name":"FunctionsClient","nameLocation":"436:15:0","nodeType":"ContractDefinition","nodes":[{"global":false,"id":14,"libraryName":{"id":11,"name":"FunctionsRequest","nameLocations":["482:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"482:16:0"},"nodeType":"UsingForDirective","src":"476:52:0","typeName":{"id":13,"nodeType":"UserDefinedTypeName","pathNode":{"id":12,"name":"FunctionsRequest.Request","nameLocations":["503:16:0","520:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"503:24:0"},"referencedDeclaration":306,"src":"503:24:0","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}}},{"constant":false,"id":17,"mutability":"immutable","name":"i_router","nameLocation":"568:8:0","nodeType":"VariableDeclaration","scope":117,"src":"532:44:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"},"typeName":{"id":16,"nodeType":"UserDefinedTypeName","pathNode":{"id":15,"name":"IFunctionsRouter","nameLocations":["532:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":265,"src":"532:16:0"},"referencedDeclaration":265,"src":"532:16:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"visibility":"internal"},{"anonymous":false,"eventSelector":"1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db8","id":21,"name":"RequestSent","nameLocation":"587:11:0","nodeType":"EventDefinition","parameters":{"id":20,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"615:2:0","nodeType":"VariableDeclaration","scope":21,"src":"599:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":18,"name":"bytes32","nodeType":"ElementaryTypeName","src":"599:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"598:20:0"},"src":"581:38:0"},{"anonymous":false,"eventSelector":"85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e6","id":25,"name":"RequestFulfilled","nameLocation":"628:16:0","nodeType":"EventDefinition","parameters":{"id":24,"nodeType":"ParameterList","parameters":[{"constant":false,"id":23,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"661:2:0","nodeType":"VariableDeclaration","scope":25,"src":"645:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":22,"name":"bytes32","nodeType":"ElementaryTypeName","src":"645:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"644:20:0"},"src":"622:43:0"},{"errorSelector":"c6829f83","id":27,"name":"OnlyRouterCanFulfill","nameLocation":"675:20:0","nodeType":"ErrorDefinition","parameters":{"id":26,"nodeType":"ParameterList","parameters":[],"src":"695:2:0"},"src":"669:29:0"},{"body":{"id":38,"nodeType":"Block","src":"730:46:0","statements":[{"expression":{"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":32,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"736:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":34,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":29,"src":"764:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":33,"name":"IFunctionsRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"747:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IFunctionsRouter_$265_$","typeString":"type(contract IFunctionsRouter)"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"747:24:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"src":"736:35:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"id":37,"nodeType":"ExpressionStatement","src":"736:35:0"}]},"id":39,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"router","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":39,"src":"714:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"713:16:0"},"returnParameters":{"id":31,"nodeType":"ParameterList","parameters":[],"src":"730:0:0"},"scope":117,"src":"702:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":71,"nodeType":"Block","src":"1309:228:0","statements":[{"assignments":[54],"declarations":[{"constant":false,"id":54,"mutability":"mutable","name":"requestId","nameLocation":"1323:9:0","nodeType":"VariableDeclaration","scope":71,"src":"1315:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":53,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1315:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":64,"initialValue":{"arguments":[{"id":57,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1363:14:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":58,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":42,"src":"1385:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":59,"name":"FunctionsRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"1397:16:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_FunctionsRequest_$728_$","typeString":"type(library FunctionsRequest)"}},"id":60,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1414:20:0","memberName":"REQUEST_DATA_VERSION","nodeType":"MemberAccess","referencedDeclaration":277,"src":"1397:37:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":61,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":46,"src":"1442:16:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":62,"name":"donId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":48,"src":"1466:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":55,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"1335:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1344:11:0","memberName":"sendRequest","nodeType":"MemberAccess","referencedDeclaration":170,"src":"1335:20:0","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint64_$_t_bytes_memory_ptr_$_t_uint16_$_t_uint32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (uint64,bytes memory,uint16,uint32,bytes32) external returns (bytes32)"}},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1335:142:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1315:162:0"},{"eventCall":{"arguments":[{"id":66,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1500:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":65,"name":"RequestSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":21,"src":"1488:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":68,"nodeType":"EmitStatement","src":"1483:27:0"},{"expression":{"id":69,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1523:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":52,"id":70,"nodeType":"Return","src":"1516:16:0"}]},"documentation":{"id":40,"nodeType":"StructuredDocumentation","src":"780:375:0","text":"@notice Sends a Chainlink Functions request\n @param data The CBOR encoded bytes data for a Functions request\n @param subscriptionId The subscription ID that will be charged to service the request\n @param callbackGasLimit the amount of gas that will be available for the fulfillment callback\n @return requestId The generated request ID for this request"},"id":72,"implemented":true,"kind":"function","modifiers":[],"name":"_sendRequest","nameLocation":"1167:12:0","nodeType":"FunctionDefinition","parameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":42,"mutability":"mutable","name":"data","nameLocation":"1198:4:0","nodeType":"VariableDeclaration","scope":72,"src":"1185:17:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":41,"name":"bytes","nodeType":"ElementaryTypeName","src":"1185:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":44,"mutability":"mutable","name":"subscriptionId","nameLocation":"1215:14:0","nodeType":"VariableDeclaration","scope":72,"src":"1208:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":43,"name":"uint64","nodeType":"ElementaryTypeName","src":"1208:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1242:16:0","nodeType":"VariableDeclaration","scope":72,"src":"1235:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":45,"name":"uint32","nodeType":"ElementaryTypeName","src":"1235:6:0","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":48,"mutability":"mutable","name":"donId","nameLocation":"1272:5:0","nodeType":"VariableDeclaration","scope":72,"src":"1264:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":47,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1264:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1179:102:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":72,"src":"1300:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":50,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1300:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1299:9:0"},"scope":117,"src":"1158:379:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"1541:394:0","text":"@notice User defined function to handle a response from the DON\n @param requestId The request ID, returned by sendRequest()\n @param response Aggregated response from the execution of the user's source code\n @param err Aggregated error from the execution of the user code or from the execution pipeline\n @dev Either response or error parameter will be set, but never both"},"id":82,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRequest","nameLocation":"1947:14:0","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"mutability":"mutable","name":"requestId","nameLocation":"1970:9:0","nodeType":"VariableDeclaration","scope":82,"src":"1962:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":74,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1962:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"response","nameLocation":"1994:8:0","nodeType":"VariableDeclaration","scope":82,"src":"1981:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":76,"name":"bytes","nodeType":"ElementaryTypeName","src":"1981:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"err","nameLocation":"2017:3:0","nodeType":"VariableDeclaration","scope":82,"src":"2004:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":78,"name":"bytes","nodeType":"ElementaryTypeName","src":"2004:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1961:60:0"},"returnParameters":{"id":81,"nodeType":"ParameterList","parameters":[],"src":"2038:0:0"},"scope":117,"src":"1938:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[130],"body":{"id":115,"nodeType":"Block","src":"2189:175:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":99,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":93,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2199:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2203:6:0","memberName":"sender","nodeType":"MemberAccess","src":"2199:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"id":97,"name":"i_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":17,"src":"2221:8:0","typeDescriptions":{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IFunctionsRouter_$265","typeString":"contract IFunctionsRouter"}],"id":96,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2213:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":95,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:0","typeDescriptions":{}}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2213:17:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2199:31:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":104,"nodeType":"IfStatement","src":"2195:81:0","trueBody":{"id":103,"nodeType":"Block","src":"2232:44:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":100,"name":"OnlyRouterCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2247:20:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2247:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":102,"nodeType":"RevertStatement","src":"2240:29:0"}]}},{"expression":{"arguments":[{"id":106,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2296:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":107,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":87,"src":"2307:8:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":108,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"2317:3:0","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":105,"name":"fulfillRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2281:14:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes32,bytes memory,bytes memory)"}},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2281:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":110,"nodeType":"ExpressionStatement","src":"2281:40:0"},{"eventCall":{"arguments":[{"id":112,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":85,"src":"2349:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":111,"name":"RequestFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2332:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2332:27:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":114,"nodeType":"EmitStatement","src":"2327:32:0"}]},"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"2043:32:0","text":"@inheritdoc IFunctionsClient"},"functionSelector":"0ca76175","id":116,"implemented":true,"kind":"function","modifiers":[],"name":"handleOracleFulfillment","nameLocation":"2087:23:0","nodeType":"FunctionDefinition","overrides":{"id":91,"nodeType":"OverrideSpecifier","overrides":[],"src":"2180:8:0"},"parameters":{"id":90,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"requestId","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":116,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":84,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"response","nameLocation":"2143:8:0","nodeType":"VariableDeclaration","scope":116,"src":"2130:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"2130:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"err","nameLocation":"2166:3:0","nodeType":"VariableDeclaration","scope":116,"src":"2153:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":88,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2110:60:0"},"returnParameters":{"id":92,"nodeType":"ParameterList","parameters":[],"src":"2189:0:0"},"scope":117,"src":"2078:286:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":118,"src":"418:1948:0","usedErrors":[27],"usedEvents":[21,25]}],"src":"32:2335:0"},"id":0},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol","exportedSymbols":{"IFunctionsClient":[131]},"id":132,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":119,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IFunctionsClient","contractDependencies":[],"contractKind":"interface","documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"58:49:1","text":"@title Chainlink Functions client interface."},"fullyImplemented":false,"id":131,"linearizedBaseContracts":[131],"name":"IFunctionsClient","nameLocation":"117:16:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"138:490:1","text":"@notice Chainlink Functions response handler called by the Functions Router\n during fullilment from the designated transmitter node in an OCR round.\n @param requestId The requestId returned by FunctionsClient.sendRequest().\n @param response Aggregated response from the request's source code.\n @param err Aggregated error either from the request's source code or from the execution pipeline.\n @dev Either response or error parameter will be set, but never both."},"functionSelector":"0ca76175","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"handleOracleFulfillment","nameLocation":"640:23:1","nodeType":"FunctionDefinition","parameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":123,"mutability":"mutable","name":"requestId","nameLocation":"672:9:1","nodeType":"VariableDeclaration","scope":130,"src":"664:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":122,"name":"bytes32","nodeType":"ElementaryTypeName","src":"664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":125,"mutability":"mutable","name":"response","nameLocation":"696:8:1","nodeType":"VariableDeclaration","scope":130,"src":"683:21:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":124,"name":"bytes","nodeType":"ElementaryTypeName","src":"683:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"err","nameLocation":"719:3:1","nodeType":"VariableDeclaration","scope":130,"src":"706:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"706:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"663:60:1"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[],"src":"732:0:1"},"scope":131,"src":"631:102:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":132,"src":"107:628:1","usedErrors":[],"usedEvents":[]}],"src":"32:704:1"},"id":1},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol","exportedSymbols":{"FunctionsResponse":[786],"IFunctionsRouter":[265]},"id":266,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":133,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:2"},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol","file":"../libraries/FunctionsResponse.sol","id":135,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":266,"sourceUnit":787,"src":"58:69:2","symbolAliases":[{"foreign":{"id":134,"name":"FunctionsResponse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":786,"src":"66:17:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IFunctionsRouter","contractDependencies":[],"contractKind":"interface","documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"129:49:2","text":"@title Chainlink Functions Router interface."},"fullyImplemented":false,"id":265,"linearizedBaseContracts":[265],"name":"IFunctionsRouter","nameLocation":"188:16:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":137,"nodeType":"StructuredDocumentation","src":"209:265:2","text":"@notice The identifier of the route to retrieve the address of the access control contract\n The access control contract controls which accounts can manage subscriptions\n @return id - bytes32 id that can be passed to the \"getContractById\" of the Router"},"functionSelector":"aab396bd","id":142,"implemented":false,"kind":"function","modifiers":[],"name":"getAllowListId","nameLocation":"486:14:2","nodeType":"FunctionDefinition","parameters":{"id":138,"nodeType":"ParameterList","parameters":[],"src":"500:2:2"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":142,"src":"526:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":139,"name":"bytes32","nodeType":"ElementaryTypeName","src":"526:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"525:9:2"},"scope":265,"src":"477:58:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"539:181:2","text":"@notice Set the identifier of the route to retrieve the address of the access control contract\n The access control contract controls which accounts can manage subscriptions"},"functionSelector":"ea320e0b","id":148,"implemented":false,"kind":"function","modifiers":[],"name":"setAllowListId","nameLocation":"732:14:2","nodeType":"FunctionDefinition","parameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":145,"mutability":"mutable","name":"allowListId","nameLocation":"755:11:2","nodeType":"VariableDeclaration","scope":148,"src":"747:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":144,"name":"bytes32","nodeType":"ElementaryTypeName","src":"747:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"746:21:2"},"returnParameters":{"id":147,"nodeType":"ParameterList","parameters":[],"src":"776:0:2"},"scope":265,"src":"723:54:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"781:137:2","text":"@notice Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\n @return adminFee"},"functionSelector":"2a905ccc","id":154,"implemented":false,"kind":"function","modifiers":[],"name":"getAdminFee","nameLocation":"930:11:2","nodeType":"FunctionDefinition","parameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"941:2:2"},"returnParameters":{"id":153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":152,"mutability":"mutable","name":"adminFee","nameLocation":"974:8:2","nodeType":"VariableDeclaration","scope":154,"src":"967:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":151,"name":"uint72","nodeType":"ElementaryTypeName","src":"967:6:2","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"966:17:2"},"scope":265,"src":"921:63:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":155,"nodeType":"StructuredDocumentation","src":"988:630:2","text":"@notice Sends a request using the provided subscriptionId\n @param subscriptionId - A unique subscription ID allocated by billing system,\n a client can make requests from different contracts referencing the same subscription\n @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n @param dataVersion - Gas limit for the fulfillment callback\n @param callbackGasLimit - Gas limit for the fulfillment callback\n @param donId - An identifier used to determine which route to send the request along\n @return requestId - A unique request identifier"},"functionSelector":"461d2762","id":170,"implemented":false,"kind":"function","modifiers":[],"name":"sendRequest","nameLocation":"1630:11:2","nodeType":"FunctionDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":157,"mutability":"mutable","name":"subscriptionId","nameLocation":"1654:14:2","nodeType":"VariableDeclaration","scope":170,"src":"1647:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":156,"name":"uint64","nodeType":"ElementaryTypeName","src":"1647:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":159,"mutability":"mutable","name":"data","nameLocation":"1689:4:2","nodeType":"VariableDeclaration","scope":170,"src":"1674:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":158,"name":"bytes","nodeType":"ElementaryTypeName","src":"1674:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":161,"mutability":"mutable","name":"dataVersion","nameLocation":"1706:11:2","nodeType":"VariableDeclaration","scope":170,"src":"1699:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":160,"name":"uint16","nodeType":"ElementaryTypeName","src":"1699:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1730:16:2","nodeType":"VariableDeclaration","scope":170,"src":"1723:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":162,"name":"uint32","nodeType":"ElementaryTypeName","src":"1723:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"donId","nameLocation":"1760:5:2","nodeType":"VariableDeclaration","scope":170,"src":"1752:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":164,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1641:128:2"},"returnParameters":{"id":169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"1788:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1788:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1787:9:2"},"scope":265,"src":"1621:176:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1801:622:2","text":"@notice Sends a request to the proposed contracts\n @param subscriptionId - A unique subscription ID allocated by billing system,\n a client can make requests from different contracts referencing the same subscription\n @param data - CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\n @param dataVersion - Gas limit for the fulfillment callback\n @param callbackGasLimit - Gas limit for the fulfillment callback\n @param donId - An identifier used to determine which route to send the request along\n @return requestId - A unique request identifier"},"functionSelector":"41db4ca3","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"sendRequestToProposed","nameLocation":"2435:21:2","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"subscriptionId","nameLocation":"2469:14:2","nodeType":"VariableDeclaration","scope":186,"src":"2462:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":172,"name":"uint64","nodeType":"ElementaryTypeName","src":"2462:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"data","nameLocation":"2504:4:2","nodeType":"VariableDeclaration","scope":186,"src":"2489:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":174,"name":"bytes","nodeType":"ElementaryTypeName","src":"2489:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":177,"mutability":"mutable","name":"dataVersion","nameLocation":"2521:11:2","nodeType":"VariableDeclaration","scope":186,"src":"2514:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":176,"name":"uint16","nodeType":"ElementaryTypeName","src":"2514:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2545:16:2","nodeType":"VariableDeclaration","scope":186,"src":"2538:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":178,"name":"uint32","nodeType":"ElementaryTypeName","src":"2538:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"donId","nameLocation":"2575:5:2","nodeType":"VariableDeclaration","scope":186,"src":"2567:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2567:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2456:128:2"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"2603:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":183,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2603:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2602:9:2"},"scope":265,"src":"2426:186:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"2616:763:2","text":"@notice Fulfill the request by:\n - calling back the data that the Oracle returned to the client contract\n - pay the DON for processing the request\n @dev Only callable by the Coordinator contract that is saved in the commitment\n @param response response data from DON consensus\n @param err error from DON consensus\n @param juelsPerGas - current rate of juels/gas\n @param costWithoutFulfillment - The cost of processing the request (in Juels of LINK ), without fulfillment\n @param transmitter - The Node that transmitted the OCR report\n @param commitment - The parameters of the request that must be held consistent between request and response time\n @return fulfillResult -\n @return callbackGasCostJuels -"},"functionSelector":"33060529","id":208,"implemented":false,"kind":"function","modifiers":[],"name":"fulfill","nameLocation":"3391:7:2","nodeType":"FunctionDefinition","parameters":{"id":201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"response","nameLocation":"3417:8:2","nodeType":"VariableDeclaration","scope":208,"src":"3404:21:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":188,"name":"bytes","nodeType":"ElementaryTypeName","src":"3404:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"err","nameLocation":"3444:3:2","nodeType":"VariableDeclaration","scope":208,"src":"3431:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":190,"name":"bytes","nodeType":"ElementaryTypeName","src":"3431:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":193,"mutability":"mutable","name":"juelsPerGas","nameLocation":"3460:11:2","nodeType":"VariableDeclaration","scope":208,"src":"3453:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":192,"name":"uint96","nodeType":"ElementaryTypeName","src":"3453:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"costWithoutFulfillment","nameLocation":"3484:22:2","nodeType":"VariableDeclaration","scope":208,"src":"3477:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":194,"name":"uint96","nodeType":"ElementaryTypeName","src":"3477:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":197,"mutability":"mutable","name":"transmitter","nameLocation":"3520:11:2","nodeType":"VariableDeclaration","scope":208,"src":"3512:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":196,"name":"address","nodeType":"ElementaryTypeName","src":"3512:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"commitment","nameLocation":"3573:10:2","nodeType":"VariableDeclaration","scope":208,"src":"3537:46:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$785_memory_ptr","typeString":"struct FunctionsResponse.Commitment"},"typeName":{"id":199,"nodeType":"UserDefinedTypeName","pathNode":{"id":198,"name":"FunctionsResponse.Commitment","nameLocations":["3537:17:2","3555:10:2"],"nodeType":"IdentifierPath","referencedDeclaration":785,"src":"3537:28:2"},"referencedDeclaration":785,"src":"3537:28:2","typeDescriptions":{"typeIdentifier":"t_struct$_Commitment_$785_storage_ptr","typeString":"struct FunctionsResponse.Commitment"}},"visibility":"internal"}],"src":"3398:189:2"},"returnParameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":208,"src":"3606:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_FulfillResult_$762","typeString":"enum FunctionsResponse.FulfillResult"},"typeName":{"id":203,"nodeType":"UserDefinedTypeName","pathNode":{"id":202,"name":"FunctionsResponse.FulfillResult","nameLocations":["3606:17:2","3624:13:2"],"nodeType":"IdentifierPath","referencedDeclaration":762,"src":"3606:31:2"},"referencedDeclaration":762,"src":"3606:31:2","typeDescriptions":{"typeIdentifier":"t_enum$_FulfillResult_$762","typeString":"enum FunctionsResponse.FulfillResult"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":208,"src":"3639:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":205,"name":"uint96","nodeType":"ElementaryTypeName","src":"3639:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"3605:41:2"},"scope":265,"src":"3382:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":209,"nodeType":"StructuredDocumentation","src":"3651:172:2","text":"@notice Validate requested gas limit is below the subscription max.\n @param subscriptionId subscription ID\n @param callbackGasLimit desired callback gas limit"},"functionSelector":"10fc49c1","id":216,"implemented":false,"kind":"function","modifiers":[],"name":"isValidCallbackGasLimit","nameLocation":"3835:23:2","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":211,"mutability":"mutable","name":"subscriptionId","nameLocation":"3866:14:2","nodeType":"VariableDeclaration","scope":216,"src":"3859:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":210,"name":"uint64","nodeType":"ElementaryTypeName","src":"3859:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":213,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"3889:16:2","nodeType":"VariableDeclaration","scope":216,"src":"3882:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":212,"name":"uint32","nodeType":"ElementaryTypeName","src":"3882:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"3858:48:2"},"returnParameters":{"id":215,"nodeType":"ParameterList","parameters":[],"src":"3920:0:2"},"scope":265,"src":"3826:95:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":217,"nodeType":"StructuredDocumentation","src":"3925:151:2","text":"@notice Get the current contract given an ID\n @param id A bytes32 identifier for the route\n @return contract The current contract address"},"functionSelector":"a9c9a918","id":224,"implemented":false,"kind":"function","modifiers":[],"name":"getContractById","nameLocation":"4088:15:2","nodeType":"FunctionDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":219,"mutability":"mutable","name":"id","nameLocation":"4112:2:2","nodeType":"VariableDeclaration","scope":224,"src":"4104:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":218,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4104:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4103:12:2"},"returnParameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":224,"src":"4139:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4138:9:2"},"scope":265,"src":"4079:69:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"4152:169:2","text":"@notice Get the proposed next contract given an ID\n @param id A bytes32 identifier for the route\n @return contract The current or proposed contract address"},"functionSelector":"6a2215de","id":232,"implemented":false,"kind":"function","modifiers":[],"name":"getProposedContractById","nameLocation":"4333:23:2","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"id","nameLocation":"4365:2:2","nodeType":"VariableDeclaration","scope":232,"src":"4357:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":226,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4357:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4356:12:2"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":232,"src":"4392:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"4392:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4391:9:2"},"scope":265,"src":"4324:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":233,"nodeType":"StructuredDocumentation","src":"4405:176:2","text":"@notice Return the latest proprosal set\n @return ids The identifiers of the contracts to update\n @return to The addresses of the contracts that will be updated to"},"functionSelector":"badc3eb6","id":242,"implemented":false,"kind":"function","modifiers":[],"name":"getProposedContractSet","nameLocation":"4593:22:2","nodeType":"FunctionDefinition","parameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"4615:2:2"},"returnParameters":{"id":241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"4641:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4641:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":236,"nodeType":"ArrayTypeName","src":"4641:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":240,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"4659:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":238,"name":"address","nodeType":"ElementaryTypeName","src":"4659:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":239,"nodeType":"ArrayTypeName","src":"4659:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4640:36:2"},"scope":265,"src":"4584:93:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"4681:97:2","text":"@notice Proposes one or more updates to the contract routes\n @dev Only callable by owner"},"functionSelector":"3e871e4d","id":252,"implemented":false,"kind":"function","modifiers":[],"name":"proposeContractsUpdate","nameLocation":"4790:22:2","nodeType":"FunctionDefinition","parameters":{"id":250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":246,"mutability":"mutable","name":"proposalSetIds","nameLocation":"4830:14:2","nodeType":"VariableDeclaration","scope":252,"src":"4813:31:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4813:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":245,"nodeType":"ArrayTypeName","src":"4813:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":249,"mutability":"mutable","name":"proposalSetAddresses","nameLocation":"4863:20:2","nodeType":"VariableDeclaration","scope":252,"src":"4846:37:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"4846:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":248,"nodeType":"ArrayTypeName","src":"4846:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"4812:72:2"},"returnParameters":{"id":251,"nodeType":"ParameterList","parameters":[],"src":"4893:0:2"},"scope":265,"src":"4781:113:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"4898:107:2","text":"@notice Updates the current contract routes to the proposed contracts\n @dev Only callable by owner"},"functionSelector":"b734c0f4","id":256,"implemented":false,"kind":"function","modifiers":[],"name":"updateContracts","nameLocation":"5017:15:2","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[],"src":"5032:2:2"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"5043:0:2"},"scope":265,"src":"5008:36:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"5048:91:2","text":"@dev Puts the system into an emergency stopped state.\n @dev Only callable by owner"},"functionSelector":"8456cb59","id":260,"implemented":false,"kind":"function","modifiers":[],"name":"pause","nameLocation":"5151:5:2","nodeType":"FunctionDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"5156:2:2"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"5167:0:2"},"scope":265,"src":"5142:26:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":261,"nodeType":"StructuredDocumentation","src":"5172:94:2","text":"@dev Takes the system out of an emergency stopped state.\n @dev Only callable by owner"},"functionSelector":"3f4ba83a","id":264,"implemented":false,"kind":"function","modifiers":[],"name":"unpause","nameLocation":"5278:7:2","nodeType":"FunctionDefinition","parameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"5285:2:2"},"returnParameters":{"id":263,"nodeType":"ParameterList","parameters":[],"src":"5296:0:2"},"scope":265,"src":"5269:28:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":266,"src":"178:5121:2","usedErrors":[],"usedEvents":[]}],"src":"32:5268:2"},"id":2},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","exportedSymbols":{"CBOR":[2067],"FunctionsRequest":[728]},"id":729,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":267,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:3"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol","file":"../../../vendor/solidity-cborutils/v2.0.0/CBOR.sol","id":269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":729,"sourceUnit":2068,"src":"58:72:3","symbolAliases":[{"foreign":{"id":268,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"66:4:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"FunctionsRequest","contractDependencies":[],"contractKind":"library","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"132:80:3","text":"@title Library for encoding the input data of a Functions request into CBOR"},"fullyImplemented":true,"id":728,"linearizedBaseContracts":[728],"name":"FunctionsRequest","nameLocation":"220:16:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":274,"libraryName":{"id":271,"name":"CBOR","nameLocations":["247:4:3"],"nodeType":"IdentifierPath","referencedDeclaration":2067,"src":"247:4:3"},"nodeType":"UsingForDirective","src":"241:31:3","typeName":{"id":273,"nodeType":"UserDefinedTypeName","pathNode":{"id":272,"name":"CBOR.CBORBuffer","nameLocations":["256:4:3","261:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"256:15:3"},"referencedDeclaration":1222,"src":"256:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}}},{"constant":true,"functionSelector":"5d641dfc","id":277,"mutability":"constant","name":"REQUEST_DATA_VERSION","nameLocation":"299:20:3","nodeType":"VariableDeclaration","scope":728,"src":"276:47:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":275,"name":"uint16","nodeType":"ElementaryTypeName","src":"276:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"31","id":276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"322:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"id":280,"mutability":"constant","name":"DEFAULT_BUFFER_SIZE","nameLocation":"353:19:3","nodeType":"VariableDeclaration","scope":728,"src":"327:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323536","id":279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:3:3","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"visibility":"internal"},{"canonicalName":"FunctionsRequest.Location","id":284,"members":[{"id":281,"name":"Inline","nameLocation":"403:6:3","nodeType":"EnumValue","src":"403:6:3"},{"id":282,"name":"Remote","nameLocation":"446:6:3","nodeType":"EnumValue","src":"446:6:3"},{"id":283,"name":"DONHosted","nameLocation":"536:9:3","nodeType":"EnumValue","src":"536:9:3"}],"name":"Location","nameLocation":"388:8:3","nodeType":"EnumDefinition","src":"383:197:3"},{"canonicalName":"FunctionsRequest.CodeLanguage","id":286,"members":[{"id":285,"name":"JavaScript","nameLocation":"608:10:3","nodeType":"EnumValue","src":"608:10:3"}],"name":"CodeLanguage","nameLocation":"589:12:3","nodeType":"EnumDefinition","src":"584:90:3"},{"canonicalName":"FunctionsRequest.Request","id":306,"members":[{"constant":false,"id":289,"mutability":"mutable","name":"codeLocation","nameLocation":"708:12:3","nodeType":"VariableDeclaration","scope":306,"src":"699:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":288,"nodeType":"UserDefinedTypeName","pathNode":{"id":287,"name":"Location","nameLocations":["699:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"699:8:3"},"referencedDeclaration":284,"src":"699:8:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"secretsLocation","nameLocation":"856:15:3","nodeType":"VariableDeclaration","scope":306,"src":"847:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":291,"nodeType":"UserDefinedTypeName","pathNode":{"id":290,"name":"Location","nameLocations":["847:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"847:8:3"},"referencedDeclaration":284,"src":"847:8:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"language","nameLocation":"1025:8:3","nodeType":"VariableDeclaration","scope":306,"src":"1012:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"},"typeName":{"id":294,"nodeType":"UserDefinedTypeName","pathNode":{"id":293,"name":"CodeLanguage","nameLocations":["1012:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":286,"src":"1012:12:3"},"referencedDeclaration":286,"src":"1012:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"source","nameLocation":"1144:6:3","nodeType":"VariableDeclaration","scope":306,"src":"1137:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":296,"name":"string","nodeType":"ElementaryTypeName","src":"1137:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"encryptedSecretsReference","nameLocation":"1409:25:3","nodeType":"VariableDeclaration","scope":306,"src":"1403:31:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":298,"name":"bytes","nodeType":"ElementaryTypeName","src":"1403:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"args","nameLocation":"1662:4:3","nodeType":"VariableDeclaration","scope":306,"src":"1653:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":300,"name":"string","nodeType":"ElementaryTypeName","src":"1653:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":301,"nodeType":"ArrayTypeName","src":"1653:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":305,"mutability":"mutable","name":"bytesArgs","nameLocation":"1805:9:3","nodeType":"VariableDeclaration","scope":306,"src":"1797:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":303,"name":"bytes","nodeType":"ElementaryTypeName","src":"1797:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":304,"nodeType":"ArrayTypeName","src":"1797:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"name":"Request","nameLocation":"685:7:3","nodeType":"StructDefinition","scope":728,"src":"678:1253:3","visibility":"public"},{"errorSelector":"22ce3edd","id":308,"name":"EmptySource","nameLocation":"1941:11:3","nodeType":"ErrorDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[],"src":"1952:2:3"},"src":"1935:20:3"},{"errorSelector":"e889636f","id":310,"name":"EmptySecrets","nameLocation":"1964:12:3","nodeType":"ErrorDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"1976:2:3"},"src":"1958:21:3"},{"errorSelector":"fe936cb7","id":312,"name":"EmptyArgs","nameLocation":"1988:9:3","nodeType":"ErrorDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"1997:2:3"},"src":"1982:18:3"},{"errorSelector":"a80d31f7","id":314,"name":"NoInlineSecrets","nameLocation":"2009:15:3","nodeType":"ErrorDefinition","parameters":{"id":313,"nodeType":"ParameterList","parameters":[],"src":"2024:2:3"},"src":"2003:24:3"},{"body":{"id":520,"nodeType":"Block","src":"2236:1192:3","statements":[{"assignments":[327],"declarations":[{"constant":false,"id":327,"mutability":"mutable","name":"buffer","nameLocation":"2265:6:3","nodeType":"VariableDeclaration","scope":520,"src":"2242:29:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":326,"nodeType":"UserDefinedTypeName","pathNode":{"id":325,"name":"CBOR.CBORBuffer","nameLocations":["2242:4:3","2247:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2242:15:3"},"referencedDeclaration":1222,"src":"2242:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"id":332,"initialValue":{"arguments":[{"id":330,"name":"DEFAULT_BUFFER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2286:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":328,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"2274:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CBOR_$2067_$","typeString":"type(library CBOR)"}},"id":329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2279:6:3","memberName":"create","nodeType":"MemberAccess","referencedDeclaration":1289,"src":"2274:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (uint256) pure returns (struct CBOR.CBORBuffer memory)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2274:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"nodeType":"VariableDeclarationStatement","src":"2242:64:3"},{"expression":{"arguments":[{"hexValue":"636f64654c6f636174696f6e","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2332:14:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931","typeString":"literal_string \"codeLocation\""},"value":"codeLocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931","typeString":"literal_string \"codeLocation\""}],"expression":{"id":333,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2313:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":335,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2320:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"2313:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2313:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"2313:34:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":344,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2381:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2386:12:3","memberName":"codeLocation","nodeType":"MemberAccess","referencedDeclaration":289,"src":"2381:17:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}],"id":343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2373:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":342,"name":"uint256","nodeType":"ElementaryTypeName","src":"2373:7:3","typeDescriptions":{}}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":339,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2353:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":341,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2360:12:3","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"2353:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2353:47:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":348,"nodeType":"ExpressionStatement","src":"2353:47:3"},{"expression":{"arguments":[{"hexValue":"6c616e6775616765","id":352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:10:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e","typeString":"literal_string \"language\""},"value":"language"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e","typeString":"literal_string \"language\""}],"expression":{"id":349,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2407:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2414:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"2407:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":353,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":354,"nodeType":"ExpressionStatement","src":"2407:30:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":360,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2471:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":361,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2476:8:3","memberName":"language","nodeType":"MemberAccess","referencedDeclaration":295,"src":"2471:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}],"id":359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2463:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2463:7:3","typeDescriptions":{}}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2463:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":355,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2443:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2450:12:3","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"2443:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:43:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":364,"nodeType":"ExpressionStatement","src":"2443:43:3"},{"expression":{"arguments":[{"hexValue":"736f75726365","id":368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2512:8:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69","typeString":"literal_string \"source\""},"value":"source"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69","typeString":"literal_string \"source\""}],"expression":{"id":365,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2493:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":367,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2500:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"2493:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2493:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":370,"nodeType":"ExpressionStatement","src":"2493:28:3"},{"expression":{"arguments":[{"expression":{"id":374,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2546:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":375,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2551:6:3","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":297,"src":"2546:11:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":371,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2527:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":373,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2534:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"2527:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2527:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":377,"nodeType":"ExpressionStatement","src":"2527:31:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":378,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2569:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":379,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2574:4:3","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":302,"src":"2569:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2579:6:3","memberName":"length","nodeType":"MemberAccess","src":"2569:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2588:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2569:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"2565:227:3","trueBody":{"id":422,"nodeType":"Block","src":"2591:201:3","statements":[{"expression":{"arguments":[{"hexValue":"61726773","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2618:6:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099","typeString":"literal_string \"args\""},"value":"args"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099","typeString":"literal_string \"args\""}],"expression":{"id":383,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2599:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":385,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2606:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"2599:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2599:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"2599:26:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":389,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2633:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2640:10:3","memberName":"startArray","nodeType":"MemberAccess","referencedDeclaration":1566,"src":"2633:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":393,"nodeType":"ExpressionStatement","src":"2633:19:3"},{"body":{"id":415,"nodeType":"Block","src":"2707:51:3","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":409,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2736:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":410,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2741:4:3","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":302,"src":"2736:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":412,"indexExpression":{"id":411,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2746:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2736:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":406,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2717:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2724:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"2717:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":414,"nodeType":"ExpressionStatement","src":"2717:32:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":398,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2680:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":399,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2684:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":400,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2689:4:3","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":302,"src":"2684:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2694:6:3","memberName":"length","nodeType":"MemberAccess","src":"2684:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2680:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":416,"initializationExpression":{"assignments":[395],"declarations":[{"constant":false,"id":395,"mutability":"mutable","name":"i","nameLocation":"2673:1:3","nodeType":"VariableDeclaration","scope":416,"src":"2665:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":397,"initialValue":{"hexValue":"30","id":396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2677:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2665:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2702:3:3","subExpression":{"id":403,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":395,"src":"2704:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":405,"nodeType":"ExpressionStatement","src":"2702:3:3"},"nodeType":"ForStatement","src":"2660:98:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":417,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2765:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":419,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2772:11:3","memberName":"endSequence","nodeType":"MemberAccess","referencedDeclaration":1632,"src":"2765:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"2765:20:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":424,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2802:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":425,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2807:25:3","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":299,"src":"2802:30:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2833:6:3","memberName":"length","nodeType":"MemberAccess","src":"2802:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2842:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2802:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":469,"nodeType":"IfStatement","src":"2798:346:3","trueBody":{"id":468,"nodeType":"Block","src":"2845:299:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":429,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"2857:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":430,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2862:15:3","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":292,"src":"2857:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":431,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"2881:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$284_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2890:6:3","memberName":"Inline","nodeType":"MemberAccess","referencedDeclaration":281,"src":"2881:15:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"src":"2857:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":438,"nodeType":"IfStatement","src":"2853:88:3","trueBody":{"id":437,"nodeType":"Block","src":"2898:43:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"NoInlineSecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"2915:15:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"RevertStatement","src":"2908:24:3"}]}},{"expression":{"arguments":[{"hexValue":"736563726574734c6f636174696f6e","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2967:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8","typeString":"literal_string \"secretsLocation\""},"value":"secretsLocation"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8","typeString":"literal_string \"secretsLocation\""}],"expression":{"id":439,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2948:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2955:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"2948:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2948:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":444,"nodeType":"ExpressionStatement","src":"2948:37:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":450,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3021:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3026:15:3","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":292,"src":"3021:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}],"id":449,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3013:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":448,"name":"uint256","nodeType":"ElementaryTypeName","src":"3013:7:3","typeDescriptions":{}}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3013:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":445,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"2993:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":447,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3000:12:3","memberName":"writeUInt256","nodeType":"MemberAccess","referencedDeclaration":1343,"src":"2993:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint256_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2993:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":454,"nodeType":"ExpressionStatement","src":"2993:50:3"},{"expression":{"arguments":[{"hexValue":"73656372657473","id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3070:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac","typeString":"literal_string \"secrets\""},"value":"secrets"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac","typeString":"literal_string \"secrets\""}],"expression":{"id":455,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3051:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":457,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3058:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"3051:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3051:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":460,"nodeType":"ExpressionStatement","src":"3051:29:3"},{"expression":{"arguments":[{"expression":{"id":464,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3106:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":465,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3111:25:3","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":299,"src":"3106:30:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":461,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3088:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":463,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3095:10:3","memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"3088:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3088:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":467,"nodeType":"ExpressionStatement","src":"3088:49:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":470,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3154:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3159:9:3","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":305,"src":"3154:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3169:6:3","memberName":"length","nodeType":"MemberAccess","src":"3154:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3178:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3154:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":515,"nodeType":"IfStatement","src":"3150:246:3","trueBody":{"id":514,"nodeType":"Block","src":"3181:215:3","statements":[{"expression":{"arguments":[{"hexValue":"627974657341726773","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3208:11:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b","typeString":"literal_string \"bytesArgs\""},"value":"bytesArgs"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b","typeString":"literal_string \"bytesArgs\""}],"expression":{"id":475,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3189:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3196:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"3189:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3189:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":480,"nodeType":"ExpressionStatement","src":"3189:31:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":481,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3228:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3235:10:3","memberName":"startArray","nodeType":"MemberAccess","referencedDeclaration":1566,"src":"3228:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3228:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":485,"nodeType":"ExpressionStatement","src":"3228:19:3"},{"body":{"id":507,"nodeType":"Block","src":"3307:55:3","statements":[{"expression":{"arguments":[{"baseExpression":{"expression":{"id":501,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3335:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3340:9:3","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":305,"src":"3335:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":504,"indexExpression":{"id":503,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3350:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3335:17:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":498,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3317:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":500,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3324:10:3","memberName":"writeBytes","nodeType":"MemberAccess","referencedDeclaration":1474,"src":"3317:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_bytes_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3317:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":506,"nodeType":"ExpressionStatement","src":"3317:36:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3275:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"expression":{"id":491,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"3279:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":492,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3284:9:3","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":305,"src":"3279:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3294:6:3","memberName":"length","nodeType":"MemberAccess","src":"3279:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3275:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":508,"initializationExpression":{"assignments":[487],"declarations":[{"constant":false,"id":487,"mutability":"mutable","name":"i","nameLocation":"3268:1:3","nodeType":"VariableDeclaration","scope":508,"src":"3260:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":486,"name":"uint256","nodeType":"ElementaryTypeName","src":"3260:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":489,"initialValue":{"hexValue":"30","id":488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3272:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3260:13:3"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"3302:3:3","subExpression":{"id":495,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"3304:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":497,"nodeType":"ExpressionStatement","src":"3302:3:3"},"nodeType":"ForStatement","src":"3255:107:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":509,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3369:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3376:11:3","memberName":"endSequence","nodeType":"MemberAccess","referencedDeclaration":1632,"src":"3369:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3369:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"3369:20:3"}]}},{"expression":{"expression":{"expression":{"id":516,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"3409:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":517,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3416:3:3","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"3409:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3420:3:3","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"3409:14:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":322,"id":519,"nodeType":"Return","src":"3402:21:3"}]},"documentation":{"id":315,"nodeType":"StructuredDocumentation","src":"2031:124:3","text":"@notice Encodes a Request to CBOR encoded bytes\n @param self The request to encode\n @return CBOR encoded bytes"},"id":521,"implemented":true,"kind":"function","modifiers":[],"name":"encodeCBOR","nameLocation":"2167:10:3","nodeType":"FunctionDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"self","nameLocation":"2193:4:3","nodeType":"VariableDeclaration","scope":521,"src":"2178:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":317,"nodeType":"UserDefinedTypeName","pathNode":{"id":316,"name":"Request","nameLocations":["2178:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"2178:7:3"},"referencedDeclaration":306,"src":"2178:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"}],"src":"2177:21:3"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":521,"src":"2222:12:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":320,"name":"bytes","nodeType":"ElementaryTypeName","src":"2222:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2221:14:3"},"scope":728,"src":"2158:1270:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":565,"nodeType":"Block","src":"3927:157:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":538,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"3943:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3937:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":536,"name":"bytes","nodeType":"ElementaryTypeName","src":"3937:5:3","typeDescriptions":{}}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3937:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3951:6:3","memberName":"length","nodeType":"MemberAccess","src":"3937:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3961:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3937:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":546,"nodeType":"IfStatement","src":"3933:51:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":543,"name":"EmptySource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3971:11:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":545,"nodeType":"RevertStatement","src":"3964:20:3"}},{"expression":{"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":547,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3991:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3996:12:3","memberName":"codeLocation","nodeType":"MemberAccess","referencedDeclaration":289,"src":"3991:17:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":550,"name":"codeLocation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":528,"src":"4011:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"src":"3991:32:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"id":552,"nodeType":"ExpressionStatement","src":"3991:32:3"},{"expression":{"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":553,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4029:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":555,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4034:8:3","memberName":"language","nodeType":"MemberAccess","referencedDeclaration":295,"src":"4029:13:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":556,"name":"language","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"4045:8:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"src":"4029:24:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"id":558,"nodeType":"ExpressionStatement","src":"4029:24:3"},{"expression":{"id":563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":559,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"4059:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4064:6:3","memberName":"source","nodeType":"MemberAccess","referencedDeclaration":297,"src":"4059:11:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":562,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"4073:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4059:20:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":564,"nodeType":"ExpressionStatement","src":"4059:20:3"}]},"documentation":{"id":522,"nodeType":"StructuredDocumentation","src":"3432:342:3","text":"@notice Initializes a Chainlink Functions Request\n @dev Sets the codeLocation and code on the request\n @param self The uninitialized request\n @param codeLocation The user provided source code location\n @param language The programming language of the user code\n @param source The user provided source code or a url"},"id":566,"implemented":true,"kind":"function","modifiers":[],"name":"initializeRequest","nameLocation":"3786:17:3","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"self","nameLocation":"3824:4:3","nodeType":"VariableDeclaration","scope":566,"src":"3809:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":524,"nodeType":"UserDefinedTypeName","pathNode":{"id":523,"name":"Request","nameLocations":["3809:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"3809:7:3"},"referencedDeclaration":306,"src":"3809:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"codeLocation","nameLocation":"3843:12:3","nodeType":"VariableDeclaration","scope":566,"src":"3834:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},"typeName":{"id":527,"nodeType":"UserDefinedTypeName","pathNode":{"id":526,"name":"Location","nameLocations":["3834:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"3834:8:3"},"referencedDeclaration":284,"src":"3834:8:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"language","nameLocation":"3874:8:3","nodeType":"VariableDeclaration","scope":566,"src":"3861:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"},"typeName":{"id":530,"nodeType":"UserDefinedTypeName","pathNode":{"id":529,"name":"CodeLanguage","nameLocations":["3861:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":286,"src":"3861:12:3"},"referencedDeclaration":286,"src":"3861:12:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"source","nameLocation":"3902:6:3","nodeType":"VariableDeclaration","scope":566,"src":"3888:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":532,"name":"string","nodeType":"ElementaryTypeName","src":"3888:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3803:109:3"},"returnParameters":{"id":535,"nodeType":"ParameterList","parameters":[],"src":"3927:0:3"},"scope":728,"src":"3777:307:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":584,"nodeType":"Block","src":"4436:94:3","statements":[{"expression":{"arguments":[{"id":576,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"4460:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},{"expression":{"id":577,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"4466:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$284_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4475:6:3","memberName":"Inline","nodeType":"MemberAccess","referencedDeclaration":281,"src":"4466:15:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},{"expression":{"id":579,"name":"CodeLanguage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"4483:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_CodeLanguage_$286_$","typeString":"type(enum FunctionsRequest.CodeLanguage)"}},"id":580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4496:10:3","memberName":"JavaScript","nodeType":"MemberAccess","referencedDeclaration":285,"src":"4483:23:3","typeDescriptions":{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"}},{"id":581,"name":"javaScriptSource","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4508:16:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"},{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"},{"typeIdentifier":"t_enum$_CodeLanguage_$286","typeString":"enum FunctionsRequest.CodeLanguage"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":575,"name":"initializeRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"4442:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$306_memory_ptr_$_t_enum$_Location_$284_$_t_enum$_CodeLanguage_$286_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct FunctionsRequest.Request memory,enum FunctionsRequest.Location,enum FunctionsRequest.CodeLanguage,string memory) pure"}},"id":582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4442:83:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":583,"nodeType":"ExpressionStatement","src":"4442:83:3"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"4088:232:3","text":"@notice Initializes a Chainlink Functions Request\n @dev Simplified version of initializeRequest for PoC\n @param self The uninitialized request\n @param javaScriptSource The user provided JS code (must not be empty)"},"id":585,"implemented":true,"kind":"function","modifiers":[],"name":"initializeRequestForInlineJavaScript","nameLocation":"4332:36:3","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":570,"mutability":"mutable","name":"self","nameLocation":"4384:4:3","nodeType":"VariableDeclaration","scope":585,"src":"4369:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":569,"nodeType":"UserDefinedTypeName","pathNode":{"id":568,"name":"Request","nameLocations":["4369:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"4369:7:3"},"referencedDeclaration":306,"src":"4369:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"javaScriptSource","nameLocation":"4404:16:3","nodeType":"VariableDeclaration","scope":585,"src":"4390:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":571,"name":"string","nodeType":"ElementaryTypeName","src":"4390:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4368:53:3"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"4436:0:3"},"scope":728,"src":"4323:207:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"4852:184:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":594,"name":"encryptedSecretsReference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"4862:25:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4888:6:3","memberName":"length","nodeType":"MemberAccess","src":"4862:32:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4898:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4862:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":601,"nodeType":"IfStatement","src":"4858:64:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":598,"name":"EmptySecrets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4908:12:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":600,"nodeType":"RevertStatement","src":"4901:21:3"}},{"expression":{"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":602,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4929:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":604,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4934:15:3","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":292,"src":"4929:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":605,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"4952:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$284_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4961:6:3","memberName":"Remote","nodeType":"MemberAccess","referencedDeclaration":282,"src":"4952:15:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"src":"4929:38:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"id":608,"nodeType":"ExpressionStatement","src":"4929:38:3"},{"expression":{"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":609,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"4973:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4978:25:3","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":299,"src":"4973:30:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":612,"name":"encryptedSecretsReference","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"5006:25:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"4973:58:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":614,"nodeType":"ExpressionStatement","src":"4973:58:3"}]},"documentation":{"id":586,"nodeType":"StructuredDocumentation","src":"4534:211:3","text":"@notice Adds Remote user encrypted secrets to a Request\n @param self The initialized request\n @param encryptedSecretsReference Encrypted comma-separated string of URLs pointing to off-chain secrets"},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"addSecretsReference","nameLocation":"4757:19:3","nodeType":"FunctionDefinition","parameters":{"id":592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"self","nameLocation":"4792:4:3","nodeType":"VariableDeclaration","scope":616,"src":"4777:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":588,"nodeType":"UserDefinedTypeName","pathNode":{"id":587,"name":"Request","nameLocations":["4777:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"4777:7:3"},"referencedDeclaration":306,"src":"4777:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":591,"mutability":"mutable","name":"encryptedSecretsReference","nameLocation":"4811:25:3","nodeType":"VariableDeclaration","scope":616,"src":"4798:38:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":590,"name":"bytes","nodeType":"ElementaryTypeName","src":"4798:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4776:61:3"},"returnParameters":{"id":593,"nodeType":"ParameterList","parameters":[],"src":"4852:0:3"},"scope":728,"src":"4748:288:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":676,"nodeType":"Block","src":"5357:311:3","statements":[{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"buffer","nameLocation":"5386:6:3","nodeType":"VariableDeclaration","scope":676,"src":"5363:29:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":630,"nodeType":"UserDefinedTypeName","pathNode":{"id":629,"name":"CBOR.CBORBuffer","nameLocations":["5363:4:3","5368:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"5363:15:3"},"referencedDeclaration":1222,"src":"5363:15:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"id":636,"initialValue":{"arguments":[{"id":634,"name":"DEFAULT_BUFFER_SIZE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"5407:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":632,"name":"CBOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"5395:4:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_CBOR_$2067_$","typeString":"type(library CBOR)"}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5400:6:3","memberName":"create","nodeType":"MemberAccess","referencedDeclaration":1289,"src":"5395:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (uint256) pure returns (struct CBOR.CBORBuffer memory)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5395:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"nodeType":"VariableDeclarationStatement","src":"5363:64:3"},{"expression":{"arguments":[{"hexValue":"736c6f744944","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5453:8:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5aaf47ebef83f4d962805dda4c452b2732f648f22dd85d8c0d1bc70bede536f","typeString":"literal_string \"slotID\""},"value":"slotID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5aaf47ebef83f4d962805dda4c452b2732f648f22dd85d8c0d1bc70bede536f","typeString":"literal_string \"slotID\""}],"expression":{"id":637,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5434:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":639,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5441:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"5434:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5434:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"5434:28:3"},{"expression":{"arguments":[{"id":646,"name":"slotID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":622,"src":"5487:6:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":643,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5468:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5475:11:3","memberName":"writeUInt64","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"5468:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint64_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5468:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":648,"nodeType":"ExpressionStatement","src":"5468:26:3"},{"expression":{"arguments":[{"hexValue":"76657273696f6e","id":652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5519:9:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba1b4dd49a85c82b73f138b112d5135149203ed36c1ec80c46f8c572daa7c5ec","typeString":"literal_string \"version\""},"value":"version"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ba1b4dd49a85c82b73f138b112d5135149203ed36c1ec80c46f8c572daa7c5ec","typeString":"literal_string \"version\""}],"expression":{"id":649,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5500:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5507:11:3","memberName":"writeString","nodeType":"MemberAccess","referencedDeclaration":1507,"src":"5500:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"5500:29:3"},{"expression":{"arguments":[{"id":658,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"5554:7:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"expression":{"id":655,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5535:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5542:11:3","memberName":"writeUInt64","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"5535:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint64_$returns$__$attached_to$_t_struct$_CBORBuffer_$1222_memory_ptr_$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":660,"nodeType":"ExpressionStatement","src":"5535:27:3"},{"expression":{"id":666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":661,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5569:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5574:15:3","memberName":"secretsLocation","nodeType":"MemberAccess","referencedDeclaration":292,"src":"5569:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":664,"name":"Location","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"5592:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Location_$284_$","typeString":"type(enum FunctionsRequest.Location)"}},"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5601:9:3","memberName":"DONHosted","nodeType":"MemberAccess","referencedDeclaration":283,"src":"5592:18:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"src":"5569:41:3","typeDescriptions":{"typeIdentifier":"t_enum$_Location_$284","typeString":"enum FunctionsRequest.Location"}},"id":667,"nodeType":"ExpressionStatement","src":"5569:41:3"},{"expression":{"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":668,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"5616:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5621:25:3","memberName":"encryptedSecretsReference","nodeType":"MemberAccess","referencedDeclaration":299,"src":"5616:30:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":671,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5649:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5656:3:3","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"5649:10:3","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":673,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5660:3:3","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"5649:14:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"5616:47:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":675,"nodeType":"ExpressionStatement","src":"5616:47:3"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"5040:220:3","text":"@notice Adds DON-hosted secrets reference to a Request\n @param self The initialized request\n @param slotID Slot ID of the user's secrets hosted on DON\n @param version User data version (for the slotID)"},"id":677,"implemented":true,"kind":"function","modifiers":[],"name":"addDONHostedSecrets","nameLocation":"5272:19:3","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"self","nameLocation":"5307:4:3","nodeType":"VariableDeclaration","scope":677,"src":"5292:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":619,"nodeType":"UserDefinedTypeName","pathNode":{"id":618,"name":"Request","nameLocations":["5292:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"5292:7:3"},"referencedDeclaration":306,"src":"5292:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"slotID","nameLocation":"5319:6:3","nodeType":"VariableDeclaration","scope":677,"src":"5313:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":621,"name":"uint8","nodeType":"ElementaryTypeName","src":"5313:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"version","nameLocation":"5334:7:3","nodeType":"VariableDeclaration","scope":677,"src":"5327:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":623,"name":"uint64","nodeType":"ElementaryTypeName","src":"5327:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5291:51:3"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"5357:0:3"},"scope":728,"src":"5263:405:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":701,"nodeType":"Block","src":"5901:74:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":687,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5911:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5916:6:3","memberName":"length","nodeType":"MemberAccess","src":"5911:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5926:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5911:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":694,"nodeType":"IfStatement","src":"5907:40:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":691,"name":"EmptyArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"5936:9:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5936:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":693,"nodeType":"RevertStatement","src":"5929:18:3"}},{"expression":{"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":695,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5954:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":697,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5959:4:3","memberName":"args","nodeType":"MemberAccess","referencedDeclaration":302,"src":"5954:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":698,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":684,"src":"5966:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"src":"5954:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":700,"nodeType":"ExpressionStatement","src":"5954:16:3"}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"5672:152:3","text":"@notice Sets args for the user run function\n @param self The initialized request\n @param args The array of string args (must not be empty)"},"id":702,"implemented":true,"kind":"function","modifiers":[],"name":"setArgs","nameLocation":"5836:7:3","nodeType":"FunctionDefinition","parameters":{"id":685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"self","nameLocation":"5859:4:3","nodeType":"VariableDeclaration","scope":702,"src":"5844:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":680,"nodeType":"UserDefinedTypeName","pathNode":{"id":679,"name":"Request","nameLocations":["5844:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"5844:7:3"},"referencedDeclaration":306,"src":"5844:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":684,"mutability":"mutable","name":"args","nameLocation":"5881:4:3","nodeType":"VariableDeclaration","scope":702,"src":"5865:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":682,"name":"string","nodeType":"ElementaryTypeName","src":"5865:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":683,"nodeType":"ArrayTypeName","src":"5865:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5843:43:3"},"returnParameters":{"id":686,"nodeType":"ParameterList","parameters":[],"src":"5901:0:3"},"scope":728,"src":"5827:148:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":726,"nodeType":"Block","src":"6217:79:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6227:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6232:6:3","memberName":"length","nodeType":"MemberAccess","src":"6227:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6242:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6227:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":719,"nodeType":"IfStatement","src":"6223:40:3","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":716,"name":"EmptyArgs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"6252:9:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6252:11:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":718,"nodeType":"RevertStatement","src":"6245:18:3"}},{"expression":{"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":720,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6270:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":722,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6275:9:3","memberName":"bytesArgs","nodeType":"MemberAccess","referencedDeclaration":305,"src":"6270:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":723,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":709,"src":"6287:4:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"src":"6270:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes memory[] memory"}},"id":725,"nodeType":"ExpressionStatement","src":"6270:21:3"}]},"documentation":{"id":703,"nodeType":"StructuredDocumentation","src":"5979:157:3","text":"@notice Sets bytes args for the user run function\n @param self The initialized request\n @param args The array of bytes args (must not be empty)"},"id":727,"implemented":true,"kind":"function","modifiers":[],"name":"setBytesArgs","nameLocation":"6148:12:3","nodeType":"FunctionDefinition","parameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":706,"mutability":"mutable","name":"self","nameLocation":"6176:4:3","nodeType":"VariableDeclaration","scope":727,"src":"6161:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":705,"nodeType":"UserDefinedTypeName","pathNode":{"id":704,"name":"Request","nameLocations":["6161:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"6161:7:3"},"referencedDeclaration":306,"src":"6161:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"},{"constant":false,"id":709,"mutability":"mutable","name":"args","nameLocation":"6197:4:3","nodeType":"VariableDeclaration","scope":727,"src":"6182:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":707,"name":"bytes","nodeType":"ElementaryTypeName","src":"6182:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":708,"nodeType":"ArrayTypeName","src":"6182:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6160:42:3"},"returnParameters":{"id":711,"nodeType":"ParameterList","parameters":[],"src":"6217:0:3"},"scope":728,"src":"6139:157:3","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":729,"src":"212:6086:3","usedErrors":[308,310,312,314],"usedEvents":[]}],"src":"32:6267:3"},"id":3},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol","exportedSymbols":{"FunctionsResponse":[786]},"id":787,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":730,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"FunctionsResponse","contractDependencies":[],"contractKind":"library","documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"58:81:4","text":"@title Library of types that are used for fulfillment of a Functions request"},"fullyImplemented":true,"id":786,"linearizedBaseContracts":[786],"name":"FunctionsResponse","nameLocation":"147:17:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"FunctionsResponse.RequestMeta","id":754,"members":[{"constant":false,"id":733,"mutability":"mutable","name":"data","nameLocation":"273:4:4","nodeType":"VariableDeclaration","scope":754,"src":"267:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":732,"name":"bytes","nodeType":"ElementaryTypeName","src":"267:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"flags","nameLocation":"448:5:4","nodeType":"VariableDeclaration","scope":754,"src":"440:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"440:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"requestingContract","nameLocation":"542:18:4","nodeType":"VariableDeclaration","scope":754,"src":"534:26:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":736,"name":"address","nodeType":"ElementaryTypeName","src":"534:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"availableBalance","nameLocation":"634:16:4","nodeType":"VariableDeclaration","scope":754,"src":"627:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":738,"name":"uint96","nodeType":"ElementaryTypeName","src":"627:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"adminFee","nameLocation":"796:8:4","nodeType":"VariableDeclaration","scope":754,"src":"789:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":740,"name":"uint72","nodeType":"ElementaryTypeName","src":"789:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"subscriptionId","nameLocation":"958:14:4","nodeType":"VariableDeclaration","scope":754,"src":"951:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":742,"name":"uint64","nodeType":"ElementaryTypeName","src":"951:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":745,"mutability":"mutable","name":"initiatedRequests","nameLocation":"1075:17:4","nodeType":"VariableDeclaration","scope":754,"src":"1068:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":744,"name":"uint64","nodeType":"ElementaryTypeName","src":"1068:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":747,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1162:16:4","nodeType":"VariableDeclaration","scope":754,"src":"1155:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":746,"name":"uint32","nodeType":"ElementaryTypeName","src":"1155:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"dataVersion","nameLocation":"1279:11:4","nodeType":"VariableDeclaration","scope":754,"src":"1272:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":748,"name":"uint16","nodeType":"ElementaryTypeName","src":"1272:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":751,"mutability":"mutable","name":"completedRequests","nameLocation":"1402:17:4","nodeType":"VariableDeclaration","scope":754,"src":"1395:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":750,"name":"uint64","nodeType":"ElementaryTypeName","src":"1395:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":753,"mutability":"mutable","name":"subscriptionOwner","nameLocation":"1521:17:4","nodeType":"VariableDeclaration","scope":754,"src":"1513:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"1513:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"RequestMeta","nameLocation":"249:11:4","nodeType":"StructDefinition","scope":786,"src":"242:1355:4","visibility":"public"},{"canonicalName":"FunctionsResponse.FulfillResult","id":762,"members":[{"id":755,"name":"FULFILLED","nameLocation":"1626:9:4","nodeType":"EnumValue","src":"1626:9:4"},{"id":756,"name":"USER_CALLBACK_ERROR","nameLocation":"1646:19:4","nodeType":"EnumValue","src":"1646:19:4"},{"id":757,"name":"INVALID_REQUEST_ID","nameLocation":"1676:18:4","nodeType":"EnumValue","src":"1676:18:4"},{"id":758,"name":"COST_EXCEEDS_COMMITMENT","nameLocation":"1705:23:4","nodeType":"EnumValue","src":"1705:23:4"},{"id":759,"name":"INSUFFICIENT_GAS_PROVIDED","nameLocation":"1739:25:4","nodeType":"EnumValue","src":"1739:25:4"},{"id":760,"name":"SUBSCRIPTION_BALANCE_INVARIANT_VIOLATION","nameLocation":"1775:40:4","nodeType":"EnumValue","src":"1775:40:4"},{"id":761,"name":"INVALID_COMMITMENT","nameLocation":"1826:18:4","nodeType":"EnumValue","src":"1826:18:4"}],"name":"FulfillResult","nameLocation":"1606:13:4","nodeType":"EnumDefinition","src":"1601:252:4"},{"canonicalName":"FunctionsResponse.Commitment","id":785,"members":[{"constant":false,"id":764,"mutability":"mutable","name":"requestId","nameLocation":"1889:9:4","nodeType":"VariableDeclaration","scope":785,"src":"1881:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":763,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1881:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"coordinator","nameLocation":"2024:11:4","nodeType":"VariableDeclaration","scope":785,"src":"2016:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"2016:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":768,"mutability":"mutable","name":"estimatedTotalCostJuels","nameLocation":"2174:23:4","nodeType":"VariableDeclaration","scope":785,"src":"2167:30:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":767,"name":"uint96","nodeType":"ElementaryTypeName","src":"2167:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":770,"mutability":"mutable","name":"client","nameLocation":"2313:6:4","nodeType":"VariableDeclaration","scope":785,"src":"2305:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":769,"name":"address","nodeType":"ElementaryTypeName","src":"2305:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":772,"mutability":"mutable","name":"subscriptionId","nameLocation":"2441:14:4","nodeType":"VariableDeclaration","scope":785,"src":"2434:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":771,"name":"uint64","nodeType":"ElementaryTypeName","src":"2434:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":774,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2564:16:4","nodeType":"VariableDeclaration","scope":785,"src":"2557:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":773,"name":"uint32","nodeType":"ElementaryTypeName","src":"2557:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"adminFee","nameLocation":"2709:8:4","nodeType":"VariableDeclaration","scope":785,"src":"2702:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":775,"name":"uint72","nodeType":"ElementaryTypeName","src":"2702:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"donFee","nameLocation":"2889:6:4","nodeType":"VariableDeclaration","scope":785,"src":"2882:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":777,"name":"uint72","nodeType":"ElementaryTypeName","src":"2882:6:4","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"},{"constant":false,"id":780,"mutability":"mutable","name":"gasOverheadBeforeCallback","nameLocation":"3025:25:4","nodeType":"VariableDeclaration","scope":785,"src":"3018:32:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":779,"name":"uint40","nodeType":"ElementaryTypeName","src":"3018:6:4","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":782,"mutability":"mutable","name":"gasOverheadAfterCallback","nameLocation":"3147:24:4","nodeType":"VariableDeclaration","scope":785,"src":"3140:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":781,"name":"uint40","nodeType":"ElementaryTypeName","src":"3140:6:4","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"timeoutTimestamp","nameLocation":"3268:16:4","nodeType":"VariableDeclaration","scope":785,"src":"3261:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":783,"name":"uint32","nodeType":"ElementaryTypeName","src":"3261:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Commitment","nameLocation":"1864:10:4","nodeType":"StructDefinition","scope":786,"src":"1857:1538:4","visibility":"public"}],"scope":787,"src":"139:3258:4","usedErrors":[],"usedEvents":[]}],"src":"32:3366:4"},"id":4},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol","exportedSymbols":{"Buffer":[1208]},"id":1209,"license":"BSD-2-Clause","nodeType":"SourceUnit","nodes":[{"id":788,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"41:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Buffer","contractDependencies":[],"contractKind":"library","documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"66:378:5","text":" @dev A library for working with mutable byte buffers in Solidity.\n Byte buffers are mutable and expandable, and provide a variety of primitives\n for appending to them. At any time you can fetch a bytes object containing the\n current contents of the buffer. The bytes object should not be stored between\n operations, as it may change due to resizing of the buffer."},"fullyImplemented":true,"id":1208,"linearizedBaseContracts":[1208],"name":"Buffer","nameLocation":"453:6:5","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Buffer.buffer","documentation":{"id":790,"nodeType":"StructuredDocumentation","src":"466:249:5","text":" @dev Represents a mutable buffer. Buffers have a current value (buf) and\n      a capacity. The capacity may be longer than the current value, in\n      which case it can be extended without the need to allocate more memory."},"id":795,"members":[{"constant":false,"id":792,"mutability":"mutable","name":"buf","nameLocation":"750:3:5","nodeType":"VariableDeclaration","scope":795,"src":"744:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":791,"name":"bytes","nodeType":"ElementaryTypeName","src":"744:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"capacity","nameLocation":"768:8:5","nodeType":"VariableDeclaration","scope":795,"src":"763:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint","nodeType":"ElementaryTypeName","src":"763:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"buffer","nameLocation":"727:6:5","nodeType":"StructDefinition","scope":1208,"src":"720:63:5","visibility":"public"},{"body":{"id":832,"nodeType":"Block","src":"1105:470:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":807,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1119:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1119:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1136:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1119:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":822,"nodeType":"IfStatement","src":"1115:81:5","trueBody":{"id":821,"nodeType":"Block","src":"1139:57:5","statements":[{"expression":{"id":819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":812,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1153:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1165:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1171:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3332","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1182:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1171:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1170:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1165:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1153:32:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":820,"nodeType":"ExpressionStatement","src":"1153:32:5"}]}},{"expression":{"id":827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":823,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"1251:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":825,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1255:8:5","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":794,"src":"1251:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":826,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":801,"src":"1266:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1251:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":828,"nodeType":"ExpressionStatement","src":"1251:23:5"},{"AST":{"nativeSrc":"1293:256:5","nodeType":"YulBlock","src":"1293:256:5","statements":[{"nativeSrc":"1307:22:5","nodeType":"YulVariableDeclaration","src":"1307:22:5","value":{"arguments":[{"kind":"number","nativeSrc":"1324:4:5","nodeType":"YulLiteral","src":"1324:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"1318:5:5","nodeType":"YulIdentifier","src":"1318:5:5"},"nativeSrc":"1318:11:5","nodeType":"YulFunctionCall","src":"1318:11:5"},"variables":[{"name":"ptr","nativeSrc":"1311:3:5","nodeType":"YulTypedName","src":"1311:3:5","type":""}]},{"expression":{"arguments":[{"name":"buf","nativeSrc":"1349:3:5","nodeType":"YulIdentifier","src":"1349:3:5"},{"name":"ptr","nativeSrc":"1354:3:5","nodeType":"YulIdentifier","src":"1354:3:5"}],"functionName":{"name":"mstore","nativeSrc":"1342:6:5","nodeType":"YulIdentifier","src":"1342:6:5"},"nativeSrc":"1342:16:5","nodeType":"YulFunctionCall","src":"1342:16:5"},"nativeSrc":"1342:16:5","nodeType":"YulExpressionStatement","src":"1342:16:5"},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1378:3:5","nodeType":"YulIdentifier","src":"1378:3:5"},{"kind":"number","nativeSrc":"1383:1:5","nodeType":"YulLiteral","src":"1383:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"1371:6:5","nodeType":"YulIdentifier","src":"1371:6:5"},"nativeSrc":"1371:14:5","nodeType":"YulFunctionCall","src":"1371:14:5"},"nativeSrc":"1371:14:5","nodeType":"YulExpressionStatement","src":"1371:14:5"},{"nativeSrc":"1398:38:5","nodeType":"YulVariableDeclaration","src":"1398:38:5","value":{"arguments":[{"kind":"number","nativeSrc":"1413:2:5","nodeType":"YulLiteral","src":"1413:2:5","type":"","value":"32"},{"arguments":[{"name":"ptr","nativeSrc":"1421:3:5","nodeType":"YulIdentifier","src":"1421:3:5"},{"name":"capacity","nativeSrc":"1426:8:5","nodeType":"YulIdentifier","src":"1426:8:5"}],"functionName":{"name":"add","nativeSrc":"1417:3:5","nodeType":"YulIdentifier","src":"1417:3:5"},"nativeSrc":"1417:18:5","nodeType":"YulFunctionCall","src":"1417:18:5"}],"functionName":{"name":"add","nativeSrc":"1409:3:5","nodeType":"YulIdentifier","src":"1409:3:5"},"nativeSrc":"1409:27:5","nodeType":"YulFunctionCall","src":"1409:27:5"},"variables":[{"name":"fpm","nativeSrc":"1402:3:5","nodeType":"YulTypedName","src":"1402:3:5","type":""}]},{"body":{"nativeSrc":"1465:44:5","nodeType":"YulBlock","src":"1465:44:5","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1490:1:5","nodeType":"YulLiteral","src":"1490:1:5","type":"","value":"0"},{"kind":"number","nativeSrc":"1493:1:5","nodeType":"YulLiteral","src":"1493:1:5","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1483:6:5","nodeType":"YulIdentifier","src":"1483:6:5"},"nativeSrc":"1483:12:5","nodeType":"YulFunctionCall","src":"1483:12:5"},"nativeSrc":"1483:12:5","nodeType":"YulExpressionStatement","src":"1483:12:5"}]},"condition":{"arguments":[{"name":"fpm","nativeSrc":"1455:3:5","nodeType":"YulIdentifier","src":"1455:3:5"},{"name":"ptr","nativeSrc":"1460:3:5","nodeType":"YulIdentifier","src":"1460:3:5"}],"functionName":{"name":"lt","nativeSrc":"1452:2:5","nodeType":"YulIdentifier","src":"1452:2:5"},"nativeSrc":"1452:12:5","nodeType":"YulFunctionCall","src":"1452:12:5"},"nativeSrc":"1449:60:5","nodeType":"YulIf","src":"1449:60:5"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1529:4:5","nodeType":"YulLiteral","src":"1529:4:5","type":"","value":"0x40"},{"name":"fpm","nativeSrc":"1535:3:5","nodeType":"YulIdentifier","src":"1535:3:5"}],"functionName":{"name":"mstore","nativeSrc":"1522:6:5","nodeType":"YulIdentifier","src":"1522:6:5"},"nativeSrc":"1522:17:5","nodeType":"YulFunctionCall","src":"1522:17:5"},"nativeSrc":"1522:17:5","nodeType":"YulExpressionStatement","src":"1522:17:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":799,"isOffset":false,"isSlot":false,"src":"1349:3:5","valueSize":1},{"declaration":801,"isOffset":false,"isSlot":false,"src":"1426:8:5","valueSize":1}],"id":829,"nodeType":"InlineAssembly","src":"1284:265:5"},{"expression":{"id":830,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":799,"src":"1565:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":806,"id":831,"nodeType":"Return","src":"1558:10:5"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"789:226:5","text":" @dev Initializes a buffer with an initial capacity.\n @param buf The buffer to initialize.\n @param capacity The number of bytes of space to allocate the buffer.\n @return The buffer, for chaining."},"id":833,"implemented":true,"kind":"function","modifiers":[],"name":"init","nameLocation":"1029:4:5","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":799,"mutability":"mutable","name":"buf","nameLocation":"1048:3:5","nodeType":"VariableDeclaration","scope":833,"src":"1034:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":798,"nodeType":"UserDefinedTypeName","pathNode":{"id":797,"name":"buffer","nameLocations":["1034:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"1034:6:5"},"referencedDeclaration":795,"src":"1034:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":801,"mutability":"mutable","name":"capacity","nameLocation":"1058:8:5","nodeType":"VariableDeclaration","scope":833,"src":"1053:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":800,"name":"uint","nodeType":"ElementaryTypeName","src":"1053:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1033:34:5"},"returnParameters":{"id":806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":805,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":833,"src":"1090:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":804,"nodeType":"UserDefinedTypeName","pathNode":{"id":803,"name":"buffer","nameLocations":["1090:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"1090:6:5"},"referencedDeclaration":795,"src":"1090:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"1089:15:5"},"scope":1208,"src":"1020:555:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":861,"nodeType":"Block","src":"1890:108:5","statements":[{"assignments":[844],"declarations":[{"constant":false,"id":844,"mutability":"mutable","name":"buf","nameLocation":"1914:3:5","nodeType":"VariableDeclaration","scope":861,"src":"1900:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":843,"nodeType":"UserDefinedTypeName","pathNode":{"id":842,"name":"buffer","nameLocations":["1900:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"1900:6:5"},"referencedDeclaration":795,"src":"1900:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"id":845,"nodeType":"VariableDeclarationStatement","src":"1900:17:5"},{"expression":{"id":850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":846,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"1927:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1931:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"1927:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"1937:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"1927:11:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":851,"nodeType":"ExpressionStatement","src":"1927:11:5"},{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":852,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"1948:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":854,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1952:8:5","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":794,"src":"1948:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":855,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"1963:1:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1965:6:5","memberName":"length","nodeType":"MemberAccess","src":"1963:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1948:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":858,"nodeType":"ExpressionStatement","src":"1948:23:5"},{"expression":{"id":859,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":844,"src":"1988:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":841,"id":860,"nodeType":"Return","src":"1981:10:5"}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"1581:232:5","text":" @dev Initializes a new buffer from an existing bytes object.\n      Changes to the buffer may mutate the original value.\n @param b The bytes object to initialize the buffer with.\n @return A new buffer."},"id":862,"implemented":true,"kind":"function","modifiers":[],"name":"fromBytes","nameLocation":"1827:9:5","nodeType":"FunctionDefinition","parameters":{"id":837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"b","nameLocation":"1850:1:5","nodeType":"VariableDeclaration","scope":862,"src":"1837:14:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":835,"name":"bytes","nodeType":"ElementaryTypeName","src":"1837:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1836:16:5"},"returnParameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":840,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":862,"src":"1875:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":839,"nodeType":"UserDefinedTypeName","pathNode":{"id":838,"name":"buffer","nameLocations":["1875:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"1875:6:5"},"referencedDeclaration":795,"src":"1875:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"1874:15:5"},"scope":1208,"src":"1818:180:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":885,"nodeType":"Block","src":"2067:104:5","statements":[{"assignments":[871],"declarations":[{"constant":false,"id":871,"mutability":"mutable","name":"oldbuf","nameLocation":"2090:6:5","nodeType":"VariableDeclaration","scope":885,"src":"2077:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":870,"name":"bytes","nodeType":"ElementaryTypeName","src":"2077:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":874,"initialValue":{"expression":{"id":872,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2099:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2103:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"2099:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2077:29:5"},{"expression":{"arguments":[{"id":876,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2121:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":877,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"2126:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":875,"name":"init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"2116:4:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2116:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":879,"nodeType":"ExpressionStatement","src":"2116:19:5"},{"expression":{"arguments":[{"id":881,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":865,"src":"2152:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":882,"name":"oldbuf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"2157:6:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":880,"name":"append","nodeType":"Identifier","overloadedDeclarations":[988,1008,1114],"referencedDeclaration":1008,"src":"2145:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":884,"nodeType":"ExpressionStatement","src":"2145:19:5"}]},"id":886,"implemented":true,"kind":"function","modifiers":[],"name":"resize","nameLocation":"2013:6:5","nodeType":"FunctionDefinition","parameters":{"id":868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":865,"mutability":"mutable","name":"buf","nameLocation":"2034:3:5","nodeType":"VariableDeclaration","scope":886,"src":"2020:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":864,"nodeType":"UserDefinedTypeName","pathNode":{"id":863,"name":"buffer","nameLocations":["2020:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"2020:6:5"},"referencedDeclaration":795,"src":"2020:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":867,"mutability":"mutable","name":"capacity","nameLocation":"2044:8:5","nodeType":"VariableDeclaration","scope":886,"src":"2039:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":866,"name":"uint","nodeType":"ElementaryTypeName","src":"2039:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2019:34:5"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[],"src":"2067:0:5"},"scope":1208,"src":"2004:167:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":899,"nodeType":"Block","src":"2394:123:5","statements":[{"AST":{"nativeSrc":"2413:78:5","nodeType":"YulBlock","src":"2413:78:5","statements":[{"nativeSrc":"2427:24:5","nodeType":"YulVariableDeclaration","src":"2427:24:5","value":{"arguments":[{"name":"buf","nativeSrc":"2447:3:5","nodeType":"YulIdentifier","src":"2447:3:5"}],"functionName":{"name":"mload","nativeSrc":"2441:5:5","nodeType":"YulIdentifier","src":"2441:5:5"},"nativeSrc":"2441:10:5","nodeType":"YulFunctionCall","src":"2441:10:5"},"variables":[{"name":"bufptr","nativeSrc":"2431:6:5","nodeType":"YulTypedName","src":"2431:6:5","type":""}]},{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"2471:6:5","nodeType":"YulIdentifier","src":"2471:6:5"},{"kind":"number","nativeSrc":"2479:1:5","nodeType":"YulLiteral","src":"2479:1:5","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2464:6:5","nodeType":"YulIdentifier","src":"2464:6:5"},"nativeSrc":"2464:17:5","nodeType":"YulFunctionCall","src":"2464:17:5"},"nativeSrc":"2464:17:5","nodeType":"YulExpressionStatement","src":"2464:17:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":890,"isOffset":false,"isSlot":false,"src":"2447:3:5","valueSize":1}],"id":896,"nodeType":"InlineAssembly","src":"2404:87:5"},{"expression":{"id":897,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"2507:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":895,"id":898,"nodeType":"Return","src":"2500:10:5"}]},"documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"2177:137:5","text":" @dev Sets buffer length to 0.\n @param buf The buffer to truncate.\n @return The original buffer, for chaining.."},"id":900,"implemented":true,"kind":"function","modifiers":[],"name":"truncate","nameLocation":"2328:8:5","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":890,"mutability":"mutable","name":"buf","nameLocation":"2351:3:5","nodeType":"VariableDeclaration","scope":900,"src":"2337:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":889,"nodeType":"UserDefinedTypeName","pathNode":{"id":888,"name":"buffer","nameLocations":["2337:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"2337:6:5"},"referencedDeclaration":795,"src":"2337:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2336:19:5"},"returnParameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":900,"src":"2379:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":893,"nodeType":"UserDefinedTypeName","pathNode":{"id":892,"name":"buffer","nameLocations":["2379:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"2379:6:5"},"referencedDeclaration":795,"src":"2379:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2378:15:5"},"scope":1208,"src":"2319:198:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":987,"nodeType":"Block","src":"2945:1326:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":915,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"2963:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":916,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":906,"src":"2970:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2975:6:5","memberName":"length","nodeType":"MemberAccess","src":"2970:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2963:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":914,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2955:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2955:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"ExpressionStatement","src":"2955:27:5"},{"assignments":[922],"declarations":[{"constant":false,"id":922,"mutability":"mutable","name":"off","nameLocation":"2998:3:5","nodeType":"VariableDeclaration","scope":987,"src":"2993:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint","nodeType":"ElementaryTypeName","src":"2993:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":926,"initialValue":{"expression":{"expression":{"id":923,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3004:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":924,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3008:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"3004:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3012:6:5","memberName":"length","nodeType":"MemberAccess","src":"3004:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2993:25:5"},{"assignments":[928],"declarations":[{"constant":false,"id":928,"mutability":"mutable","name":"newCapacity","nameLocation":"3033:11:5","nodeType":"VariableDeclaration","scope":987,"src":"3028:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":927,"name":"uint","nodeType":"ElementaryTypeName","src":"3028:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":932,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":929,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"3047:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":930,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"3053:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3047:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3028:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":933,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3070:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":934,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3084:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":935,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3088:8:5","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":794,"src":"3084:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3070:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":945,"nodeType":"IfStatement","src":"3066:85:5","trueBody":{"id":944,"nodeType":"Block","src":"3098:53:5","statements":[{"expression":{"arguments":[{"id":938,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"3119:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"3124:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3138:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3124:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":937,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"3112:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3112:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":943,"nodeType":"ExpressionStatement","src":"3112:28:5"}]}},{"assignments":[947],"declarations":[{"constant":false,"id":947,"mutability":"mutable","name":"dest","nameLocation":"3166:4:5","nodeType":"VariableDeclaration","scope":987,"src":"3161:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint","nodeType":"ElementaryTypeName","src":"3161:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":948,"nodeType":"VariableDeclarationStatement","src":"3161:9:5"},{"assignments":[950],"declarations":[{"constant":false,"id":950,"mutability":"mutable","name":"src","nameLocation":"3185:3:5","nodeType":"VariableDeclaration","scope":987,"src":"3180:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint","nodeType":"ElementaryTypeName","src":"3180:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":951,"nodeType":"VariableDeclarationStatement","src":"3180:8:5"},{"AST":{"nativeSrc":"3207:498:5","nodeType":"YulBlock","src":"3207:498:5","statements":[{"nativeSrc":"3270:24:5","nodeType":"YulVariableDeclaration","src":"3270:24:5","value":{"arguments":[{"name":"buf","nativeSrc":"3290:3:5","nodeType":"YulIdentifier","src":"3290:3:5"}],"functionName":{"name":"mload","nativeSrc":"3284:5:5","nodeType":"YulIdentifier","src":"3284:5:5"},"nativeSrc":"3284:10:5","nodeType":"YulFunctionCall","src":"3284:10:5"},"variables":[{"name":"bufptr","nativeSrc":"3274:6:5","nodeType":"YulTypedName","src":"3274:6:5","type":""}]},{"nativeSrc":"3353:27:5","nodeType":"YulVariableDeclaration","src":"3353:27:5","value":{"arguments":[{"name":"bufptr","nativeSrc":"3373:6:5","nodeType":"YulIdentifier","src":"3373:6:5"}],"functionName":{"name":"mload","nativeSrc":"3367:5:5","nodeType":"YulIdentifier","src":"3367:5:5"},"nativeSrc":"3367:13:5","nodeType":"YulFunctionCall","src":"3367:13:5"},"variables":[{"name":"buflen","nativeSrc":"3357:6:5","nodeType":"YulTypedName","src":"3357:6:5","type":""}]},{"nativeSrc":"3472:33:5","nodeType":"YulAssignment","src":"3472:33:5","value":{"arguments":[{"arguments":[{"name":"bufptr","nativeSrc":"3488:6:5","nodeType":"YulIdentifier","src":"3488:6:5"},{"kind":"number","nativeSrc":"3496:2:5","nodeType":"YulLiteral","src":"3496:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3484:3:5","nodeType":"YulIdentifier","src":"3484:3:5"},"nativeSrc":"3484:15:5","nodeType":"YulFunctionCall","src":"3484:15:5"},{"name":"off","nativeSrc":"3501:3:5","nodeType":"YulIdentifier","src":"3501:3:5"}],"functionName":{"name":"add","nativeSrc":"3480:3:5","nodeType":"YulIdentifier","src":"3480:3:5"},"nativeSrc":"3480:25:5","nodeType":"YulFunctionCall","src":"3480:25:5"},"variableNames":[{"name":"dest","nativeSrc":"3472:4:5","nodeType":"YulIdentifier","src":"3472:4:5"}]},{"body":{"nativeSrc":"3603:59:5","nodeType":"YulBlock","src":"3603:59:5","statements":[{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"3628:6:5","nodeType":"YulIdentifier","src":"3628:6:5"},{"name":"newCapacity","nativeSrc":"3636:11:5","nodeType":"YulIdentifier","src":"3636:11:5"}],"functionName":{"name":"mstore","nativeSrc":"3621:6:5","nodeType":"YulIdentifier","src":"3621:6:5"},"nativeSrc":"3621:27:5","nodeType":"YulFunctionCall","src":"3621:27:5"},"nativeSrc":"3621:27:5","nodeType":"YulExpressionStatement","src":"3621:27:5"}]},"condition":{"arguments":[{"name":"newCapacity","nativeSrc":"3582:11:5","nodeType":"YulIdentifier","src":"3582:11:5"},{"name":"buflen","nativeSrc":"3595:6:5","nodeType":"YulIdentifier","src":"3595:6:5"}],"functionName":{"name":"gt","nativeSrc":"3579:2:5","nodeType":"YulIdentifier","src":"3579:2:5"},"nativeSrc":"3579:23:5","nodeType":"YulFunctionCall","src":"3579:23:5"},"nativeSrc":"3576:86:5","nodeType":"YulIf","src":"3576:86:5"},{"nativeSrc":"3675:20:5","nodeType":"YulAssignment","src":"3675:20:5","value":{"arguments":[{"name":"data","nativeSrc":"3686:4:5","nodeType":"YulIdentifier","src":"3686:4:5"},{"kind":"number","nativeSrc":"3692:2:5","nodeType":"YulLiteral","src":"3692:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3682:3:5","nodeType":"YulIdentifier","src":"3682:3:5"},"nativeSrc":"3682:13:5","nodeType":"YulFunctionCall","src":"3682:13:5"},"variableNames":[{"name":"src","nativeSrc":"3675:3:5","nodeType":"YulIdentifier","src":"3675:3:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":904,"isOffset":false,"isSlot":false,"src":"3290:3:5","valueSize":1},{"declaration":906,"isOffset":false,"isSlot":false,"src":"3686:4:5","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"3472:4:5","valueSize":1},{"declaration":928,"isOffset":false,"isSlot":false,"src":"3582:11:5","valueSize":1},{"declaration":928,"isOffset":false,"isSlot":false,"src":"3636:11:5","valueSize":1},{"declaration":922,"isOffset":false,"isSlot":false,"src":"3501:3:5","valueSize":1},{"declaration":950,"isOffset":false,"isSlot":false,"src":"3675:3:5","valueSize":1}],"id":952,"nodeType":"InlineAssembly","src":"3198:507:5"},{"body":{"id":969,"nodeType":"Block","src":"3794:136:5","statements":[{"AST":{"nativeSrc":"3817:56:5","nodeType":"YulBlock","src":"3817:56:5","statements":[{"expression":{"arguments":[{"name":"dest","nativeSrc":"3842:4:5","nodeType":"YulIdentifier","src":"3842:4:5"},{"arguments":[{"name":"src","nativeSrc":"3854:3:5","nodeType":"YulIdentifier","src":"3854:3:5"}],"functionName":{"name":"mload","nativeSrc":"3848:5:5","nodeType":"YulIdentifier","src":"3848:5:5"},"nativeSrc":"3848:10:5","nodeType":"YulFunctionCall","src":"3848:10:5"}],"functionName":{"name":"mstore","nativeSrc":"3835:6:5","nodeType":"YulIdentifier","src":"3835:6:5"},"nativeSrc":"3835:24:5","nodeType":"YulFunctionCall","src":"3835:24:5"},"nativeSrc":"3835:24:5","nodeType":"YulExpressionStatement","src":"3835:24:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":947,"isOffset":false,"isSlot":false,"src":"3842:4:5","valueSize":1},{"declaration":950,"isOffset":false,"isSlot":false,"src":"3854:3:5","valueSize":1}],"id":960,"nodeType":"InlineAssembly","src":"3808:65:5"},{"expression":{"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":961,"name":"dest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"3886:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3894:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3886:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":964,"nodeType":"ExpressionStatement","src":"3886:10:5"},{"expression":{"id":967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":965,"name":"src","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"3910:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3917:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3910:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":968,"nodeType":"ExpressionStatement","src":"3910:9:5"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":953,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"3772:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3332","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3779:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3772:9:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":970,"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":956,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"3783:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3332","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3790:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3783:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":959,"nodeType":"ExpressionStatement","src":"3783:9:5"},"nodeType":"ForStatement","src":"3765:165:5"},{"id":984,"nodeType":"UncheckedBlock","src":"3972:272:5","statements":[{"assignments":[972],"declarations":[{"constant":false,"id":972,"mutability":"mutable","name":"mask","nameLocation":"4001:4:5","nodeType":"VariableDeclaration","scope":984,"src":"3996:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":971,"name":"uint","nodeType":"ElementaryTypeName","src":"3996:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":982,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4009:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4017:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":975,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"4022:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4017:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":977,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4016:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4009:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4008:19:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4030:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4008:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3996:35:5"},{"AST":{"nativeSrc":"4054:180:5","nodeType":"YulBlock","src":"4054:180:5","statements":[{"nativeSrc":"4072:41:5","nodeType":"YulVariableDeclaration","src":"4072:41:5","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4097:3:5","nodeType":"YulIdentifier","src":"4097:3:5"}],"functionName":{"name":"mload","nativeSrc":"4091:5:5","nodeType":"YulIdentifier","src":"4091:5:5"},"nativeSrc":"4091:10:5","nodeType":"YulFunctionCall","src":"4091:10:5"},{"arguments":[{"name":"mask","nativeSrc":"4107:4:5","nodeType":"YulIdentifier","src":"4107:4:5"}],"functionName":{"name":"not","nativeSrc":"4103:3:5","nodeType":"YulIdentifier","src":"4103:3:5"},"nativeSrc":"4103:9:5","nodeType":"YulFunctionCall","src":"4103:9:5"}],"functionName":{"name":"and","nativeSrc":"4087:3:5","nodeType":"YulIdentifier","src":"4087:3:5"},"nativeSrc":"4087:26:5","nodeType":"YulFunctionCall","src":"4087:26:5"},"variables":[{"name":"srcpart","nativeSrc":"4076:7:5","nodeType":"YulTypedName","src":"4076:7:5","type":""}]},{"nativeSrc":"4130:38:5","nodeType":"YulVariableDeclaration","src":"4130:38:5","value":{"arguments":[{"arguments":[{"name":"dest","nativeSrc":"4156:4:5","nodeType":"YulIdentifier","src":"4156:4:5"}],"functionName":{"name":"mload","nativeSrc":"4150:5:5","nodeType":"YulIdentifier","src":"4150:5:5"},"nativeSrc":"4150:11:5","nodeType":"YulFunctionCall","src":"4150:11:5"},{"name":"mask","nativeSrc":"4163:4:5","nodeType":"YulIdentifier","src":"4163:4:5"}],"functionName":{"name":"and","nativeSrc":"4146:3:5","nodeType":"YulIdentifier","src":"4146:3:5"},"nativeSrc":"4146:22:5","nodeType":"YulFunctionCall","src":"4146:22:5"},"variables":[{"name":"destpart","nativeSrc":"4134:8:5","nodeType":"YulTypedName","src":"4134:8:5","type":""}]},{"expression":{"arguments":[{"name":"dest","nativeSrc":"4192:4:5","nodeType":"YulIdentifier","src":"4192:4:5"},{"arguments":[{"name":"destpart","nativeSrc":"4201:8:5","nodeType":"YulIdentifier","src":"4201:8:5"},{"name":"srcpart","nativeSrc":"4211:7:5","nodeType":"YulIdentifier","src":"4211:7:5"}],"functionName":{"name":"or","nativeSrc":"4198:2:5","nodeType":"YulIdentifier","src":"4198:2:5"},"nativeSrc":"4198:21:5","nodeType":"YulFunctionCall","src":"4198:21:5"}],"functionName":{"name":"mstore","nativeSrc":"4185:6:5","nodeType":"YulIdentifier","src":"4185:6:5"},"nativeSrc":"4185:35:5","nodeType":"YulFunctionCall","src":"4185:35:5"},"nativeSrc":"4185:35:5","nodeType":"YulExpressionStatement","src":"4185:35:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":947,"isOffset":false,"isSlot":false,"src":"4156:4:5","valueSize":1},{"declaration":947,"isOffset":false,"isSlot":false,"src":"4192:4:5","valueSize":1},{"declaration":972,"isOffset":false,"isSlot":false,"src":"4107:4:5","valueSize":1},{"declaration":972,"isOffset":false,"isSlot":false,"src":"4163:4:5","valueSize":1},{"declaration":950,"isOffset":false,"isSlot":false,"src":"4097:3:5","valueSize":1}],"id":983,"nodeType":"InlineAssembly","src":"4045:189:5"}]},{"expression":{"id":985,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"4261:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":913,"id":986,"nodeType":"Return","src":"4254:10:5"}]},"documentation":{"id":901,"nodeType":"StructuredDocumentation","src":"2523:316:5","text":" @dev Appends len bytes of a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to copy.\n @return The original buffer, for chaining."},"id":988,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"2853:6:5","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"buf","nameLocation":"2874:3:5","nodeType":"VariableDeclaration","scope":988,"src":"2860:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":903,"nodeType":"UserDefinedTypeName","pathNode":{"id":902,"name":"buffer","nameLocations":["2860:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"2860:6:5"},"referencedDeclaration":795,"src":"2860:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":906,"mutability":"mutable","name":"data","nameLocation":"2892:4:5","nodeType":"VariableDeclaration","scope":988,"src":"2879:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":905,"name":"bytes","nodeType":"ElementaryTypeName","src":"2879:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":908,"mutability":"mutable","name":"len","nameLocation":"2903:3:5","nodeType":"VariableDeclaration","scope":988,"src":"2898:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint","nodeType":"ElementaryTypeName","src":"2898:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2859:48:5"},"returnParameters":{"id":913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":912,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":988,"src":"2930:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":911,"nodeType":"UserDefinedTypeName","pathNode":{"id":910,"name":"buffer","nameLocations":["2930:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"2930:6:5"},"referencedDeclaration":795,"src":"2930:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"2929:15:5"},"scope":1208,"src":"2844:1427:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1007,"nodeType":"Block","src":"4631:54:5","statements":[{"expression":{"arguments":[{"id":1001,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":992,"src":"4655:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1002,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"4660:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"expression":{"id":1003,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":994,"src":"4666:4:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4671:6:5","memberName":"length","nodeType":"MemberAccess","src":"4666:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1000,"name":"append","nodeType":"Identifier","overloadedDeclarations":[988,1008,1114],"referencedDeclaration":988,"src":"4648:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":999,"id":1006,"nodeType":"Return","src":"4641:37:5"}]},"documentation":{"id":989,"nodeType":"StructuredDocumentation","src":"4277:257:5","text":" @dev Appends a byte string to a buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1008,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"4548:6:5","nodeType":"FunctionDefinition","parameters":{"id":995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":992,"mutability":"mutable","name":"buf","nameLocation":"4569:3:5","nodeType":"VariableDeclaration","scope":1008,"src":"4555:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":991,"nodeType":"UserDefinedTypeName","pathNode":{"id":990,"name":"buffer","nameLocations":["4555:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"4555:6:5"},"referencedDeclaration":795,"src":"4555:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":994,"mutability":"mutable","name":"data","nameLocation":"4587:4:5","nodeType":"VariableDeclaration","scope":1008,"src":"4574:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":993,"name":"bytes","nodeType":"ElementaryTypeName","src":"4574:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4554:38:5"},"returnParameters":{"id":999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1008,"src":"4616:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":997,"nodeType":"UserDefinedTypeName","pathNode":{"id":996,"name":"buffer","nameLocations":["4616:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"4616:6:5"},"referencedDeclaration":795,"src":"4616:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"4615:15:5"},"scope":1208,"src":"4539:146:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1048,"nodeType":"Block","src":"5037:610:5","statements":[{"assignments":[1021],"declarations":[{"constant":false,"id":1021,"mutability":"mutable","name":"off","nameLocation":"5052:3:5","nodeType":"VariableDeclaration","scope":1048,"src":"5047:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1020,"name":"uint","nodeType":"ElementaryTypeName","src":"5047:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1025,"initialValue":{"expression":{"expression":{"id":1022,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5058:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1023,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5062:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"5058:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:6:5","memberName":"length","nodeType":"MemberAccess","src":"5058:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5047:25:5"},{"assignments":[1027],"declarations":[{"constant":false,"id":1027,"mutability":"mutable","name":"offPlusOne","nameLocation":"5087:10:5","nodeType":"VariableDeclaration","scope":1048,"src":"5082:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1026,"name":"uint","nodeType":"ElementaryTypeName","src":"5082:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1031,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5100:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5106:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5100:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5082:25:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1032,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1021,"src":"5121:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":1033,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5128:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1034,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5132:8:5","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":794,"src":"5128:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5121:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1044,"nodeType":"IfStatement","src":"5117:77:5","trueBody":{"id":1043,"nodeType":"Block","src":"5142:52:5","statements":[{"expression":{"arguments":[{"id":1037,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5163:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1038,"name":"offPlusOne","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"5168:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5181:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5168:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1036,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"5156:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5156:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1042,"nodeType":"ExpressionStatement","src":"5156:27:5"}]}},{"AST":{"nativeSrc":"5213:407:5","nodeType":"YulBlock","src":"5213:407:5","statements":[{"nativeSrc":"5276:24:5","nodeType":"YulVariableDeclaration","src":"5276:24:5","value":{"arguments":[{"name":"buf","nativeSrc":"5296:3:5","nodeType":"YulIdentifier","src":"5296:3:5"}],"functionName":{"name":"mload","nativeSrc":"5290:5:5","nodeType":"YulIdentifier","src":"5290:5:5"},"nativeSrc":"5290:10:5","nodeType":"YulFunctionCall","src":"5290:10:5"},"variables":[{"name":"bufptr","nativeSrc":"5280:6:5","nodeType":"YulTypedName","src":"5280:6:5","type":""}]},{"nativeSrc":"5383:37:5","nodeType":"YulVariableDeclaration","src":"5383:37:5","value":{"arguments":[{"arguments":[{"name":"bufptr","nativeSrc":"5403:6:5","nodeType":"YulIdentifier","src":"5403:6:5"},{"name":"off","nativeSrc":"5411:3:5","nodeType":"YulIdentifier","src":"5411:3:5"}],"functionName":{"name":"add","nativeSrc":"5399:3:5","nodeType":"YulIdentifier","src":"5399:3:5"},"nativeSrc":"5399:16:5","nodeType":"YulFunctionCall","src":"5399:16:5"},{"kind":"number","nativeSrc":"5417:2:5","nodeType":"YulLiteral","src":"5417:2:5","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"5395:3:5","nodeType":"YulIdentifier","src":"5395:3:5"},"nativeSrc":"5395:25:5","nodeType":"YulFunctionCall","src":"5395:25:5"},"variables":[{"name":"dest","nativeSrc":"5387:4:5","nodeType":"YulTypedName","src":"5387:4:5","type":""}]},{"expression":{"arguments":[{"name":"dest","nativeSrc":"5441:4:5","nodeType":"YulIdentifier","src":"5441:4:5"},{"name":"data","nativeSrc":"5447:4:5","nodeType":"YulIdentifier","src":"5447:4:5"}],"functionName":{"name":"mstore8","nativeSrc":"5433:7:5","nodeType":"YulIdentifier","src":"5433:7:5"},"nativeSrc":"5433:19:5","nodeType":"YulFunctionCall","src":"5433:19:5"},"nativeSrc":"5433:19:5","nodeType":"YulExpressionStatement","src":"5433:19:5"},{"body":{"nativeSrc":"5552:58:5","nodeType":"YulBlock","src":"5552:58:5","statements":[{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"5577:6:5","nodeType":"YulIdentifier","src":"5577:6:5"},{"name":"offPlusOne","nativeSrc":"5585:10:5","nodeType":"YulIdentifier","src":"5585:10:5"}],"functionName":{"name":"mstore","nativeSrc":"5570:6:5","nodeType":"YulIdentifier","src":"5570:6:5"},"nativeSrc":"5570:26:5","nodeType":"YulFunctionCall","src":"5570:26:5"},"nativeSrc":"5570:26:5","nodeType":"YulExpressionStatement","src":"5570:26:5"}]},"condition":{"arguments":[{"name":"offPlusOne","nativeSrc":"5525:10:5","nodeType":"YulIdentifier","src":"5525:10:5"},{"arguments":[{"name":"bufptr","nativeSrc":"5543:6:5","nodeType":"YulIdentifier","src":"5543:6:5"}],"functionName":{"name":"mload","nativeSrc":"5537:5:5","nodeType":"YulIdentifier","src":"5537:5:5"},"nativeSrc":"5537:13:5","nodeType":"YulFunctionCall","src":"5537:13:5"}],"functionName":{"name":"gt","nativeSrc":"5522:2:5","nodeType":"YulIdentifier","src":"5522:2:5"},"nativeSrc":"5522:29:5","nodeType":"YulFunctionCall","src":"5522:29:5"},"nativeSrc":"5519:91:5","nodeType":"YulIf","src":"5519:91:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1012,"isOffset":false,"isSlot":false,"src":"5296:3:5","valueSize":1},{"declaration":1014,"isOffset":false,"isSlot":false,"src":"5447:4:5","valueSize":1},{"declaration":1021,"isOffset":false,"isSlot":false,"src":"5411:3:5","valueSize":1},{"declaration":1027,"isOffset":false,"isSlot":false,"src":"5525:10:5","valueSize":1},{"declaration":1027,"isOffset":false,"isSlot":false,"src":"5585:10:5","valueSize":1}],"id":1045,"nodeType":"InlineAssembly","src":"5204:416:5"},{"expression":{"id":1046,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1012,"src":"5637:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1019,"id":1047,"nodeType":"Return","src":"5630:10:5"}]},"documentation":{"id":1009,"nodeType":"StructuredDocumentation","src":"4691:252:5","text":" @dev Appends a byte to the buffer. Resizes if doing so would exceed the\n      capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1049,"implemented":true,"kind":"function","modifiers":[],"name":"appendUint8","nameLocation":"4957:11:5","nodeType":"FunctionDefinition","parameters":{"id":1015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1012,"mutability":"mutable","name":"buf","nameLocation":"4983:3:5","nodeType":"VariableDeclaration","scope":1049,"src":"4969:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1011,"nodeType":"UserDefinedTypeName","pathNode":{"id":1010,"name":"buffer","nameLocations":["4969:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"4969:6:5"},"referencedDeclaration":795,"src":"4969:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1014,"mutability":"mutable","name":"data","nameLocation":"4994:4:5","nodeType":"VariableDeclaration","scope":1049,"src":"4988:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1013,"name":"uint8","nodeType":"ElementaryTypeName","src":"4988:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4968:31:5"},"returnParameters":{"id":1019,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1018,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1049,"src":"5022:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1017,"nodeType":"UserDefinedTypeName","pathNode":{"id":1016,"name":"buffer","nameLocations":["5022:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"5022:6:5"},"referencedDeclaration":795,"src":"5022:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"5021:15:5"},"scope":1208,"src":"4948:699:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1113,"nodeType":"Block","src":"6079:854:5","statements":[{"assignments":[1064],"declarations":[{"constant":false,"id":1064,"mutability":"mutable","name":"off","nameLocation":"6094:3:5","nodeType":"VariableDeclaration","scope":1113,"src":"6089:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1063,"name":"uint","nodeType":"ElementaryTypeName","src":"6089:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1068,"initialValue":{"expression":{"expression":{"id":1065,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6100:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1066,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6104:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"6100:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6108:6:5","memberName":"length","nodeType":"MemberAccess","src":"6100:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6089:25:5"},{"assignments":[1070],"declarations":[{"constant":false,"id":1070,"mutability":"mutable","name":"newCapacity","nameLocation":"6129:11:5","nodeType":"VariableDeclaration","scope":1113,"src":"6124:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1069,"name":"uint","nodeType":"ElementaryTypeName","src":"6124:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1074,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1071,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6143:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1072,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1064,"src":"6149:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6143:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6124:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1075,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"6166:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1076,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6180:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1077,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6184:8:5","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":794,"src":"6180:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6166:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1087,"nodeType":"IfStatement","src":"6162:85:5","trueBody":{"id":1086,"nodeType":"Block","src":"6194:53:5","statements":[{"expression":{"arguments":[{"id":1080,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6215:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1081,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1070,"src":"6220:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6234:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6220:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1079,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"6208:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6208:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"6208:28:5"}]}},{"id":1110,"nodeType":"UncheckedBlock","src":"6257:650:5","statements":[{"assignments":[1089],"declarations":[{"constant":false,"id":1089,"mutability":"mutable","name":"mask","nameLocation":"6286:4:5","nodeType":"VariableDeclaration","scope":1110,"src":"6281:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint","nodeType":"ElementaryTypeName","src":"6281:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1096,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6294:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1091,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6301:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6294:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1093,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6293:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6308:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6293:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6281:28:5"},{"expression":{"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1097,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"6355:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1098,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"6362:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6371:1:5","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6376:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1101,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"6381:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6376:8:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1103,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6375:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6371:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1105,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6370:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6362:24:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6355:31:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1108,"nodeType":"ExpressionStatement","src":"6355:31:5"},{"AST":{"nativeSrc":"6409:488:5","nodeType":"YulBlock","src":"6409:488:5","statements":[{"nativeSrc":"6480:24:5","nodeType":"YulVariableDeclaration","src":"6480:24:5","value":{"arguments":[{"name":"buf","nativeSrc":"6500:3:5","nodeType":"YulIdentifier","src":"6500:3:5"}],"functionName":{"name":"mload","nativeSrc":"6494:5:5","nodeType":"YulIdentifier","src":"6494:5:5"},"nativeSrc":"6494:10:5","nodeType":"YulFunctionCall","src":"6494:10:5"},"variables":[{"name":"bufptr","nativeSrc":"6484:6:5","nodeType":"YulTypedName","src":"6484:6:5","type":""}]},{"nativeSrc":"6603:36:5","nodeType":"YulVariableDeclaration","src":"6603:36:5","value":{"arguments":[{"name":"bufptr","nativeSrc":"6619:6:5","nodeType":"YulIdentifier","src":"6619:6:5"},{"name":"newCapacity","nativeSrc":"6627:11:5","nodeType":"YulIdentifier","src":"6627:11:5"}],"functionName":{"name":"add","nativeSrc":"6615:3:5","nodeType":"YulIdentifier","src":"6615:3:5"},"nativeSrc":"6615:24:5","nodeType":"YulFunctionCall","src":"6615:24:5"},"variables":[{"name":"dest","nativeSrc":"6607:4:5","nodeType":"YulTypedName","src":"6607:4:5","type":""}]},{"expression":{"arguments":[{"name":"dest","nativeSrc":"6663:4:5","nodeType":"YulIdentifier","src":"6663:4:5"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nativeSrc":"6682:4:5","nodeType":"YulIdentifier","src":"6682:4:5"}],"functionName":{"name":"mload","nativeSrc":"6676:5:5","nodeType":"YulIdentifier","src":"6676:5:5"},"nativeSrc":"6676:11:5","nodeType":"YulFunctionCall","src":"6676:11:5"},{"arguments":[{"name":"mask","nativeSrc":"6693:4:5","nodeType":"YulIdentifier","src":"6693:4:5"}],"functionName":{"name":"not","nativeSrc":"6689:3:5","nodeType":"YulIdentifier","src":"6689:3:5"},"nativeSrc":"6689:9:5","nodeType":"YulFunctionCall","src":"6689:9:5"}],"functionName":{"name":"and","nativeSrc":"6672:3:5","nodeType":"YulIdentifier","src":"6672:3:5"},"nativeSrc":"6672:27:5","nodeType":"YulFunctionCall","src":"6672:27:5"},{"name":"data","nativeSrc":"6701:4:5","nodeType":"YulIdentifier","src":"6701:4:5"}],"functionName":{"name":"or","nativeSrc":"6669:2:5","nodeType":"YulIdentifier","src":"6669:2:5"},"nativeSrc":"6669:37:5","nodeType":"YulFunctionCall","src":"6669:37:5"}],"functionName":{"name":"mstore","nativeSrc":"6656:6:5","nodeType":"YulIdentifier","src":"6656:6:5"},"nativeSrc":"6656:51:5","nodeType":"YulFunctionCall","src":"6656:51:5"},"nativeSrc":"6656:51:5","nodeType":"YulExpressionStatement","src":"6656:51:5"},{"body":{"nativeSrc":"6816:67:5","nodeType":"YulBlock","src":"6816:67:5","statements":[{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"6845:6:5","nodeType":"YulIdentifier","src":"6845:6:5"},{"name":"newCapacity","nativeSrc":"6853:11:5","nodeType":"YulIdentifier","src":"6853:11:5"}],"functionName":{"name":"mstore","nativeSrc":"6838:6:5","nodeType":"YulIdentifier","src":"6838:6:5"},"nativeSrc":"6838:27:5","nodeType":"YulFunctionCall","src":"6838:27:5"},"nativeSrc":"6838:27:5","nodeType":"YulExpressionStatement","src":"6838:27:5"}]},"condition":{"arguments":[{"name":"newCapacity","nativeSrc":"6788:11:5","nodeType":"YulIdentifier","src":"6788:11:5"},{"arguments":[{"name":"bufptr","nativeSrc":"6807:6:5","nodeType":"YulIdentifier","src":"6807:6:5"}],"functionName":{"name":"mload","nativeSrc":"6801:5:5","nodeType":"YulIdentifier","src":"6801:5:5"},"nativeSrc":"6801:13:5","nodeType":"YulFunctionCall","src":"6801:13:5"}],"functionName":{"name":"gt","nativeSrc":"6785:2:5","nodeType":"YulIdentifier","src":"6785:2:5"},"nativeSrc":"6785:30:5","nodeType":"YulFunctionCall","src":"6785:30:5"},"nativeSrc":"6782:101:5","nodeType":"YulIf","src":"6782:101:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1053,"isOffset":false,"isSlot":false,"src":"6500:3:5","valueSize":1},{"declaration":1055,"isOffset":false,"isSlot":false,"src":"6701:4:5","valueSize":1},{"declaration":1089,"isOffset":false,"isSlot":false,"src":"6693:4:5","valueSize":1},{"declaration":1070,"isOffset":false,"isSlot":false,"src":"6627:11:5","valueSize":1},{"declaration":1070,"isOffset":false,"isSlot":false,"src":"6788:11:5","valueSize":1},{"declaration":1070,"isOffset":false,"isSlot":false,"src":"6853:11:5","valueSize":1}],"id":1109,"nodeType":"InlineAssembly","src":"6400:497:5"}]},{"expression":{"id":1111,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"6923:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1062,"id":1112,"nodeType":"Return","src":"6916:10:5"}]},"documentation":{"id":1050,"nodeType":"StructuredDocumentation","src":"5653:326:5","text":" @dev Appends len bytes of bytes32 to a buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to write (left-aligned).\n @return The original buffer, for chaining."},"id":1114,"implemented":true,"kind":"function","modifiers":[],"name":"append","nameLocation":"5993:6:5","nodeType":"FunctionDefinition","parameters":{"id":1058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"buf","nameLocation":"6014:3:5","nodeType":"VariableDeclaration","scope":1114,"src":"6000:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1052,"nodeType":"UserDefinedTypeName","pathNode":{"id":1051,"name":"buffer","nameLocations":["6000:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"6000:6:5"},"referencedDeclaration":795,"src":"6000:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"data","nameLocation":"6027:4:5","nodeType":"VariableDeclaration","scope":1114,"src":"6019:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1054,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6019:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"len","nameLocation":"6038:3:5","nodeType":"VariableDeclaration","scope":1114,"src":"6033:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1056,"name":"uint","nodeType":"ElementaryTypeName","src":"6033:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5999:43:5"},"returnParameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1061,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1114,"src":"6064:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1060,"nodeType":"UserDefinedTypeName","pathNode":{"id":1059,"name":"buffer","nameLocations":["6064:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"6064:6:5"},"referencedDeclaration":795,"src":"6064:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"6063:15:5"},"scope":1208,"src":"5984:949:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":1135,"nodeType":"Block","src":"7294:54:5","statements":[{"expression":{"arguments":[{"id":1127,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1118,"src":"7318:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"arguments":[{"id":1130,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"7331:4:5","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes20","typeString":"bytes20"}],"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7323:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7323:7:5","typeDescriptions":{}}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7323:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3230","id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:2:5","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"id":1126,"name":"append","nodeType":"Identifier","overloadedDeclarations":[988,1008,1114],"referencedDeclaration":1114,"src":"7311:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes32,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1125,"id":1134,"nodeType":"Return","src":"7304:37:5"}]},"documentation":{"id":1115,"nodeType":"StructuredDocumentation","src":"6939:256:5","text":" @dev Appends a bytes20 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chhaining."},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes20","nameLocation":"7209:13:5","nodeType":"FunctionDefinition","parameters":{"id":1121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"buf","nameLocation":"7237:3:5","nodeType":"VariableDeclaration","scope":1136,"src":"7223:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1117,"nodeType":"UserDefinedTypeName","pathNode":{"id":1116,"name":"buffer","nameLocations":["7223:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"7223:6:5"},"referencedDeclaration":795,"src":"7223:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"data","nameLocation":"7250:4:5","nodeType":"VariableDeclaration","scope":1136,"src":"7242:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":1119,"name":"bytes20","nodeType":"ElementaryTypeName","src":"7242:7:5","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"visibility":"internal"}],"src":"7222:33:5"},"returnParameters":{"id":1125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1136,"src":"7279:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1123,"nodeType":"UserDefinedTypeName","pathNode":{"id":1122,"name":"buffer","nameLocations":["7279:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"7279:6:5"},"referencedDeclaration":795,"src":"7279:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"7278:15:5"},"scope":1208,"src":"7200:148:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1154,"nodeType":"Block","src":"7708:45:5","statements":[{"expression":{"arguments":[{"id":1149,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1140,"src":"7732:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1150,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1142,"src":"7737:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3332","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7743:2:5","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":1148,"name":"append","nodeType":"Identifier","overloadedDeclarations":[988,1008,1114],"referencedDeclaration":1114,"src":"7725:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_bytes32_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes32,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7725:21:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1147,"id":1153,"nodeType":"Return","src":"7718:28:5"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"7354:255:5","text":" @dev Appends a bytes32 to the buffer. Resizes if doing so would exceed\n      the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @return The original buffer, for chaining."},"id":1155,"implemented":true,"kind":"function","modifiers":[],"name":"appendBytes32","nameLocation":"7623:13:5","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"buf","nameLocation":"7651:3:5","nodeType":"VariableDeclaration","scope":1155,"src":"7637:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1139,"nodeType":"UserDefinedTypeName","pathNode":{"id":1138,"name":"buffer","nameLocations":["7637:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"7637:6:5"},"referencedDeclaration":795,"src":"7637:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1142,"mutability":"mutable","name":"data","nameLocation":"7664:4:5","nodeType":"VariableDeclaration","scope":1155,"src":"7656:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7656:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7636:33:5"},"returnParameters":{"id":1147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1155,"src":"7693:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1145,"nodeType":"UserDefinedTypeName","pathNode":{"id":1144,"name":"buffer","nameLocations":["7693:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"7693:6:5"},"referencedDeclaration":795,"src":"7693:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"7692:15:5"},"scope":1208,"src":"7614:139:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1206,"nodeType":"Block","src":"8179:699:5","statements":[{"assignments":[1170],"declarations":[{"constant":false,"id":1170,"mutability":"mutable","name":"off","nameLocation":"8194:3:5","nodeType":"VariableDeclaration","scope":1206,"src":"8189:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1169,"name":"uint","nodeType":"ElementaryTypeName","src":"8189:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1174,"initialValue":{"expression":{"expression":{"id":1171,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"8200:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1172,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8204:3:5","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"8200:7:5","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8208:6:5","memberName":"length","nodeType":"MemberAccess","src":"8200:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8189:25:5"},{"assignments":[1176],"declarations":[{"constant":false,"id":1176,"mutability":"mutable","name":"newCapacity","nameLocation":"8229:11:5","nodeType":"VariableDeclaration","scope":1206,"src":"8224:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1175,"name":"uint","nodeType":"ElementaryTypeName","src":"8224:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1180,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1177,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"8243:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1178,"name":"off","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1170,"src":"8249:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8243:9:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8224:28:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1181,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"8266:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1182,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"8280:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1183,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8284:8:5","memberName":"capacity","nodeType":"MemberAccess","referencedDeclaration":794,"src":"8280:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8266:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1193,"nodeType":"IfStatement","src":"8262:85:5","trueBody":{"id":1192,"nodeType":"Block","src":"8294:53:5","statements":[{"expression":{"arguments":[{"id":1186,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"8315:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"newCapacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"8320:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":1188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8334:1:5","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8320:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1185,"name":"resize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"8308:6:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct Buffer.buffer memory,uint256) pure"}},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8308:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1191,"nodeType":"ExpressionStatement","src":"8308:28:5"}]}},{"assignments":[1195],"declarations":[{"constant":false,"id":1195,"mutability":"mutable","name":"mask","nameLocation":"8362:4:5","nodeType":"VariableDeclaration","scope":1206,"src":"8357:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1194,"name":"uint","nodeType":"ElementaryTypeName","src":"8357:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1202,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8370:3:5","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1197,"name":"len","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1163,"src":"8377:3:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8370:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8369:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8384:1:5","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8369:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8357:28:5"},{"AST":{"nativeSrc":"8404:448:5","nodeType":"YulBlock","src":"8404:448:5","statements":[{"nativeSrc":"8467:24:5","nodeType":"YulVariableDeclaration","src":"8467:24:5","value":{"arguments":[{"name":"buf","nativeSrc":"8487:3:5","nodeType":"YulIdentifier","src":"8487:3:5"}],"functionName":{"name":"mload","nativeSrc":"8481:5:5","nodeType":"YulIdentifier","src":"8481:5:5"},"nativeSrc":"8481:10:5","nodeType":"YulFunctionCall","src":"8481:10:5"},"variables":[{"name":"bufptr","nativeSrc":"8471:6:5","nodeType":"YulTypedName","src":"8471:6:5","type":""}]},{"nativeSrc":"8582:36:5","nodeType":"YulVariableDeclaration","src":"8582:36:5","value":{"arguments":[{"name":"bufptr","nativeSrc":"8598:6:5","nodeType":"YulIdentifier","src":"8598:6:5"},{"name":"newCapacity","nativeSrc":"8606:11:5","nodeType":"YulIdentifier","src":"8606:11:5"}],"functionName":{"name":"add","nativeSrc":"8594:3:5","nodeType":"YulIdentifier","src":"8594:3:5"},"nativeSrc":"8594:24:5","nodeType":"YulFunctionCall","src":"8594:24:5"},"variables":[{"name":"dest","nativeSrc":"8586:4:5","nodeType":"YulTypedName","src":"8586:4:5","type":""}]},{"expression":{"arguments":[{"name":"dest","nativeSrc":"8638:4:5","nodeType":"YulIdentifier","src":"8638:4:5"},{"arguments":[{"arguments":[{"arguments":[{"name":"dest","nativeSrc":"8657:4:5","nodeType":"YulIdentifier","src":"8657:4:5"}],"functionName":{"name":"mload","nativeSrc":"8651:5:5","nodeType":"YulIdentifier","src":"8651:5:5"},"nativeSrc":"8651:11:5","nodeType":"YulFunctionCall","src":"8651:11:5"},{"arguments":[{"name":"mask","nativeSrc":"8668:4:5","nodeType":"YulIdentifier","src":"8668:4:5"}],"functionName":{"name":"not","nativeSrc":"8664:3:5","nodeType":"YulIdentifier","src":"8664:3:5"},"nativeSrc":"8664:9:5","nodeType":"YulFunctionCall","src":"8664:9:5"}],"functionName":{"name":"and","nativeSrc":"8647:3:5","nodeType":"YulIdentifier","src":"8647:3:5"},"nativeSrc":"8647:27:5","nodeType":"YulFunctionCall","src":"8647:27:5"},{"name":"data","nativeSrc":"8676:4:5","nodeType":"YulIdentifier","src":"8676:4:5"}],"functionName":{"name":"or","nativeSrc":"8644:2:5","nodeType":"YulIdentifier","src":"8644:2:5"},"nativeSrc":"8644:37:5","nodeType":"YulFunctionCall","src":"8644:37:5"}],"functionName":{"name":"mstore","nativeSrc":"8631:6:5","nodeType":"YulIdentifier","src":"8631:6:5"},"nativeSrc":"8631:51:5","nodeType":"YulFunctionCall","src":"8631:51:5"},"nativeSrc":"8631:51:5","nodeType":"YulExpressionStatement","src":"8631:51:5"},{"body":{"nativeSrc":"8783:59:5","nodeType":"YulBlock","src":"8783:59:5","statements":[{"expression":{"arguments":[{"name":"bufptr","nativeSrc":"8808:6:5","nodeType":"YulIdentifier","src":"8808:6:5"},{"name":"newCapacity","nativeSrc":"8816:11:5","nodeType":"YulIdentifier","src":"8816:11:5"}],"functionName":{"name":"mstore","nativeSrc":"8801:6:5","nodeType":"YulIdentifier","src":"8801:6:5"},"nativeSrc":"8801:27:5","nodeType":"YulFunctionCall","src":"8801:27:5"},"nativeSrc":"8801:27:5","nodeType":"YulExpressionStatement","src":"8801:27:5"}]},"condition":{"arguments":[{"name":"newCapacity","nativeSrc":"8755:11:5","nodeType":"YulIdentifier","src":"8755:11:5"},{"arguments":[{"name":"bufptr","nativeSrc":"8774:6:5","nodeType":"YulIdentifier","src":"8774:6:5"}],"functionName":{"name":"mload","nativeSrc":"8768:5:5","nodeType":"YulIdentifier","src":"8768:5:5"},"nativeSrc":"8768:13:5","nodeType":"YulFunctionCall","src":"8768:13:5"}],"functionName":{"name":"gt","nativeSrc":"8752:2:5","nodeType":"YulIdentifier","src":"8752:2:5"},"nativeSrc":"8752:30:5","nodeType":"YulFunctionCall","src":"8752:30:5"},"nativeSrc":"8749:93:5","nodeType":"YulIf","src":"8749:93:5"}]},"evmVersion":"paris","externalReferences":[{"declaration":1159,"isOffset":false,"isSlot":false,"src":"8487:3:5","valueSize":1},{"declaration":1161,"isOffset":false,"isSlot":false,"src":"8676:4:5","valueSize":1},{"declaration":1195,"isOffset":false,"isSlot":false,"src":"8668:4:5","valueSize":1},{"declaration":1176,"isOffset":false,"isSlot":false,"src":"8606:11:5","valueSize":1},{"declaration":1176,"isOffset":false,"isSlot":false,"src":"8755:11:5","valueSize":1},{"declaration":1176,"isOffset":false,"isSlot":false,"src":"8816:11:5","valueSize":1}],"id":1203,"nodeType":"InlineAssembly","src":"8395:457:5"},{"expression":{"id":1204,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"8868:3:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"functionReturnParameters":1168,"id":1205,"nodeType":"Return","src":"8861:10:5"}]},"documentation":{"id":1156,"nodeType":"StructuredDocumentation","src":"7759:319:5","text":" @dev Appends a byte to the end of the buffer. Resizes if doing so would\n      exceed the capacity of the buffer.\n @param buf The buffer to append to.\n @param data The data to append.\n @param len The number of bytes to write (right-aligned).\n @return The original buffer."},"id":1207,"implemented":true,"kind":"function","modifiers":[],"name":"appendInt","nameLocation":"8092:9:5","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1159,"mutability":"mutable","name":"buf","nameLocation":"8116:3:5","nodeType":"VariableDeclaration","scope":1207,"src":"8102:17:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1158,"nodeType":"UserDefinedTypeName","pathNode":{"id":1157,"name":"buffer","nameLocations":["8102:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"8102:6:5"},"referencedDeclaration":795,"src":"8102:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1161,"mutability":"mutable","name":"data","nameLocation":"8126:4:5","nodeType":"VariableDeclaration","scope":1207,"src":"8121:9:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1160,"name":"uint","nodeType":"ElementaryTypeName","src":"8121:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"len","nameLocation":"8137:3:5","nodeType":"VariableDeclaration","scope":1207,"src":"8132:8:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint","nodeType":"ElementaryTypeName","src":"8132:4:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8101:40:5"},"returnParameters":{"id":1168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1207,"src":"8164:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1166,"nodeType":"UserDefinedTypeName","pathNode":{"id":1165,"name":"buffer","nameLocations":["8164:6:5"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"8164:6:5"},"referencedDeclaration":795,"src":"8164:6:5","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"}],"src":"8163:15:5"},"scope":1208,"src":"8083:795:5","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1209,"src":"445:8435:5","usedErrors":[],"usedEvents":[]}],"src":"41:8839:5"},"id":5},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol","exportedSymbols":{"Buffer":[1208],"CBOR":[2067]},"id":2068,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1210,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:6"},{"absolutePath":"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol","file":"../../@ensdomains/buffer/v0.1.0/Buffer.sol","id":1211,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2068,"sourceUnit":1209,"src":"57:52:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"CBOR","contractDependencies":[],"contractKind":"library","documentation":{"id":1212,"nodeType":"StructuredDocumentation","src":"111:553:6","text":" @dev A library for populating CBOR encoded payload in Solidity.\n https://datatracker.ietf.org/doc/html/rfc7049\n The library offers various write* and start* methods to encode values of different types.\n The resulted buffer can be obtained with data() method.\n Encoding of primitive types is staightforward, whereas encoding of sequences can result\n in an invalid CBOR if start/write/end flow is violated.\n For the purpose of gas saving, the library does not verify start/write/end flow internally,\n except for nested start/end pairs."},"fullyImplemented":true,"id":2067,"linearizedBaseContracts":[2067],"name":"CBOR","nameLocation":"674:4:6","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1216,"libraryName":{"id":1213,"name":"Buffer","nameLocations":["691:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":1208,"src":"691:6:6"},"nodeType":"UsingForDirective","src":"685:31:6","typeName":{"id":1215,"nodeType":"UserDefinedTypeName","pathNode":{"id":1214,"name":"Buffer.buffer","nameLocations":["702:6:6","709:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"702:13:6"},"referencedDeclaration":795,"src":"702:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}}},{"canonicalName":"CBOR.CBORBuffer","id":1222,"members":[{"constant":false,"id":1219,"mutability":"mutable","name":"buf","nameLocation":"764:3:6","nodeType":"VariableDeclaration","scope":1222,"src":"750:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"},"typeName":{"id":1218,"nodeType":"UserDefinedTypeName","pathNode":{"id":1217,"name":"Buffer.buffer","nameLocations":["750:6:6","757:6:6"],"nodeType":"IdentifierPath","referencedDeclaration":795,"src":"750:13:6"},"referencedDeclaration":795,"src":"750:13:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_storage_ptr","typeString":"struct Buffer.buffer"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"depth","nameLocation":"785:5:6","nodeType":"VariableDeclaration","scope":1222,"src":"777:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"777:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"CBORBuffer","nameLocation":"729:10:6","nodeType":"StructDefinition","scope":2067,"src":"722:75:6","visibility":"public"},{"constant":true,"id":1225,"mutability":"constant","name":"MAJOR_TYPE_INT","nameLocation":"826:14:6","nodeType":"VariableDeclaration","scope":2067,"src":"803:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1223,"name":"uint8","nodeType":"ElementaryTypeName","src":"803:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"30","id":1224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"843:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"visibility":"private"},{"constant":true,"id":1228,"mutability":"constant","name":"MAJOR_TYPE_NEGATIVE_INT","nameLocation":"873:23:6","nodeType":"VariableDeclaration","scope":2067,"src":"850:50:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1226,"name":"uint8","nodeType":"ElementaryTypeName","src":"850:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"899:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1231,"mutability":"constant","name":"MAJOR_TYPE_BYTES","nameLocation":"929:16:6","nodeType":"VariableDeclaration","scope":2067,"src":"906:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1229,"name":"uint8","nodeType":"ElementaryTypeName","src":"906:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"948:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1234,"mutability":"constant","name":"MAJOR_TYPE_STRING","nameLocation":"978:17:6","nodeType":"VariableDeclaration","scope":2067,"src":"955:44:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1232,"name":"uint8","nodeType":"ElementaryTypeName","src":"955:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"998:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":1237,"mutability":"constant","name":"MAJOR_TYPE_ARRAY","nameLocation":"1028:16:6","nodeType":"VariableDeclaration","scope":2067,"src":"1005:43:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1235,"name":"uint8","nodeType":"ElementaryTypeName","src":"1005:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"34","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1047:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"private"},{"constant":true,"id":1240,"mutability":"constant","name":"MAJOR_TYPE_MAP","nameLocation":"1077:14:6","nodeType":"VariableDeclaration","scope":2067,"src":"1054:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1238,"name":"uint8","nodeType":"ElementaryTypeName","src":"1054:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"35","id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1094:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"visibility":"private"},{"constant":true,"id":1243,"mutability":"constant","name":"MAJOR_TYPE_TAG","nameLocation":"1124:14:6","nodeType":"VariableDeclaration","scope":2067,"src":"1101:41:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1241,"name":"uint8","nodeType":"ElementaryTypeName","src":"1101:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"36","id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1141:1:6","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"visibility":"private"},{"constant":true,"id":1246,"mutability":"constant","name":"MAJOR_TYPE_CONTENT_FREE","nameLocation":"1171:23:6","nodeType":"VariableDeclaration","scope":2067,"src":"1148:50:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1244,"name":"uint8","nodeType":"ElementaryTypeName","src":"1148:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"37","id":1245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1197:1:6","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"visibility":"private"},{"constant":true,"id":1249,"mutability":"constant","name":"TAG_TYPE_BIGNUM","nameLocation":"1228:15:6","nodeType":"VariableDeclaration","scope":2067,"src":"1205:42:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1247,"name":"uint8","nodeType":"ElementaryTypeName","src":"1205:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":1248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1246:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":true,"id":1252,"mutability":"constant","name":"TAG_TYPE_NEGATIVE_BIGNUM","nameLocation":"1276:24:6","nodeType":"VariableDeclaration","scope":2067,"src":"1253:51:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1250,"name":"uint8","nodeType":"ElementaryTypeName","src":"1253:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"33","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1303:1:6","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":1255,"mutability":"constant","name":"CBOR_FALSE","nameLocation":"1334:10:6","nodeType":"VariableDeclaration","scope":2067,"src":"1311:38:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1253,"name":"uint8","nodeType":"ElementaryTypeName","src":"1311:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1347:2:6","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1258,"mutability":"constant","name":"CBOR_TRUE","nameLocation":"1378:9:6","nodeType":"VariableDeclaration","scope":2067,"src":"1355:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1256,"name":"uint8","nodeType":"ElementaryTypeName","src":"1355:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3231","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:2:6","typeDescriptions":{"typeIdentifier":"t_rational_21_by_1","typeString":"int_const 21"},"value":"21"},"visibility":"private"},{"constant":true,"id":1261,"mutability":"constant","name":"CBOR_NULL","nameLocation":"1421:9:6","nodeType":"VariableDeclaration","scope":2067,"src":"1398:37:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1259,"name":"uint8","nodeType":"ElementaryTypeName","src":"1398:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3232","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1433:2:6","typeDescriptions":{"typeIdentifier":"t_rational_22_by_1","typeString":"int_const 22"},"value":"22"},"visibility":"private"},{"constant":true,"id":1264,"mutability":"constant","name":"CBOR_UNDEFINED","nameLocation":"1464:14:6","nodeType":"VariableDeclaration","scope":2067,"src":"1441:42:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1262,"name":"uint8","nodeType":"ElementaryTypeName","src":"1441:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3233","id":1263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1481:2:6","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"visibility":"private"},{"body":{"id":1288,"nodeType":"Block","src":"1570:93:6","statements":[{"expression":{"arguments":[{"expression":{"id":1275,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1592:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1276,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1597:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"1592:8:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},{"id":1277,"name":"capacity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"1602:8:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1272,"name":"Buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"1580:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Buffer_$1208_$","typeString":"type(library Buffer)"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1587:4:6","memberName":"init","nodeType":"MemberAccess","referencedDeclaration":833,"src":"1580:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1580:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1279,"nodeType":"ExpressionStatement","src":"1580:31:6"},{"expression":{"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1280,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1621:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1282,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1626:5:6","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"1621:10:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1634:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1621:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1285,"nodeType":"ExpressionStatement","src":"1621:14:6"},{"expression":{"id":1286,"name":"cbor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1270,"src":"1652:4:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"functionReturnParameters":1271,"id":1287,"nodeType":"Return","src":"1645:11:6"}]},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"create","nameLocation":"1499:6:6","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"capacity","nameLocation":"1514:8:6","nodeType":"VariableDeclaration","scope":1289,"src":"1506:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"1506:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1505:18:6"},"returnParameters":{"id":1271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1270,"mutability":"mutable","name":"cbor","nameLocation":"1564:4:6","nodeType":"VariableDeclaration","scope":1289,"src":"1546:22:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1269,"nodeType":"UserDefinedTypeName","pathNode":{"id":1268,"name":"CBORBuffer","nameLocations":["1546:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1546:10:6"},"referencedDeclaration":1222,"src":"1546:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"1545:24:6"},"scope":2067,"src":"1490:173:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1309,"nodeType":"Block","src":"1742:84:6","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1298,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"1760:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1764:5:6","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"1760:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1773:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1760:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c69642043424f52","id":1302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1776:14:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_fd61d0da58dad259aa66f3fa1a93613cc3b690958f0ccf5500de84dec9fbf234","typeString":"literal_string \"Invalid CBOR\""},"value":"Invalid CBOR"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fd61d0da58dad259aa66f3fa1a93613cc3b690958f0ccf5500de84dec9fbf234","typeString":"literal_string \"Invalid CBOR\""}],"id":1297,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1752:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1752:39:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"ExpressionStatement","src":"1752:39:6"},{"expression":{"expression":{"expression":{"id":1305,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"1808:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1812:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"1808:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1307,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1816:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":792,"src":"1808:11:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1296,"id":1308,"nodeType":"Return","src":"1801:18:6"}]},"id":1310,"implemented":true,"kind":"function","modifiers":[],"name":"data","nameLocation":"1678:4:6","nodeType":"FunctionDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"buf","nameLocation":"1701:3:6","nodeType":"VariableDeclaration","scope":1310,"src":"1683:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1291,"nodeType":"UserDefinedTypeName","pathNode":{"id":1290,"name":"CBORBuffer","nameLocations":["1683:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1683:10:6"},"referencedDeclaration":1222,"src":"1683:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"1682:23:6"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1310,"src":"1728:12:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1294,"name":"bytes","nodeType":"ElementaryTypeName","src":"1728:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1727:14:6"},"scope":2067,"src":"1669:157:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1342,"nodeType":"Block","src":"1906:128:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1325,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"1943:14:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1961:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1943:19:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1942:21:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1329,"name":"TAG_TYPE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"1966:15:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"1942:39:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1936:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1323,"name":"uint8","nodeType":"ElementaryTypeName","src":"1936:5:6","typeDescriptions":{}}},"id":1331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1936:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1318,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"1916:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1321,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1920:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"1916:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1924:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"1916:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1916:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1333,"nodeType":"ExpressionStatement","src":"1916:67:6"},{"expression":{"arguments":[{"id":1335,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1313,"src":"2004:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"id":1338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"2020:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1336,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2009:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2013:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2009:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2009:17:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1334,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"1993:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1993:34:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"ExpressionStatement","src":"1993:34:6"}]},"id":1343,"implemented":true,"kind":"function","modifiers":[],"name":"writeUInt256","nameLocation":"1841:12:6","nodeType":"FunctionDefinition","parameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"mutability":"mutable","name":"buf","nameLocation":"1872:3:6","nodeType":"VariableDeclaration","scope":1343,"src":"1854:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1312,"nodeType":"UserDefinedTypeName","pathNode":{"id":1311,"name":"CBORBuffer","nameLocations":["1854:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"1854:10:6"},"referencedDeclaration":1222,"src":"1854:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"value","nameLocation":"1885:5:6","nodeType":"VariableDeclaration","scope":1343,"src":"1877:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1314,"name":"uint256","nodeType":"ElementaryTypeName","src":"1877:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1853:38:6"},"returnParameters":{"id":1317,"nodeType":"ParameterList","parameters":[],"src":"1906:0:6"},"scope":2067,"src":"1832:202:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1395,"nodeType":"Block","src":"2112:288:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"2126:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2134:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2126:9:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1393,"nodeType":"Block","src":"2336:58:6","statements":[{"expression":{"arguments":[{"id":1386,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"2363:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"id":1389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"2376:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2368:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1387,"name":"uint256","nodeType":"ElementaryTypeName","src":"2368:7:6","typeDescriptions":{}}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2368:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1385,"name":"writeUInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"2350:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2350:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1392,"nodeType":"ExpressionStatement","src":"2350:33:6"}]},"id":1394,"nodeType":"IfStatement","src":"2122:272:6","trueBody":{"id":1384,"nodeType":"Block","src":"2137:193:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":1361,"name":"MAJOR_TYPE_TAG","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"2195:14:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2213:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"2195:19:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1364,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2194:21:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1365,"name":"TAG_TYPE_NEGATIVE_BIGNUM","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2218:24:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"2194:48:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2188:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1359,"name":"uint8","nodeType":"ElementaryTypeName","src":"2188:5:6","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2188:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1354,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"2151:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2155:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"2151:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1358,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2159:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"2151:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2151:106:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1369,"nodeType":"ExpressionStatement","src":"2151:106:6"},{"expression":{"arguments":[{"id":1371,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1346,"src":"2282:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2306:2:6","subExpression":{"hexValue":"31","id":1376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2307:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1378,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1348,"src":"2311:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2306:10:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2298:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2298:7:6","typeDescriptions":{}}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2298:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1372,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2287:3:6","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2291:6:6","memberName":"encode","nodeType":"MemberAccess","src":"2287:10:6","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2287:31:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1370,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2271:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2271:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"2271:48:6"}]}}]},"id":1396,"implemented":true,"kind":"function","modifiers":[],"name":"writeInt256","nameLocation":"2049:11:6","nodeType":"FunctionDefinition","parameters":{"id":1349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1346,"mutability":"mutable","name":"buf","nameLocation":"2079:3:6","nodeType":"VariableDeclaration","scope":1396,"src":"2061:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1345,"nodeType":"UserDefinedTypeName","pathNode":{"id":1344,"name":"CBORBuffer","nameLocations":["2061:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2061:10:6"},"referencedDeclaration":1222,"src":"2061:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1348,"mutability":"mutable","name":"value","nameLocation":"2091:5:6","nodeType":"VariableDeclaration","scope":1396,"src":"2084:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1347,"name":"int256","nodeType":"ElementaryTypeName","src":"2084:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2060:37:6"},"returnParameters":{"id":1350,"nodeType":"ParameterList","parameters":[],"src":"2112:0:6"},"scope":2067,"src":"2040:360:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1410,"nodeType":"Block","src":"2478:62:6","statements":[{"expression":{"arguments":[{"id":1405,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"2506:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1406,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2511:14:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1401,"src":"2527:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1404,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2488:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2488:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"2488:45:6"}]},"id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"writeUInt64","nameLocation":"2415:11:6","nodeType":"FunctionDefinition","parameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"buf","nameLocation":"2445:3:6","nodeType":"VariableDeclaration","scope":1411,"src":"2427:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1398,"nodeType":"UserDefinedTypeName","pathNode":{"id":1397,"name":"CBORBuffer","nameLocations":["2427:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2427:10:6"},"referencedDeclaration":1222,"src":"2427:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1401,"mutability":"mutable","name":"value","nameLocation":"2457:5:6","nodeType":"VariableDeclaration","scope":1411,"src":"2450:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1400,"name":"uint64","nodeType":"ElementaryTypeName","src":"2450:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2426:37:6"},"returnParameters":{"id":1403,"nodeType":"ParameterList","parameters":[],"src":"2478:0:6"},"scope":2067,"src":"2406:134:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1446,"nodeType":"Block","src":"2616:206:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2629:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2638:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2629:10:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1444,"nodeType":"Block","src":"2724:92:6","statements":[{"expression":{"arguments":[{"id":1433,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"2756:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1434,"name":"MAJOR_TYPE_NEGATIVE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1228,"src":"2761:23:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"commonType":{"typeIdentifier":"t_int64","typeString":"int64"},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"2793:2:6","subExpression":{"hexValue":"31","id":1437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2794:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_1_by_1","typeString":"int_const -1"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2798:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"2793:10:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2786:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1435,"name":"uint64","nodeType":"ElementaryTypeName","src":"2786:6:6","typeDescriptions":{}}},"id":1441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2786:18:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1432,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2738:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:67:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1443,"nodeType":"ExpressionStatement","src":"2738:67:6"}]},"id":1445,"nodeType":"IfStatement","src":"2626:190:6","trueBody":{"id":1431,"nodeType":"Block","src":"2641:78:6","statements":[{"expression":{"arguments":[{"id":1423,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1414,"src":"2673:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1424,"name":"MAJOR_TYPE_INT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"2678:14:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"id":1427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1416,"src":"2701:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int64","typeString":"int64"}],"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2694:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1425,"name":"uint64","nodeType":"ElementaryTypeName","src":"2694:6:6","typeDescriptions":{}}},"id":1428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2694:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1422,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2655:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"2655:53:6"}]}}]},"id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"writeInt64","nameLocation":"2555:10:6","nodeType":"FunctionDefinition","parameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"buf","nameLocation":"2584:3:6","nodeType":"VariableDeclaration","scope":1447,"src":"2566:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1413,"nodeType":"UserDefinedTypeName","pathNode":{"id":1412,"name":"CBORBuffer","nameLocations":["2566:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2566:10:6"},"referencedDeclaration":1222,"src":"2566:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1416,"mutability":"mutable","name":"value","nameLocation":"2595:5:6","nodeType":"VariableDeclaration","scope":1447,"src":"2589:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1415,"name":"int64","nodeType":"ElementaryTypeName","src":"2589:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"2565:36:6"},"returnParameters":{"id":1418,"nodeType":"ParameterList","parameters":[],"src":"2616:0:6"},"scope":2067,"src":"2546:276:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1473,"nodeType":"Block","src":"2905:110:6","statements":[{"expression":{"arguments":[{"id":1456,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"2933:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1457,"name":"MAJOR_TYPE_BYTES","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1231,"src":"2938:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"id":1460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"2963:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2969:6:6","memberName":"length","nodeType":"MemberAccess","src":"2963:12:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2956:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1458,"name":"uint64","nodeType":"ElementaryTypeName","src":"2956:6:6","typeDescriptions":{}}},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2956:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1455,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"2915:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:62:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1464,"nodeType":"ExpressionStatement","src":"2915:62:6"},{"expression":{"arguments":[{"id":1470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"3002:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1465,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"2987:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1468,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2991:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"2987:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2995:6:6","memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1008,"src":"2987:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":1471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2987:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1472,"nodeType":"ExpressionStatement","src":"2987:21:6"}]},"id":1474,"implemented":true,"kind":"function","modifiers":[],"name":"writeBytes","nameLocation":"2837:10:6","nodeType":"FunctionDefinition","parameters":{"id":1453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"buf","nameLocation":"2866:3:6","nodeType":"VariableDeclaration","scope":1474,"src":"2848:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1449,"nodeType":"UserDefinedTypeName","pathNode":{"id":1448,"name":"CBORBuffer","nameLocations":["2848:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"2848:10:6"},"referencedDeclaration":1222,"src":"2848:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"value","nameLocation":"2884:5:6","nodeType":"VariableDeclaration","scope":1474,"src":"2871:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1451,"name":"bytes","nodeType":"ElementaryTypeName","src":"2871:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2847:43:6"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[],"src":"2905:0:6"},"scope":2067,"src":"2828:187:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1506,"nodeType":"Block","src":"3100:125:6","statements":[{"expression":{"arguments":[{"id":1483,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"3128:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1484,"name":"MAJOR_TYPE_STRING","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1234,"src":"3133:17:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"arguments":[{"expression":{"arguments":[{"id":1489,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3165:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1488,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3159:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1487,"name":"bytes","nodeType":"ElementaryTypeName","src":"3159:5:6","typeDescriptions":{}}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3159:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3172:6:6","memberName":"length","nodeType":"MemberAccess","src":"3159:19:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3152:6:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":1485,"name":"uint64","nodeType":"ElementaryTypeName","src":"3152:6:6","typeDescriptions":{}}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3152:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1482,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"3110:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3110:70:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1494,"nodeType":"ExpressionStatement","src":"3110:70:6"},{"expression":{"arguments":[{"arguments":[{"id":1502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"3211:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3205:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1500,"name":"bytes","nodeType":"ElementaryTypeName","src":"3205:5:6","typeDescriptions":{}}},"id":1503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3205:12:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"expression":{"id":1495,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1477,"src":"3190:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3194:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"3190:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1499,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3198:6:6","memberName":"append","nodeType":"MemberAccess","referencedDeclaration":1008,"src":"3190:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,bytes memory) pure returns (struct Buffer.buffer memory)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3190:28:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1505,"nodeType":"ExpressionStatement","src":"3190:28:6"}]},"id":1507,"implemented":true,"kind":"function","modifiers":[],"name":"writeString","nameLocation":"3030:11:6","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1477,"mutability":"mutable","name":"buf","nameLocation":"3060:3:6","nodeType":"VariableDeclaration","scope":1507,"src":"3042:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1476,"nodeType":"UserDefinedTypeName","pathNode":{"id":1475,"name":"CBORBuffer","nameLocations":["3042:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3042:10:6"},"referencedDeclaration":1222,"src":"3042:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1479,"mutability":"mutable","name":"value","nameLocation":"3079:5:6","nodeType":"VariableDeclaration","scope":1507,"src":"3065:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1478,"name":"string","nodeType":"ElementaryTypeName","src":"3065:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3041:44:6"},"returnParameters":{"id":1481,"nodeType":"ParameterList","parameters":[],"src":"3100:0:6"},"scope":2067,"src":"3021:204:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1523,"nodeType":"Block","src":"3299:70:6","statements":[{"expression":{"arguments":[{"id":1516,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"3326:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"condition":{"id":1517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"3331:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1519,"name":"CBOR_FALSE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"3351:10:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3331:30:6","trueExpression":{"id":1518,"name":"CBOR_TRUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1258,"src":"3339:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1515,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"3309:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3309:53:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1522,"nodeType":"ExpressionStatement","src":"3309:53:6"}]},"id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"writeBool","nameLocation":"3240:9:6","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"buf","nameLocation":"3268:3:6","nodeType":"VariableDeclaration","scope":1524,"src":"3250:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1509,"nodeType":"UserDefinedTypeName","pathNode":{"id":1508,"name":"CBORBuffer","nameLocations":["3250:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3250:10:6"},"referencedDeclaration":1222,"src":"3250:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"value","nameLocation":"3278:5:6","nodeType":"VariableDeclaration","scope":1524,"src":"3273:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1511,"name":"bool","nodeType":"ElementaryTypeName","src":"3273:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3249:35:6"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[],"src":"3299:0:6"},"scope":2067,"src":"3231:138:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"3431:49:6","statements":[{"expression":{"arguments":[{"id":1531,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1527,"src":"3458:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1532,"name":"CBOR_NULL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"3463:9:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1530,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"3441:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:32:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1534,"nodeType":"ExpressionStatement","src":"3441:32:6"}]},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"writeNull","nameLocation":"3384:9:6","nodeType":"FunctionDefinition","parameters":{"id":1528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1527,"mutability":"mutable","name":"buf","nameLocation":"3412:3:6","nodeType":"VariableDeclaration","scope":1536,"src":"3394:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1526,"nodeType":"UserDefinedTypeName","pathNode":{"id":1525,"name":"CBORBuffer","nameLocations":["3394:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3394:10:6"},"referencedDeclaration":1222,"src":"3394:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3393:23:6"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[],"src":"3431:0:6"},"scope":2067,"src":"3375:105:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1547,"nodeType":"Block","src":"3547:54:6","statements":[{"expression":{"arguments":[{"id":1543,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"3574:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1544,"name":"CBOR_UNDEFINED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1264,"src":"3579:14:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1542,"name":"writeContentFree","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2066,"src":"3557:16:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3557:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1546,"nodeType":"ExpressionStatement","src":"3557:37:6"}]},"id":1548,"implemented":true,"kind":"function","modifiers":[],"name":"writeUndefined","nameLocation":"3495:14:6","nodeType":"FunctionDefinition","parameters":{"id":1540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"buf","nameLocation":"3528:3:6","nodeType":"VariableDeclaration","scope":1548,"src":"3510:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1538,"nodeType":"UserDefinedTypeName","pathNode":{"id":1537,"name":"CBORBuffer","nameLocations":["3510:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3510:10:6"},"referencedDeclaration":1222,"src":"3510:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3509:23:6"},"returnParameters":{"id":1541,"nodeType":"ParameterList","parameters":[],"src":"3547:0:6"},"scope":2067,"src":"3486:115:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1565,"nodeType":"Block","src":"3664:89:6","statements":[{"expression":{"arguments":[{"id":1555,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3700:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1556,"name":"MAJOR_TYPE_ARRAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"3705:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1554,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3674:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3674:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1558,"nodeType":"ExpressionStatement","src":"3674:48:6"},{"expression":{"id":1563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1559,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"3732:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3736:5:6","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"3732:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3745:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3732:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1564,"nodeType":"ExpressionStatement","src":"3732:14:6"}]},"id":1566,"implemented":true,"kind":"function","modifiers":[],"name":"startArray","nameLocation":"3616:10:6","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"buf","nameLocation":"3645:3:6","nodeType":"VariableDeclaration","scope":1566,"src":"3627:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1550,"nodeType":"UserDefinedTypeName","pathNode":{"id":1549,"name":"CBORBuffer","nameLocations":["3627:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3627:10:6"},"referencedDeclaration":1222,"src":"3627:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3626:23:6"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"3664:0:6"},"scope":2067,"src":"3607:146:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1580,"nodeType":"Block","src":"3836:71:6","statements":[{"expression":{"arguments":[{"id":1575,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"3870:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1576,"name":"MAJOR_TYPE_ARRAY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1237,"src":"3875:16:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1577,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"3893:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1574,"name":"writeDefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3846:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:54:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1579,"nodeType":"ExpressionStatement","src":"3846:54:6"}]},"id":1581,"implemented":true,"kind":"function","modifiers":[],"name":"startFixedArray","nameLocation":"3768:15:6","nodeType":"FunctionDefinition","parameters":{"id":1572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"buf","nameLocation":"3802:3:6","nodeType":"VariableDeclaration","scope":1581,"src":"3784:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1568,"nodeType":"UserDefinedTypeName","pathNode":{"id":1567,"name":"CBORBuffer","nameLocations":["3784:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3784:10:6"},"referencedDeclaration":1222,"src":"3784:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"length","nameLocation":"3814:6:6","nodeType":"VariableDeclaration","scope":1581,"src":"3807:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1570,"name":"uint64","nodeType":"ElementaryTypeName","src":"3807:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3783:38:6"},"returnParameters":{"id":1573,"nodeType":"ParameterList","parameters":[],"src":"3836:0:6"},"scope":2067,"src":"3759:148:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1598,"nodeType":"Block","src":"3968:87:6","statements":[{"expression":{"arguments":[{"id":1588,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"4004:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1589,"name":"MAJOR_TYPE_MAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4009:14:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1587,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"3978:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3978:46:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1591,"nodeType":"ExpressionStatement","src":"3978:46:6"},{"expression":{"id":1596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1592,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1584,"src":"4034:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4038:5:6","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"4034:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4047:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4034:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1597,"nodeType":"ExpressionStatement","src":"4034:14:6"}]},"id":1599,"implemented":true,"kind":"function","modifiers":[],"name":"startMap","nameLocation":"3922:8:6","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1584,"mutability":"mutable","name":"buf","nameLocation":"3949:3:6","nodeType":"VariableDeclaration","scope":1599,"src":"3931:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1583,"nodeType":"UserDefinedTypeName","pathNode":{"id":1582,"name":"CBORBuffer","nameLocations":["3931:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"3931:10:6"},"referencedDeclaration":1222,"src":"3931:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"3930:23:6"},"returnParameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"3968:0:6"},"scope":2067,"src":"3913:142:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1613,"nodeType":"Block","src":"4136:69:6","statements":[{"expression":{"arguments":[{"id":1608,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"4170:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1609,"name":"MAJOR_TYPE_MAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"4175:14:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1610,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"4191:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1607,"name":"writeDefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"4146:23:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4146:52:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1612,"nodeType":"ExpressionStatement","src":"4146:52:6"}]},"id":1614,"implemented":true,"kind":"function","modifiers":[],"name":"startFixedMap","nameLocation":"4070:13:6","nodeType":"FunctionDefinition","parameters":{"id":1605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"buf","nameLocation":"4102:3:6","nodeType":"VariableDeclaration","scope":1614,"src":"4084:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1601,"nodeType":"UserDefinedTypeName","pathNode":{"id":1600,"name":"CBORBuffer","nameLocations":["4084:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"4084:10:6"},"referencedDeclaration":1222,"src":"4084:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1604,"mutability":"mutable","name":"length","nameLocation":"4114:6:6","nodeType":"VariableDeclaration","scope":1614,"src":"4107:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1603,"name":"uint64","nodeType":"ElementaryTypeName","src":"4107:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4083:38:6"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[],"src":"4136:0:6"},"scope":2067,"src":"4061:144:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1631,"nodeType":"Block","src":"4269:96:6","statements":[{"expression":{"arguments":[{"id":1621,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4305:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1622,"name":"MAJOR_TYPE_CONTENT_FREE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"4310:23:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1620,"name":"writeIndefiniteLengthType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2024,"src":"4279:25:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8) pure"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4279:55:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1624,"nodeType":"ExpressionStatement","src":"4279:55:6"},{"expression":{"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1625,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1617,"src":"4344:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4348:5:6","memberName":"depth","nodeType":"MemberAccess","referencedDeclaration":1221,"src":"4344:9:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4357:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4344:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1630,"nodeType":"ExpressionStatement","src":"4344:14:6"}]},"id":1632,"implemented":true,"kind":"function","modifiers":[],"name":"endSequence","nameLocation":"4220:11:6","nodeType":"FunctionDefinition","parameters":{"id":1618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1617,"mutability":"mutable","name":"buf","nameLocation":"4250:3:6","nodeType":"VariableDeclaration","scope":1632,"src":"4232:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1616,"nodeType":"UserDefinedTypeName","pathNode":{"id":1615,"name":"CBORBuffer","nameLocations":["4232:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"4232:10:6"},"referencedDeclaration":1222,"src":"4232:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"}],"src":"4231:23:6"},"returnParameters":{"id":1619,"nodeType":"ParameterList","parameters":[],"src":"4269:0:6"},"scope":2067,"src":"4211:154:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1652,"nodeType":"Block","src":"4471:71:6","statements":[{"expression":{"arguments":[{"id":1643,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"4493:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1644,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"4498:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1642,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4481:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1646,"nodeType":"ExpressionStatement","src":"4481:21:6"},{"expression":{"arguments":[{"id":1648,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"4524:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1639,"src":"4529:5:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1647,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4512:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4512:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1651,"nodeType":"ExpressionStatement","src":"4512:23:6"}]},"id":1653,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVString","nameLocation":"4380:13:6","nodeType":"FunctionDefinition","parameters":{"id":1640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1635,"mutability":"mutable","name":"buf","nameLocation":"4412:3:6","nodeType":"VariableDeclaration","scope":1653,"src":"4394:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1634,"nodeType":"UserDefinedTypeName","pathNode":{"id":1633,"name":"CBORBuffer","nameLocations":["4394:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"4394:10:6"},"referencedDeclaration":1222,"src":"4394:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"key","nameLocation":"4431:3:6","nodeType":"VariableDeclaration","scope":1653,"src":"4417:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1636,"name":"string","nodeType":"ElementaryTypeName","src":"4417:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1639,"mutability":"mutable","name":"value","nameLocation":"4450:5:6","nodeType":"VariableDeclaration","scope":1653,"src":"4436:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1638,"name":"string","nodeType":"ElementaryTypeName","src":"4436:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4393:63:6"},"returnParameters":{"id":1641,"nodeType":"ParameterList","parameters":[],"src":"4471:0:6"},"scope":2067,"src":"4371:171:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1673,"nodeType":"Block","src":"4646:70:6","statements":[{"expression":{"arguments":[{"id":1664,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"4668:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1665,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"4673:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1663,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4656:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4656:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1667,"nodeType":"ExpressionStatement","src":"4656:21:6"},{"expression":{"arguments":[{"id":1669,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"4698:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1660,"src":"4703:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1668,"name":"writeBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"4687:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bytes memory) pure"}},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4687:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1672,"nodeType":"ExpressionStatement","src":"4687:22:6"}]},"id":1674,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVBytes","nameLocation":"4557:12:6","nodeType":"FunctionDefinition","parameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"buf","nameLocation":"4588:3:6","nodeType":"VariableDeclaration","scope":1674,"src":"4570:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1655,"nodeType":"UserDefinedTypeName","pathNode":{"id":1654,"name":"CBORBuffer","nameLocations":["4570:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"4570:10:6"},"referencedDeclaration":1222,"src":"4570:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"key","nameLocation":"4607:3:6","nodeType":"VariableDeclaration","scope":1674,"src":"4593:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1657,"name":"string","nodeType":"ElementaryTypeName","src":"4593:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"value","nameLocation":"4625:5:6","nodeType":"VariableDeclaration","scope":1674,"src":"4612:18:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1659,"name":"bytes","nodeType":"ElementaryTypeName","src":"4612:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4569:62:6"},"returnParameters":{"id":1662,"nodeType":"ParameterList","parameters":[],"src":"4646:0:6"},"scope":2067,"src":"4548:168:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1694,"nodeType":"Block","src":"4817:72:6","statements":[{"expression":{"arguments":[{"id":1685,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"4839:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1686,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1679,"src":"4844:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1684,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4827:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4827:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1688,"nodeType":"ExpressionStatement","src":"4827:21:6"},{"expression":{"arguments":[{"id":1690,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1677,"src":"4871:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1681,"src":"4876:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1689,"name":"writeUInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"4858:12:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint256) pure"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4858:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"4858:24:6"}]},"id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUInt256","nameLocation":"4731:14:6","nodeType":"FunctionDefinition","parameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1677,"mutability":"mutable","name":"buf","nameLocation":"4764:3:6","nodeType":"VariableDeclaration","scope":1695,"src":"4746:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1676,"nodeType":"UserDefinedTypeName","pathNode":{"id":1675,"name":"CBORBuffer","nameLocations":["4746:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"4746:10:6"},"referencedDeclaration":1222,"src":"4746:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1679,"mutability":"mutable","name":"key","nameLocation":"4783:3:6","nodeType":"VariableDeclaration","scope":1695,"src":"4769:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1678,"name":"string","nodeType":"ElementaryTypeName","src":"4769:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1681,"mutability":"mutable","name":"value","nameLocation":"4796:5:6","nodeType":"VariableDeclaration","scope":1695,"src":"4788:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1680,"name":"uint256","nodeType":"ElementaryTypeName","src":"4788:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4745:57:6"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[],"src":"4817:0:6"},"scope":2067,"src":"4722:167:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1715,"nodeType":"Block","src":"4988:71:6","statements":[{"expression":{"arguments":[{"id":1706,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"5010:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1707,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"5015:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1705,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"4998:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4998:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1709,"nodeType":"ExpressionStatement","src":"4998:21:6"},{"expression":{"arguments":[{"id":1711,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"5041:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1702,"src":"5046:5:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1710,"name":"writeInt256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"5029:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_int256_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,int256) pure"}},"id":1713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5029:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1714,"nodeType":"ExpressionStatement","src":"5029:23:6"}]},"id":1716,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVInt256","nameLocation":"4904:13:6","nodeType":"FunctionDefinition","parameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"buf","nameLocation":"4936:3:6","nodeType":"VariableDeclaration","scope":1716,"src":"4918:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1697,"nodeType":"UserDefinedTypeName","pathNode":{"id":1696,"name":"CBORBuffer","nameLocations":["4918:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"4918:10:6"},"referencedDeclaration":1222,"src":"4918:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"key","nameLocation":"4955:3:6","nodeType":"VariableDeclaration","scope":1716,"src":"4941:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1699,"name":"string","nodeType":"ElementaryTypeName","src":"4941:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"value","nameLocation":"4967:5:6","nodeType":"VariableDeclaration","scope":1716,"src":"4960:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1701,"name":"int256","nodeType":"ElementaryTypeName","src":"4960:6:6","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4917:56:6"},"returnParameters":{"id":1704,"nodeType":"ParameterList","parameters":[],"src":"4988:0:6"},"scope":2067,"src":"4895:164:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1736,"nodeType":"Block","src":"5158:71:6","statements":[{"expression":{"arguments":[{"id":1727,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"5180:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1728,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1721,"src":"5185:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1726,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5168:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1730,"nodeType":"ExpressionStatement","src":"5168:21:6"},{"expression":{"arguments":[{"id":1732,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1719,"src":"5211:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"5216:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1731,"name":"writeUInt64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"5199:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint64) pure"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:23:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1735,"nodeType":"ExpressionStatement","src":"5199:23:6"}]},"id":1737,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUInt64","nameLocation":"5074:13:6","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"buf","nameLocation":"5106:3:6","nodeType":"VariableDeclaration","scope":1737,"src":"5088:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1718,"nodeType":"UserDefinedTypeName","pathNode":{"id":1717,"name":"CBORBuffer","nameLocations":["5088:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"5088:10:6"},"referencedDeclaration":1222,"src":"5088:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"key","nameLocation":"5125:3:6","nodeType":"VariableDeclaration","scope":1737,"src":"5111:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1720,"name":"string","nodeType":"ElementaryTypeName","src":"5111:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"value","nameLocation":"5137:5:6","nodeType":"VariableDeclaration","scope":1737,"src":"5130:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1722,"name":"uint64","nodeType":"ElementaryTypeName","src":"5130:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5087:56:6"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[],"src":"5158:0:6"},"scope":2067,"src":"5065:164:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1757,"nodeType":"Block","src":"5326:70:6","statements":[{"expression":{"arguments":[{"id":1748,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"5348:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1749,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1742,"src":"5353:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1747,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5336:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5336:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1751,"nodeType":"ExpressionStatement","src":"5336:21:6"},{"expression":{"arguments":[{"id":1753,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1740,"src":"5378:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"5383:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":1752,"name":"writeInt64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"5367:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_int64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,int64) pure"}},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5367:22:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1756,"nodeType":"ExpressionStatement","src":"5367:22:6"}]},"id":1758,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVInt64","nameLocation":"5244:12:6","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"buf","nameLocation":"5275:3:6","nodeType":"VariableDeclaration","scope":1758,"src":"5257:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1739,"nodeType":"UserDefinedTypeName","pathNode":{"id":1738,"name":"CBORBuffer","nameLocations":["5257:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"5257:10:6"},"referencedDeclaration":1222,"src":"5257:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"key","nameLocation":"5294:3:6","nodeType":"VariableDeclaration","scope":1758,"src":"5280:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1741,"name":"string","nodeType":"ElementaryTypeName","src":"5280:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1744,"mutability":"mutable","name":"value","nameLocation":"5305:5:6","nodeType":"VariableDeclaration","scope":1758,"src":"5299:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1743,"name":"int64","nodeType":"ElementaryTypeName","src":"5299:5:6","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"5256:55:6"},"returnParameters":{"id":1746,"nodeType":"ParameterList","parameters":[],"src":"5326:0:6"},"scope":2067,"src":"5235:161:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1778,"nodeType":"Block","src":"5491:69:6","statements":[{"expression":{"arguments":[{"id":1769,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"5513:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1770,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"5518:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1768,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5501:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5501:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1772,"nodeType":"ExpressionStatement","src":"5501:21:6"},{"expression":{"arguments":[{"id":1774,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1761,"src":"5542:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1765,"src":"5547:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1773,"name":"writeBool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1524,"src":"5532:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_bool_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,bool) pure"}},"id":1776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5532:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1777,"nodeType":"ExpressionStatement","src":"5532:21:6"}]},"id":1779,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVBool","nameLocation":"5411:11:6","nodeType":"FunctionDefinition","parameters":{"id":1766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1761,"mutability":"mutable","name":"buf","nameLocation":"5441:3:6","nodeType":"VariableDeclaration","scope":1779,"src":"5423:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1760,"nodeType":"UserDefinedTypeName","pathNode":{"id":1759,"name":"CBORBuffer","nameLocations":["5423:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"5423:10:6"},"referencedDeclaration":1222,"src":"5423:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1763,"mutability":"mutable","name":"key","nameLocation":"5460:3:6","nodeType":"VariableDeclaration","scope":1779,"src":"5446:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1762,"name":"string","nodeType":"ElementaryTypeName","src":"5446:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1765,"mutability":"mutable","name":"value","nameLocation":"5470:5:6","nodeType":"VariableDeclaration","scope":1779,"src":"5465:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1764,"name":"bool","nodeType":"ElementaryTypeName","src":"5465:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5422:54:6"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[],"src":"5491:0:6"},"scope":2067,"src":"5402:158:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1796,"nodeType":"Block","src":"5643:62:6","statements":[{"expression":{"arguments":[{"id":1788,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"5665:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1789,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1784,"src":"5670:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1787,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5653:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5653:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1791,"nodeType":"ExpressionStatement","src":"5653:21:6"},{"expression":{"arguments":[{"id":1793,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"5694:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":1792,"name":"writeNull","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"5684:9:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5684:14:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1795,"nodeType":"ExpressionStatement","src":"5684:14:6"}]},"id":1797,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVNull","nameLocation":"5575:11:6","nodeType":"FunctionDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"buf","nameLocation":"5605:3:6","nodeType":"VariableDeclaration","scope":1797,"src":"5587:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1781,"nodeType":"UserDefinedTypeName","pathNode":{"id":1780,"name":"CBORBuffer","nameLocations":["5587:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"5587:10:6"},"referencedDeclaration":1222,"src":"5587:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"key","nameLocation":"5624:3:6","nodeType":"VariableDeclaration","scope":1797,"src":"5610:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1783,"name":"string","nodeType":"ElementaryTypeName","src":"5610:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5586:42:6"},"returnParameters":{"id":1786,"nodeType":"ParameterList","parameters":[],"src":"5643:0:6"},"scope":2067,"src":"5566:139:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1814,"nodeType":"Block","src":"5793:67:6","statements":[{"expression":{"arguments":[{"id":1806,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"5815:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1807,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"5820:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1805,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5803:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5803:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1809,"nodeType":"ExpressionStatement","src":"5803:21:6"},{"expression":{"arguments":[{"id":1811,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"5849:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":1810,"name":"writeUndefined","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1548,"src":"5834:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5834:19:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1813,"nodeType":"ExpressionStatement","src":"5834:19:6"}]},"id":1815,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVUndefined","nameLocation":"5720:16:6","nodeType":"FunctionDefinition","parameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1800,"mutability":"mutable","name":"buf","nameLocation":"5755:3:6","nodeType":"VariableDeclaration","scope":1815,"src":"5737:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1799,"nodeType":"UserDefinedTypeName","pathNode":{"id":1798,"name":"CBORBuffer","nameLocations":["5737:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"5737:10:6"},"referencedDeclaration":1222,"src":"5737:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"key","nameLocation":"5774:3:6","nodeType":"VariableDeclaration","scope":1815,"src":"5760:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1801,"name":"string","nodeType":"ElementaryTypeName","src":"5760:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5736:42:6"},"returnParameters":{"id":1804,"nodeType":"ParameterList","parameters":[],"src":"5793:0:6"},"scope":2067,"src":"5711:149:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1832,"nodeType":"Block","src":"5942:61:6","statements":[{"expression":{"arguments":[{"id":1824,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"5964:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1825,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1820,"src":"5969:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1823,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"5952:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5952:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1827,"nodeType":"ExpressionStatement","src":"5952:21:6"},{"expression":{"arguments":[{"id":1829,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1818,"src":"5992:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":1828,"name":"startMap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1599,"src":"5983:8:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":1830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5983:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1831,"nodeType":"ExpressionStatement","src":"5983:13:6"}]},"id":1833,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVMap","nameLocation":"5875:10:6","nodeType":"FunctionDefinition","parameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1818,"mutability":"mutable","name":"buf","nameLocation":"5904:3:6","nodeType":"VariableDeclaration","scope":1833,"src":"5886:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1817,"nodeType":"UserDefinedTypeName","pathNode":{"id":1816,"name":"CBORBuffer","nameLocations":["5886:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"5886:10:6"},"referencedDeclaration":1222,"src":"5886:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1820,"mutability":"mutable","name":"key","nameLocation":"5923:3:6","nodeType":"VariableDeclaration","scope":1833,"src":"5909:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1819,"name":"string","nodeType":"ElementaryTypeName","src":"5909:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5885:42:6"},"returnParameters":{"id":1822,"nodeType":"ParameterList","parameters":[],"src":"5942:0:6"},"scope":2067,"src":"5866:137:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1850,"nodeType":"Block","src":"6087:63:6","statements":[{"expression":{"arguments":[{"id":1842,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"6109:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":1843,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"6114:3:6","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1841,"name":"writeString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"6097:11:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,string memory) pure"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6097:21:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1845,"nodeType":"ExpressionStatement","src":"6097:21:6"},{"expression":{"arguments":[{"id":1847,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1836,"src":"6139:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}],"id":1846,"name":"startArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"6128:10:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory) pure"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6128:15:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"ExpressionStatement","src":"6128:15:6"}]},"id":1851,"implemented":true,"kind":"function","modifiers":[],"name":"writeKVArray","nameLocation":"6018:12:6","nodeType":"FunctionDefinition","parameters":{"id":1839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"buf","nameLocation":"6049:3:6","nodeType":"VariableDeclaration","scope":1851,"src":"6031:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1835,"nodeType":"UserDefinedTypeName","pathNode":{"id":1834,"name":"CBORBuffer","nameLocations":["6031:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"6031:10:6"},"referencedDeclaration":1222,"src":"6031:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1838,"mutability":"mutable","name":"key","nameLocation":"6068:3:6","nodeType":"VariableDeclaration","scope":1851,"src":"6054:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1837,"name":"string","nodeType":"ElementaryTypeName","src":"6054:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6030:42:6"},"returnParameters":{"id":1840,"nodeType":"ParameterList","parameters":[],"src":"6087:0:6"},"scope":2067,"src":"6009:141:6","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1998,"nodeType":"Block","src":"6276:639:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6290:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3233","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6299:2:6","typeDescriptions":{"typeIdentifier":"t_rational_23_by_1","typeString":"int_const 23"},"value":"23"},"src":"6290:11:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6386:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6395:4:6","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"6386:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6522:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307846464646","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6531:6:6","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xFFFF"},"src":"6522:15:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6660:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"30784646464646464646","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6669:10:6","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xFFFFFFFF"},"src":"6660:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1993,"nodeType":"Block","src":"6798:111:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1975,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6839:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6848:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6839:10:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1978,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6838:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3237","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6853:2:6","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6838:17:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6832:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1973,"name":"uint8","nodeType":"ElementaryTypeName","src":"6832:5:6","typeDescriptions":{}}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6832:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1968,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6812:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6816:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6812:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6820:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6812:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6812:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1983,"nodeType":"ExpressionStatement","src":"6812:45:6"},{"expression":{"arguments":[{"id":1989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6889:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"38","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6896:1:6","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"}],"expression":{"expression":{"id":1984,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6871:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1987,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6875:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6871:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1988,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6879:9:6","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1207,"src":"6871:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6871:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1992,"nodeType":"ExpressionStatement","src":"6871:27:6"}]},"id":1994,"nodeType":"IfStatement","src":"6656:253:6","trueBody":{"id":1967,"nodeType":"Block","src":"6681:111:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1949,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6722:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6731:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6722:10:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1952,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6721:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3236","id":1953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6736:2:6","typeDescriptions":{"typeIdentifier":"t_rational_26_by_1","typeString":"int_const 26"},"value":"26"},"src":"6721:17:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6715:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1947,"name":"uint8","nodeType":"ElementaryTypeName","src":"6715:5:6","typeDescriptions":{}}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6715:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1942,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6695:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1945,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6699:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6695:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1946,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6703:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6695:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6695:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1957,"nodeType":"ExpressionStatement","src":"6695:45:6"},{"expression":{"arguments":[{"id":1963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6772:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"34","id":1964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6779:1:6","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}],"expression":{"expression":{"id":1958,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6754:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1961,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6758:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6754:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1962,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6762:9:6","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1207,"src":"6754:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6754:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1966,"nodeType":"ExpressionStatement","src":"6754:27:6"}]}},"id":1995,"nodeType":"IfStatement","src":"6518:391:6","trueBody":{"id":1938,"nodeType":"Block","src":"6539:111:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6580:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6589:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6580:10:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1923,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6579:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3235","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6594:2:6","typeDescriptions":{"typeIdentifier":"t_rational_25_by_1","typeString":"int_const 25"},"value":"25"},"src":"6579:17:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1919,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6573:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1918,"name":"uint8","nodeType":"ElementaryTypeName","src":"6573:5:6","typeDescriptions":{}}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6573:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1913,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6553:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6557:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6553:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1917,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6561:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6553:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6553:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1928,"nodeType":"ExpressionStatement","src":"6553:45:6"},{"expression":{"arguments":[{"id":1934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6630:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"32","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6637:1:6","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"expression":{"id":1929,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6612:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6616:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6612:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1933,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6620:9:6","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1207,"src":"6612:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6612:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1937,"nodeType":"ExpressionStatement","src":"6612:27:6"}]}},"id":1996,"nodeType":"IfStatement","src":"6382:527:6","trueBody":{"id":1909,"nodeType":"Block","src":"6401:111:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1891,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6442:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6451:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6442:10:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6441:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3234","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6456:2:6","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},"src":"6441:17:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6435:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1889,"name":"uint8","nodeType":"ElementaryTypeName","src":"6435:5:6","typeDescriptions":{}}},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6435:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1884,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6415:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6419:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6415:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6423:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6415:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1899,"nodeType":"ExpressionStatement","src":"6415:45:6"},{"expression":{"arguments":[{"id":1905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6492:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"hexValue":"31","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6499:1:6","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"expression":{"id":1900,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6474:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6478:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6474:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1904,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6482:9:6","memberName":"appendInt","nodeType":"MemberAccess","referencedDeclaration":1207,"src":"6474:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint256,uint256) pure returns (struct Buffer.buffer memory)"}},"id":1907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6474:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1908,"nodeType":"ExpressionStatement","src":"6474:27:6"}]}},"id":1997,"nodeType":"IfStatement","src":"6286:623:6","trueBody":{"id":1880,"nodeType":"Block","src":"6303:73:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"6344:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6353:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"6344:10:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6343:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":1875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"6358:5:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6343:20:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":1870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6337:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1869,"name":"uint8","nodeType":"ElementaryTypeName","src":"6337:5:6","typeDescriptions":{}}},"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6337:27:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":1864,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1854,"src":"6317:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":1867,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6321:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"6317:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6325:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"6317:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:48:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":1879,"nodeType":"ExpressionStatement","src":"6317:48:6"}]}}]},"id":1999,"implemented":true,"kind":"function","modifiers":[],"name":"writeFixedNumeric","nameLocation":"6165:17:6","nodeType":"FunctionDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"buf","nameLocation":"6210:3:6","nodeType":"VariableDeclaration","scope":1999,"src":"6192:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":1853,"nodeType":"UserDefinedTypeName","pathNode":{"id":1852,"name":"CBORBuffer","nameLocations":["6192:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"6192:10:6"},"referencedDeclaration":1222,"src":"6192:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":1856,"mutability":"mutable","name":"major","nameLocation":"6229:5:6","nodeType":"VariableDeclaration","scope":1999,"src":"6223:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1855,"name":"uint8","nodeType":"ElementaryTypeName","src":"6223:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"value","nameLocation":"6251:5:6","nodeType":"VariableDeclaration","scope":1999,"src":"6244:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1857,"name":"uint64","nodeType":"ElementaryTypeName","src":"6244:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6182:80:6"},"returnParameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"6276:0:6"},"scope":2067,"src":"6156:759:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2023,"nodeType":"Block","src":"7025:62:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2014,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2004,"src":"7062:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7071:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7062:10:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7061:12:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"3331","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7076:2:6","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"7061:17:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7055:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2012,"name":"uint8","nodeType":"ElementaryTypeName","src":"7055:5:6","typeDescriptions":{}}},"id":2020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7055:24:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2007,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2002,"src":"7035:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2010,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7039:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"7035:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7043:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"7035:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7035:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2022,"nodeType":"ExpressionStatement","src":"7035:45:6"}]},"id":2024,"implemented":true,"kind":"function","modifiers":[],"name":"writeIndefiniteLengthType","nameLocation":"6930:25:6","nodeType":"FunctionDefinition","parameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2002,"mutability":"mutable","name":"buf","nameLocation":"6974:3:6","nodeType":"VariableDeclaration","scope":2024,"src":"6956:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2001,"nodeType":"UserDefinedTypeName","pathNode":{"id":2000,"name":"CBORBuffer","nameLocations":["6956:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"6956:10:6"},"referencedDeclaration":1222,"src":"6956:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2004,"mutability":"mutable","name":"major","nameLocation":"6985:5:6","nodeType":"VariableDeclaration","scope":2024,"src":"6979:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2003,"name":"uint8","nodeType":"ElementaryTypeName","src":"6979:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"6955:36:6"},"returnParameters":{"id":2006,"nodeType":"ParameterList","parameters":[],"src":"7025:0:6"},"scope":2067,"src":"6921:166:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2040,"nodeType":"Block","src":"7210:54:6","statements":[{"expression":{"arguments":[{"id":2035,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"7238:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},{"id":2036,"name":"major","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"7243:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2037,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2031,"src":"7250:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":2034,"name":"writeFixedNumeric","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"7220:17:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_CBORBuffer_$1222_memory_ptr_$_t_uint8_$_t_uint64_$returns$__$","typeString":"function (struct CBOR.CBORBuffer memory,uint8,uint64) pure"}},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7220:37:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2039,"nodeType":"ExpressionStatement","src":"7220:37:6"}]},"id":2041,"implemented":true,"kind":"function","modifiers":[],"name":"writeDefiniteLengthType","nameLocation":"7102:23:6","nodeType":"FunctionDefinition","parameters":{"id":2032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2027,"mutability":"mutable","name":"buf","nameLocation":"7144:3:6","nodeType":"VariableDeclaration","scope":2041,"src":"7126:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2026,"nodeType":"UserDefinedTypeName","pathNode":{"id":2025,"name":"CBORBuffer","nameLocations":["7126:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"7126:10:6"},"referencedDeclaration":1222,"src":"7126:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2029,"mutability":"mutable","name":"major","nameLocation":"7155:5:6","nodeType":"VariableDeclaration","scope":2041,"src":"7149:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2028,"name":"uint8","nodeType":"ElementaryTypeName","src":"7149:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2031,"mutability":"mutable","name":"length","nameLocation":"7169:6:6","nodeType":"VariableDeclaration","scope":2041,"src":"7162:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":2030,"name":"uint64","nodeType":"ElementaryTypeName","src":"7162:6:6","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7125:51:6"},"returnParameters":{"id":2033,"nodeType":"ParameterList","parameters":[],"src":"7210:0:6"},"scope":2067,"src":"7093:171:6","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2065,"nodeType":"Block","src":"7345:83:6","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":2056,"name":"MAJOR_TYPE_CONTENT_FREE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"7382:23:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7409:1:6","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"7382:28:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7381:30:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":2060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2046,"src":"7414:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7381:38:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7375:5:6","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2054,"name":"uint8","nodeType":"ElementaryTypeName","src":"7375:5:6","typeDescriptions":{}}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7375:45:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"expression":{"id":2049,"name":"buf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2044,"src":"7355:3:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer memory"}},"id":2052,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7359:3:6","memberName":"buf","nodeType":"MemberAccess","referencedDeclaration":1219,"src":"7355:7:6","typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2053,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7363:11:6","memberName":"appendUint8","nodeType":"MemberAccess","referencedDeclaration":1049,"src":"7355:19:6","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_buffer_$795_memory_ptr_$_t_uint8_$returns$_t_struct$_buffer_$795_memory_ptr_$attached_to$_t_struct$_buffer_$795_memory_ptr_$","typeString":"function (struct Buffer.buffer memory,uint8) pure returns (struct Buffer.buffer memory)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7355:66:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_buffer_$795_memory_ptr","typeString":"struct Buffer.buffer memory"}},"id":2064,"nodeType":"ExpressionStatement","src":"7355:66:6"}]},"id":2066,"implemented":true,"kind":"function","modifiers":[],"name":"writeContentFree","nameLocation":"7279:16:6","nodeType":"FunctionDefinition","parameters":{"id":2047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"buf","nameLocation":"7314:3:6","nodeType":"VariableDeclaration","scope":2066,"src":"7296:21:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_memory_ptr","typeString":"struct CBOR.CBORBuffer"},"typeName":{"id":2043,"nodeType":"UserDefinedTypeName","pathNode":{"id":2042,"name":"CBORBuffer","nameLocations":["7296:10:6"],"nodeType":"IdentifierPath","referencedDeclaration":1222,"src":"7296:10:6"},"referencedDeclaration":1222,"src":"7296:10:6","typeDescriptions":{"typeIdentifier":"t_struct$_CBORBuffer_$1222_storage_ptr","typeString":"struct CBOR.CBORBuffer"}},"visibility":"internal"},{"constant":false,"id":2046,"mutability":"mutable","name":"value","nameLocation":"7325:5:6","nodeType":"VariableDeclaration","scope":2066,"src":"7319:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2045,"name":"uint8","nodeType":"ElementaryTypeName","src":"7319:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"7295:36:6"},"returnParameters":{"id":2048,"nodeType":"ParameterList","parameters":[],"src":"7345:0:6"},"scope":2067,"src":"7270:158:6","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2068,"src":"666:6764:6","usedErrors":[],"usedEvents":[]}],"src":"32:7398:6"},"id":6},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2340],"Ownable":[2215]},"id":2216,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2069,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:7"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2071,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2216,"sourceUnit":2341,"src":"128:45:7","symbolAliases":[{"foreign":{"id":2070,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"136:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2073,"name":"Context","nameLocations":["692:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"692:7:7"},"id":2074,"nodeType":"InheritanceSpecifier","src":"692:7:7"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2072,"nodeType":"StructuredDocumentation","src":"175:487:7","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":2215,"linearizedBaseContracts":[2215,2340],"name":"Ownable","nameLocation":"681:7:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2076,"mutability":"mutable","name":"_owner","nameLocation":"722:6:7","nodeType":"VariableDeclaration","scope":2215,"src":"706:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2075,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":2077,"nodeType":"StructuredDocumentation","src":"735:85:7","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":2081,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:7","nodeType":"ErrorDefinition","parameters":{"id":2080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2079,"mutability":"mutable","name":"account","nameLocation":"866:7:7","nodeType":"VariableDeclaration","scope":2081,"src":"858:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2078,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:7"},"src":"825:50:7"},{"documentation":{"id":2082,"nodeType":"StructuredDocumentation","src":"881:82:7","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":2086,"name":"OwnableInvalidOwner","nameLocation":"974:19:7","nodeType":"ErrorDefinition","parameters":{"id":2085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2084,"mutability":"mutable","name":"owner","nameLocation":"1002:5:7","nodeType":"VariableDeclaration","scope":2086,"src":"994:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2083,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:7"},"src":"968:41:7"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":2092,"name":"OwnershipTransferred","nameLocation":"1021:20:7","nodeType":"EventDefinition","parameters":{"id":2091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2088,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:7","nodeType":"VariableDeclaration","scope":2092,"src":"1042:29:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2087,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2090,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:7","nodeType":"VariableDeclaration","scope":2092,"src":"1073:24:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2089,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:7"},"src":"1015:84:7"},{"body":{"id":2117,"nodeType":"Block","src":"1259:153:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2098,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"1273:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2099,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:7","typeDescriptions":{}}},"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2112,"nodeType":"IfStatement","src":"1269:95:7","trueBody":{"id":2111,"nodeType":"Block","src":"1301:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2105,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:7","typeDescriptions":{}}},"id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2104,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"1322:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2110,"nodeType":"RevertStatement","src":"1315:38:7"}]}},{"expression":{"arguments":[{"id":2114,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2095,"src":"1392:12:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2113,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"1373:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2116,"nodeType":"ExpressionStatement","src":"1373:32:7"}]},"documentation":{"id":2093,"nodeType":"StructuredDocumentation","src":"1105:115:7","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":2118,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2095,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:7","nodeType":"VariableDeclaration","scope":2118,"src":"1237:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2094,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:7"},"returnParameters":{"id":2097,"nodeType":"ParameterList","parameters":[],"src":"1259:0:7"},"scope":2215,"src":"1225:187:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2125,"nodeType":"Block","src":"1521:41:7","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2121,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2152,"src":"1531:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2123,"nodeType":"ExpressionStatement","src":"1531:13:7"},{"id":2124,"nodeType":"PlaceholderStatement","src":"1554:1:7"}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"1418:77:7","text":" @dev Throws if called by any account other than the owner."},"id":2126,"name":"onlyOwner","nameLocation":"1509:9:7","nodeType":"ModifierDefinition","parameters":{"id":2120,"nodeType":"ParameterList","parameters":[],"src":"1518:2:7"},"src":"1500:62:7","virtual":false,"visibility":"internal"},{"body":{"id":2134,"nodeType":"Block","src":"1693:30:7","statements":[{"expression":{"id":2132,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"1710:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2131,"id":2133,"nodeType":"Return","src":"1703:13:7"}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"1568:65:7","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":2135,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:7","nodeType":"FunctionDefinition","parameters":{"id":2128,"nodeType":"ParameterList","parameters":[],"src":"1652:2:7"},"returnParameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2135,"src":"1684:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:7"},"scope":2215,"src":"1638:85:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2151,"nodeType":"Block","src":"1841:117:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2139,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"1855:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2141,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"1866:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2150,"nodeType":"IfStatement","src":"1851:101:7","trueBody":{"id":2149,"nodeType":"Block","src":"1880:72:7","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2145,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"1928:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2144,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2081,"src":"1901:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2148,"nodeType":"RevertStatement","src":"1894:47:7"}]}}]},"documentation":{"id":2136,"nodeType":"StructuredDocumentation","src":"1729:62:7","text":" @dev Throws if the sender is not the owner."},"id":2152,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:7","nodeType":"FunctionDefinition","parameters":{"id":2137,"nodeType":"ParameterList","parameters":[],"src":"1816:2:7"},"returnParameters":{"id":2138,"nodeType":"ParameterList","parameters":[],"src":"1841:0:7"},"scope":2215,"src":"1796:162:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2165,"nodeType":"Block","src":"2347:47:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2159,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:7","typeDescriptions":{}}},"id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2158,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2357:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2164,"nodeType":"ExpressionStatement","src":"2357:30:7"}]},"documentation":{"id":2153,"nodeType":"StructuredDocumentation","src":"1964:324:7","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":2166,"implemented":true,"kind":"function","modifiers":[{"id":2156,"kind":"modifierInvocation","modifierName":{"id":2155,"name":"onlyOwner","nameLocations":["2337:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"2337:9:7"},"nodeType":"ModifierInvocation","src":"2337:9:7"}],"name":"renounceOwnership","nameLocation":"2302:17:7","nodeType":"FunctionDefinition","parameters":{"id":2154,"nodeType":"ParameterList","parameters":[],"src":"2319:2:7"},"returnParameters":{"id":2157,"nodeType":"ParameterList","parameters":[],"src":"2347:0:7"},"scope":2215,"src":"2293:101:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2193,"nodeType":"Block","src":"2613:145:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"2627:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2175,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:7","typeDescriptions":{}}},"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2188,"nodeType":"IfStatement","src":"2623:91:7","trueBody":{"id":2187,"nodeType":"Block","src":"2651:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:7","typeDescriptions":{}}},"id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2180,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"2672:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"RevertStatement","src":"2665:38:7"}]}},{"expression":{"arguments":[{"id":2190,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"2742:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2189,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"2723:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2192,"nodeType":"ExpressionStatement","src":"2723:28:7"}]},"documentation":{"id":2167,"nodeType":"StructuredDocumentation","src":"2400:138:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":2194,"implemented":true,"kind":"function","modifiers":[{"id":2172,"kind":"modifierInvocation","modifierName":{"id":2171,"name":"onlyOwner","nameLocations":["2603:9:7"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"2603:9:7"},"nodeType":"ModifierInvocation","src":"2603:9:7"}],"name":"transferOwnership","nameLocation":"2552:17:7","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2169,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:7","nodeType":"VariableDeclaration","scope":2194,"src":"2570:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2168,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:7"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[],"src":"2613:0:7"},"scope":2215,"src":"2543:215:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2213,"nodeType":"Block","src":"2975:124:7","statements":[{"assignments":[2201],"declarations":[{"constant":false,"id":2201,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:7","nodeType":"VariableDeclaration","scope":2213,"src":"2985:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2203,"initialValue":{"id":2202,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3004:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:7"},{"expression":{"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2204,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"3020:6:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2205,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"3029:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2207,"nodeType":"ExpressionStatement","src":"3020:17:7"},{"eventCall":{"arguments":[{"id":2209,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2201,"src":"3073:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2210,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2197,"src":"3083:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2208,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2092,"src":"3052:20:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2212,"nodeType":"EmitStatement","src":"3047:45:7"}]},"documentation":{"id":2195,"nodeType":"StructuredDocumentation","src":"2764:143:7","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":2214,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:7","nodeType":"FunctionDefinition","parameters":{"id":2198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2197,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:7","nodeType":"VariableDeclaration","scope":2214,"src":"2940:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:7"},"returnParameters":{"id":2199,"nodeType":"ParameterList","parameters":[],"src":"2975:0:7"},"scope":2215,"src":"2912:187:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2216,"src":"663:2438:7","usedErrors":[2081,2086],"usedEvents":[2092]}],"src":"102:3000:7"},"id":7},"@openzeppelin/contracts/utils/Base64.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","exportedSymbols":{"Base64":[2310]},"id":2311,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2217,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Base64","contractDependencies":[],"contractKind":"library","documentation":{"id":2218,"nodeType":"StructuredDocumentation","src":"126:75:8","text":" @dev Provides a set of functions to operate with Base64 strings."},"fullyImplemented":true,"id":2310,"linearizedBaseContracts":[2310],"name":"Base64","nameLocation":"210:6:8","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2219,"nodeType":"StructuredDocumentation","src":"223:131:8","text":" @dev Base64 Encoding/Decoding Table\n See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648"},"id":2222,"mutability":"constant","name":"_TABLE","nameLocation":"384:6:8","nodeType":"VariableDeclaration","scope":2310,"src":"359:100:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2220,"name":"string","nodeType":"ElementaryTypeName","src":"359:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":2221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"393:66:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":2225,"mutability":"constant","name":"_TABLE_URL","nameLocation":"490:10:8","nodeType":"VariableDeclaration","scope":2310,"src":"465:104:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2223,"name":"string","nodeType":"ElementaryTypeName","src":"465:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392d5f","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"503:66:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5f7e6d3cba140c1411e96b7033571a229a3135b5c436a9698b398a19a1c64b50","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"},"visibility":"internal"},{"body":{"id":2239,"nodeType":"Block","src":"736:51:8","statements":[{"expression":{"arguments":[{"id":2234,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2228,"src":"761:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2235,"name":"_TABLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2222,"src":"767:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"74727565","id":2236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"775:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2233,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"753:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":2237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"753:27:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2232,"id":2238,"nodeType":"Return","src":"746:34:8"}]},"documentation":{"id":2226,"nodeType":"StructuredDocumentation","src":"576:82:8","text":" @dev Converts a `bytes` to its Bytes64 `string` representation."},"id":2240,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"672:6:8","nodeType":"FunctionDefinition","parameters":{"id":2229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2228,"mutability":"mutable","name":"data","nameLocation":"692:4:8","nodeType":"VariableDeclaration","scope":2240,"src":"679:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2227,"name":"bytes","nodeType":"ElementaryTypeName","src":"679:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"678:19:8"},"returnParameters":{"id":2232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2240,"src":"721:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2230,"name":"string","nodeType":"ElementaryTypeName","src":"721:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"720:15:8"},"scope":2310,"src":"663:124:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2254,"nodeType":"Block","src":"1061:56:8","statements":[{"expression":{"arguments":[{"id":2249,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"1086:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2250,"name":"_TABLE_URL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1092:10:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"66616c7365","id":2251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1104:5:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2248,"name":"_encode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2309,"src":"1078:7:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory,string memory,bool) pure returns (string memory)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1078:32:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2247,"id":2253,"nodeType":"Return","src":"1071:39:8"}]},"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"793:187:8","text":" @dev Converts a `bytes` to its Bytes64Url `string` representation.\n Output is not padded with `=` as specified in https://www.rfc-editor.org/rfc/rfc4648[rfc4648]."},"id":2255,"implemented":true,"kind":"function","modifiers":[],"name":"encodeURL","nameLocation":"994:9:8","nodeType":"FunctionDefinition","parameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"mutability":"mutable","name":"data","nameLocation":"1017:4:8","nodeType":"VariableDeclaration","scope":2255,"src":"1004:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2242,"name":"bytes","nodeType":"ElementaryTypeName","src":"1004:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1003:19:8"},"returnParameters":{"id":2247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2246,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2255,"src":"1046:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2245,"name":"string","nodeType":"ElementaryTypeName","src":"1046:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1045:15:8"},"scope":2310,"src":"985:132:8","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2308,"nodeType":"Block","src":"1298:3910:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2267,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"1515:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1520:6:8","memberName":"length","nodeType":"MemberAccess","src":"1515:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1515:16:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"documentation":" Inspired by Brecht Devos (Brechtpd) implementation - MIT licence\n https://github.com/Brechtpd/base64/blob/e78d9fd951e7b0977ddca77d92dc85183770daf4/base64.sol","id":2273,"nodeType":"IfStatement","src":"1511:31:8","trueBody":{"expression":{"hexValue":"","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1540:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2266,"id":2272,"nodeType":"Return","src":"1533:9:8"}},{"assignments":[2275],"declarations":[{"constant":false,"id":2275,"mutability":"mutable","name":"resultLength","nameLocation":"2488:12:8","nodeType":"VariableDeclaration","scope":2308,"src":"2480:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"2480:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2297,"initialValue":{"condition":{"id":2276,"name":"withPadding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2262,"src":"2503:11:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2548:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":2288,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"2552:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2557:6:8","memberName":"length","nodeType":"MemberAccess","src":"2552:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2548:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2566:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2548:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2547:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2571:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2547:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2503:69:8","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2517:1:8","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2278,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"2523:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2528:6:8","memberName":"length","nodeType":"MemberAccess","src":"2523:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2537:1:8","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2523:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2282,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2522:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":2283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2542:1:8","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"2522:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2285,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2521:23:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2517:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2480:92:8"},{"assignments":[2299],"declarations":[{"constant":false,"id":2299,"mutability":"mutable","name":"result","nameLocation":"2597:6:8","nodeType":"VariableDeclaration","scope":2308,"src":"2583:20:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2298,"name":"string","nodeType":"ElementaryTypeName","src":"2583:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2304,"initialValue":{"arguments":[{"id":2302,"name":"resultLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"2617:12:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2606:10:8","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2300,"name":"string","nodeType":"ElementaryTypeName","src":"2610:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2606:24:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2583:47:8"},{"AST":{"nativeSrc":"2666:2512:8","nodeType":"YulBlock","src":"2666:2512:8","statements":[{"nativeSrc":"2751:29:8","nodeType":"YulVariableDeclaration","src":"2751:29:8","value":{"arguments":[{"name":"table","nativeSrc":"2771:5:8","nodeType":"YulIdentifier","src":"2771:5:8"},{"kind":"number","nativeSrc":"2778:1:8","nodeType":"YulLiteral","src":"2778:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2767:3:8","nodeType":"YulIdentifier","src":"2767:3:8"},"nativeSrc":"2767:13:8","nodeType":"YulFunctionCall","src":"2767:13:8"},"variables":[{"name":"tablePtr","nativeSrc":"2755:8:8","nodeType":"YulTypedName","src":"2755:8:8","type":""}]},{"nativeSrc":"2850:34:8","nodeType":"YulVariableDeclaration","src":"2850:34:8","value":{"arguments":[{"name":"result","nativeSrc":"2871:6:8","nodeType":"YulIdentifier","src":"2871:6:8"},{"kind":"number","nativeSrc":"2879:4:8","nodeType":"YulLiteral","src":"2879:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2867:3:8","nodeType":"YulIdentifier","src":"2867:3:8"},"nativeSrc":"2867:17:8","nodeType":"YulFunctionCall","src":"2867:17:8"},"variables":[{"name":"resultPtr","nativeSrc":"2854:9:8","nodeType":"YulTypedName","src":"2854:9:8","type":""}]},{"nativeSrc":"2897:19:8","nodeType":"YulVariableDeclaration","src":"2897:19:8","value":{"name":"data","nativeSrc":"2912:4:8","nodeType":"YulIdentifier","src":"2912:4:8"},"variables":[{"name":"dataPtr","nativeSrc":"2901:7:8","nodeType":"YulTypedName","src":"2901:7:8","type":""}]},{"nativeSrc":"2929:36:8","nodeType":"YulVariableDeclaration","src":"2929:36:8","value":{"arguments":[{"name":"data","nativeSrc":"2947:4:8","nodeType":"YulIdentifier","src":"2947:4:8"},{"arguments":[{"name":"data","nativeSrc":"2959:4:8","nodeType":"YulIdentifier","src":"2959:4:8"}],"functionName":{"name":"mload","nativeSrc":"2953:5:8","nodeType":"YulIdentifier","src":"2953:5:8"},"nativeSrc":"2953:11:8","nodeType":"YulFunctionCall","src":"2953:11:8"}],"functionName":{"name":"add","nativeSrc":"2943:3:8","nodeType":"YulIdentifier","src":"2943:3:8"},"nativeSrc":"2943:22:8","nodeType":"YulFunctionCall","src":"2943:22:8"},"variables":[{"name":"endPtr","nativeSrc":"2933:6:8","nodeType":"YulTypedName","src":"2933:6:8","type":""}]},{"nativeSrc":"3179:33:8","nodeType":"YulVariableDeclaration","src":"3179:33:8","value":{"arguments":[{"name":"endPtr","nativeSrc":"3199:6:8","nodeType":"YulIdentifier","src":"3199:6:8"},{"kind":"number","nativeSrc":"3207:4:8","nodeType":"YulLiteral","src":"3207:4:8","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3195:3:8","nodeType":"YulIdentifier","src":"3195:3:8"},"nativeSrc":"3195:17:8","nodeType":"YulFunctionCall","src":"3195:17:8"},"variables":[{"name":"afterPtr","nativeSrc":"3183:8:8","nodeType":"YulTypedName","src":"3183:8:8","type":""}]},{"nativeSrc":"3225:33:8","nodeType":"YulVariableDeclaration","src":"3225:33:8","value":{"arguments":[{"name":"afterPtr","nativeSrc":"3249:8:8","nodeType":"YulIdentifier","src":"3249:8:8"}],"functionName":{"name":"mload","nativeSrc":"3243:5:8","nodeType":"YulIdentifier","src":"3243:5:8"},"nativeSrc":"3243:15:8","nodeType":"YulFunctionCall","src":"3243:15:8"},"variables":[{"name":"afterCache","nativeSrc":"3229:10:8","nodeType":"YulTypedName","src":"3229:10:8","type":""}]},{"expression":{"arguments":[{"name":"afterPtr","nativeSrc":"3278:8:8","nodeType":"YulIdentifier","src":"3278:8:8"},{"kind":"number","nativeSrc":"3288:4:8","nodeType":"YulLiteral","src":"3288:4:8","type":"","value":"0x00"}],"functionName":{"name":"mstore","nativeSrc":"3271:6:8","nodeType":"YulIdentifier","src":"3271:6:8"},"nativeSrc":"3271:22:8","nodeType":"YulFunctionCall","src":"3271:22:8"},"nativeSrc":"3271:22:8","nodeType":"YulExpressionStatement","src":"3271:22:8"},{"body":{"nativeSrc":"3418:1201:8","nodeType":"YulBlock","src":"3418:1201:8","statements":[{"nativeSrc":"3471:26:8","nodeType":"YulAssignment","src":"3471:26:8","value":{"arguments":[{"name":"dataPtr","nativeSrc":"3486:7:8","nodeType":"YulIdentifier","src":"3486:7:8"},{"kind":"number","nativeSrc":"3495:1:8","nodeType":"YulLiteral","src":"3495:1:8","type":"","value":"3"}],"functionName":{"name":"add","nativeSrc":"3482:3:8","nodeType":"YulIdentifier","src":"3482:3:8"},"nativeSrc":"3482:15:8","nodeType":"YulFunctionCall","src":"3482:15:8"},"variableNames":[{"name":"dataPtr","nativeSrc":"3471:7:8","nodeType":"YulIdentifier","src":"3471:7:8"}]},{"nativeSrc":"3514:27:8","nodeType":"YulVariableDeclaration","src":"3514:27:8","value":{"arguments":[{"name":"dataPtr","nativeSrc":"3533:7:8","nodeType":"YulIdentifier","src":"3533:7:8"}],"functionName":{"name":"mload","nativeSrc":"3527:5:8","nodeType":"YulIdentifier","src":"3527:5:8"},"nativeSrc":"3527:14:8","nodeType":"YulFunctionCall","src":"3527:14:8"},"variables":[{"name":"input","nativeSrc":"3518:5:8","nodeType":"YulTypedName","src":"3518:5:8","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4069:9:8","nodeType":"YulIdentifier","src":"4069:9:8"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4090:8:8","nodeType":"YulIdentifier","src":"4090:8:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4108:2:8","nodeType":"YulLiteral","src":"4108:2:8","type":"","value":"18"},{"name":"input","nativeSrc":"4112:5:8","nodeType":"YulIdentifier","src":"4112:5:8"}],"functionName":{"name":"shr","nativeSrc":"4104:3:8","nodeType":"YulIdentifier","src":"4104:3:8"},"nativeSrc":"4104:14:8","nodeType":"YulFunctionCall","src":"4104:14:8"},{"kind":"number","nativeSrc":"4120:4:8","nodeType":"YulLiteral","src":"4120:4:8","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4100:3:8","nodeType":"YulIdentifier","src":"4100:3:8"},"nativeSrc":"4100:25:8","nodeType":"YulFunctionCall","src":"4100:25:8"}],"functionName":{"name":"add","nativeSrc":"4086:3:8","nodeType":"YulIdentifier","src":"4086:3:8"},"nativeSrc":"4086:40:8","nodeType":"YulFunctionCall","src":"4086:40:8"}],"functionName":{"name":"mload","nativeSrc":"4080:5:8","nodeType":"YulIdentifier","src":"4080:5:8"},"nativeSrc":"4080:47:8","nodeType":"YulFunctionCall","src":"4080:47:8"}],"functionName":{"name":"mstore8","nativeSrc":"4061:7:8","nodeType":"YulIdentifier","src":"4061:7:8"},"nativeSrc":"4061:67:8","nodeType":"YulFunctionCall","src":"4061:67:8"},"nativeSrc":"4061:67:8","nodeType":"YulExpressionStatement","src":"4061:67:8"},{"nativeSrc":"4145:30:8","nodeType":"YulAssignment","src":"4145:30:8","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4162:9:8","nodeType":"YulIdentifier","src":"4162:9:8"},{"kind":"number","nativeSrc":"4173:1:8","nodeType":"YulLiteral","src":"4173:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4158:3:8","nodeType":"YulIdentifier","src":"4158:3:8"},"nativeSrc":"4158:17:8","nodeType":"YulFunctionCall","src":"4158:17:8"},"variableNames":[{"name":"resultPtr","nativeSrc":"4145:9:8","nodeType":"YulIdentifier","src":"4145:9:8"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4212:9:8","nodeType":"YulIdentifier","src":"4212:9:8"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4233:8:8","nodeType":"YulIdentifier","src":"4233:8:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4251:2:8","nodeType":"YulLiteral","src":"4251:2:8","type":"","value":"12"},{"name":"input","nativeSrc":"4255:5:8","nodeType":"YulIdentifier","src":"4255:5:8"}],"functionName":{"name":"shr","nativeSrc":"4247:3:8","nodeType":"YulIdentifier","src":"4247:3:8"},"nativeSrc":"4247:14:8","nodeType":"YulFunctionCall","src":"4247:14:8"},{"kind":"number","nativeSrc":"4263:4:8","nodeType":"YulLiteral","src":"4263:4:8","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4243:3:8","nodeType":"YulIdentifier","src":"4243:3:8"},"nativeSrc":"4243:25:8","nodeType":"YulFunctionCall","src":"4243:25:8"}],"functionName":{"name":"add","nativeSrc":"4229:3:8","nodeType":"YulIdentifier","src":"4229:3:8"},"nativeSrc":"4229:40:8","nodeType":"YulFunctionCall","src":"4229:40:8"}],"functionName":{"name":"mload","nativeSrc":"4223:5:8","nodeType":"YulIdentifier","src":"4223:5:8"},"nativeSrc":"4223:47:8","nodeType":"YulFunctionCall","src":"4223:47:8"}],"functionName":{"name":"mstore8","nativeSrc":"4204:7:8","nodeType":"YulIdentifier","src":"4204:7:8"},"nativeSrc":"4204:67:8","nodeType":"YulFunctionCall","src":"4204:67:8"},"nativeSrc":"4204:67:8","nodeType":"YulExpressionStatement","src":"4204:67:8"},{"nativeSrc":"4288:30:8","nodeType":"YulAssignment","src":"4288:30:8","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4305:9:8","nodeType":"YulIdentifier","src":"4305:9:8"},{"kind":"number","nativeSrc":"4316:1:8","nodeType":"YulLiteral","src":"4316:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4301:3:8","nodeType":"YulIdentifier","src":"4301:3:8"},"nativeSrc":"4301:17:8","nodeType":"YulFunctionCall","src":"4301:17:8"},"variableNames":[{"name":"resultPtr","nativeSrc":"4288:9:8","nodeType":"YulIdentifier","src":"4288:9:8"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4355:9:8","nodeType":"YulIdentifier","src":"4355:9:8"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4376:8:8","nodeType":"YulIdentifier","src":"4376:8:8"},{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"4394:1:8","nodeType":"YulLiteral","src":"4394:1:8","type":"","value":"6"},{"name":"input","nativeSrc":"4397:5:8","nodeType":"YulIdentifier","src":"4397:5:8"}],"functionName":{"name":"shr","nativeSrc":"4390:3:8","nodeType":"YulIdentifier","src":"4390:3:8"},"nativeSrc":"4390:13:8","nodeType":"YulFunctionCall","src":"4390:13:8"},{"kind":"number","nativeSrc":"4405:4:8","nodeType":"YulLiteral","src":"4405:4:8","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4386:3:8","nodeType":"YulIdentifier","src":"4386:3:8"},"nativeSrc":"4386:24:8","nodeType":"YulFunctionCall","src":"4386:24:8"}],"functionName":{"name":"add","nativeSrc":"4372:3:8","nodeType":"YulIdentifier","src":"4372:3:8"},"nativeSrc":"4372:39:8","nodeType":"YulFunctionCall","src":"4372:39:8"}],"functionName":{"name":"mload","nativeSrc":"4366:5:8","nodeType":"YulIdentifier","src":"4366:5:8"},"nativeSrc":"4366:46:8","nodeType":"YulFunctionCall","src":"4366:46:8"}],"functionName":{"name":"mstore8","nativeSrc":"4347:7:8","nodeType":"YulIdentifier","src":"4347:7:8"},"nativeSrc":"4347:66:8","nodeType":"YulFunctionCall","src":"4347:66:8"},"nativeSrc":"4347:66:8","nodeType":"YulExpressionStatement","src":"4347:66:8"},{"nativeSrc":"4430:30:8","nodeType":"YulAssignment","src":"4430:30:8","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4447:9:8","nodeType":"YulIdentifier","src":"4447:9:8"},{"kind":"number","nativeSrc":"4458:1:8","nodeType":"YulLiteral","src":"4458:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4443:3:8","nodeType":"YulIdentifier","src":"4443:3:8"},"nativeSrc":"4443:17:8","nodeType":"YulFunctionCall","src":"4443:17:8"},"variableNames":[{"name":"resultPtr","nativeSrc":"4430:9:8","nodeType":"YulIdentifier","src":"4430:9:8"}]},{"expression":{"arguments":[{"name":"resultPtr","nativeSrc":"4497:9:8","nodeType":"YulIdentifier","src":"4497:9:8"},{"arguments":[{"arguments":[{"name":"tablePtr","nativeSrc":"4518:8:8","nodeType":"YulIdentifier","src":"4518:8:8"},{"arguments":[{"name":"input","nativeSrc":"4532:5:8","nodeType":"YulIdentifier","src":"4532:5:8"},{"kind":"number","nativeSrc":"4539:4:8","nodeType":"YulLiteral","src":"4539:4:8","type":"","value":"0x3F"}],"functionName":{"name":"and","nativeSrc":"4528:3:8","nodeType":"YulIdentifier","src":"4528:3:8"},"nativeSrc":"4528:16:8","nodeType":"YulFunctionCall","src":"4528:16:8"}],"functionName":{"name":"add","nativeSrc":"4514:3:8","nodeType":"YulIdentifier","src":"4514:3:8"},"nativeSrc":"4514:31:8","nodeType":"YulFunctionCall","src":"4514:31:8"}],"functionName":{"name":"mload","nativeSrc":"4508:5:8","nodeType":"YulIdentifier","src":"4508:5:8"},"nativeSrc":"4508:38:8","nodeType":"YulFunctionCall","src":"4508:38:8"}],"functionName":{"name":"mstore8","nativeSrc":"4489:7:8","nodeType":"YulIdentifier","src":"4489:7:8"},"nativeSrc":"4489:58:8","nodeType":"YulFunctionCall","src":"4489:58:8"},"nativeSrc":"4489:58:8","nodeType":"YulExpressionStatement","src":"4489:58:8"},{"nativeSrc":"4564:30:8","nodeType":"YulAssignment","src":"4564:30:8","value":{"arguments":[{"name":"resultPtr","nativeSrc":"4581:9:8","nodeType":"YulIdentifier","src":"4581:9:8"},{"kind":"number","nativeSrc":"4592:1:8","nodeType":"YulLiteral","src":"4592:1:8","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4577:3:8","nodeType":"YulIdentifier","src":"4577:3:8"},"nativeSrc":"4577:17:8","nodeType":"YulFunctionCall","src":"4577:17:8"},"variableNames":[{"name":"resultPtr","nativeSrc":"4564:9:8","nodeType":"YulIdentifier","src":"4564:9:8"}]}]},"condition":{"arguments":[{"name":"dataPtr","nativeSrc":"3384:7:8","nodeType":"YulIdentifier","src":"3384:7:8"},{"name":"endPtr","nativeSrc":"3393:6:8","nodeType":"YulIdentifier","src":"3393:6:8"}],"functionName":{"name":"lt","nativeSrc":"3381:2:8","nodeType":"YulIdentifier","src":"3381:2:8"},"nativeSrc":"3381:19:8","nodeType":"YulFunctionCall","src":"3381:19:8"},"nativeSrc":"3360:1259:8","nodeType":"YulForLoop","post":{"nativeSrc":"3401:16:8","nodeType":"YulBlock","src":"3401:16:8","statements":[]},"pre":{"nativeSrc":"3364:16:8","nodeType":"YulBlock","src":"3364:16:8","statements":[]},"src":"3360:1259:8"},{"expression":{"arguments":[{"name":"afterPtr","nativeSrc":"4687:8:8","nodeType":"YulIdentifier","src":"4687:8:8"},{"name":"afterCache","nativeSrc":"4697:10:8","nodeType":"YulIdentifier","src":"4697:10:8"}],"functionName":{"name":"mstore","nativeSrc":"4680:6:8","nodeType":"YulIdentifier","src":"4680:6:8"},"nativeSrc":"4680:28:8","nodeType":"YulFunctionCall","src":"4680:28:8"},"nativeSrc":"4680:28:8","nodeType":"YulExpressionStatement","src":"4680:28:8"},{"body":{"nativeSrc":"4737:431:8","nodeType":"YulBlock","src":"4737:431:8","statements":[{"cases":[{"body":{"nativeSrc":"4933:125:8","nodeType":"YulBlock","src":"4933:125:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"4967:9:8","nodeType":"YulIdentifier","src":"4967:9:8"},{"kind":"number","nativeSrc":"4978:1:8","nodeType":"YulLiteral","src":"4978:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"4963:3:8","nodeType":"YulIdentifier","src":"4963:3:8"},"nativeSrc":"4963:17:8","nodeType":"YulFunctionCall","src":"4963:17:8"},{"kind":"number","nativeSrc":"4982:4:8","nodeType":"YulLiteral","src":"4982:4:8","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"4955:7:8","nodeType":"YulIdentifier","src":"4955:7:8"},"nativeSrc":"4955:32:8","nodeType":"YulFunctionCall","src":"4955:32:8"},"nativeSrc":"4955:32:8","nodeType":"YulExpressionStatement","src":"4955:32:8"},{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"5020:9:8","nodeType":"YulIdentifier","src":"5020:9:8"},{"kind":"number","nativeSrc":"5031:1:8","nodeType":"YulLiteral","src":"5031:1:8","type":"","value":"2"}],"functionName":{"name":"sub","nativeSrc":"5016:3:8","nodeType":"YulIdentifier","src":"5016:3:8"},"nativeSrc":"5016:17:8","nodeType":"YulFunctionCall","src":"5016:17:8"},{"kind":"number","nativeSrc":"5035:4:8","nodeType":"YulLiteral","src":"5035:4:8","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"5008:7:8","nodeType":"YulIdentifier","src":"5008:7:8"},"nativeSrc":"5008:32:8","nodeType":"YulFunctionCall","src":"5008:32:8"},"nativeSrc":"5008:32:8","nodeType":"YulExpressionStatement","src":"5008:32:8"}]},"nativeSrc":"4926:132:8","nodeType":"YulCase","src":"4926:132:8","value":{"kind":"number","nativeSrc":"4931:1:8","nodeType":"YulLiteral","src":"4931:1:8","type":"","value":"1"}},{"body":{"nativeSrc":"5082:72:8","nodeType":"YulBlock","src":"5082:72:8","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nativeSrc":"5116:9:8","nodeType":"YulIdentifier","src":"5116:9:8"},{"kind":"number","nativeSrc":"5127:1:8","nodeType":"YulLiteral","src":"5127:1:8","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"5112:3:8","nodeType":"YulIdentifier","src":"5112:3:8"},"nativeSrc":"5112:17:8","nodeType":"YulFunctionCall","src":"5112:17:8"},{"kind":"number","nativeSrc":"5131:4:8","nodeType":"YulLiteral","src":"5131:4:8","type":"","value":"0x3d"}],"functionName":{"name":"mstore8","nativeSrc":"5104:7:8","nodeType":"YulIdentifier","src":"5104:7:8"},"nativeSrc":"5104:32:8","nodeType":"YulFunctionCall","src":"5104:32:8"},"nativeSrc":"5104:32:8","nodeType":"YulExpressionStatement","src":"5104:32:8"}]},"nativeSrc":"5075:79:8","nodeType":"YulCase","src":"5075:79:8","value":{"kind":"number","nativeSrc":"5080:1:8","nodeType":"YulLiteral","src":"5080:1:8","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nativeSrc":"4900:4:8","nodeType":"YulIdentifier","src":"4900:4:8"}],"functionName":{"name":"mload","nativeSrc":"4894:5:8","nodeType":"YulIdentifier","src":"4894:5:8"},"nativeSrc":"4894:11:8","nodeType":"YulFunctionCall","src":"4894:11:8"},{"kind":"number","nativeSrc":"4907:1:8","nodeType":"YulLiteral","src":"4907:1:8","type":"","value":"3"}],"functionName":{"name":"mod","nativeSrc":"4890:3:8","nodeType":"YulIdentifier","src":"4890:3:8"},"nativeSrc":"4890:19:8","nodeType":"YulFunctionCall","src":"4890:19:8"},"nativeSrc":"4883:271:8","nodeType":"YulSwitch","src":"4883:271:8"}]},"condition":{"name":"withPadding","nativeSrc":"4725:11:8","nodeType":"YulIdentifier","src":"4725:11:8"},"nativeSrc":"4722:446:8","nodeType":"YulIf","src":"4722:446:8"}]},"evmVersion":"paris","externalReferences":[{"declaration":2258,"isOffset":false,"isSlot":false,"src":"2912:4:8","valueSize":1},{"declaration":2258,"isOffset":false,"isSlot":false,"src":"2947:4:8","valueSize":1},{"declaration":2258,"isOffset":false,"isSlot":false,"src":"2959:4:8","valueSize":1},{"declaration":2258,"isOffset":false,"isSlot":false,"src":"4900:4:8","valueSize":1},{"declaration":2299,"isOffset":false,"isSlot":false,"src":"2871:6:8","valueSize":1},{"declaration":2260,"isOffset":false,"isSlot":false,"src":"2771:5:8","valueSize":1},{"declaration":2262,"isOffset":false,"isSlot":false,"src":"4725:11:8","valueSize":1}],"flags":["memory-safe"],"id":2305,"nodeType":"InlineAssembly","src":"2641:2537:8"},{"expression":{"id":2306,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"5195:6:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2266,"id":2307,"nodeType":"Return","src":"5188:13:8"}]},"documentation":{"id":2256,"nodeType":"StructuredDocumentation","src":"1123:58:8","text":" @dev Internal table-agnostic conversion"},"id":2309,"implemented":true,"kind":"function","modifiers":[],"name":"_encode","nameLocation":"1195:7:8","nodeType":"FunctionDefinition","parameters":{"id":2263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"data","nameLocation":"1216:4:8","nodeType":"VariableDeclaration","scope":2309,"src":"1203:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2257,"name":"bytes","nodeType":"ElementaryTypeName","src":"1203:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2260,"mutability":"mutable","name":"table","nameLocation":"1236:5:8","nodeType":"VariableDeclaration","scope":2309,"src":"1222:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2259,"name":"string","nodeType":"ElementaryTypeName","src":"1222:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2262,"mutability":"mutable","name":"withPadding","nameLocation":"1248:11:8","nodeType":"VariableDeclaration","scope":2309,"src":"1243:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2261,"name":"bool","nodeType":"ElementaryTypeName","src":"1243:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1202:58:8"},"returnParameters":{"id":2266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2309,"src":"1283:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2264,"name":"string","nodeType":"ElementaryTypeName","src":"1283:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1282:15:8"},"scope":2310,"src":"1186:4022:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2311,"src":"202:5008:8","usedErrors":[],"usedEvents":[]}],"src":"100:5111:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2340]},"id":2341,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2312,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"127:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2340,"linearizedBaseContracts":[2340],"name":"Context","nameLocation":"642:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2321,"nodeType":"Block","src":"718:34:9","statements":[{"expression":{"expression":{"id":2318,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:9","memberName":"sender","nodeType":"MemberAccess","src":"735:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2317,"id":2320,"nodeType":"Return","src":"728:17:9"}]},"id":2322,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:9","nodeType":"FunctionDefinition","parameters":{"id":2314,"nodeType":"ParameterList","parameters":[],"src":"675:2:9"},"returnParameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2322,"src":"709:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:9"},"scope":2340,"src":"656:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2330,"nodeType":"Block","src":"825:32:9","statements":[{"expression":{"expression":{"id":2327,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:9","memberName":"data","nodeType":"MemberAccess","src":"842:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2326,"id":2329,"nodeType":"Return","src":"835:15:9"}]},"id":2331,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:9","nodeType":"FunctionDefinition","parameters":{"id":2323,"nodeType":"ParameterList","parameters":[],"src":"775:2:9"},"returnParameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2331,"src":"809:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2324,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:9"},"scope":2340,"src":"758:99:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2338,"nodeType":"Block","src":"935:25:9","statements":[{"expression":{"hexValue":"30","id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2335,"id":2337,"nodeType":"Return","src":"945:8:9"}]},"id":2339,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:9","nodeType":"FunctionDefinition","parameters":{"id":2332,"nodeType":"ParameterList","parameters":[],"src":"892:2:9"},"returnParameters":{"id":2335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2339,"src":"926:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2333,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:9"},"scope":2340,"src":"863:97:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2341,"src":"624:338:9","usedErrors":[],"usedEvents":[]}],"src":"101:862:9"},"id":9},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[2392]},"id":2393,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2342,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"125:489:10","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":2392,"linearizedBaseContracts":[2392],"name":"Panic","nameLocation":"665:5:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"677:36:10","text":"@dev generic / unspecified error"},"id":2347,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:10","nodeType":"VariableDeclaration","scope":2392,"src":"718:40:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":2346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":2348,"nodeType":"StructuredDocumentation","src":"764:37:10","text":"@dev used by the assert() builtin"},"id":2351,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:10","nodeType":"VariableDeclaration","scope":2392,"src":"806:39:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2349,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":2350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"851:41:10","text":"@dev arithmetic underflow or overflow"},"id":2355,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:10","nodeType":"VariableDeclaration","scope":2392,"src":"897:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:10","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":2356,"nodeType":"StructuredDocumentation","src":"950:35:10","text":"@dev division or modulo by zero"},"id":2359,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:10","nodeType":"VariableDeclaration","scope":2392,"src":"990:49:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":2358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"1045:30:10","text":"@dev enum conversion error"},"id":2363,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:10","nodeType":"VariableDeclaration","scope":2392,"src":"1080:54:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:10","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"1140:36:10","text":"@dev invalid encoding in storage"},"id":2367,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:10","nodeType":"VariableDeclaration","scope":2392,"src":"1181:55:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":2368,"nodeType":"StructuredDocumentation","src":"1242:24:10","text":"@dev empty array pop"},"id":2371,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:10","nodeType":"VariableDeclaration","scope":2392,"src":"1271:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":2370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:10","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"1325:35:10","text":"@dev array out of bounds access"},"id":2375,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:10","nodeType":"VariableDeclaration","scope":2392,"src":"1365:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2373,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:10","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"1423:65:10","text":"@dev resource error (too large allocation or too large array)"},"id":2379,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:10","nodeType":"VariableDeclaration","scope":2392,"src":"1493:47:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":2378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:10","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"1546:42:10","text":"@dev calling invalid internal function"},"id":2383,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:10","nodeType":"VariableDeclaration","scope":2392,"src":"1593:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":2382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:10","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":2390,"nodeType":"Block","src":"1819:151:10","statements":[{"AST":{"nativeSrc":"1854:110:10","nodeType":"YulBlock","src":"1854:110:10","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:10","nodeType":"YulLiteral","src":"1875:4:10","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:10","nodeType":"YulLiteral","src":"1881:10:10","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:10","nodeType":"YulIdentifier","src":"1868:6:10"},"nativeSrc":"1868:24:10","nodeType":"YulFunctionCall","src":"1868:24:10"},"nativeSrc":"1868:24:10","nodeType":"YulExpressionStatement","src":"1868:24:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:10","nodeType":"YulLiteral","src":"1912:4:10","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:10","nodeType":"YulIdentifier","src":"1918:4:10"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:10","nodeType":"YulIdentifier","src":"1905:6:10"},"nativeSrc":"1905:18:10","nodeType":"YulFunctionCall","src":"1905:18:10"},"nativeSrc":"1905:18:10","nodeType":"YulExpressionStatement","src":"1905:18:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:10","nodeType":"YulLiteral","src":"1943:4:10","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:10","nodeType":"YulLiteral","src":"1949:4:10","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:10","nodeType":"YulIdentifier","src":"1936:6:10"},"nativeSrc":"1936:18:10","nodeType":"YulFunctionCall","src":"1936:18:10"},"nativeSrc":"1936:18:10","nodeType":"YulExpressionStatement","src":"1936:18:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":2386,"isOffset":false,"isSlot":false,"src":"1918:4:10","valueSize":1}],"flags":["memory-safe"],"id":2389,"nodeType":"InlineAssembly","src":"1829:135:10"}]},"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"1658:113:10","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":2391,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:10","nodeType":"FunctionDefinition","parameters":{"id":2387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2386,"mutability":"mutable","name":"code","nameLocation":"1799:4:10","nodeType":"VariableDeclaration","scope":2391,"src":"1791:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:10"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[],"src":"1819:0:10"},"scope":2392,"src":"1776:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2393,"src":"657:1315:10","usedErrors":[],"usedEvents":[]}],"src":"99:1874:10"},"id":10},"@openzeppelin/contracts/utils/Pausable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","exportedSymbols":{"Context":[2340],"Pausable":[2500]},"id":2501,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2394,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2501,"sourceUnit":2341,"src":"128:45:11","symbolAliases":[{"foreign":{"id":2395,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2340,"src":"136:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2398,"name":"Context","nameLocations":["645:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":2340,"src":"645:7:11"},"id":2399,"nodeType":"InheritanceSpecifier","src":"645:7:11"}],"canonicalName":"Pausable","contractDependencies":[],"contractKind":"contract","documentation":{"id":2397,"nodeType":"StructuredDocumentation","src":"175:439:11","text":" @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."},"fullyImplemented":true,"id":2500,"linearizedBaseContracts":[2500,2340],"name":"Pausable","nameLocation":"633:8:11","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2401,"mutability":"mutable","name":"_paused","nameLocation":"672:7:11","nodeType":"VariableDeclaration","scope":2500,"src":"659:20:11","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2400,"name":"bool","nodeType":"ElementaryTypeName","src":"659:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"anonymous":false,"documentation":{"id":2402,"nodeType":"StructuredDocumentation","src":"686:73:11","text":" @dev Emitted when the pause is triggered by `account`."},"eventSelector":"62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258","id":2406,"name":"Paused","nameLocation":"770:6:11","nodeType":"EventDefinition","parameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"785:7:11","nodeType":"VariableDeclaration","scope":2406,"src":"777:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2403,"name":"address","nodeType":"ElementaryTypeName","src":"777:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"776:17:11"},"src":"764:30:11"},{"anonymous":false,"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"800:70:11","text":" @dev Emitted when the pause is lifted by `account`."},"eventSelector":"5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa","id":2411,"name":"Unpaused","nameLocation":"881:8:11","nodeType":"EventDefinition","parameters":{"id":2410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"indexed":false,"mutability":"mutable","name":"account","nameLocation":"898:7:11","nodeType":"VariableDeclaration","scope":2411,"src":"890:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"889:17:11"},"src":"875:32:11"},{"documentation":{"id":2412,"nodeType":"StructuredDocumentation","src":"913:76:11","text":" @dev The operation failed because the contract is paused."},"errorSelector":"d93c0665","id":2414,"name":"EnforcedPause","nameLocation":"1000:13:11","nodeType":"ErrorDefinition","parameters":{"id":2413,"nodeType":"ParameterList","parameters":[],"src":"1013:2:11"},"src":"994:22:11"},{"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"1022:80:11","text":" @dev The operation failed because the contract is not paused."},"errorSelector":"8dfc202b","id":2417,"name":"ExpectedPause","nameLocation":"1113:13:11","nodeType":"ErrorDefinition","parameters":{"id":2416,"nodeType":"ParameterList","parameters":[],"src":"1126:2:11"},"src":"1107:22:11"},{"body":{"id":2424,"nodeType":"Block","src":"1340:47:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2420,"name":"_requireNotPaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"1350:17:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1350:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2422,"nodeType":"ExpressionStatement","src":"1350:19:11"},{"id":2423,"nodeType":"PlaceholderStatement","src":"1379:1:11"}]},"documentation":{"id":2418,"nodeType":"StructuredDocumentation","src":"1135:175:11","text":" @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."},"id":2425,"name":"whenNotPaused","nameLocation":"1324:13:11","nodeType":"ModifierDefinition","parameters":{"id":2419,"nodeType":"ParameterList","parameters":[],"src":"1337:2:11"},"src":"1315:72:11","virtual":false,"visibility":"internal"},{"body":{"id":2432,"nodeType":"Block","src":"1587:44:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2428,"name":"_requirePaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"1597:14:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1597:16:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2430,"nodeType":"ExpressionStatement","src":"1597:16:11"},{"id":2431,"nodeType":"PlaceholderStatement","src":"1623:1:11"}]},"documentation":{"id":2426,"nodeType":"StructuredDocumentation","src":"1393:167:11","text":" @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."},"id":2433,"name":"whenPaused","nameLocation":"1574:10:11","nodeType":"ModifierDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[],"src":"1584:2:11"},"src":"1565:66:11","virtual":false,"visibility":"internal"},{"body":{"id":2441,"nodeType":"Block","src":"1779:31:11","statements":[{"expression":{"id":2439,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"1796:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2438,"id":2440,"nodeType":"Return","src":"1789:14:11"}]},"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"1637:84:11","text":" @dev Returns true if the contract is paused, and false otherwise."},"functionSelector":"5c975abb","id":2442,"implemented":true,"kind":"function","modifiers":[],"name":"paused","nameLocation":"1735:6:11","nodeType":"FunctionDefinition","parameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"1741:2:11"},"returnParameters":{"id":2438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2442,"src":"1773:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2436,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1772:6:11"},"scope":2500,"src":"1726:84:11","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2453,"nodeType":"Block","src":"1929:77:11","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"id":2446,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"1943:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1943:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2452,"nodeType":"IfStatement","src":"1939:61:11","trueBody":{"id":2451,"nodeType":"Block","src":"1953:47:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2448,"name":"EnforcedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"1974:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1974:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2450,"nodeType":"RevertStatement","src":"1967:22:11"}]}}]},"documentation":{"id":2443,"nodeType":"StructuredDocumentation","src":"1816:57:11","text":" @dev Throws if the contract is paused."},"id":2454,"implemented":true,"kind":"function","modifiers":[],"name":"_requireNotPaused","nameLocation":"1887:17:11","nodeType":"FunctionDefinition","parameters":{"id":2444,"nodeType":"ParameterList","parameters":[],"src":"1904:2:11"},"returnParameters":{"id":2445,"nodeType":"ParameterList","parameters":[],"src":"1929:0:11"},"scope":2500,"src":"1878:128:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2466,"nodeType":"Block","src":"2126:78:11","statements":[{"condition":{"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2140:9:11","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":2458,"name":"paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"2141:6:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2141:8:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2465,"nodeType":"IfStatement","src":"2136:62:11","trueBody":{"id":2464,"nodeType":"Block","src":"2151:47:11","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2461,"name":"ExpectedPause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"2172:13:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2172:15:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2463,"nodeType":"RevertStatement","src":"2165:22:11"}]}}]},"documentation":{"id":2455,"nodeType":"StructuredDocumentation","src":"2012:61:11","text":" @dev Throws if the contract is not paused."},"id":2467,"implemented":true,"kind":"function","modifiers":[],"name":"_requirePaused","nameLocation":"2087:14:11","nodeType":"FunctionDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[],"src":"2101:2:11"},"returnParameters":{"id":2457,"nodeType":"ParameterList","parameters":[],"src":"2126:0:11"},"scope":2500,"src":"2078:126:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2482,"nodeType":"Block","src":"2388:66:11","statements":[{"expression":{"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2473,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"2398:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2408:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2398:14:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2476,"nodeType":"ExpressionStatement","src":"2398:14:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2478,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2434:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2434:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2477,"name":"Paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2406,"src":"2427:6:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2427:20:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2481,"nodeType":"EmitStatement","src":"2422:25:11"}]},"documentation":{"id":2468,"nodeType":"StructuredDocumentation","src":"2210:124:11","text":" @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."},"id":2483,"implemented":true,"kind":"function","modifiers":[{"id":2471,"kind":"modifierInvocation","modifierName":{"id":2470,"name":"whenNotPaused","nameLocations":["2374:13:11"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"2374:13:11"},"nodeType":"ModifierInvocation","src":"2374:13:11"}],"name":"_pause","nameLocation":"2348:6:11","nodeType":"FunctionDefinition","parameters":{"id":2469,"nodeType":"ParameterList","parameters":[],"src":"2354:2:11"},"returnParameters":{"id":2472,"nodeType":"ParameterList","parameters":[],"src":"2388:0:11"},"scope":2500,"src":"2339:115:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2498,"nodeType":"Block","src":"2634:69:11","statements":[{"expression":{"id":2491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2489,"name":"_paused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2401,"src":"2644:7:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2654:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2644:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2492,"nodeType":"ExpressionStatement","src":"2644:15:11"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2494,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2322,"src":"2683:10:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2683:12:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2493,"name":"Unpaused","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2411,"src":"2674:8:11","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2674:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2497,"nodeType":"EmitStatement","src":"2669:27:11"}]},"documentation":{"id":2484,"nodeType":"StructuredDocumentation","src":"2460:121:11","text":" @dev Returns to normal state.\n Requirements:\n - The contract must be paused."},"id":2499,"implemented":true,"kind":"function","modifiers":[{"id":2487,"kind":"modifierInvocation","modifierName":{"id":2486,"name":"whenPaused","nameLocations":["2623:10:11"],"nodeType":"IdentifierPath","referencedDeclaration":2433,"src":"2623:10:11"},"nodeType":"ModifierInvocation","src":"2623:10:11"}],"name":"_unpause","nameLocation":"2595:8:11","nodeType":"FunctionDefinition","parameters":{"id":2485,"nodeType":"ParameterList","parameters":[],"src":"2603:2:11"},"returnParameters":{"id":2488,"nodeType":"ParameterList","parameters":[],"src":"2634:0:11"},"scope":2500,"src":"2586:117:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2501,"src":"615:2090:11","usedErrors":[2414,2417],"usedEvents":[2406,2411]}],"src":"102:2604:11"},"id":11},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[2569]},"id":2570,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2502,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:12"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":2503,"nodeType":"StructuredDocumentation","src":"135:894:12","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":2569,"linearizedBaseContracts":[2569],"name":"ReentrancyGuard","nameLocation":"1048:15:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2506,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:12","nodeType":"VariableDeclaration","scope":2569,"src":"1818:40:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2504,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":2509,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:12","nodeType":"VariableDeclaration","scope":2569,"src":"1864:36:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":2511,"mutability":"mutable","name":"_status","nameLocation":"1923:7:12","nodeType":"VariableDeclaration","scope":2569,"src":"1907:23:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":2512,"nodeType":"StructuredDocumentation","src":"1937:52:12","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":2514,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:12","nodeType":"ErrorDefinition","parameters":{"id":2513,"nodeType":"ParameterList","parameters":[],"src":"2028:2:12"},"src":"1994:37:12"},{"body":{"id":2521,"nodeType":"Block","src":"2051:38:12","statements":[{"expression":{"id":2519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2517,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2061:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2518,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"2071:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2520,"nodeType":"ExpressionStatement","src":"2061:21:12"}]},"id":2522,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2515,"nodeType":"ParameterList","parameters":[],"src":"2048:2:12"},"returnParameters":{"id":2516,"nodeType":"ParameterList","parameters":[],"src":"2051:0:12"},"scope":2569,"src":"2037:52:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2532,"nodeType":"Block","src":"2490:79:12","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2525,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2549,"src":"2500:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2527,"nodeType":"ExpressionStatement","src":"2500:21:12"},{"id":2528,"nodeType":"PlaceholderStatement","src":"2531:1:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":2529,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2557,"src":"2542:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":2530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2531,"nodeType":"ExpressionStatement","src":"2542:20:12"}]},"documentation":{"id":2523,"nodeType":"StructuredDocumentation","src":"2095:366:12","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":2533,"name":"nonReentrant","nameLocation":"2475:12:12","nodeType":"ModifierDefinition","parameters":{"id":2524,"nodeType":"ParameterList","parameters":[],"src":"2487:2:12"},"src":"2466:103:12","virtual":false,"visibility":"internal"},{"body":{"id":2548,"nodeType":"Block","src":"2614:268:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2536,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2702:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2537,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"2713:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2543,"nodeType":"IfStatement","src":"2698:86:12","trueBody":{"id":2542,"nodeType":"Block","src":"2722:62:12","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2539,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2514,"src":"2743:28:12","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2541,"nodeType":"RevertStatement","src":"2736:37:12"}]}},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2544,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"2858:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2545,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"2868:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"2858:17:12"}]},"id":2549,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:12","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[],"src":"2603:2:12"},"returnParameters":{"id":2535,"nodeType":"ParameterList","parameters":[],"src":"2614:0:12"},"scope":2569,"src":"2575:307:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2556,"nodeType":"Block","src":"2926:170:12","statements":[{"expression":{"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2552,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3068:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2553,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2506,"src":"3078:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2555,"nodeType":"ExpressionStatement","src":"3068:21:12"}]},"id":2557,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:12","nodeType":"FunctionDefinition","parameters":{"id":2550,"nodeType":"ParameterList","parameters":[],"src":"2915:2:12"},"returnParameters":{"id":2551,"nodeType":"ParameterList","parameters":[],"src":"2926:0:12"},"scope":2569,"src":"2888:208:12","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2567,"nodeType":"Block","src":"3339:42:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2563,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2511,"src":"3356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2564,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"3367:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2562,"id":2566,"nodeType":"Return","src":"3349:25:12"}]},"documentation":{"id":2558,"nodeType":"StructuredDocumentation","src":"3102:168:12","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":2568,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:12","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[],"src":"3307:2:12"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2568,"src":"3333:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2560,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:12"},"scope":2569,"src":"3275:106:12","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2570,"src":"1030:2353:12","usedErrors":[2514],"usedEvents":[]}],"src":"109:3275:12"},"id":12},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[5592],"SafeCast":[7357],"SignedMath":[7501],"Strings":[3971]},"id":3972,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2571,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2573,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3972,"sourceUnit":5593,"src":"127:37:13","symbolAliases":[{"foreign":{"id":2572,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"135:4:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":2575,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3972,"sourceUnit":7358,"src":"165:45:13","symbolAliases":[{"foreign":{"id":2574,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2577,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3972,"sourceUnit":7502,"src":"211:49:13","symbolAliases":[{"foreign":{"id":2576,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"219:10:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2578,"nodeType":"StructuredDocumentation","src":"262:34:13","text":" @dev String operations."},"fullyImplemented":true,"id":3971,"linearizedBaseContracts":[3971],"name":"Strings","nameLocation":"305:7:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2580,"libraryName":{"id":2579,"name":"SafeCast","nameLocations":["325:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":7357,"src":"325:8:13"},"nodeType":"UsingForDirective","src":"319:21:13"},{"constant":true,"id":2583,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:13","nodeType":"VariableDeclaration","scope":3971,"src":"346:56:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2581,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2586,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:13","nodeType":"VariableDeclaration","scope":3971,"src":"408:42:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2584,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:13","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":2622,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:13","nodeType":"VariableDeclaration","scope":3971,"src":"456:302:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":2611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":2606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":2601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":2596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":2590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":2589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":2591,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":2594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:13","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":2595,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:13","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:13","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":2599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":2598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:13","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":2600,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:13","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:13","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":2604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":2603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:13","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":2605,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:13","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:13","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":2609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:13","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:13","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":2610,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:13","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:13","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":2614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":2613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:13","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":2615,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:13","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:13","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":2619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":2618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:13","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":2620,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:13","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"778:81:13","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2629,"name":"StringsInsufficientHexLength","nameLocation":"870:28:13","nodeType":"ErrorDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"value","nameLocation":"907:5:13","nodeType":"VariableDeclaration","scope":2629,"src":"899:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"length","nameLocation":"922:6:13","nodeType":"VariableDeclaration","scope":2629,"src":"914:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2626,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:13"},"src":"864:66:13"},{"documentation":{"id":2630,"nodeType":"StructuredDocumentation","src":"936:108:13","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":2632,"name":"StringsInvalidChar","nameLocation":"1055:18:13","nodeType":"ErrorDefinition","parameters":{"id":2631,"nodeType":"ParameterList","parameters":[],"src":"1073:2:13"},"src":"1049:27:13"},{"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"1082:84:13","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":2635,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:13","nodeType":"ErrorDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[],"src":"1204:2:13"},"src":"1171:36:13"},{"body":{"id":2682,"nodeType":"Block","src":"1379:561:13","statements":[{"id":2681,"nodeType":"UncheckedBlock","src":"1389:545:13","statements":[{"assignments":[2644],"declarations":[{"constant":false,"id":2644,"mutability":"mutable","name":"length","nameLocation":"1421:6:13","nodeType":"VariableDeclaration","scope":2681,"src":"1413:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2643,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2651,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"1441:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2645,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"1430:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5592_$","typeString":"type(library Math)"}},"id":2646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:13","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":5424,"src":"1430:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:13"},{"assignments":[2653],"declarations":[{"constant":false,"id":2653,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:13","nodeType":"VariableDeclaration","scope":2681,"src":"1465:20:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2652,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2658,"initialValue":{"arguments":[{"id":2656,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2644,"src":"1499:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2654,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:13"},{"assignments":[2660],"declarations":[{"constant":false,"id":2660,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:13","nodeType":"VariableDeclaration","scope":2681,"src":"1520:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2659,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2661,"nodeType":"VariableDeclarationStatement","src":"1520:11:13"},{"AST":{"nativeSrc":"1570:67:13","nodeType":"YulBlock","src":"1570:67:13","statements":[{"nativeSrc":"1588:35:13","nodeType":"YulAssignment","src":"1588:35:13","value":{"arguments":[{"name":"buffer","nativeSrc":"1599:6:13","nodeType":"YulIdentifier","src":"1599:6:13"},{"arguments":[{"kind":"number","nativeSrc":"1611:2:13","nodeType":"YulLiteral","src":"1611:2:13","type":"","value":"32"},{"name":"length","nativeSrc":"1615:6:13","nodeType":"YulIdentifier","src":"1615:6:13"}],"functionName":{"name":"add","nativeSrc":"1607:3:13","nodeType":"YulIdentifier","src":"1607:3:13"},"nativeSrc":"1607:15:13","nodeType":"YulFunctionCall","src":"1607:15:13"}],"functionName":{"name":"add","nativeSrc":"1595:3:13","nodeType":"YulIdentifier","src":"1595:3:13"},"nativeSrc":"1595:28:13","nodeType":"YulFunctionCall","src":"1595:28:13"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:13","nodeType":"YulIdentifier","src":"1588:3:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2653,"isOffset":false,"isSlot":false,"src":"1599:6:13","valueSize":1},{"declaration":2644,"isOffset":false,"isSlot":false,"src":"1615:6:13","valueSize":1},{"declaration":2660,"isOffset":false,"isSlot":false,"src":"1588:3:13","valueSize":1}],"flags":["memory-safe"],"id":2662,"nodeType":"InlineAssembly","src":"1545:92:13"},{"body":{"id":2677,"nodeType":"Block","src":"1663:234:13","statements":[{"expression":{"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:13","subExpression":{"id":2664,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2660,"src":"1681:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2666,"nodeType":"ExpressionStatement","src":"1681:5:13"},{"AST":{"nativeSrc":"1729:86:13","nodeType":"YulBlock","src":"1729:86:13","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1759:3:13","nodeType":"YulIdentifier","src":"1759:3:13"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1773:5:13","nodeType":"YulIdentifier","src":"1773:5:13"},{"kind":"number","nativeSrc":"1780:2:13","nodeType":"YulLiteral","src":"1780:2:13","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1769:3:13","nodeType":"YulIdentifier","src":"1769:3:13"},"nativeSrc":"1769:14:13","nodeType":"YulFunctionCall","src":"1769:14:13"},{"name":"HEX_DIGITS","nativeSrc":"1785:10:13","nodeType":"YulIdentifier","src":"1785:10:13"}],"functionName":{"name":"byte","nativeSrc":"1764:4:13","nodeType":"YulIdentifier","src":"1764:4:13"},"nativeSrc":"1764:32:13","nodeType":"YulFunctionCall","src":"1764:32:13"}],"functionName":{"name":"mstore8","nativeSrc":"1751:7:13","nodeType":"YulIdentifier","src":"1751:7:13"},"nativeSrc":"1751:46:13","nodeType":"YulFunctionCall","src":"1751:46:13"},"nativeSrc":"1751:46:13","nodeType":"YulExpressionStatement","src":"1751:46:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":2583,"isOffset":false,"isSlot":false,"src":"1785:10:13","valueSize":1},{"declaration":2660,"isOffset":false,"isSlot":false,"src":"1759:3:13","valueSize":1},{"declaration":2638,"isOffset":false,"isSlot":false,"src":"1773:5:13","valueSize":1}],"flags":["memory-safe"],"id":2667,"nodeType":"InlineAssembly","src":"1704:111:13"},{"expression":{"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"1832:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2671,"nodeType":"ExpressionStatement","src":"1832:11:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2638,"src":"1865:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2676,"nodeType":"IfStatement","src":"1861:21:13","trueBody":{"id":2675,"nodeType":"Break","src":"1877:5:13"}}]},"condition":{"hexValue":"74727565","id":2663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2678,"nodeType":"WhileStatement","src":"1650:247:13"},{"expression":{"id":2679,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2653,"src":"1917:6:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2642,"id":2680,"nodeType":"Return","src":"1910:13:13"}]}]},"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"1213:90:13","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2683,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:13","nodeType":"FunctionDefinition","parameters":{"id":2639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2638,"mutability":"mutable","name":"value","nameLocation":"1334:5:13","nodeType":"VariableDeclaration","scope":2683,"src":"1326:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2637,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:13"},"returnParameters":{"id":2642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2683,"src":"1364:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2640,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:13"},"scope":3971,"src":"1308:632:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2708,"nodeType":"Block","src":"2116:92:13","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"2147:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:13","trueExpression":{"hexValue":"2d","id":2697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2686,"src":"2193:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2701,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7501,"src":"2178:10:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$7501_$","typeString":"type(library SignedMath)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:13","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":7500,"src":"2178:14:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2700,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"2169:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2691,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:13","typeDescriptions":{}}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:13","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2690,"id":2707,"nodeType":"Return","src":"2126:75:13"}]},"documentation":{"id":2684,"nodeType":"StructuredDocumentation","src":"1946:89:13","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2709,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:13","nodeType":"FunctionDefinition","parameters":{"id":2687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2686,"mutability":"mutable","name":"value","nameLocation":"2071:5:13","nodeType":"VariableDeclaration","scope":2709,"src":"2064:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2685,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:13"},"returnParameters":{"id":2690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2709,"src":"2101:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2688,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:13"},"scope":3971,"src":"2040:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2728,"nodeType":"Block","src":"2387:100:13","statements":[{"id":2727,"nodeType":"UncheckedBlock","src":"2397:84:13","statements":[{"expression":{"arguments":[{"id":2718,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"2440:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"2459:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2719,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"2447:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5592_$","typeString":"type(library Math)"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:13","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":5535,"src":"2447:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2717,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2729,2812,2832],"referencedDeclaration":2812,"src":"2428:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2716,"id":2726,"nodeType":"Return","src":"2421:49:13"}]}]},"documentation":{"id":2710,"nodeType":"StructuredDocumentation","src":"2214:94:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2729,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:13","nodeType":"FunctionDefinition","parameters":{"id":2713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2712,"mutability":"mutable","name":"value","nameLocation":"2342:5:13","nodeType":"VariableDeclaration","scope":2729,"src":"2334:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:13"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2729,"src":"2372:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2714,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:13"},"scope":3971,"src":"2313:174:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2811,"nodeType":"Block","src":"2700:435:13","statements":[{"assignments":[2740],"declarations":[{"constant":false,"id":2740,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:13","nodeType":"VariableDeclaration","scope":2811,"src":"2710:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2742,"initialValue":{"id":2741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"2731:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:13"},{"assignments":[2744],"declarations":[{"constant":false,"id":2744,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:13","nodeType":"VariableDeclaration","scope":2811,"src":"2746:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2743,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2753,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2748,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2782:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2745,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:13"},{"expression":{"id":2758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2754,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"2803:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2756,"indexExpression":{"hexValue":"30","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2759,"nodeType":"ExpressionStatement","src":"2803:15:13"},{"expression":{"id":2764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2760,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"2828:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2762,"indexExpression":{"hexValue":"31","id":2761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2765,"nodeType":"ExpressionStatement","src":"2828:15:13"},{"body":{"id":2794,"nodeType":"Block","src":"2898:95:13","statements":[{"expression":{"id":2788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2780,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"2912:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2782,"indexExpression":{"id":2781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2919:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2783,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"2924:10:13","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2787,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2784,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"2935:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2789,"nodeType":"ExpressionStatement","src":"2912:40:13"},{"expression":{"id":2792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2790,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"2966:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2793,"nodeType":"ExpressionStatement","src":"2966:16:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2774,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2886:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2795,"initializationExpression":{"assignments":[2767],"declarations":[{"constant":false,"id":2767,"mutability":"mutable","name":"i","nameLocation":"2866:1:13","nodeType":"VariableDeclaration","scope":2795,"src":"2858:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2773,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2769,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"2874:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:13","subExpression":{"id":2777,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2895:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2779,"nodeType":"ExpressionStatement","src":"2893:3:13"},"nodeType":"ForStatement","src":"2853:140:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2796,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2740,"src":"3006:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2805,"nodeType":"IfStatement","src":"3002:96:13","trueBody":{"id":2804,"nodeType":"Block","src":"3023:75:13","statements":[{"errorCall":{"arguments":[{"id":2800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"3073:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2801,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"3080:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2799,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"3044:28:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2803,"nodeType":"RevertStatement","src":"3037:50:13"}]}},{"expression":{"arguments":[{"id":2808,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"3121:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2806,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:13","typeDescriptions":{}}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2738,"id":2810,"nodeType":"Return","src":"3107:21:13"}]},"documentation":{"id":2730,"nodeType":"StructuredDocumentation","src":"2493:112:13","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2812,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:13","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2732,"mutability":"mutable","name":"value","nameLocation":"2639:5:13","nodeType":"VariableDeclaration","scope":2812,"src":"2631:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"length","nameLocation":"2654:6:13","nodeType":"VariableDeclaration","scope":2812,"src":"2646:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2733,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:13"},"returnParameters":{"id":2738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2812,"src":"2685:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2736,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:13"},"scope":3971,"src":"2610:525:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2831,"nodeType":"Block","src":"3367:75:13","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2825,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"3412:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2823,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:13","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:13","typeDescriptions":{}}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2828,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2586,"src":"3420:14:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2820,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2729,2812,2832],"referencedDeclaration":2812,"src":"3384:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2819,"id":2830,"nodeType":"Return","src":"3377:58:13"}]},"documentation":{"id":2813,"nodeType":"StructuredDocumentation","src":"3141:148:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2832,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:13","nodeType":"FunctionDefinition","parameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"addr","nameLocation":"3323:4:13","nodeType":"VariableDeclaration","scope":2832,"src":"3315:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2814,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:13"},"returnParameters":{"id":2819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2832,"src":"3352:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2817,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:13"},"scope":3971,"src":"3294:148:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2896,"nodeType":"Block","src":"3699:642:13","statements":[{"assignments":[2841],"declarations":[{"constant":false,"id":2841,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:13","nodeType":"VariableDeclaration","scope":2896,"src":"3709:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2840,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2848,"initialValue":{"arguments":[{"arguments":[{"id":2845,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2835,"src":"3749:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2844,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2729,2812,2832],"referencedDeclaration":2832,"src":"3737:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2842,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:13","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:13"},{"assignments":[2850],"declarations":[{"constant":false,"id":2850,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:13","nodeType":"VariableDeclaration","scope":2896,"src":"3840:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2849,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2851,"nodeType":"VariableDeclarationStatement","src":"3840:17:13"},{"AST":{"nativeSrc":"3892:78:13","nodeType":"YulBlock","src":"3892:78:13","statements":[{"nativeSrc":"3906:54:13","nodeType":"YulAssignment","src":"3906:54:13","value":{"arguments":[{"kind":"number","nativeSrc":"3923:2:13","nodeType":"YulLiteral","src":"3923:2:13","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3941:6:13","nodeType":"YulIdentifier","src":"3941:6:13"},{"kind":"number","nativeSrc":"3949:4:13","nodeType":"YulLiteral","src":"3949:4:13","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3937:3:13","nodeType":"YulIdentifier","src":"3937:3:13"},"nativeSrc":"3937:17:13","nodeType":"YulFunctionCall","src":"3937:17:13"},{"kind":"number","nativeSrc":"3956:2:13","nodeType":"YulLiteral","src":"3956:2:13","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3927:9:13","nodeType":"YulIdentifier","src":"3927:9:13"},"nativeSrc":"3927:32:13","nodeType":"YulFunctionCall","src":"3927:32:13"}],"functionName":{"name":"shr","nativeSrc":"3919:3:13","nodeType":"YulIdentifier","src":"3919:3:13"},"nativeSrc":"3919:41:13","nodeType":"YulFunctionCall","src":"3919:41:13"},"variableNames":[{"name":"hashValue","nativeSrc":"3906:9:13","nodeType":"YulIdentifier","src":"3906:9:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2841,"isOffset":false,"isSlot":false,"src":"3941:6:13","valueSize":1},{"declaration":2850,"isOffset":false,"isSlot":false,"src":"3906:9:13","valueSize":1}],"flags":["memory-safe"],"id":2852,"nodeType":"InlineAssembly","src":"3867:103:13"},{"body":{"id":2889,"nodeType":"Block","src":"4013:291:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2863,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"4119:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2870,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4148:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2872,"indexExpression":{"id":2871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4155:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2869,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2868,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:13","typeDescriptions":{}}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2884,"nodeType":"IfStatement","src":"4115:150:13","trueBody":{"id":2883,"nodeType":"Block","src":"4165:100:13","statements":[{"expression":{"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2877,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4233:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2879,"indexExpression":{"id":2878,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4240:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2882,"nodeType":"ExpressionStatement","src":"4233:17:13"}]}},{"expression":{"id":2887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2885,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"4278:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2888,"nodeType":"ExpressionStatement","src":"4278:15:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2857,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4001:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2890,"initializationExpression":{"assignments":[2854],"declarations":[{"constant":false,"id":2854,"mutability":"mutable","name":"i","nameLocation":"3993:1:13","nodeType":"VariableDeclaration","scope":2890,"src":"3985:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2853,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2856,"initialValue":{"hexValue":"3431","id":2855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:13","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:13"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:13","subExpression":{"id":2860,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"4010:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2862,"nodeType":"ExpressionStatement","src":"4008:3:13"},"nodeType":"ForStatement","src":"3980:324:13"},{"expression":{"arguments":[{"id":2893,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"4327:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2891,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:13","typeDescriptions":{}}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2839,"id":2895,"nodeType":"Return","src":"4313:21:13"}]},"documentation":{"id":2833,"nodeType":"StructuredDocumentation","src":"3448:165:13","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2897,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:13","nodeType":"FunctionDefinition","parameters":{"id":2836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2835,"mutability":"mutable","name":"addr","nameLocation":"3655:4:13","nodeType":"VariableDeclaration","scope":2897,"src":"3647:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:13"},"returnParameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2897,"src":"3684:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2837,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:13"},"scope":3971,"src":"3618:723:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2933,"nodeType":"Block","src":"4496:104:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4519:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2907,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:13","typeDescriptions":{}}},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:13","memberName":"length","nodeType":"MemberAccess","src":"4513:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2914,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"4538:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2912,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:13","typeDescriptions":{}}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:13","memberName":"length","nodeType":"MemberAccess","src":"4532:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2900,"src":"4567:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2919,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:13","typeDescriptions":{}}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2918,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2927,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"4590:1:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2925,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:13","typeDescriptions":{}}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2924,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:13","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2906,"id":2932,"nodeType":"Return","src":"4506:87:13"}]},"documentation":{"id":2898,"nodeType":"StructuredDocumentation","src":"4347:66:13","text":" @dev Returns true if the two strings are equal."},"id":2934,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:13","nodeType":"FunctionDefinition","parameters":{"id":2903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2900,"mutability":"mutable","name":"a","nameLocation":"4447:1:13","nodeType":"VariableDeclaration","scope":2934,"src":"4433:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2899,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2902,"mutability":"mutable","name":"b","nameLocation":"4464:1:13","nodeType":"VariableDeclaration","scope":2934,"src":"4450:15:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2901,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:13"},"returnParameters":{"id":2906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2934,"src":"4490:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2904,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:13"},"scope":3971,"src":"4418:182:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2952,"nodeType":"Block","src":"4897:64:13","statements":[{"expression":{"arguments":[{"id":2943,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"4924:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2947,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"4940:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2945,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:13","typeDescriptions":{}}},"id":2948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:13","memberName":"length","nodeType":"MemberAccess","src":"4934:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2942,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2953,2984],"referencedDeclaration":2984,"src":"4914:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2941,"id":2951,"nodeType":"Return","src":"4907:47:13"}]},"documentation":{"id":2935,"nodeType":"StructuredDocumentation","src":"4606:214:13","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2953,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:13","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2937,"mutability":"mutable","name":"input","nameLocation":"4858:5:13","nodeType":"VariableDeclaration","scope":2953,"src":"4844:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2936,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:13"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2953,"src":"4888:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:13"},"scope":3971,"src":"4825:136:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2983,"nodeType":"Block","src":"5366:153:13","statements":[{"assignments":[2966,2968],"declarations":[{"constant":false,"id":2966,"mutability":"mutable","name":"success","nameLocation":"5382:7:13","nodeType":"VariableDeclaration","scope":2983,"src":"5377:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2965,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"value","nameLocation":"5399:5:13","nodeType":"VariableDeclaration","scope":2983,"src":"5391:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2974,"initialValue":{"arguments":[{"id":2970,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"5421:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2971,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"5428:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2972,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"5435:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2969,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3005,3042],"referencedDeclaration":3042,"src":"5408:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:13"},{"condition":{"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:13","subExpression":{"id":2975,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"5454:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2980,"nodeType":"IfStatement","src":"5449:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2977,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"5470:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2979,"nodeType":"RevertStatement","src":"5463:27:13"}},{"expression":{"id":2981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"5507:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2964,"id":2982,"nodeType":"Return","src":"5500:12:13"}]},"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"4967:294:13","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2984,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:13","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"input","nameLocation":"5299:5:13","nodeType":"VariableDeclaration","scope":2984,"src":"5285:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2955,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"begin","nameLocation":"5314:5:13","nodeType":"VariableDeclaration","scope":2984,"src":"5306:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2957,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"end","nameLocation":"5329:3:13","nodeType":"VariableDeclaration","scope":2984,"src":"5321:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2959,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:13"},"returnParameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2984,"src":"5357:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2962,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:13"},"scope":3971,"src":"5266:253:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3004,"nodeType":"Block","src":"5840:83:13","statements":[{"expression":{"arguments":[{"id":2995,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"5886:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2999,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2987,"src":"5902:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2997,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:13","typeDescriptions":{}}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:13","memberName":"length","nodeType":"MemberAccess","src":"5896:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2994,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"5857:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3002,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2993,"id":3003,"nodeType":"Return","src":"5850:66:13"}]},"documentation":{"id":2985,"nodeType":"StructuredDocumentation","src":"5525:215:13","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3005,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:13","nodeType":"FunctionDefinition","parameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"input","nameLocation":"5781:5:13","nodeType":"VariableDeclaration","scope":3005,"src":"5767:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2986,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:13"},"returnParameters":{"id":2993,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2990,"mutability":"mutable","name":"success","nameLocation":"5816:7:13","nodeType":"VariableDeclaration","scope":3005,"src":"5811:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2989,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2992,"mutability":"mutable","name":"value","nameLocation":"5833:5:13","nodeType":"VariableDeclaration","scope":3005,"src":"5825:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2991,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:13"},"scope":3971,"src":"5745:178:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3041,"nodeType":"Block","src":"6325:144:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3019,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"6339:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3022,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"6351:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3020,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:13","typeDescriptions":{}}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:13","memberName":"length","nodeType":"MemberAccess","src":"6345:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3026,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"6368:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3027,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"6376:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3034,"nodeType":"IfStatement","src":"6335:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3032,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3018,"id":3033,"nodeType":"Return","src":"6381:17:13"}},{"expression":{"arguments":[{"id":3036,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3008,"src":"6444:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3037,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"6451:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3038,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"6458:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3035,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3112,"src":"6415:28:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3018,"id":3040,"nodeType":"Return","src":"6408:54:13"}]},"documentation":{"id":3006,"nodeType":"StructuredDocumentation","src":"5929:238:13","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3042,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:13","nodeType":"FunctionDefinition","parameters":{"id":3013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3008,"mutability":"mutable","name":"input","nameLocation":"6217:5:13","nodeType":"VariableDeclaration","scope":3042,"src":"6203:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3007,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3010,"mutability":"mutable","name":"begin","nameLocation":"6240:5:13","nodeType":"VariableDeclaration","scope":3042,"src":"6232:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"end","nameLocation":"6263:3:13","nodeType":"VariableDeclaration","scope":3042,"src":"6255:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3011,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:13"},"returnParameters":{"id":3018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3015,"mutability":"mutable","name":"success","nameLocation":"6301:7:13","nodeType":"VariableDeclaration","scope":3042,"src":"6296:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3014,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3017,"mutability":"mutable","name":"value","nameLocation":"6318:5:13","nodeType":"VariableDeclaration","scope":3042,"src":"6310:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3016,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:13"},"scope":3971,"src":"6172:297:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3111,"nodeType":"Block","src":"6872:347:13","statements":[{"assignments":[3057],"declarations":[{"constant":false,"id":3057,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:13","nodeType":"VariableDeclaration","scope":3111,"src":"6882:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3056,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3062,"initialValue":{"arguments":[{"id":3060,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6910:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3058,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:13","typeDescriptions":{}}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:13"},{"assignments":[3064],"declarations":[{"constant":false,"id":3064,"mutability":"mutable","name":"result","nameLocation":"6935:6:13","nodeType":"VariableDeclaration","scope":3111,"src":"6927:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3063,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3066,"initialValue":{"hexValue":"30","id":3065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:13"},{"body":{"id":3105,"nodeType":"Block","src":"6993:189:13","statements":[{"assignments":[3078],"declarations":[{"constant":false,"id":3078,"mutability":"mutable","name":"chr","nameLocation":"7013:3:13","nodeType":"VariableDeclaration","scope":3105,"src":"7007:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3077,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3088,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3083,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3057,"src":"7062:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3084,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"7070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3082,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"7039:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3080,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:13","typeDescriptions":{}}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3079,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"7019:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3089,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"7092:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":3090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3096,"nodeType":"IfStatement","src":"7088:30:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3094,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3055,"id":3095,"nodeType":"Return","src":"7101:17:13"}},{"expression":{"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"7132:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3100,"nodeType":"ExpressionStatement","src":"7132:12:13"},{"expression":{"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3101,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"7158:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3102,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3078,"src":"7168:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3104,"nodeType":"ExpressionStatement","src":"7158:13:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3071,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"6979:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3072,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"6983:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3106,"initializationExpression":{"assignments":[3068],"declarations":[{"constant":false,"id":3068,"mutability":"mutable","name":"i","nameLocation":"6968:1:13","nodeType":"VariableDeclaration","scope":3106,"src":"6960:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3070,"initialValue":{"id":3069,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"6972:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:13","subExpression":{"id":3074,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3068,"src":"6990:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3076,"nodeType":"ExpressionStatement","src":"6988:3:13"},"nodeType":"ForStatement","src":"6955:227:13"},{"expression":{"components":[{"hexValue":"74727565","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3108,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3064,"src":"7205:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3109,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3055,"id":3110,"nodeType":"Return","src":"7191:21:13"}]},"documentation":{"id":3043,"nodeType":"StructuredDocumentation","src":"6475:224:13","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3112,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:13","nodeType":"FunctionDefinition","parameters":{"id":3050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3045,"mutability":"mutable","name":"input","nameLocation":"6765:5:13","nodeType":"VariableDeclaration","scope":3112,"src":"6751:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3044,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3047,"mutability":"mutable","name":"begin","nameLocation":"6788:5:13","nodeType":"VariableDeclaration","scope":3112,"src":"6780:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3049,"mutability":"mutable","name":"end","nameLocation":"6811:3:13","nodeType":"VariableDeclaration","scope":3112,"src":"6803:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:13"},"returnParameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3052,"mutability":"mutable","name":"success","nameLocation":"6848:7:13","nodeType":"VariableDeclaration","scope":3112,"src":"6843:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3051,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"value","nameLocation":"6865:5:13","nodeType":"VariableDeclaration","scope":3112,"src":"6857:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:13"},"scope":3971,"src":"6704:515:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3130,"nodeType":"Block","src":"7516:63:13","statements":[{"expression":{"arguments":[{"id":3121,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"7542:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3125,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3115,"src":"7558:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3123,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:13","typeDescriptions":{}}},"id":3126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:13","memberName":"length","nodeType":"MemberAccess","src":"7552:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3120,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[3131,3162],"referencedDeclaration":3162,"src":"7533:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":3128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3119,"id":3129,"nodeType":"Return","src":"7526:46:13"}]},"documentation":{"id":3113,"nodeType":"StructuredDocumentation","src":"7225:216:13","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3131,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:13","nodeType":"FunctionDefinition","parameters":{"id":3116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3115,"mutability":"mutable","name":"input","nameLocation":"7478:5:13","nodeType":"VariableDeclaration","scope":3131,"src":"7464:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3114,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:13"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3131,"src":"7508:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3117,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:13"},"scope":3971,"src":"7446:133:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3161,"nodeType":"Block","src":"7984:151:13","statements":[{"assignments":[3144,3146],"declarations":[{"constant":false,"id":3144,"mutability":"mutable","name":"success","nameLocation":"8000:7:13","nodeType":"VariableDeclaration","scope":3161,"src":"7995:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3143,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3146,"mutability":"mutable","name":"value","nameLocation":"8016:5:13","nodeType":"VariableDeclaration","scope":3161,"src":"8009:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3145,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3152,"initialValue":{"arguments":[{"id":3148,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3134,"src":"8037:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3149,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3136,"src":"8044:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3150,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"8051:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3147,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[3183,3225],"referencedDeclaration":3225,"src":"8025:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:13"},{"condition":{"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:13","subExpression":{"id":3153,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3144,"src":"8070:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"IfStatement","src":"8065:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3155,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"8086:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3157,"nodeType":"RevertStatement","src":"8079:27:13"}},{"expression":{"id":3159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3146,"src":"8123:5:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":3142,"id":3160,"nodeType":"Return","src":"8116:12:13"}]},"documentation":{"id":3132,"nodeType":"StructuredDocumentation","src":"7585:296:13","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":3162,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:13","nodeType":"FunctionDefinition","parameters":{"id":3139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3134,"mutability":"mutable","name":"input","nameLocation":"7918:5:13","nodeType":"VariableDeclaration","scope":3162,"src":"7904:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3133,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3136,"mutability":"mutable","name":"begin","nameLocation":"7933:5:13","nodeType":"VariableDeclaration","scope":3162,"src":"7925:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3135,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3138,"mutability":"mutable","name":"end","nameLocation":"7948:3:13","nodeType":"VariableDeclaration","scope":3162,"src":"7940:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:13"},"returnParameters":{"id":3142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3162,"src":"7976:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3140,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:13"},"scope":3971,"src":"7886:249:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3182,"nodeType":"Block","src":"8526:82:13","statements":[{"expression":{"arguments":[{"id":3173,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"8571:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3177,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"8587:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3175,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:13","typeDescriptions":{}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:13","memberName":"length","nodeType":"MemberAccess","src":"8581:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3172,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"8543:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3171,"id":3181,"nodeType":"Return","src":"8536:65:13"}]},"documentation":{"id":3163,"nodeType":"StructuredDocumentation","src":"8141:287:13","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3183,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:13","nodeType":"FunctionDefinition","parameters":{"id":3166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3165,"mutability":"mutable","name":"input","nameLocation":"8468:5:13","nodeType":"VariableDeclaration","scope":3183,"src":"8454:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3164,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:13"},"returnParameters":{"id":3171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"success","nameLocation":"8503:7:13","nodeType":"VariableDeclaration","scope":3183,"src":"8498:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3167,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3170,"mutability":"mutable","name":"value","nameLocation":"8519:5:13","nodeType":"VariableDeclaration","scope":3183,"src":"8512:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3169,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:13"},"scope":3971,"src":"8433:175:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":3188,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:13","nodeType":"VariableDeclaration","scope":3971,"src":"8614:50:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3184,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":3187,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":3186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:13","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":3224,"nodeType":"Block","src":"9130:143:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3202,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"9144:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3205,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"9156:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3203,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:13","typeDescriptions":{}}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:13","memberName":"length","nodeType":"MemberAccess","src":"9150:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3209,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"9173:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3210,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"9181:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3217,"nodeType":"IfStatement","src":"9140:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3201,"id":3216,"nodeType":"Return","src":"9186:17:13"}},{"expression":{"arguments":[{"id":3219,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"9248:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3220,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"9255:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3221,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"9262:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3218,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"9220:27:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3201,"id":3223,"nodeType":"Return","src":"9213:53:13"}]},"documentation":{"id":3189,"nodeType":"StructuredDocumentation","src":"8671:303:13","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:13","nodeType":"FunctionDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3191,"mutability":"mutable","name":"input","nameLocation":"9023:5:13","nodeType":"VariableDeclaration","scope":3225,"src":"9009:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3190,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3193,"mutability":"mutable","name":"begin","nameLocation":"9046:5:13","nodeType":"VariableDeclaration","scope":3225,"src":"9038:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3192,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3195,"mutability":"mutable","name":"end","nameLocation":"9069:3:13","nodeType":"VariableDeclaration","scope":3225,"src":"9061:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3194,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:13"},"returnParameters":{"id":3201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3198,"mutability":"mutable","name":"success","nameLocation":"9107:7:13","nodeType":"VariableDeclaration","scope":3225,"src":"9102:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3197,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3200,"mutability":"mutable","name":"value","nameLocation":"9123:5:13","nodeType":"VariableDeclaration","scope":3225,"src":"9116:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3199,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:13"},"scope":3971,"src":"8979:294:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"9673:812:13","statements":[{"assignments":[3240],"declarations":[{"constant":false,"id":3240,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:13","nodeType":"VariableDeclaration","scope":3345,"src":"9683:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3239,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3245,"initialValue":{"arguments":[{"id":3243,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"9711:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3241,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:13","typeDescriptions":{}}},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:13"},{"assignments":[3247],"declarations":[{"constant":false,"id":3247,"mutability":"mutable","name":"sign","nameLocation":"9781:4:13","nodeType":"VariableDeclaration","scope":3345,"src":"9774:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3246,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3263,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3248,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"9788:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3249,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"9797:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":3258,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"9845:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3259,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"9853:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3257,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"9822:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3255,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:13","typeDescriptions":{}}},"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:13","trueExpression":{"arguments":[{"hexValue":"30","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3251,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:13","typeDescriptions":{}}},"id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:13"},{"assignments":[3265],"declarations":[{"constant":false,"id":3265,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:13","nodeType":"VariableDeclaration","scope":3345,"src":"9941:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3264,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3272,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3266,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"9961:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":3269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":3268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3267,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:13","typeDescriptions":{}}},"id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:13"},{"assignments":[3274],"declarations":[{"constant":false,"id":3274,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:13","nodeType":"VariableDeclaration","scope":3345,"src":"9990:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3273,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3281,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3275,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3247,"src":"10010:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":3278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3276,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:13","typeDescriptions":{}}},"id":3279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:13"},{"assignments":[3283],"declarations":[{"constant":false,"id":3283,"mutability":"mutable","name":"offset","nameLocation":"10047:6:13","nodeType":"VariableDeclaration","scope":3345,"src":"10039:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3290,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3284,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3265,"src":"10057:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3285,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"10073:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3287,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"10056:37:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:13"},{"assignments":[3292,3294],"declarations":[{"constant":false,"id":3292,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:13","nodeType":"VariableDeclaration","scope":3345,"src":"10107:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3291,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3294,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:13","nodeType":"VariableDeclaration","scope":3345,"src":"10124:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3302,"initialValue":{"arguments":[{"id":3296,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"10157:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"10164:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3298,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"10172:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3300,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3232,"src":"10180:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3295,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[3005,3042],"referencedDeclaration":3042,"src":"10144:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3303,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"10199:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3304,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"10213:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3305,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"10224:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3323,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3292,"src":"10341:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3324,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"10355:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3326,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"10371:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3327,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3188,"src":"10383:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3341,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3238,"id":3342,"nodeType":"Return","src":"10461:17:13"},"id":3343,"nodeType":"IfStatement","src":"10337:141:13","trueBody":{"id":3338,"nodeType":"Block","src":"10399:56:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3332,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":3331,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:13","memberName":"min","nodeType":"MemberAccess","src":"10427:16:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3238,"id":3337,"nodeType":"Return","src":"10413:31:13"}]}},"id":3344,"nodeType":"IfStatement","src":"10195:283:13","trueBody":{"id":3322,"nodeType":"Block","src":"10240:91:13","statements":[{"expression":{"components":[{"hexValue":"74727565","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":3309,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"10268:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":3317,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"10310:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3315,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:13","typeDescriptions":{}}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:13","trueExpression":{"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:13","subExpression":{"arguments":[{"id":3312,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"10291:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3311,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3310,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:13","typeDescriptions":{}}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":3238,"id":3321,"nodeType":"Return","src":"10254:66:13"}]}}]},"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"9279:223:13","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:13","nodeType":"FunctionDefinition","parameters":{"id":3233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"input","nameLocation":"9567:5:13","nodeType":"VariableDeclaration","scope":3346,"src":"9553:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3227,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"begin","nameLocation":"9590:5:13","nodeType":"VariableDeclaration","scope":3346,"src":"9582:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3232,"mutability":"mutable","name":"end","nameLocation":"9613:3:13","nodeType":"VariableDeclaration","scope":3346,"src":"9605:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3231,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:13"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3235,"mutability":"mutable","name":"success","nameLocation":"9650:7:13","nodeType":"VariableDeclaration","scope":3346,"src":"9645:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3234,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3237,"mutability":"mutable","name":"value","nameLocation":"9666:5:13","nodeType":"VariableDeclaration","scope":3346,"src":"9659:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3236,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:13"},"scope":3971,"src":"9507:978:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3364,"nodeType":"Block","src":"10830:67:13","statements":[{"expression":{"arguments":[{"id":3355,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"10860:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3359,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"10876:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3357,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:13","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:13","memberName":"length","nodeType":"MemberAccess","src":"10870:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3354,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[3365,3396],"referencedDeclaration":3396,"src":"10847:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3353,"id":3363,"nodeType":"Return","src":"10840:50:13"}]},"documentation":{"id":3347,"nodeType":"StructuredDocumentation","src":"10491:259:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3365,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:13","nodeType":"FunctionDefinition","parameters":{"id":3350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3349,"mutability":"mutable","name":"input","nameLocation":"10791:5:13","nodeType":"VariableDeclaration","scope":3365,"src":"10777:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3348,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:13"},"returnParameters":{"id":3353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3365,"src":"10821:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3351,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:13"},"scope":3971,"src":"10755:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3395,"nodeType":"Block","src":"11318:156:13","statements":[{"assignments":[3378,3380],"declarations":[{"constant":false,"id":3378,"mutability":"mutable","name":"success","nameLocation":"11334:7:13","nodeType":"VariableDeclaration","scope":3395,"src":"11329:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3377,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"value","nameLocation":"11351:5:13","nodeType":"VariableDeclaration","scope":3395,"src":"11343:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3386,"initialValue":{"arguments":[{"id":3382,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"11376:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3383,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"11383:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3384,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"11390:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3381,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[3417,3454],"referencedDeclaration":3454,"src":"11360:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:13"},{"condition":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:13","subExpression":{"id":3387,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"11409:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3392,"nodeType":"IfStatement","src":"11404:41:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3389,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"11425:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3391,"nodeType":"RevertStatement","src":"11418:27:13"}},{"expression":{"id":3393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"11462:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3376,"id":3394,"nodeType":"Return","src":"11455:12:13"}]},"documentation":{"id":3366,"nodeType":"StructuredDocumentation","src":"10903:307:13","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":3396,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:13","nodeType":"FunctionDefinition","parameters":{"id":3373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3368,"mutability":"mutable","name":"input","nameLocation":"11251:5:13","nodeType":"VariableDeclaration","scope":3396,"src":"11237:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3367,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"begin","nameLocation":"11266:5:13","nodeType":"VariableDeclaration","scope":3396,"src":"11258:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"end","nameLocation":"11281:3:13","nodeType":"VariableDeclaration","scope":3396,"src":"11273:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:13"},"returnParameters":{"id":3376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3396,"src":"11309:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:13"},"scope":3971,"src":"11215:259:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3416,"nodeType":"Block","src":"11801:86:13","statements":[{"expression":{"arguments":[{"id":3407,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"11850:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3411,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"11866:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3409,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:13","typeDescriptions":{}}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:13","memberName":"length","nodeType":"MemberAccess","src":"11860:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3406,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"11818:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3405,"id":3415,"nodeType":"Return","src":"11811:69:13"}]},"documentation":{"id":3397,"nodeType":"StructuredDocumentation","src":"11480:218:13","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:13","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"input","nameLocation":"11742:5:13","nodeType":"VariableDeclaration","scope":3417,"src":"11728:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3398,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:13"},"returnParameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"success","nameLocation":"11777:7:13","nodeType":"VariableDeclaration","scope":3417,"src":"11772:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3401,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"value","nameLocation":"11794:5:13","nodeType":"VariableDeclaration","scope":3417,"src":"11786:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:13"},"scope":3971,"src":"11703:184:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3453,"nodeType":"Block","src":"12295:147:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3431,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"12309:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3434,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"12321:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3432,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:13","typeDescriptions":{}}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:13","memberName":"length","nodeType":"MemberAccess","src":"12315:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3438,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"12338:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3439,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"12346:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3446,"nodeType":"IfStatement","src":"12305:63:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3444,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3430,"id":3445,"nodeType":"Return","src":"12351:17:13"}},{"expression":{"arguments":[{"id":3448,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"12417:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3449,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3422,"src":"12424:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3450,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3424,"src":"12431:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3447,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"12385:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3430,"id":3452,"nodeType":"Return","src":"12378:57:13"}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"11893:241:13","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":3454,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:13","nodeType":"FunctionDefinition","parameters":{"id":3425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"input","nameLocation":"12187:5:13","nodeType":"VariableDeclaration","scope":3454,"src":"12173:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3419,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3422,"mutability":"mutable","name":"begin","nameLocation":"12210:5:13","nodeType":"VariableDeclaration","scope":3454,"src":"12202:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3421,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"end","nameLocation":"12233:3:13","nodeType":"VariableDeclaration","scope":3454,"src":"12225:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3423,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:13"},"returnParameters":{"id":3430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3427,"mutability":"mutable","name":"success","nameLocation":"12271:7:13","nodeType":"VariableDeclaration","scope":3454,"src":"12266:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3426,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3429,"mutability":"mutable","name":"value","nameLocation":"12288:5:13","nodeType":"VariableDeclaration","scope":3454,"src":"12280:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3428,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:13"},"scope":3971,"src":"12139:303:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3556,"nodeType":"Block","src":"12851:881:13","statements":[{"assignments":[3469],"declarations":[{"constant":false,"id":3469,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:13","nodeType":"VariableDeclaration","scope":3556,"src":"12861:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3468,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3474,"initialValue":{"arguments":[{"id":3472,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3457,"src":"12889:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3470,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:13","typeDescriptions":{}}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:13"},{"assignments":[3476],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:13","nodeType":"VariableDeclaration","scope":3556,"src":"12943:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3475,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3496,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"12961:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"12967:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3486,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"13011:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3487,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"13019:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3485,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"12988:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3483,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:13","typeDescriptions":{}}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3490,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:13","typeDescriptions":{}}},"id":3493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:13"},{"assignments":[3498],"declarations":[{"constant":false,"id":3498,"mutability":"mutable","name":"offset","nameLocation":"13131:6:13","nodeType":"VariableDeclaration","scope":3556,"src":"13123:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3504,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3499,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"13140:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"13140:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:13"},{"assignments":[3506],"declarations":[{"constant":false,"id":3506,"mutability":"mutable","name":"result","nameLocation":"13181:6:13","nodeType":"VariableDeclaration","scope":3556,"src":"13173:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3505,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3508,"initialValue":{"hexValue":"30","id":3507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:13"},{"body":{"id":3550,"nodeType":"Block","src":"13248:447:13","statements":[{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"chr","nameLocation":"13268:3:13","nodeType":"VariableDeclaration","scope":3550,"src":"13262:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3521,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3532,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":3527,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3469,"src":"13317:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3528,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"13325:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3526,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"13294:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3524,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:13","typeDescriptions":{}}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3523,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"13274:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"13347:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3540,"nodeType":"IfStatement","src":"13343:31:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3538,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3467,"id":3539,"nodeType":"Return","src":"13357:17:13"}},{"expression":{"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3541,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"13388:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":3542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3544,"nodeType":"ExpressionStatement","src":"13388:12:13"},{"id":3549,"nodeType":"UncheckedBlock","src":"13414:271:13","statements":[{"expression":{"id":3547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3545,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"13657:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":3546,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"13667:3:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3548,"nodeType":"ExpressionStatement","src":"13657:13:13"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3515,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"13234:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3516,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3461,"src":"13238:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3551,"initializationExpression":{"assignments":[3510],"declarations":[{"constant":false,"id":3510,"mutability":"mutable","name":"i","nameLocation":"13214:1:13","nodeType":"VariableDeclaration","scope":3551,"src":"13206:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3509,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3514,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3511,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3459,"src":"13218:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3512,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"13226:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:13","subExpression":{"id":3518,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"13245:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3520,"nodeType":"ExpressionStatement","src":"13243:3:13"},"nodeType":"ForStatement","src":"13201:494:13"},{"expression":{"components":[{"hexValue":"74727565","id":3552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3553,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3506,"src":"13718:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3467,"id":3555,"nodeType":"Return","src":"13704:21:13"}]},"documentation":{"id":3455,"nodeType":"StructuredDocumentation","src":"12448:227:13","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":3557,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:13","nodeType":"FunctionDefinition","parameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3457,"mutability":"mutable","name":"input","nameLocation":"12744:5:13","nodeType":"VariableDeclaration","scope":3557,"src":"12730:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3456,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3459,"mutability":"mutable","name":"begin","nameLocation":"12767:5:13","nodeType":"VariableDeclaration","scope":3557,"src":"12759:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3458,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3461,"mutability":"mutable","name":"end","nameLocation":"12790:3:13","nodeType":"VariableDeclaration","scope":3557,"src":"12782:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3460,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:13"},"returnParameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"success","nameLocation":"12827:7:13","nodeType":"VariableDeclaration","scope":3557,"src":"12822:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3463,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"value","nameLocation":"12844:5:13","nodeType":"VariableDeclaration","scope":3557,"src":"12836:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:13"},"scope":3971,"src":"12680:1052:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3575,"nodeType":"Block","src":"14030:67:13","statements":[{"expression":{"arguments":[{"id":3566,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"14060:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3570,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3560,"src":"14076:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3568,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:13","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:13","memberName":"length","nodeType":"MemberAccess","src":"14070:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3565,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[3576,3607],"referencedDeclaration":3607,"src":"14047:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3564,"id":3574,"nodeType":"Return","src":"14040:50:13"}]},"documentation":{"id":3558,"nodeType":"StructuredDocumentation","src":"13738:212:13","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3576,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:13","nodeType":"FunctionDefinition","parameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"input","nameLocation":"13991:5:13","nodeType":"VariableDeclaration","scope":3576,"src":"13977:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3559,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:13"},"returnParameters":{"id":3564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3576,"src":"14021:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3562,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:13"},"scope":3971,"src":"13955:142:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3606,"nodeType":"Block","src":"14470:165:13","statements":[{"assignments":[3589,3591],"declarations":[{"constant":false,"id":3589,"mutability":"mutable","name":"success","nameLocation":"14486:7:13","nodeType":"VariableDeclaration","scope":3606,"src":"14481:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3588,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3591,"mutability":"mutable","name":"value","nameLocation":"14503:5:13","nodeType":"VariableDeclaration","scope":3606,"src":"14495:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3590,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3597,"initialValue":{"arguments":[{"id":3593,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14528:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3594,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3581,"src":"14535:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3595,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3583,"src":"14542:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3592,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3628,3732],"referencedDeclaration":3732,"src":"14512:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:13"},{"condition":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:13","subExpression":{"id":3598,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3589,"src":"14561:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3603,"nodeType":"IfStatement","src":"14556:50:13","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3600,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"14577:27:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3602,"nodeType":"RevertStatement","src":"14570:36:13"}},{"expression":{"id":3604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"14623:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3587,"id":3605,"nodeType":"Return","src":"14616:12:13"}]},"documentation":{"id":3577,"nodeType":"StructuredDocumentation","src":"14103:259:13","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":3607,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:13","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3579,"mutability":"mutable","name":"input","nameLocation":"14403:5:13","nodeType":"VariableDeclaration","scope":3607,"src":"14389:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3578,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3581,"mutability":"mutable","name":"begin","nameLocation":"14418:5:13","nodeType":"VariableDeclaration","scope":3607,"src":"14410:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3580,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"end","nameLocation":"14433:3:13","nodeType":"VariableDeclaration","scope":3607,"src":"14425:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:13"},"returnParameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3607,"src":"14461:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3585,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:13"},"scope":3971,"src":"14367:268:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3627,"nodeType":"Block","src":"14942:70:13","statements":[{"expression":{"arguments":[{"id":3618,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"14975:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":3619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":3622,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3610,"src":"14991:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3620,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:13","typeDescriptions":{}}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:13","memberName":"length","nodeType":"MemberAccess","src":"14985:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3617,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[3628,3732],"referencedDeclaration":3732,"src":"14959:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3616,"id":3626,"nodeType":"Return","src":"14952:53:13"}]},"documentation":{"id":3608,"nodeType":"StructuredDocumentation","src":"14641:198:13","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:13","nodeType":"FunctionDefinition","parameters":{"id":3611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3610,"mutability":"mutable","name":"input","nameLocation":"14883:5:13","nodeType":"VariableDeclaration","scope":3628,"src":"14869:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3609,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:13"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3613,"mutability":"mutable","name":"success","nameLocation":"14918:7:13","nodeType":"VariableDeclaration","scope":3628,"src":"14913:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3612,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3615,"mutability":"mutable","name":"value","nameLocation":"14935:5:13","nodeType":"VariableDeclaration","scope":3628,"src":"14927:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3614,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:13"},"scope":3971,"src":"14844:168:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3731,"nodeType":"Block","src":"15405:733:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3642,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"15419:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":3645,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"15431:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3643,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:13","typeDescriptions":{}}},"id":3646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:13","memberName":"length","nodeType":"MemberAccess","src":"15425:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3649,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"15448:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3650,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"15456:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3660,"nodeType":"IfStatement","src":"15415:72:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3654,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:13","typeDescriptions":{}}},"id":3657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3658,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3641,"id":3659,"nodeType":"Return","src":"15461:26:13"}},{"assignments":[3662],"declarations":[{"constant":false,"id":3662,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:13","nodeType":"VariableDeclaration","scope":3731,"src":"15498:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3661,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3685,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3663,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"15516:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3664,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"15522:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":3674,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"15572:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3672,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:13","typeDescriptions":{}}},"id":3675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3676,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"15580:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3671,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"15543:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3669,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:13","typeDescriptions":{}}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":3680,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":3679,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:13","typeDescriptions":{}}},"id":3682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:13"},{"assignments":[3687],"declarations":[{"constant":false,"id":3687,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:13","nodeType":"VariableDeclaration","scope":3731,"src":"15684:22:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3695,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:13","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3689,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"15714:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"15714:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":3692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3696,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"15801:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3697,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"15807:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3699,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"15816:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3729,"nodeType":"Block","src":"16081:51:13","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":3722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3724,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3723,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:13","typeDescriptions":{}}},"id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3727,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3641,"id":3728,"nodeType":"Return","src":"16095:26:13"}]},"id":3730,"nodeType":"IfStatement","src":"15797:335:13","trueBody":{"id":3721,"nodeType":"Block","src":"15832:243:13","statements":[{"assignments":[3702,3704],"declarations":[{"constant":false,"id":3702,"mutability":"mutable","name":"s","nameLocation":"15953:1:13","nodeType":"VariableDeclaration","scope":3721,"src":"15948:6:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3701,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3704,"mutability":"mutable","name":"v","nameLocation":"15964:1:13","nodeType":"VariableDeclaration","scope":3721,"src":"15956:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3703,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3710,"initialValue":{"arguments":[{"id":3706,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"16001:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3707,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"16008:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3708,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"16015:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3705,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3557,"src":"15969:31:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:13"},{"expression":{"components":[{"id":3711,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3702,"src":"16041:1:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":3716,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3704,"src":"16060:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3714,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:13","typeDescriptions":{}}},"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3713,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3712,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:13","typeDescriptions":{}}},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3641,"id":3720,"nodeType":"Return","src":"16033:31:13"}]}}]},"documentation":{"id":3629,"nodeType":"StructuredDocumentation","src":"15018:226:13","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":3732,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:13","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3631,"mutability":"mutable","name":"input","nameLocation":"15297:5:13","nodeType":"VariableDeclaration","scope":3732,"src":"15283:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3630,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"begin","nameLocation":"15320:5:13","nodeType":"VariableDeclaration","scope":3732,"src":"15312:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3635,"mutability":"mutable","name":"end","nameLocation":"15343:3:13","nodeType":"VariableDeclaration","scope":3732,"src":"15335:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3634,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:13"},"returnParameters":{"id":3641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"success","nameLocation":"15381:7:13","nodeType":"VariableDeclaration","scope":3732,"src":"15376:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3637,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3640,"mutability":"mutable","name":"value","nameLocation":"15398:5:13","nodeType":"VariableDeclaration","scope":3732,"src":"15390:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3639,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:13"},"scope":3971,"src":"15249:889:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3791,"nodeType":"Block","src":"16207:461:13","statements":[{"assignments":[3740],"declarations":[{"constant":false,"id":3740,"mutability":"mutable","name":"value","nameLocation":"16223:5:13","nodeType":"VariableDeclaration","scope":3791,"src":"16217:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3739,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3745,"initialValue":{"arguments":[{"id":3743,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"16237:3:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3741,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:13","typeDescriptions":{}}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:13"},{"id":3788,"nodeType":"UncheckedBlock","src":"16401:238:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16429:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:13","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3749,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16443:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":3750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:13","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16489:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":3758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:13","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16503:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":3761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:13","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16550:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16564:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:13","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3780,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3779,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:13","memberName":"max","nodeType":"MemberAccess","src":"16613:15:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3738,"id":3784,"nodeType":"Return","src":"16606:22:13"},"id":3785,"nodeType":"IfStatement","src":"16546:82:13","trueBody":{"expression":{"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16576:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:13","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3778,"nodeType":"ExpressionStatement","src":"16576:11:13"}},"id":3786,"nodeType":"IfStatement","src":"16485:143:13","trueBody":{"expression":{"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16516:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":3765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:13","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3767,"nodeType":"ExpressionStatement","src":"16516:11:13"}},"id":3787,"nodeType":"IfStatement","src":"16425:203:13","trueBody":{"expression":{"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16455:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:13","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3756,"nodeType":"ExpressionStatement","src":"16455:11:13"}}]},{"expression":{"id":3789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"16656:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":3738,"id":3790,"nodeType":"Return","src":"16649:12:13"}]},"id":3792,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:13","nodeType":"FunctionDefinition","parameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"chr","nameLocation":"16173:3:13","nodeType":"VariableDeclaration","scope":3792,"src":"16166:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3733,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:13"},"returnParameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3792,"src":"16200:5:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3736,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:13"},"scope":3971,"src":"16144:524:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3957,"nodeType":"Block","src":"17334:1331:13","statements":[{"assignments":[3801],"declarations":[{"constant":false,"id":3801,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:13","nodeType":"VariableDeclaration","scope":3957,"src":"17344:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3800,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3806,"initialValue":{"arguments":[{"id":3804,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3795,"src":"17372:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3803,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3802,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:13","typeDescriptions":{}}},"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:13"},{"assignments":[3808],"declarations":[{"constant":false,"id":3808,"mutability":"mutable","name":"output","nameLocation":"17401:6:13","nodeType":"VariableDeclaration","scope":3957,"src":"17388:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3807,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3816,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3812,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"17424:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:13","memberName":"length","nodeType":"MemberAccess","src":"17424:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3809,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:13"},{"assignments":[3818],"declarations":[{"constant":false,"id":3818,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:13","nodeType":"VariableDeclaration","scope":3957,"src":"17471:20:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3817,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3820,"initialValue":{"hexValue":"30","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:13"},{"body":{"id":3949,"nodeType":"Block","src":"17546:854:13","statements":[{"assignments":[3832],"declarations":[{"constant":false,"id":3832,"mutability":"mutable","name":"char","nameLocation":"17567:4:13","nodeType":"VariableDeclaration","scope":3949,"src":"17560:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3831,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3840,"initialValue":{"arguments":[{"arguments":[{"id":3836,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"17604:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3837,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"17612:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3835,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"17581:22:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3833,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:13","typeDescriptions":{}}},"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:13"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3841,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2622,"src":"17635:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3845,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"17670:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3843,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:13","typeDescriptions":{}}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3850,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3947,"nodeType":"Block","src":"18328:62:13","statements":[{"expression":{"id":3945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3940,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"18346:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3943,"indexExpression":{"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:13","subExpression":{"id":3941,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"18353:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3944,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"18371:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3946,"nodeType":"ExpressionStatement","src":"18346:29:13"}]},"id":3948,"nodeType":"IfStatement","src":"17629:761:13","trueBody":{"id":3939,"nodeType":"Block","src":"17685:637:13","statements":[{"expression":{"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3854,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"17703:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3857,"indexExpression":{"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:13","subExpression":{"id":3855,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"17710:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3860,"nodeType":"ExpressionStatement","src":"17703:29:13"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3861,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"17754:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3871,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"17823:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:13","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3881,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"17892:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3891,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"17961:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:13","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"18030:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:13","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3911,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"18099:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:13","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3921,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"18169:4:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:13","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3932,"nodeType":"IfStatement","src":"18165:143:13","trueBody":{"id":3931,"nodeType":"Block","src":"18183:125:13","statements":[{"expression":{"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3924,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"18261:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3927,"indexExpression":{"id":3926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:13","subExpression":{"id":3925,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"18268:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3930,"nodeType":"ExpressionStatement","src":"18261:28:13"}]}},"id":3933,"nodeType":"IfStatement","src":"18095:213:13","trueBody":{"expression":{"id":3919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3914,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"18113:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3917,"indexExpression":{"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:13","subExpression":{"id":3915,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"18120:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3920,"nodeType":"ExpressionStatement","src":"18113:29:13"}},"id":3934,"nodeType":"IfStatement","src":"18026:282:13","trueBody":{"expression":{"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3904,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"18044:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3907,"indexExpression":{"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:13","subExpression":{"id":3905,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"18051:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3910,"nodeType":"ExpressionStatement","src":"18044:28:13"}},"id":3935,"nodeType":"IfStatement","src":"17957:351:13","trueBody":{"expression":{"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3894,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"17975:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3897,"indexExpression":{"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:13","subExpression":{"id":3895,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"17982:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3900,"nodeType":"ExpressionStatement","src":"17975:28:13"}},"id":3936,"nodeType":"IfStatement","src":"17888:420:13","trueBody":{"expression":{"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3884,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"17906:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3887,"indexExpression":{"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:13","subExpression":{"id":3885,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"17913:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3888,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3890,"nodeType":"ExpressionStatement","src":"17906:28:13"}},"id":3937,"nodeType":"IfStatement","src":"17819:489:13","trueBody":{"expression":{"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3874,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"17837:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3877,"indexExpression":{"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:13","subExpression":{"id":3875,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"17844:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3880,"nodeType":"ExpressionStatement","src":"17837:28:13"}},"id":3938,"nodeType":"IfStatement","src":"17750:558:13","trueBody":{"expression":{"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3864,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"17768:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3867,"indexExpression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:13","subExpression":{"id":3865,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3818,"src":"17775:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3870,"nodeType":"ExpressionStatement","src":"17768:28:13"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3824,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"17522:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3825,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"17526:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:13","memberName":"length","nodeType":"MemberAccess","src":"17526:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3950,"initializationExpression":{"assignments":[3822],"declarations":[{"constant":false,"id":3822,"mutability":"mutable","name":"i","nameLocation":"17519:1:13","nodeType":"VariableDeclaration","scope":3950,"src":"17511:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3821,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3823,"nodeType":"VariableDeclarationStatement","src":"17511:9:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:13","subExpression":{"id":3828,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3822,"src":"17543:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3830,"nodeType":"ExpressionStatement","src":"17541:3:13"},"nodeType":"ForStatement","src":"17506:894:13"},{"AST":{"nativeSrc":"18498:129:13","nodeType":"YulBlock","src":"18498:129:13","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18519:6:13","nodeType":"YulIdentifier","src":"18519:6:13"},{"name":"outputLength","nativeSrc":"18527:12:13","nodeType":"YulIdentifier","src":"18527:12:13"}],"functionName":{"name":"mstore","nativeSrc":"18512:6:13","nodeType":"YulIdentifier","src":"18512:6:13"},"nativeSrc":"18512:28:13","nodeType":"YulFunctionCall","src":"18512:28:13"},"nativeSrc":"18512:28:13","nodeType":"YulExpressionStatement","src":"18512:28:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18560:4:13","nodeType":"YulLiteral","src":"18560:4:13","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18570:6:13","nodeType":"YulIdentifier","src":"18570:6:13"},{"arguments":[{"kind":"number","nativeSrc":"18582:1:13","nodeType":"YulLiteral","src":"18582:1:13","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18589:1:13","nodeType":"YulLiteral","src":"18589:1:13","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18596:12:13","nodeType":"YulIdentifier","src":"18596:12:13"},{"kind":"number","nativeSrc":"18610:2:13","nodeType":"YulLiteral","src":"18610:2:13","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18592:3:13","nodeType":"YulIdentifier","src":"18592:3:13"},"nativeSrc":"18592:21:13","nodeType":"YulFunctionCall","src":"18592:21:13"}],"functionName":{"name":"shr","nativeSrc":"18585:3:13","nodeType":"YulIdentifier","src":"18585:3:13"},"nativeSrc":"18585:29:13","nodeType":"YulFunctionCall","src":"18585:29:13"}],"functionName":{"name":"shl","nativeSrc":"18578:3:13","nodeType":"YulIdentifier","src":"18578:3:13"},"nativeSrc":"18578:37:13","nodeType":"YulFunctionCall","src":"18578:37:13"}],"functionName":{"name":"add","nativeSrc":"18566:3:13","nodeType":"YulIdentifier","src":"18566:3:13"},"nativeSrc":"18566:50:13","nodeType":"YulFunctionCall","src":"18566:50:13"}],"functionName":{"name":"mstore","nativeSrc":"18553:6:13","nodeType":"YulIdentifier","src":"18553:6:13"},"nativeSrc":"18553:64:13","nodeType":"YulFunctionCall","src":"18553:64:13"},"nativeSrc":"18553:64:13","nodeType":"YulExpressionStatement","src":"18553:64:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":3808,"isOffset":false,"isSlot":false,"src":"18519:6:13","valueSize":1},{"declaration":3808,"isOffset":false,"isSlot":false,"src":"18570:6:13","valueSize":1},{"declaration":3818,"isOffset":false,"isSlot":false,"src":"18527:12:13","valueSize":1},{"declaration":3818,"isOffset":false,"isSlot":false,"src":"18596:12:13","valueSize":1}],"flags":["memory-safe"],"id":3951,"nodeType":"InlineAssembly","src":"18473:154:13"},{"expression":{"arguments":[{"id":3954,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3808,"src":"18651:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3952,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:13","typeDescriptions":{}}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3799,"id":3956,"nodeType":"Return","src":"18637:21:13"}]},"documentation":{"id":3793,"nodeType":"StructuredDocumentation","src":"16674:576:13","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3958,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:13","nodeType":"FunctionDefinition","parameters":{"id":3796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3795,"mutability":"mutable","name":"input","nameLocation":"17289:5:13","nodeType":"VariableDeclaration","scope":3958,"src":"17275:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3794,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:13"},"returnParameters":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3958,"src":"17319:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3797,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:13"},"scope":3971,"src":"17255:1410:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3969,"nodeType":"Block","src":"19050:225:13","statements":[{"AST":{"nativeSrc":"19199:70:13","nodeType":"YulBlock","src":"19199:70:13","statements":[{"nativeSrc":"19213:46:13","nodeType":"YulAssignment","src":"19213:46:13","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19232:6:13","nodeType":"YulIdentifier","src":"19232:6:13"},{"arguments":[{"kind":"number","nativeSrc":"19244:4:13","nodeType":"YulLiteral","src":"19244:4:13","type":"","value":"0x20"},{"name":"offset","nativeSrc":"19250:6:13","nodeType":"YulIdentifier","src":"19250:6:13"}],"functionName":{"name":"add","nativeSrc":"19240:3:13","nodeType":"YulIdentifier","src":"19240:3:13"},"nativeSrc":"19240:17:13","nodeType":"YulFunctionCall","src":"19240:17:13"}],"functionName":{"name":"add","nativeSrc":"19228:3:13","nodeType":"YulIdentifier","src":"19228:3:13"},"nativeSrc":"19228:30:13","nodeType":"YulFunctionCall","src":"19228:30:13"}],"functionName":{"name":"mload","nativeSrc":"19222:5:13","nodeType":"YulIdentifier","src":"19222:5:13"},"nativeSrc":"19222:37:13","nodeType":"YulFunctionCall","src":"19222:37:13"},"variableNames":[{"name":"value","nativeSrc":"19213:5:13","nodeType":"YulIdentifier","src":"19213:5:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3961,"isOffset":false,"isSlot":false,"src":"19232:6:13","valueSize":1},{"declaration":3963,"isOffset":false,"isSlot":false,"src":"19250:6:13","valueSize":1},{"declaration":3966,"isOffset":false,"isSlot":false,"src":"19213:5:13","valueSize":1}],"flags":["memory-safe"],"id":3968,"nodeType":"InlineAssembly","src":"19174:95:13"}]},"documentation":{"id":3959,"nodeType":"StructuredDocumentation","src":"18671:268:13","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3970,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:13","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3961,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:13","nodeType":"VariableDeclaration","scope":3970,"src":"18976:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3960,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3963,"mutability":"mutable","name":"offset","nameLocation":"19005:6:13","nodeType":"VariableDeclaration","scope":3970,"src":"18997:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3962,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:13"},"returnParameters":{"id":3967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"value","nameLocation":"19043:5:13","nodeType":"VariableDeclaration","scope":3970,"src":"19035:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:13","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:13"},"scope":3971,"src":"18944:331:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3972,"src":"297:18980:13","usedErrors":[2629,2632,2635],"usedEvents":[]}],"src":"101:19177:13"},"id":13},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[5592],"Panic":[2392],"SafeCast":[7357]},"id":5593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3973,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3975,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5593,"sourceUnit":2393,"src":"129:35:14","symbolAliases":[{"foreign":{"id":3974,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"137:5:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3977,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5593,"sourceUnit":7358,"src":"165:40:14","symbolAliases":[{"foreign":{"id":3976,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"173:8:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"207:73:14","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":5592,"linearizedBaseContracts":[5592],"name":"Math","nameLocation":"289:4:14","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3983,"members":[{"id":3979,"name":"Floor","nameLocation":"324:5:14","nodeType":"EnumValue","src":"324:5:14"},{"id":3980,"name":"Ceil","nameLocation":"367:4:14","nodeType":"EnumValue","src":"367:4:14"},{"id":3981,"name":"Trunc","nameLocation":"409:5:14","nodeType":"EnumValue","src":"409:5:14"},{"id":3982,"name":"Expand","nameLocation":"439:6:14","nodeType":"EnumValue","src":"439:6:14"}],"name":"Rounding","nameLocation":"305:8:14","nodeType":"EnumDefinition","src":"300:169:14"},{"body":{"id":3996,"nodeType":"Block","src":"731:112:14","statements":[{"AST":{"nativeSrc":"766:71:14","nodeType":"YulBlock","src":"766:71:14","statements":[{"nativeSrc":"780:16:14","nodeType":"YulAssignment","src":"780:16:14","value":{"arguments":[{"name":"a","nativeSrc":"791:1:14","nodeType":"YulIdentifier","src":"791:1:14"},{"name":"b","nativeSrc":"794:1:14","nodeType":"YulIdentifier","src":"794:1:14"}],"functionName":{"name":"add","nativeSrc":"787:3:14","nodeType":"YulIdentifier","src":"787:3:14"},"nativeSrc":"787:9:14","nodeType":"YulFunctionCall","src":"787:9:14"},"variableNames":[{"name":"low","nativeSrc":"780:3:14","nodeType":"YulIdentifier","src":"780:3:14"}]},{"nativeSrc":"809:18:14","nodeType":"YulAssignment","src":"809:18:14","value":{"arguments":[{"name":"low","nativeSrc":"820:3:14","nodeType":"YulIdentifier","src":"820:3:14"},{"name":"a","nativeSrc":"825:1:14","nodeType":"YulIdentifier","src":"825:1:14"}],"functionName":{"name":"lt","nativeSrc":"817:2:14","nodeType":"YulIdentifier","src":"817:2:14"},"nativeSrc":"817:10:14","nodeType":"YulFunctionCall","src":"817:10:14"},"variableNames":[{"name":"high","nativeSrc":"809:4:14","nodeType":"YulIdentifier","src":"809:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3986,"isOffset":false,"isSlot":false,"src":"791:1:14","valueSize":1},{"declaration":3986,"isOffset":false,"isSlot":false,"src":"825:1:14","valueSize":1},{"declaration":3988,"isOffset":false,"isSlot":false,"src":"794:1:14","valueSize":1},{"declaration":3991,"isOffset":false,"isSlot":false,"src":"809:4:14","valueSize":1},{"declaration":3993,"isOffset":false,"isSlot":false,"src":"780:3:14","valueSize":1},{"declaration":3993,"isOffset":false,"isSlot":false,"src":"820:3:14","valueSize":1}],"flags":["memory-safe"],"id":3995,"nodeType":"InlineAssembly","src":"741:96:14"}]},"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"475:163:14","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3997,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:14","nodeType":"FunctionDefinition","parameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"a","nameLocation":"667:1:14","nodeType":"VariableDeclaration","scope":3997,"src":"659:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"b","nameLocation":"678:1:14","nodeType":"VariableDeclaration","scope":3997,"src":"670:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:14"},"returnParameters":{"id":3994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"high","nameLocation":"712:4:14","nodeType":"VariableDeclaration","scope":3997,"src":"704:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3993,"mutability":"mutable","name":"low","nameLocation":"726:3:14","nodeType":"VariableDeclaration","scope":3997,"src":"718:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3992,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:14"},"scope":5592,"src":"643:200:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4010,"nodeType":"Block","src":"1115:462:14","statements":[{"AST":{"nativeSrc":"1437:134:14","nodeType":"YulBlock","src":"1437:134:14","statements":[{"nativeSrc":"1451:30:14","nodeType":"YulVariableDeclaration","src":"1451:30:14","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:14","nodeType":"YulIdentifier","src":"1468:1:14"},{"name":"b","nativeSrc":"1471:1:14","nodeType":"YulIdentifier","src":"1471:1:14"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:14","nodeType":"YulLiteral","src":"1478:1:14","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:14","nodeType":"YulIdentifier","src":"1474:3:14"},"nativeSrc":"1474:6:14","nodeType":"YulFunctionCall","src":"1474:6:14"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:14","nodeType":"YulIdentifier","src":"1461:6:14"},"nativeSrc":"1461:20:14","nodeType":"YulFunctionCall","src":"1461:20:14"},"variables":[{"name":"mm","nativeSrc":"1455:2:14","nodeType":"YulTypedName","src":"1455:2:14","type":""}]},{"nativeSrc":"1494:16:14","nodeType":"YulAssignment","src":"1494:16:14","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:14","nodeType":"YulIdentifier","src":"1505:1:14"},{"name":"b","nativeSrc":"1508:1:14","nodeType":"YulIdentifier","src":"1508:1:14"}],"functionName":{"name":"mul","nativeSrc":"1501:3:14","nodeType":"YulIdentifier","src":"1501:3:14"},"nativeSrc":"1501:9:14","nodeType":"YulFunctionCall","src":"1501:9:14"},"variableNames":[{"name":"low","nativeSrc":"1494:3:14","nodeType":"YulIdentifier","src":"1494:3:14"}]},{"nativeSrc":"1523:38:14","nodeType":"YulAssignment","src":"1523:38:14","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:14","nodeType":"YulIdentifier","src":"1539:2:14"},{"name":"low","nativeSrc":"1543:3:14","nodeType":"YulIdentifier","src":"1543:3:14"}],"functionName":{"name":"sub","nativeSrc":"1535:3:14","nodeType":"YulIdentifier","src":"1535:3:14"},"nativeSrc":"1535:12:14","nodeType":"YulFunctionCall","src":"1535:12:14"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:14","nodeType":"YulIdentifier","src":"1552:2:14"},{"name":"low","nativeSrc":"1556:3:14","nodeType":"YulIdentifier","src":"1556:3:14"}],"functionName":{"name":"lt","nativeSrc":"1549:2:14","nodeType":"YulIdentifier","src":"1549:2:14"},"nativeSrc":"1549:11:14","nodeType":"YulFunctionCall","src":"1549:11:14"}],"functionName":{"name":"sub","nativeSrc":"1531:3:14","nodeType":"YulIdentifier","src":"1531:3:14"},"nativeSrc":"1531:30:14","nodeType":"YulFunctionCall","src":"1531:30:14"},"variableNames":[{"name":"high","nativeSrc":"1523:4:14","nodeType":"YulIdentifier","src":"1523:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4000,"isOffset":false,"isSlot":false,"src":"1468:1:14","valueSize":1},{"declaration":4000,"isOffset":false,"isSlot":false,"src":"1505:1:14","valueSize":1},{"declaration":4002,"isOffset":false,"isSlot":false,"src":"1471:1:14","valueSize":1},{"declaration":4002,"isOffset":false,"isSlot":false,"src":"1508:1:14","valueSize":1},{"declaration":4005,"isOffset":false,"isSlot":false,"src":"1523:4:14","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"1494:3:14","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"1543:3:14","valueSize":1},{"declaration":4007,"isOffset":false,"isSlot":false,"src":"1556:3:14","valueSize":1}],"flags":["memory-safe"],"id":4009,"nodeType":"InlineAssembly","src":"1412:159:14"}]},"documentation":{"id":3998,"nodeType":"StructuredDocumentation","src":"849:173:14","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":4011,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:14","nodeType":"FunctionDefinition","parameters":{"id":4003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"a","nameLocation":"1051:1:14","nodeType":"VariableDeclaration","scope":4011,"src":"1043:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3999,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4002,"mutability":"mutable","name":"b","nameLocation":"1062:1:14","nodeType":"VariableDeclaration","scope":4011,"src":"1054:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4001,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:14"},"returnParameters":{"id":4008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4005,"mutability":"mutable","name":"high","nameLocation":"1096:4:14","nodeType":"VariableDeclaration","scope":4011,"src":"1088:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4004,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4007,"mutability":"mutable","name":"low","nameLocation":"1110:3:14","nodeType":"VariableDeclaration","scope":4011,"src":"1102:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:14"},"scope":5592,"src":"1027:550:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"1784:149:14","statements":[{"id":4044,"nodeType":"UncheckedBlock","src":"1794:133:14","statements":[{"assignments":[4024],"declarations":[{"constant":false,"id":4024,"mutability":"mutable","name":"c","nameLocation":"1826:1:14","nodeType":"VariableDeclaration","scope":4044,"src":"1818:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4023,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4028,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4025,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"1830:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4026,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"1834:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:14"},{"expression":{"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4029,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"1849:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4030,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"1859:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4031,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4014,"src":"1864:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4034,"nodeType":"ExpressionStatement","src":"1849:16:14"},{"expression":{"id":4042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4035,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4021,"src":"1879:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4036,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4024,"src":"1888:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4039,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"1908:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4037,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"1892:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":4038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"1892:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4043,"nodeType":"ExpressionStatement","src":"1879:37:14"}]}]},"documentation":{"id":4012,"nodeType":"StructuredDocumentation","src":"1583:105:14","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:14","nodeType":"FunctionDefinition","parameters":{"id":4017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"a","nameLocation":"1717:1:14","nodeType":"VariableDeclaration","scope":4046,"src":"1709:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4016,"mutability":"mutable","name":"b","nameLocation":"1728:1:14","nodeType":"VariableDeclaration","scope":4046,"src":"1720:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:14"},"returnParameters":{"id":4022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4019,"mutability":"mutable","name":"success","nameLocation":"1759:7:14","nodeType":"VariableDeclaration","scope":4046,"src":"1754:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4018,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"result","nameLocation":"1776:6:14","nodeType":"VariableDeclaration","scope":4046,"src":"1768:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4020,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:14"},"scope":5592,"src":"1693:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4080,"nodeType":"Block","src":"2143:149:14","statements":[{"id":4079,"nodeType":"UncheckedBlock","src":"2153:133:14","statements":[{"assignments":[4059],"declarations":[{"constant":false,"id":4059,"mutability":"mutable","name":"c","nameLocation":"2185:1:14","nodeType":"VariableDeclaration","scope":4079,"src":"2177:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4058,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4063,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4060,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"2189:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4061,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"2193:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:14"},{"expression":{"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4064,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"2208:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4065,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"2218:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4066,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"2223:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4069,"nodeType":"ExpressionStatement","src":"2208:16:14"},{"expression":{"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4070,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4056,"src":"2238:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"2247:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4074,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"2267:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4072,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"2251:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":4073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"2251:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4078,"nodeType":"ExpressionStatement","src":"2238:37:14"}]}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"1939:108:14","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":4081,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:14","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"a","nameLocation":"2076:1:14","nodeType":"VariableDeclaration","scope":4081,"src":"2068:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4048,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"b","nameLocation":"2087:1:14","nodeType":"VariableDeclaration","scope":4081,"src":"2079:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4050,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:14"},"returnParameters":{"id":4057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"success","nameLocation":"2118:7:14","nodeType":"VariableDeclaration","scope":4081,"src":"2113:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4053,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4056,"mutability":"mutable","name":"result","nameLocation":"2135:6:14","nodeType":"VariableDeclaration","scope":4081,"src":"2127:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4055,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:14"},"scope":5592,"src":"2052:240:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4110,"nodeType":"Block","src":"2505:391:14","statements":[{"id":4109,"nodeType":"UncheckedBlock","src":"2515:375:14","statements":[{"assignments":[4094],"declarations":[{"constant":false,"id":4094,"mutability":"mutable","name":"c","nameLocation":"2547:1:14","nodeType":"VariableDeclaration","scope":4109,"src":"2539:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4093,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4098,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4095,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4084,"src":"2551:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4096,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4086,"src":"2555:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:14"},{"AST":{"nativeSrc":"2595:188:14","nodeType":"YulBlock","src":"2595:188:14","statements":[{"nativeSrc":"2727:42:14","nodeType":"YulAssignment","src":"2727:42:14","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:14","nodeType":"YulIdentifier","src":"2748:1:14"},{"name":"a","nativeSrc":"2751:1:14","nodeType":"YulIdentifier","src":"2751:1:14"}],"functionName":{"name":"div","nativeSrc":"2744:3:14","nodeType":"YulIdentifier","src":"2744:3:14"},"nativeSrc":"2744:9:14","nodeType":"YulFunctionCall","src":"2744:9:14"},{"name":"b","nativeSrc":"2755:1:14","nodeType":"YulIdentifier","src":"2755:1:14"}],"functionName":{"name":"eq","nativeSrc":"2741:2:14","nodeType":"YulIdentifier","src":"2741:2:14"},"nativeSrc":"2741:16:14","nodeType":"YulFunctionCall","src":"2741:16:14"},{"arguments":[{"name":"a","nativeSrc":"2766:1:14","nodeType":"YulIdentifier","src":"2766:1:14"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:14","nodeType":"YulIdentifier","src":"2759:6:14"},"nativeSrc":"2759:9:14","nodeType":"YulFunctionCall","src":"2759:9:14"}],"functionName":{"name":"or","nativeSrc":"2738:2:14","nodeType":"YulIdentifier","src":"2738:2:14"},"nativeSrc":"2738:31:14","nodeType":"YulFunctionCall","src":"2738:31:14"},"variableNames":[{"name":"success","nativeSrc":"2727:7:14","nodeType":"YulIdentifier","src":"2727:7:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4084,"isOffset":false,"isSlot":false,"src":"2751:1:14","valueSize":1},{"declaration":4084,"isOffset":false,"isSlot":false,"src":"2766:1:14","valueSize":1},{"declaration":4086,"isOffset":false,"isSlot":false,"src":"2755:1:14","valueSize":1},{"declaration":4094,"isOffset":false,"isSlot":false,"src":"2748:1:14","valueSize":1},{"declaration":4089,"isOffset":false,"isSlot":false,"src":"2727:7:14","valueSize":1}],"flags":["memory-safe"],"id":4099,"nodeType":"InlineAssembly","src":"2570:213:14"},{"expression":{"id":4107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4100,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"2842:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4101,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"2851:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4104,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"2871:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4102,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"2855:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"2855:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4108,"nodeType":"ExpressionStatement","src":"2842:37:14"}]}]},"documentation":{"id":4082,"nodeType":"StructuredDocumentation","src":"2298:111:14","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":4111,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:14","nodeType":"FunctionDefinition","parameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4084,"mutability":"mutable","name":"a","nameLocation":"2438:1:14","nodeType":"VariableDeclaration","scope":4111,"src":"2430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4083,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4086,"mutability":"mutable","name":"b","nameLocation":"2449:1:14","nodeType":"VariableDeclaration","scope":4111,"src":"2441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4085,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:14"},"returnParameters":{"id":4092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4089,"mutability":"mutable","name":"success","nameLocation":"2480:7:14","nodeType":"VariableDeclaration","scope":4111,"src":"2475:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4088,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4091,"mutability":"mutable","name":"result","nameLocation":"2497:6:14","nodeType":"VariableDeclaration","scope":4111,"src":"2489:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4090,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:14"},"scope":5592,"src":"2414:482:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4131,"nodeType":"Block","src":"3111:231:14","statements":[{"id":4130,"nodeType":"UncheckedBlock","src":"3121:215:14","statements":[{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4123,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"3145:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4124,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4116,"src":"3155:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4128,"nodeType":"ExpressionStatement","src":"3145:15:14"},{"AST":{"nativeSrc":"3199:127:14","nodeType":"YulBlock","src":"3199:127:14","statements":[{"nativeSrc":"3293:19:14","nodeType":"YulAssignment","src":"3293:19:14","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:14","nodeType":"YulIdentifier","src":"3307:1:14"},{"name":"b","nativeSrc":"3310:1:14","nodeType":"YulIdentifier","src":"3310:1:14"}],"functionName":{"name":"div","nativeSrc":"3303:3:14","nodeType":"YulIdentifier","src":"3303:3:14"},"nativeSrc":"3303:9:14","nodeType":"YulFunctionCall","src":"3303:9:14"},"variableNames":[{"name":"result","nativeSrc":"3293:6:14","nodeType":"YulIdentifier","src":"3293:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4114,"isOffset":false,"isSlot":false,"src":"3307:1:14","valueSize":1},{"declaration":4116,"isOffset":false,"isSlot":false,"src":"3310:1:14","valueSize":1},{"declaration":4121,"isOffset":false,"isSlot":false,"src":"3293:6:14","valueSize":1}],"flags":["memory-safe"],"id":4129,"nodeType":"InlineAssembly","src":"3174:152:14"}]}]},"documentation":{"id":4112,"nodeType":"StructuredDocumentation","src":"2902:113:14","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":4132,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:14","nodeType":"FunctionDefinition","parameters":{"id":4117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"a","nameLocation":"3044:1:14","nodeType":"VariableDeclaration","scope":4132,"src":"3036:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4116,"mutability":"mutable","name":"b","nameLocation":"3055:1:14","nodeType":"VariableDeclaration","scope":4132,"src":"3047:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4115,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:14"},"returnParameters":{"id":4122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4119,"mutability":"mutable","name":"success","nameLocation":"3086:7:14","nodeType":"VariableDeclaration","scope":4132,"src":"3081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4118,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4121,"mutability":"mutable","name":"result","nameLocation":"3103:6:14","nodeType":"VariableDeclaration","scope":4132,"src":"3095:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4120,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:14"},"scope":5592,"src":"3020:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4152,"nodeType":"Block","src":"3567:231:14","statements":[{"id":4151,"nodeType":"UncheckedBlock","src":"3577:215:14","statements":[{"expression":{"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4144,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4140,"src":"3601:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4145,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4137,"src":"3611:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4149,"nodeType":"ExpressionStatement","src":"3601:15:14"},{"AST":{"nativeSrc":"3655:127:14","nodeType":"YulBlock","src":"3655:127:14","statements":[{"nativeSrc":"3749:19:14","nodeType":"YulAssignment","src":"3749:19:14","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:14","nodeType":"YulIdentifier","src":"3763:1:14"},{"name":"b","nativeSrc":"3766:1:14","nodeType":"YulIdentifier","src":"3766:1:14"}],"functionName":{"name":"mod","nativeSrc":"3759:3:14","nodeType":"YulIdentifier","src":"3759:3:14"},"nativeSrc":"3759:9:14","nodeType":"YulFunctionCall","src":"3759:9:14"},"variableNames":[{"name":"result","nativeSrc":"3749:6:14","nodeType":"YulIdentifier","src":"3749:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4135,"isOffset":false,"isSlot":false,"src":"3763:1:14","valueSize":1},{"declaration":4137,"isOffset":false,"isSlot":false,"src":"3766:1:14","valueSize":1},{"declaration":4142,"isOffset":false,"isSlot":false,"src":"3749:6:14","valueSize":1}],"flags":["memory-safe"],"id":4150,"nodeType":"InlineAssembly","src":"3630:152:14"}]}]},"documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"3348:123:14","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":4153,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:14","nodeType":"FunctionDefinition","parameters":{"id":4138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"a","nameLocation":"3500:1:14","nodeType":"VariableDeclaration","scope":4153,"src":"3492:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4134,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4137,"mutability":"mutable","name":"b","nameLocation":"3511:1:14","nodeType":"VariableDeclaration","scope":4153,"src":"3503:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:14"},"returnParameters":{"id":4143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4140,"mutability":"mutable","name":"success","nameLocation":"3542:7:14","nodeType":"VariableDeclaration","scope":4153,"src":"3537:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4139,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"result","nameLocation":"3559:6:14","nodeType":"VariableDeclaration","scope":4153,"src":"3551:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:14"},"scope":5592,"src":"3476:322:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4182,"nodeType":"Block","src":"3989:122:14","statements":[{"assignments":[4164,4166],"declarations":[{"constant":false,"id":4164,"mutability":"mutable","name":"success","nameLocation":"4005:7:14","nodeType":"VariableDeclaration","scope":4182,"src":"4000:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4163,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4166,"mutability":"mutable","name":"result","nameLocation":"4022:6:14","nodeType":"VariableDeclaration","scope":4182,"src":"4014:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4165,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4171,"initialValue":{"arguments":[{"id":4168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4156,"src":"4039:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4169,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"4042:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4167,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4046,"src":"4032:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:14"},{"expression":{"arguments":[{"id":4173,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"4069:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4174,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"4078:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4175,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:14","memberName":"max","nodeType":"MemberAccess","src":"4086:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4172,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"4061:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4162,"id":4181,"nodeType":"Return","src":"4054:50:14"}]},"documentation":{"id":4154,"nodeType":"StructuredDocumentation","src":"3804:103:14","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:14","nodeType":"FunctionDefinition","parameters":{"id":4159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4156,"mutability":"mutable","name":"a","nameLocation":"3943:1:14","nodeType":"VariableDeclaration","scope":4183,"src":"3935:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4155,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4158,"mutability":"mutable","name":"b","nameLocation":"3954:1:14","nodeType":"VariableDeclaration","scope":4183,"src":"3946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:14"},"returnParameters":{"id":4162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4161,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4183,"src":"3980:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4160,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:14"},"scope":5592,"src":"3912:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4202,"nodeType":"Block","src":"4294:73:14","statements":[{"assignments":[null,4194],"declarations":[null,{"constant":false,"id":4194,"mutability":"mutable","name":"result","nameLocation":"4315:6:14","nodeType":"VariableDeclaration","scope":4202,"src":"4307:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4199,"initialValue":{"arguments":[{"id":4196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4186,"src":"4332:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4197,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4188,"src":"4335:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4195,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"4325:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:14"},{"expression":{"id":4200,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"4354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4192,"id":4201,"nodeType":"Return","src":"4347:13:14"}]},"documentation":{"id":4184,"nodeType":"StructuredDocumentation","src":"4117:95:14","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":4203,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:14","nodeType":"FunctionDefinition","parameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4186,"mutability":"mutable","name":"a","nameLocation":"4248:1:14","nodeType":"VariableDeclaration","scope":4203,"src":"4240:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4185,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4188,"mutability":"mutable","name":"b","nameLocation":"4259:1:14","nodeType":"VariableDeclaration","scope":4203,"src":"4251:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4187,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:14"},"returnParameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4203,"src":"4285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4190,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:14"},"scope":5592,"src":"4217:150:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4232,"nodeType":"Block","src":"4564:122:14","statements":[{"assignments":[4214,4216],"declarations":[{"constant":false,"id":4214,"mutability":"mutable","name":"success","nameLocation":"4580:7:14","nodeType":"VariableDeclaration","scope":4232,"src":"4575:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4213,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4216,"mutability":"mutable","name":"result","nameLocation":"4597:6:14","nodeType":"VariableDeclaration","scope":4232,"src":"4589:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4215,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4221,"initialValue":{"arguments":[{"id":4218,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4206,"src":"4614:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4219,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4208,"src":"4617:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4217,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"4607:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":4220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:14"},{"expression":{"arguments":[{"id":4223,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4214,"src":"4644:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4224,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4216,"src":"4653:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":4227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":4225,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:14","memberName":"max","nodeType":"MemberAccess","src":"4661:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4222,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"4636:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4212,"id":4231,"nodeType":"Return","src":"4629:50:14"}]},"documentation":{"id":4204,"nodeType":"StructuredDocumentation","src":"4373:109:14","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":4233,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:14","nodeType":"FunctionDefinition","parameters":{"id":4209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"a","nameLocation":"4518:1:14","nodeType":"VariableDeclaration","scope":4233,"src":"4510:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4208,"mutability":"mutable","name":"b","nameLocation":"4529:1:14","nodeType":"VariableDeclaration","scope":4233,"src":"4521:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:14"},"returnParameters":{"id":4212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4233,"src":"4555:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4210,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:14"},"scope":5592,"src":"4487:199:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"5158:207:14","statements":[{"id":4258,"nodeType":"UncheckedBlock","src":"5168:191:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"5306:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4246,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4238,"src":"5312:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4247,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4240,"src":"5316:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4249,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4252,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4236,"src":"5337:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4250,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"5321:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"5321:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4255,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4244,"id":4257,"nodeType":"Return","src":"5299:49:14"}]}]},"documentation":{"id":4234,"nodeType":"StructuredDocumentation","src":"4692:374:14","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:14","nodeType":"FunctionDefinition","parameters":{"id":4241,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4236,"mutability":"mutable","name":"condition","nameLocation":"5093:9:14","nodeType":"VariableDeclaration","scope":4260,"src":"5088:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4235,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4238,"mutability":"mutable","name":"a","nameLocation":"5112:1:14","nodeType":"VariableDeclaration","scope":4260,"src":"5104:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4237,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4240,"mutability":"mutable","name":"b","nameLocation":"5123:1:14","nodeType":"VariableDeclaration","scope":4260,"src":"5115:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4239,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:14"},"returnParameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4260,"src":"5149:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4242,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:14"},"scope":5592,"src":"5071:294:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4278,"nodeType":"Block","src":"5502:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"5527:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"5531:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4274,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"5534:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4275,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4265,"src":"5537:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4270,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"5519:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4269,"id":4277,"nodeType":"Return","src":"5512:27:14"}]},"documentation":{"id":4261,"nodeType":"StructuredDocumentation","src":"5371:59:14","text":" @dev Returns the largest of two numbers."},"id":4279,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:14","nodeType":"FunctionDefinition","parameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"a","nameLocation":"5456:1:14","nodeType":"VariableDeclaration","scope":4279,"src":"5448:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4262,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4265,"mutability":"mutable","name":"b","nameLocation":"5467:1:14","nodeType":"VariableDeclaration","scope":4279,"src":"5459:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:14"},"returnParameters":{"id":4269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4268,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4279,"src":"5493:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4267,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:14"},"scope":5592,"src":"5435:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4297,"nodeType":"Block","src":"5684:44:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4290,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"5709:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4291,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"5713:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"5716:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4294,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"5719:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4289,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"5701:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4288,"id":4296,"nodeType":"Return","src":"5694:27:14"}]},"documentation":{"id":4280,"nodeType":"StructuredDocumentation","src":"5552:60:14","text":" @dev Returns the smallest of two numbers."},"id":4298,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:14","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"a","nameLocation":"5638:1:14","nodeType":"VariableDeclaration","scope":4298,"src":"5630:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"b","nameLocation":"5649:1:14","nodeType":"VariableDeclaration","scope":4298,"src":"5641:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:14"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4298,"src":"5675:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:14"},"scope":5592,"src":"5617:111:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4320,"nodeType":"Block","src":"5912:82:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4308,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"5967:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4309,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5971:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4312,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4301,"src":"5977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4313,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4303,"src":"5981:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4315,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":4316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4307,"id":4319,"nodeType":"Return","src":"5959:28:14"}]},"documentation":{"id":4299,"nodeType":"StructuredDocumentation","src":"5734:102:14","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":4321,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:14","nodeType":"FunctionDefinition","parameters":{"id":4304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4301,"mutability":"mutable","name":"a","nameLocation":"5866:1:14","nodeType":"VariableDeclaration","scope":4321,"src":"5858:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4300,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4303,"mutability":"mutable","name":"b","nameLocation":"5877:1:14","nodeType":"VariableDeclaration","scope":4321,"src":"5869:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4302,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:14"},"returnParameters":{"id":4307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4321,"src":"5903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:14"},"scope":5592,"src":"5841:153:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4361,"nodeType":"Block","src":"6286:633:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"6300:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4342,"nodeType":"IfStatement","src":"6296:150:14","trueBody":{"id":4341,"nodeType":"Block","src":"6308:138:14","statements":[{"expression":{"arguments":[{"expression":{"id":4337,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"6412:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"6412:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4334,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"6400:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"6400:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4340,"nodeType":"ExpressionStatement","src":"6400:35:14"}]}},{"id":4360,"nodeType":"UncheckedBlock","src":"6829:84:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"6876:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4343,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"6860:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":4344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"6860:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4324,"src":"6887:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4352,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4353,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"6896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4357,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4330,"id":4359,"nodeType":"Return","src":"6853:49:14"}]}]},"documentation":{"id":4322,"nodeType":"StructuredDocumentation","src":"6000:210:14","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":4362,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:14","nodeType":"FunctionDefinition","parameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4324,"mutability":"mutable","name":"a","nameLocation":"6240:1:14","nodeType":"VariableDeclaration","scope":4362,"src":"6232:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4326,"mutability":"mutable","name":"b","nameLocation":"6251:1:14","nodeType":"VariableDeclaration","scope":4362,"src":"6243:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:14"},"returnParameters":{"id":4330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4362,"src":"6277:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:14"},"scope":5592,"src":"6215:704:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4497,"nodeType":"Block","src":"7340:3585:14","statements":[{"id":4496,"nodeType":"UncheckedBlock","src":"7350:3569:14","statements":[{"assignments":[4375,4377],"declarations":[{"constant":false,"id":4375,"mutability":"mutable","name":"high","nameLocation":"7383:4:14","nodeType":"VariableDeclaration","scope":4496,"src":"7375:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4374,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4377,"mutability":"mutable","name":"low","nameLocation":"7397:3:14","nodeType":"VariableDeclaration","scope":4496,"src":"7389:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4376,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4382,"initialValue":{"arguments":[{"id":4379,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4365,"src":"7411:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4380,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4367,"src":"7414:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4378,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"7404:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4383,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"7498:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4391,"nodeType":"IfStatement","src":"7494:365:14","trueBody":{"id":4390,"nodeType":"Block","src":"7509:350:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4386,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"7827:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4387,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"7833:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4373,"id":4389,"nodeType":"Return","src":"7820:24:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"7969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":4393,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"7984:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4410,"nodeType":"IfStatement","src":"7965:142:14","trueBody":{"id":4409,"nodeType":"Block","src":"7990:117:14","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4399,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"8028:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":4402,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"8046:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"8046:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4404,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"8070:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2355,"src":"8070:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4398,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"8020:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4395,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"8008:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"8008:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4408,"nodeType":"ExpressionStatement","src":"8008:84:14"}]}},{"assignments":[4412],"declarations":[{"constant":false,"id":4412,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:14","nodeType":"VariableDeclaration","scope":4496,"src":"8359:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4411,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4413,"nodeType":"VariableDeclarationStatement","src":"8359:17:14"},{"AST":{"nativeSrc":"8415:283:14","nodeType":"YulBlock","src":"8415:283:14","statements":[{"nativeSrc":"8484:38:14","nodeType":"YulAssignment","src":"8484:38:14","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:14","nodeType":"YulIdentifier","src":"8504:1:14"},{"name":"y","nativeSrc":"8507:1:14","nodeType":"YulIdentifier","src":"8507:1:14"},{"name":"denominator","nativeSrc":"8510:11:14","nodeType":"YulIdentifier","src":"8510:11:14"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:14","nodeType":"YulIdentifier","src":"8497:6:14"},"nativeSrc":"8497:25:14","nodeType":"YulFunctionCall","src":"8497:25:14"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:14","nodeType":"YulIdentifier","src":"8484:9:14"}]},{"nativeSrc":"8604:37:14","nodeType":"YulAssignment","src":"8604:37:14","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:14","nodeType":"YulIdentifier","src":"8616:4:14"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:14","nodeType":"YulIdentifier","src":"8625:9:14"},{"name":"low","nativeSrc":"8636:3:14","nodeType":"YulIdentifier","src":"8636:3:14"}],"functionName":{"name":"gt","nativeSrc":"8622:2:14","nodeType":"YulIdentifier","src":"8622:2:14"},"nativeSrc":"8622:18:14","nodeType":"YulFunctionCall","src":"8622:18:14"}],"functionName":{"name":"sub","nativeSrc":"8612:3:14","nodeType":"YulIdentifier","src":"8612:3:14"},"nativeSrc":"8612:29:14","nodeType":"YulFunctionCall","src":"8612:29:14"},"variableNames":[{"name":"high","nativeSrc":"8604:4:14","nodeType":"YulIdentifier","src":"8604:4:14"}]},{"nativeSrc":"8658:26:14","nodeType":"YulAssignment","src":"8658:26:14","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:14","nodeType":"YulIdentifier","src":"8669:3:14"},{"name":"remainder","nativeSrc":"8674:9:14","nodeType":"YulIdentifier","src":"8674:9:14"}],"functionName":{"name":"sub","nativeSrc":"8665:3:14","nodeType":"YulIdentifier","src":"8665:3:14"},"nativeSrc":"8665:19:14","nodeType":"YulFunctionCall","src":"8665:19:14"},"variableNames":[{"name":"low","nativeSrc":"8658:3:14","nodeType":"YulIdentifier","src":"8658:3:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4369,"isOffset":false,"isSlot":false,"src":"8510:11:14","valueSize":1},{"declaration":4375,"isOffset":false,"isSlot":false,"src":"8604:4:14","valueSize":1},{"declaration":4375,"isOffset":false,"isSlot":false,"src":"8616:4:14","valueSize":1},{"declaration":4377,"isOffset":false,"isSlot":false,"src":"8636:3:14","valueSize":1},{"declaration":4377,"isOffset":false,"isSlot":false,"src":"8658:3:14","valueSize":1},{"declaration":4377,"isOffset":false,"isSlot":false,"src":"8669:3:14","valueSize":1},{"declaration":4412,"isOffset":false,"isSlot":false,"src":"8484:9:14","valueSize":1},{"declaration":4412,"isOffset":false,"isSlot":false,"src":"8625:9:14","valueSize":1},{"declaration":4412,"isOffset":false,"isSlot":false,"src":"8674:9:14","valueSize":1},{"declaration":4365,"isOffset":false,"isSlot":false,"src":"8504:1:14","valueSize":1},{"declaration":4367,"isOffset":false,"isSlot":false,"src":"8507:1:14","valueSize":1}],"flags":["memory-safe"],"id":4414,"nodeType":"InlineAssembly","src":"8390:308:14"},{"assignments":[4416],"declarations":[{"constant":false,"id":4416,"mutability":"mutable","name":"twos","nameLocation":"8910:4:14","nodeType":"VariableDeclaration","scope":4496,"src":"8902:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4423,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"8917:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4419,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"8936:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4421,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:14"},{"AST":{"nativeSrc":"8987:359:14","nodeType":"YulBlock","src":"8987:359:14","statements":[{"nativeSrc":"9052:37:14","nodeType":"YulAssignment","src":"9052:37:14","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:14","nodeType":"YulIdentifier","src":"9071:11:14"},{"name":"twos","nativeSrc":"9084:4:14","nodeType":"YulIdentifier","src":"9084:4:14"}],"functionName":{"name":"div","nativeSrc":"9067:3:14","nodeType":"YulIdentifier","src":"9067:3:14"},"nativeSrc":"9067:22:14","nodeType":"YulFunctionCall","src":"9067:22:14"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:14","nodeType":"YulIdentifier","src":"9052:11:14"}]},{"nativeSrc":"9153:21:14","nodeType":"YulAssignment","src":"9153:21:14","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:14","nodeType":"YulIdentifier","src":"9164:3:14"},{"name":"twos","nativeSrc":"9169:4:14","nodeType":"YulIdentifier","src":"9169:4:14"}],"functionName":{"name":"div","nativeSrc":"9160:3:14","nodeType":"YulIdentifier","src":"9160:3:14"},"nativeSrc":"9160:14:14","nodeType":"YulFunctionCall","src":"9160:14:14"},"variableNames":[{"name":"low","nativeSrc":"9153:3:14","nodeType":"YulIdentifier","src":"9153:3:14"}]},{"nativeSrc":"9293:39:14","nodeType":"YulAssignment","src":"9293:39:14","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:14","nodeType":"YulLiteral","src":"9313:1:14","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:14","nodeType":"YulIdentifier","src":"9316:4:14"}],"functionName":{"name":"sub","nativeSrc":"9309:3:14","nodeType":"YulIdentifier","src":"9309:3:14"},"nativeSrc":"9309:12:14","nodeType":"YulFunctionCall","src":"9309:12:14"},{"name":"twos","nativeSrc":"9323:4:14","nodeType":"YulIdentifier","src":"9323:4:14"}],"functionName":{"name":"div","nativeSrc":"9305:3:14","nodeType":"YulIdentifier","src":"9305:3:14"},"nativeSrc":"9305:23:14","nodeType":"YulFunctionCall","src":"9305:23:14"},{"kind":"number","nativeSrc":"9330:1:14","nodeType":"YulLiteral","src":"9330:1:14","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:14","nodeType":"YulIdentifier","src":"9301:3:14"},"nativeSrc":"9301:31:14","nodeType":"YulFunctionCall","src":"9301:31:14"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:14","nodeType":"YulIdentifier","src":"9293:4:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4369,"isOffset":false,"isSlot":false,"src":"9052:11:14","valueSize":1},{"declaration":4369,"isOffset":false,"isSlot":false,"src":"9071:11:14","valueSize":1},{"declaration":4377,"isOffset":false,"isSlot":false,"src":"9153:3:14","valueSize":1},{"declaration":4377,"isOffset":false,"isSlot":false,"src":"9164:3:14","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"9084:4:14","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"9169:4:14","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"9293:4:14","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"9316:4:14","valueSize":1},{"declaration":4416,"isOffset":false,"isSlot":false,"src":"9323:4:14","valueSize":1}],"flags":["memory-safe"],"id":4424,"nodeType":"InlineAssembly","src":"8962:384:14"},{"expression":{"id":4429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4425,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"9409:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4426,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"9416:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4427,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4416,"src":"9423:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4430,"nodeType":"ExpressionStatement","src":"9409:18:14"},{"assignments":[4432],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:14","nodeType":"VariableDeclaration","scope":4496,"src":"9762:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4431,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4439,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4434,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"9785:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4436,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":4437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:14"},{"expression":{"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4440,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10018:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4442,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10033:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4443,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10047:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4447,"nodeType":"ExpressionStatement","src":"10018:36:14"},{"expression":{"id":4454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4448,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10088:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4450,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10103:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4451,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10117:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4455,"nodeType":"ExpressionStatement","src":"10088:36:14"},{"expression":{"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4456,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10160:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4458,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10175:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4459,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10189:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4463,"nodeType":"ExpressionStatement","src":"10160:36:14"},{"expression":{"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4464,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10231:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10246:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4467,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10260:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4471,"nodeType":"ExpressionStatement","src":"10231:36:14"},{"expression":{"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4472,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10304:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4474,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10319:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4475,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10333:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4479,"nodeType":"ExpressionStatement","src":"10304:36:14"},{"expression":{"id":4486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4480,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10378:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4369,"src":"10393:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4483,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10407:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4487,"nodeType":"ExpressionStatement","src":"10378:36:14"},{"expression":{"id":4492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10859:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4489,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4377,"src":"10868:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4490,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"10874:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4493,"nodeType":"ExpressionStatement","src":"10859:22:14"},{"expression":{"id":4494,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"10902:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4373,"id":4495,"nodeType":"Return","src":"10895:13:14"}]}]},"documentation":{"id":4363,"nodeType":"StructuredDocumentation","src":"6925:312:14","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":4498,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:14","nodeType":"FunctionDefinition","parameters":{"id":4370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4365,"mutability":"mutable","name":"x","nameLocation":"7266:1:14","nodeType":"VariableDeclaration","scope":4498,"src":"7258:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4364,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4367,"mutability":"mutable","name":"y","nameLocation":"7277:1:14","nodeType":"VariableDeclaration","scope":4498,"src":"7269:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4366,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4369,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:14","nodeType":"VariableDeclaration","scope":4498,"src":"7280:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4368,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:14"},"returnParameters":{"id":4373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4372,"mutability":"mutable","name":"result","nameLocation":"7332:6:14","nodeType":"VariableDeclaration","scope":4498,"src":"7324:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:14"},"scope":5592,"src":"7242:3683:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4534,"nodeType":"Block","src":"11164:128:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4514,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"11188:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4515,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"11191:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4516,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"11194:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4513,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[4498,4535],"referencedDeclaration":4498,"src":"11181:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4521,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"11242:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}],"id":4520,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"11225:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3983_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4524,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4501,"src":"11262:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4525,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4503,"src":"11265:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4526,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4505,"src":"11268:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4523,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4518,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"11209:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"11209:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4512,"id":4533,"nodeType":"Return","src":"11174:111:14"}]},"documentation":{"id":4499,"nodeType":"StructuredDocumentation","src":"10931:118:14","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":4535,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:14","nodeType":"FunctionDefinition","parameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"x","nameLocation":"11078:1:14","nodeType":"VariableDeclaration","scope":4535,"src":"11070:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4500,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"y","nameLocation":"11089:1:14","nodeType":"VariableDeclaration","scope":4535,"src":"11081:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4505,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:14","nodeType":"VariableDeclaration","scope":4535,"src":"11092:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4508,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:14","nodeType":"VariableDeclaration","scope":4535,"src":"11113:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"},"typeName":{"id":4507,"nodeType":"UserDefinedTypeName","pathNode":{"id":4506,"name":"Rounding","nameLocations":["11113:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3983,"src":"11113:8:14"},"referencedDeclaration":3983,"src":"11113:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:14"},"returnParameters":{"id":4512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4511,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4535,"src":"11155:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4510,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:14"},"scope":5592,"src":"11054:238:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4584,"nodeType":"Block","src":"11500:245:14","statements":[{"id":4583,"nodeType":"UncheckedBlock","src":"11510:229:14","statements":[{"assignments":[4548,4550],"declarations":[{"constant":false,"id":4548,"mutability":"mutable","name":"high","nameLocation":"11543:4:14","nodeType":"VariableDeclaration","scope":4583,"src":"11535:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"low","nameLocation":"11557:3:14","nodeType":"VariableDeclaration","scope":4583,"src":"11549:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4555,"initialValue":{"arguments":[{"id":4552,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"11571:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4553,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4540,"src":"11574:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4551,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"11564:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4556,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"11594:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4558,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"11607:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4569,"nodeType":"IfStatement","src":"11590:86:14","trueBody":{"id":4568,"nodeType":"Block","src":"11610:66:14","statements":[{"expression":{"arguments":[{"expression":{"id":4564,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"11640:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:14","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":2355,"src":"11640:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4561,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"11628:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"11628:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4567,"nodeType":"ExpressionStatement","src":"11628:33:14"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4570,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"11697:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4572,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"11712:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":4574,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4576,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4577,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"11719:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4578,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4542,"src":"11726:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4580,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4546,"id":4582,"nodeType":"Return","src":"11689:39:14"}]}]},"documentation":{"id":4536,"nodeType":"StructuredDocumentation","src":"11298:111:14","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":4585,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:14","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"x","nameLocation":"11438:1:14","nodeType":"VariableDeclaration","scope":4585,"src":"11430:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4540,"mutability":"mutable","name":"y","nameLocation":"11449:1:14","nodeType":"VariableDeclaration","scope":4585,"src":"11441:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4539,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"n","nameLocation":"11458:1:14","nodeType":"VariableDeclaration","scope":4585,"src":"11452:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4541,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:14"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"result","nameLocation":"11492:6:14","nodeType":"VariableDeclaration","scope":4585,"src":"11484:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4544,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:14"},"scope":5592,"src":"11414:331:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4623,"nodeType":"Block","src":"11963:113:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4601,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"11987:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4602,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"11990:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4603,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"11993:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4600,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[4585,4624],"referencedDeclaration":4585,"src":"11980:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4608,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"12031:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}],"id":4607,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"12014:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3983_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4611,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4588,"src":"12051:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4612,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"12054:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4614,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"12062:1:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4610,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:14","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4605,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"11998:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"11998:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4599,"id":4622,"nodeType":"Return","src":"11973:96:14"}]},"documentation":{"id":4586,"nodeType":"StructuredDocumentation","src":"11751:109:14","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":4624,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:14","nodeType":"FunctionDefinition","parameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4588,"mutability":"mutable","name":"x","nameLocation":"11889:1:14","nodeType":"VariableDeclaration","scope":4624,"src":"11881:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4587,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4590,"mutability":"mutable","name":"y","nameLocation":"11900:1:14","nodeType":"VariableDeclaration","scope":4624,"src":"11892:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4589,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4592,"mutability":"mutable","name":"n","nameLocation":"11909:1:14","nodeType":"VariableDeclaration","scope":4624,"src":"11903:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4591,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4595,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:14","nodeType":"VariableDeclaration","scope":4624,"src":"11912:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"},"typeName":{"id":4594,"nodeType":"UserDefinedTypeName","pathNode":{"id":4593,"name":"Rounding","nameLocations":["11912:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3983,"src":"11912:8:14"},"referencedDeclaration":3983,"src":"11912:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:14"},"returnParameters":{"id":4599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4598,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4624,"src":"11954:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4597,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:14"},"scope":5592,"src":"11865:211:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4720,"nodeType":"Block","src":"12710:1849:14","statements":[{"id":4719,"nodeType":"UncheckedBlock","src":"12720:1833:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4634,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"12748:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4639,"nodeType":"IfStatement","src":"12744:20:14","trueBody":{"expression":{"hexValue":"30","id":4637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4633,"id":4638,"nodeType":"Return","src":"12756:8:14"}},{"assignments":[4641],"declarations":[{"constant":false,"id":4641,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:14","nodeType":"VariableDeclaration","scope":4719,"src":"13235:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4640,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4645,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4627,"src":"13255:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4643,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"13259:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:14"},{"assignments":[4647],"declarations":[{"constant":false,"id":4647,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:14","nodeType":"VariableDeclaration","scope":4719,"src":"13274:11:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4649,"initialValue":{"id":4648,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"13288:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:14"},{"assignments":[4651],"declarations":[{"constant":false,"id":4651,"mutability":"mutable","name":"x","nameLocation":"13432:1:14","nodeType":"VariableDeclaration","scope":4719,"src":"13425:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4650,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4653,"initialValue":{"hexValue":"30","id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:14"},{"assignments":[4655],"declarations":[{"constant":false,"id":4655,"mutability":"mutable","name":"y","nameLocation":"13458:1:14","nodeType":"VariableDeclaration","scope":4719,"src":"13451:8:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4654,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4657,"initialValue":{"hexValue":"31","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:14"},{"body":{"id":4694,"nodeType":"Block","src":"13501:882:14","statements":[{"assignments":[4662],"declarations":[{"constant":false,"id":4662,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:14","nodeType":"VariableDeclaration","scope":4694,"src":"13519:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4661,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4666,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4663,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"13538:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4664,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"13544:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:14"},{"expression":{"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4667,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"13573:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4668,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"13578:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4669,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4670,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"13678:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"13923:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4672,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"13929:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4673,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"13941:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4676,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4678,"nodeType":"ExpressionStatement","src":"13572:395:14"},{"expression":{"id":4692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4679,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"13987:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":4680,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"13990:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4681,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":4682,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"14072:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4683,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"14326:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4684,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"14330:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":4687,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4662,"src":"14341:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4685,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:14","typeDescriptions":{}}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:14","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4693,"nodeType":"ExpressionStatement","src":"13986:382:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4658,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4641,"src":"13485:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4695,"nodeType":"WhileStatement","src":"13478:905:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4696,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4647,"src":"14401:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":4697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4701,"nodeType":"IfStatement","src":"14397:22:14","trueBody":{"expression":{"hexValue":"30","id":4699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4633,"id":4700,"nodeType":"Return","src":"14411:8:14"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"14470:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4706,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"14477:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:14","subExpression":{"id":4709,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"14490:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4708,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4707,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:14","typeDescriptions":{}}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":4715,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4651,"src":"14502:1:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:14","typeDescriptions":{}}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4702,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"14462:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4633,"id":4718,"nodeType":"Return","src":"14455:50:14"}]}]},"documentation":{"id":4625,"nodeType":"StructuredDocumentation","src":"12082:553:14","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":4721,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:14","nodeType":"FunctionDefinition","parameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4627,"mutability":"mutable","name":"a","nameLocation":"12664:1:14","nodeType":"VariableDeclaration","scope":4721,"src":"12656:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4626,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4629,"mutability":"mutable","name":"n","nameLocation":"12675:1:14","nodeType":"VariableDeclaration","scope":4721,"src":"12667:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:14"},"returnParameters":{"id":4633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4632,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4721,"src":"12701:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4631,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:14"},"scope":5592,"src":"12640:1919:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4741,"nodeType":"Block","src":"15159:82:14","statements":[{"id":4740,"nodeType":"UncheckedBlock","src":"15169:66:14","statements":[{"expression":{"arguments":[{"id":4733,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4724,"src":"15212:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"15215:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4737,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"15222:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4731,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5592,"src":"15200:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$5592_$","typeString":"type(library Math)"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:14","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4778,"src":"15200:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4730,"id":4739,"nodeType":"Return","src":"15193:31:14"}]}]},"documentation":{"id":4722,"nodeType":"StructuredDocumentation","src":"14565:514:14","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4742,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:14","nodeType":"FunctionDefinition","parameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4724,"mutability":"mutable","name":"a","nameLocation":"15113:1:14","nodeType":"VariableDeclaration","scope":4742,"src":"15105:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4723,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4726,"mutability":"mutable","name":"p","nameLocation":"15124:1:14","nodeType":"VariableDeclaration","scope":4742,"src":"15116:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:14"},"returnParameters":{"id":4730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4742,"src":"15150:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4728,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:14"},"scope":5592,"src":"15084:157:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4777,"nodeType":"Block","src":"16011:174:14","statements":[{"assignments":[4755,4757],"declarations":[{"constant":false,"id":4755,"mutability":"mutable","name":"success","nameLocation":"16027:7:14","nodeType":"VariableDeclaration","scope":4777,"src":"16022:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4754,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4757,"mutability":"mutable","name":"result","nameLocation":"16044:6:14","nodeType":"VariableDeclaration","scope":4777,"src":"16036:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4756,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4763,"initialValue":{"arguments":[{"id":4759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4745,"src":"16064:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4760,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4747,"src":"16067:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4761,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4749,"src":"16070:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4758,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4802,4884],"referencedDeclaration":4802,"src":"16054:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:14"},{"condition":{"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:14","subExpression":{"id":4764,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"16087:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4774,"nodeType":"IfStatement","src":"16082:74:14","trueBody":{"id":4773,"nodeType":"Block","src":"16096:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":4769,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"16122:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"16122:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4766,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"16110:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"16110:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4772,"nodeType":"ExpressionStatement","src":"16110:35:14"}]}},{"expression":{"id":4775,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4757,"src":"16172:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4753,"id":4776,"nodeType":"Return","src":"16165:13:14"}]},"documentation":{"id":4743,"nodeType":"StructuredDocumentation","src":"15247:678:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4778,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:14","nodeType":"FunctionDefinition","parameters":{"id":4750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4745,"mutability":"mutable","name":"b","nameLocation":"15954:1:14","nodeType":"VariableDeclaration","scope":4778,"src":"15946:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4744,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4747,"mutability":"mutable","name":"e","nameLocation":"15965:1:14","nodeType":"VariableDeclaration","scope":4778,"src":"15957:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4746,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4749,"mutability":"mutable","name":"m","nameLocation":"15976:1:14","nodeType":"VariableDeclaration","scope":4778,"src":"15968:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4748,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:14"},"returnParameters":{"id":4753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4778,"src":"16002:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4751,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:14"},"scope":5592,"src":"15930:255:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4801,"nodeType":"Block","src":"17039:1493:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4792,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"17053:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4799,"nodeType":"IfStatement","src":"17049:29:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4797,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4791,"id":4798,"nodeType":"Return","src":"17061:17:14"}},{"AST":{"nativeSrc":"17113:1413:14","nodeType":"YulBlock","src":"17113:1413:14","statements":[{"nativeSrc":"17127:22:14","nodeType":"YulVariableDeclaration","src":"17127:22:14","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:14","nodeType":"YulLiteral","src":"17144:4:14","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:14","nodeType":"YulIdentifier","src":"17138:5:14"},"nativeSrc":"17138:11:14","nodeType":"YulFunctionCall","src":"17138:11:14"},"variables":[{"name":"ptr","nativeSrc":"17131:3:14","nodeType":"YulTypedName","src":"17131:3:14","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:14","nodeType":"YulIdentifier","src":"18057:3:14"},{"kind":"number","nativeSrc":"18062:4:14","nodeType":"YulLiteral","src":"18062:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:14","nodeType":"YulIdentifier","src":"18050:6:14"},"nativeSrc":"18050:17:14","nodeType":"YulFunctionCall","src":"18050:17:14"},"nativeSrc":"18050:17:14","nodeType":"YulExpressionStatement","src":"18050:17:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:14","nodeType":"YulIdentifier","src":"18091:3:14"},{"kind":"number","nativeSrc":"18096:4:14","nodeType":"YulLiteral","src":"18096:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:14","nodeType":"YulIdentifier","src":"18087:3:14"},"nativeSrc":"18087:14:14","nodeType":"YulFunctionCall","src":"18087:14:14"},{"kind":"number","nativeSrc":"18103:4:14","nodeType":"YulLiteral","src":"18103:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:14","nodeType":"YulIdentifier","src":"18080:6:14"},"nativeSrc":"18080:28:14","nodeType":"YulFunctionCall","src":"18080:28:14"},"nativeSrc":"18080:28:14","nodeType":"YulExpressionStatement","src":"18080:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:14","nodeType":"YulIdentifier","src":"18132:3:14"},{"kind":"number","nativeSrc":"18137:4:14","nodeType":"YulLiteral","src":"18137:4:14","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:14","nodeType":"YulIdentifier","src":"18128:3:14"},"nativeSrc":"18128:14:14","nodeType":"YulFunctionCall","src":"18128:14:14"},{"kind":"number","nativeSrc":"18144:4:14","nodeType":"YulLiteral","src":"18144:4:14","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:14","nodeType":"YulIdentifier","src":"18121:6:14"},"nativeSrc":"18121:28:14","nodeType":"YulFunctionCall","src":"18121:28:14"},"nativeSrc":"18121:28:14","nodeType":"YulExpressionStatement","src":"18121:28:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:14","nodeType":"YulIdentifier","src":"18173:3:14"},{"kind":"number","nativeSrc":"18178:4:14","nodeType":"YulLiteral","src":"18178:4:14","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:14","nodeType":"YulIdentifier","src":"18169:3:14"},"nativeSrc":"18169:14:14","nodeType":"YulFunctionCall","src":"18169:14:14"},{"name":"b","nativeSrc":"18185:1:14","nodeType":"YulIdentifier","src":"18185:1:14"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:14","nodeType":"YulIdentifier","src":"18162:6:14"},"nativeSrc":"18162:25:14","nodeType":"YulFunctionCall","src":"18162:25:14"},"nativeSrc":"18162:25:14","nodeType":"YulExpressionStatement","src":"18162:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:14","nodeType":"YulIdentifier","src":"18211:3:14"},{"kind":"number","nativeSrc":"18216:4:14","nodeType":"YulLiteral","src":"18216:4:14","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:14","nodeType":"YulIdentifier","src":"18207:3:14"},"nativeSrc":"18207:14:14","nodeType":"YulFunctionCall","src":"18207:14:14"},{"name":"e","nativeSrc":"18223:1:14","nodeType":"YulIdentifier","src":"18223:1:14"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:14","nodeType":"YulIdentifier","src":"18200:6:14"},"nativeSrc":"18200:25:14","nodeType":"YulFunctionCall","src":"18200:25:14"},"nativeSrc":"18200:25:14","nodeType":"YulExpressionStatement","src":"18200:25:14"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:14","nodeType":"YulIdentifier","src":"18249:3:14"},{"kind":"number","nativeSrc":"18254:4:14","nodeType":"YulLiteral","src":"18254:4:14","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:14","nodeType":"YulIdentifier","src":"18245:3:14"},"nativeSrc":"18245:14:14","nodeType":"YulFunctionCall","src":"18245:14:14"},{"name":"m","nativeSrc":"18261:1:14","nodeType":"YulIdentifier","src":"18261:1:14"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:14","nodeType":"YulIdentifier","src":"18238:6:14"},"nativeSrc":"18238:25:14","nodeType":"YulFunctionCall","src":"18238:25:14"},"nativeSrc":"18238:25:14","nodeType":"YulExpressionStatement","src":"18238:25:14"},{"nativeSrc":"18425:57:14","nodeType":"YulAssignment","src":"18425:57:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:14","nodeType":"YulIdentifier","src":"18447:3:14"},"nativeSrc":"18447:5:14","nodeType":"YulFunctionCall","src":"18447:5:14"},{"kind":"number","nativeSrc":"18454:4:14","nodeType":"YulLiteral","src":"18454:4:14","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:14","nodeType":"YulIdentifier","src":"18460:3:14"},{"kind":"number","nativeSrc":"18465:4:14","nodeType":"YulLiteral","src":"18465:4:14","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:14","nodeType":"YulLiteral","src":"18471:4:14","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:14","nodeType":"YulLiteral","src":"18477:4:14","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:14","nodeType":"YulIdentifier","src":"18436:10:14"},"nativeSrc":"18436:46:14","nodeType":"YulFunctionCall","src":"18436:46:14"},"variableNames":[{"name":"success","nativeSrc":"18425:7:14","nodeType":"YulIdentifier","src":"18425:7:14"}]},{"nativeSrc":"18495:21:14","nodeType":"YulAssignment","src":"18495:21:14","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:14","nodeType":"YulLiteral","src":"18511:4:14","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:14","nodeType":"YulIdentifier","src":"18505:5:14"},"nativeSrc":"18505:11:14","nodeType":"YulFunctionCall","src":"18505:11:14"},"variableNames":[{"name":"result","nativeSrc":"18495:6:14","nodeType":"YulIdentifier","src":"18495:6:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4781,"isOffset":false,"isSlot":false,"src":"18185:1:14","valueSize":1},{"declaration":4783,"isOffset":false,"isSlot":false,"src":"18223:1:14","valueSize":1},{"declaration":4785,"isOffset":false,"isSlot":false,"src":"18261:1:14","valueSize":1},{"declaration":4790,"isOffset":false,"isSlot":false,"src":"18495:6:14","valueSize":1},{"declaration":4788,"isOffset":false,"isSlot":false,"src":"18425:7:14","valueSize":1}],"flags":["memory-safe"],"id":4800,"nodeType":"InlineAssembly","src":"17088:1438:14"}]},"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"16191:738:14","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4802,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:14","nodeType":"FunctionDefinition","parameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"b","nameLocation":"16961:1:14","nodeType":"VariableDeclaration","scope":4802,"src":"16953:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4783,"mutability":"mutable","name":"e","nameLocation":"16972:1:14","nodeType":"VariableDeclaration","scope":4802,"src":"16964:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4785,"mutability":"mutable","name":"m","nameLocation":"16983:1:14","nodeType":"VariableDeclaration","scope":4802,"src":"16975:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:14"},"returnParameters":{"id":4791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4788,"mutability":"mutable","name":"success","nameLocation":"17014:7:14","nodeType":"VariableDeclaration","scope":4802,"src":"17009:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4787,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4790,"mutability":"mutable","name":"result","nameLocation":"17031:6:14","nodeType":"VariableDeclaration","scope":4802,"src":"17023:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:14"},"scope":5592,"src":"16934:1598:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4837,"nodeType":"Block","src":"18729:179:14","statements":[{"assignments":[4815,4817],"declarations":[{"constant":false,"id":4815,"mutability":"mutable","name":"success","nameLocation":"18745:7:14","nodeType":"VariableDeclaration","scope":4837,"src":"18740:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4814,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4817,"mutability":"mutable","name":"result","nameLocation":"18767:6:14","nodeType":"VariableDeclaration","scope":4837,"src":"18754:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4816,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4823,"initialValue":{"arguments":[{"id":4819,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"18787:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4820,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4807,"src":"18790:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4821,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"18793:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4818,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4802,4884],"referencedDeclaration":4884,"src":"18777:9:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:14"},{"condition":{"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:14","subExpression":{"id":4824,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4815,"src":"18810:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4834,"nodeType":"IfStatement","src":"18805:74:14","trueBody":{"id":4833,"nodeType":"Block","src":"18819:60:14","statements":[{"expression":{"arguments":[{"expression":{"id":4829,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"18845:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:14","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":2359,"src":"18845:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4826,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2392,"src":"18833:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$2392_$","typeString":"type(library Panic)"}},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:14","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":2391,"src":"18833:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4832,"nodeType":"ExpressionStatement","src":"18833:35:14"}]}},{"expression":{"id":4835,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4817,"src":"18895:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4813,"id":4836,"nodeType":"Return","src":"18888:13:14"}]},"documentation":{"id":4803,"nodeType":"StructuredDocumentation","src":"18538:85:14","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4838,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:14","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4805,"mutability":"mutable","name":"b","nameLocation":"18657:1:14","nodeType":"VariableDeclaration","scope":4838,"src":"18644:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4804,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4807,"mutability":"mutable","name":"e","nameLocation":"18673:1:14","nodeType":"VariableDeclaration","scope":4838,"src":"18660:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4806,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4809,"mutability":"mutable","name":"m","nameLocation":"18689:1:14","nodeType":"VariableDeclaration","scope":4838,"src":"18676:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4808,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:14"},"returnParameters":{"id":4813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4838,"src":"18715:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4811,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:14"},"scope":5592,"src":"18628:280:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4883,"nodeType":"Block","src":"19162:771:14","statements":[{"condition":{"arguments":[{"id":4853,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"19187:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4852,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4917,"src":"19176:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4862,"nodeType":"IfStatement","src":"19172:47:14","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4856,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4860,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:14","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4851,"id":4861,"nodeType":"Return","src":"19191:28:14"}},{"assignments":[4864],"declarations":[{"constant":false,"id":4864,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:14","nodeType":"VariableDeclaration","scope":4883,"src":"19230:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4863,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4867,"initialValue":{"expression":{"id":4865,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"19245:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:14","memberName":"length","nodeType":"MemberAccess","src":"19245:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:14"},{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4868,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"19335:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4871,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"19361:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:14","memberName":"length","nodeType":"MemberAccess","src":"19361:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4873,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"19371:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:14","memberName":"length","nodeType":"MemberAccess","src":"19371:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4875,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"19381:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4876,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4841,"src":"19387:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4877,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4843,"src":"19390:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4878,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4845,"src":"19393:1:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4869,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:14","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:14","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:14","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4881,"nodeType":"ExpressionStatement","src":"19335:60:14"},{"AST":{"nativeSrc":"19431:496:14","nodeType":"YulBlock","src":"19431:496:14","statements":[{"nativeSrc":"19445:32:14","nodeType":"YulVariableDeclaration","src":"19445:32:14","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:14","nodeType":"YulIdentifier","src":"19464:6:14"},{"kind":"number","nativeSrc":"19472:4:14","nodeType":"YulLiteral","src":"19472:4:14","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:14","nodeType":"YulIdentifier","src":"19460:3:14"},"nativeSrc":"19460:17:14","nodeType":"YulFunctionCall","src":"19460:17:14"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:14","nodeType":"YulTypedName","src":"19449:7:14","type":""}]},{"nativeSrc":"19567:73:14","nodeType":"YulAssignment","src":"19567:73:14","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:14","nodeType":"YulIdentifier","src":"19589:3:14"},"nativeSrc":"19589:5:14","nodeType":"YulFunctionCall","src":"19589:5:14"},{"kind":"number","nativeSrc":"19596:4:14","nodeType":"YulLiteral","src":"19596:4:14","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:14","nodeType":"YulIdentifier","src":"19602:7:14"},{"arguments":[{"name":"result","nativeSrc":"19617:6:14","nodeType":"YulIdentifier","src":"19617:6:14"}],"functionName":{"name":"mload","nativeSrc":"19611:5:14","nodeType":"YulIdentifier","src":"19611:5:14"},"nativeSrc":"19611:13:14","nodeType":"YulFunctionCall","src":"19611:13:14"},{"name":"dataPtr","nativeSrc":"19626:7:14","nodeType":"YulIdentifier","src":"19626:7:14"},{"name":"mLen","nativeSrc":"19635:4:14","nodeType":"YulIdentifier","src":"19635:4:14"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:14","nodeType":"YulIdentifier","src":"19578:10:14"},"nativeSrc":"19578:62:14","nodeType":"YulFunctionCall","src":"19578:62:14"},"variableNames":[{"name":"success","nativeSrc":"19567:7:14","nodeType":"YulIdentifier","src":"19567:7:14"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:14","nodeType":"YulIdentifier","src":"19796:6:14"},{"name":"mLen","nativeSrc":"19804:4:14","nodeType":"YulIdentifier","src":"19804:4:14"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:14","nodeType":"YulIdentifier","src":"19789:6:14"},"nativeSrc":"19789:20:14","nodeType":"YulFunctionCall","src":"19789:20:14"},"nativeSrc":"19789:20:14","nodeType":"YulExpressionStatement","src":"19789:20:14"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:14","nodeType":"YulLiteral","src":"19892:4:14","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:14","nodeType":"YulIdentifier","src":"19902:7:14"},{"name":"mLen","nativeSrc":"19911:4:14","nodeType":"YulIdentifier","src":"19911:4:14"}],"functionName":{"name":"add","nativeSrc":"19898:3:14","nodeType":"YulIdentifier","src":"19898:3:14"},"nativeSrc":"19898:18:14","nodeType":"YulFunctionCall","src":"19898:18:14"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:14","nodeType":"YulIdentifier","src":"19885:6:14"},"nativeSrc":"19885:32:14","nodeType":"YulFunctionCall","src":"19885:32:14"},"nativeSrc":"19885:32:14","nodeType":"YulExpressionStatement","src":"19885:32:14"}]},"evmVersion":"paris","externalReferences":[{"declaration":4864,"isOffset":false,"isSlot":false,"src":"19635:4:14","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"19804:4:14","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"19911:4:14","valueSize":1},{"declaration":4850,"isOffset":false,"isSlot":false,"src":"19464:6:14","valueSize":1},{"declaration":4850,"isOffset":false,"isSlot":false,"src":"19617:6:14","valueSize":1},{"declaration":4850,"isOffset":false,"isSlot":false,"src":"19796:6:14","valueSize":1},{"declaration":4848,"isOffset":false,"isSlot":false,"src":"19567:7:14","valueSize":1}],"flags":["memory-safe"],"id":4882,"nodeType":"InlineAssembly","src":"19406:521:14"}]},"documentation":{"id":4839,"nodeType":"StructuredDocumentation","src":"18914:88:14","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4884,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:14","nodeType":"FunctionDefinition","parameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"b","nameLocation":"19048:1:14","nodeType":"VariableDeclaration","scope":4884,"src":"19035:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4840,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4843,"mutability":"mutable","name":"e","nameLocation":"19072:1:14","nodeType":"VariableDeclaration","scope":4884,"src":"19059:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4842,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4845,"mutability":"mutable","name":"m","nameLocation":"19096:1:14","nodeType":"VariableDeclaration","scope":4884,"src":"19083:14:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4844,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:14"},"returnParameters":{"id":4851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4848,"mutability":"mutable","name":"success","nameLocation":"19132:7:14","nodeType":"VariableDeclaration","scope":4884,"src":"19127:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4847,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4850,"mutability":"mutable","name":"result","nameLocation":"19154:6:14","nodeType":"VariableDeclaration","scope":4884,"src":"19141:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4849,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:14"},"scope":5592,"src":"19007:926:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4916,"nodeType":"Block","src":"20088:176:14","statements":[{"body":{"id":4912,"nodeType":"Block","src":"20145:92:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4903,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"20163:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4905,"indexExpression":{"id":4904,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"20173:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4911,"nodeType":"IfStatement","src":"20159:68:14","trueBody":{"id":4910,"nodeType":"Block","src":"20182:45:14","statements":[{"expression":{"hexValue":"66616c7365","id":4908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4891,"id":4909,"nodeType":"Return","src":"20200:12:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4896,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"20118:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4897,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"20122:9:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:14","memberName":"length","nodeType":"MemberAccess","src":"20122:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4913,"initializationExpression":{"assignments":[4893],"declarations":[{"constant":false,"id":4893,"mutability":"mutable","name":"i","nameLocation":"20111:1:14","nodeType":"VariableDeclaration","scope":4913,"src":"20103:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4892,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4895,"initialValue":{"hexValue":"30","id":4894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:14"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:14","subExpression":{"id":4900,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4893,"src":"20142:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4902,"nodeType":"ExpressionStatement","src":"20140:3:14"},"nodeType":"ForStatement","src":"20098:139:14"},{"expression":{"hexValue":"74727565","id":4914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4891,"id":4915,"nodeType":"Return","src":"20246:11:14"}]},"documentation":{"id":4885,"nodeType":"StructuredDocumentation","src":"19939:72:14","text":" @dev Returns whether the provided byte array is zero."},"id":4917,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:14","nodeType":"FunctionDefinition","parameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:14","nodeType":"VariableDeclaration","scope":4917,"src":"20036:22:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4886,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:14"},"returnParameters":{"id":4891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4917,"src":"20082:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4889,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:14"},"scope":5592,"src":"20016:248:14","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5135,"nodeType":"Block","src":"20624:5124:14","statements":[{"id":5134,"nodeType":"UncheckedBlock","src":"20634:5108:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"20728:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4931,"nodeType":"IfStatement","src":"20724:53:14","trueBody":{"id":4930,"nodeType":"Block","src":"20736:41:14","statements":[{"expression":{"id":4928,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"20761:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4924,"id":4929,"nodeType":"Return","src":"20754:8:14"}]}},{"assignments":[4933],"declarations":[{"constant":false,"id":4933,"mutability":"mutable","name":"aa","nameLocation":"21712:2:14","nodeType":"VariableDeclaration","scope":5134,"src":"21704:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4932,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4935,"initialValue":{"id":4934,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"21717:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:14"},{"assignments":[4937],"declarations":[{"constant":false,"id":4937,"mutability":"mutable","name":"xn","nameLocation":"21740:2:14","nodeType":"VariableDeclaration","scope":5134,"src":"21732:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4939,"initialValue":{"hexValue":"31","id":4938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4940,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"21765:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4943,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4955,"nodeType":"IfStatement","src":"21761:92:14","trueBody":{"id":4954,"nodeType":"Block","src":"21783:70:14","statements":[{"expression":{"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4946,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"21801:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4949,"nodeType":"ExpressionStatement","src":"21801:10:14"},{"expression":{"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4950,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"21829:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4953,"nodeType":"ExpressionStatement","src":"21829:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4956,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"21870:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4960,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4971,"nodeType":"IfStatement","src":"21866:90:14","trueBody":{"id":4970,"nodeType":"Block","src":"21887:69:14","statements":[{"expression":{"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4962,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"21905:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4965,"nodeType":"ExpressionStatement","src":"21905:9:14"},{"expression":{"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4966,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"21932:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4969,"nodeType":"ExpressionStatement","src":"21932:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4972,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"21973:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4976,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4987,"nodeType":"IfStatement","src":"21969:90:14","trueBody":{"id":4986,"nodeType":"Block","src":"21990:69:14","statements":[{"expression":{"id":4980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4978,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"22008:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4981,"nodeType":"ExpressionStatement","src":"22008:9:14"},{"expression":{"id":4984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4982,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"22035:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4985,"nodeType":"ExpressionStatement","src":"22035:9:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4988,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"22076:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:14","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5003,"nodeType":"IfStatement","src":"22072:89:14","trueBody":{"id":5002,"nodeType":"Block","src":"22093:68:14","statements":[{"expression":{"id":4996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4994,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"22111:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4997,"nodeType":"ExpressionStatement","src":"22111:9:14"},{"expression":{"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4998,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"22138:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5001,"nodeType":"ExpressionStatement","src":"22138:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5004,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"22178:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:14","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5019,"nodeType":"IfStatement","src":"22174:87:14","trueBody":{"id":5018,"nodeType":"Block","src":"22194:67:14","statements":[{"expression":{"id":5012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5010,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"22212:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":5011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5013,"nodeType":"ExpressionStatement","src":"22212:8:14"},{"expression":{"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5014,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"22238:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":5015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5017,"nodeType":"ExpressionStatement","src":"22238:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5020,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"22278:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":5023,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":5024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5035,"nodeType":"IfStatement","src":"22274:87:14","trueBody":{"id":5034,"nodeType":"Block","src":"22294:67:14","statements":[{"expression":{"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5026,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"22312:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5029,"nodeType":"ExpressionStatement","src":"22312:8:14"},{"expression":{"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5030,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"22338:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":5031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5033,"nodeType":"ExpressionStatement","src":"22338:8:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5036,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4933,"src":"22378:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":5039,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":5040,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5047,"nodeType":"IfStatement","src":"22374:61:14","trueBody":{"id":5046,"nodeType":"Block","src":"22394:41:14","statements":[{"expression":{"id":5044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5042,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"22412:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":5043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5045,"nodeType":"ExpressionStatement","src":"22412:8:14"}]}},{"expression":{"id":5055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5048,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"22855:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5050,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"22865:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5052,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5056,"nodeType":"ExpressionStatement","src":"22855:18:14"},{"expression":{"id":5066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5057,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24760:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5058,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24766:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"24771:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5060,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24775:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5063,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5067,"nodeType":"ExpressionStatement","src":"24760:23:14"},{"expression":{"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5068,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24869:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5069,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24875:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5070,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"24880:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5071,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24884:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5078,"nodeType":"ExpressionStatement","src":"24869:23:14"},{"expression":{"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5079,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24980:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5080,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24986:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5081,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"24991:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5082,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"24995:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5085,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5089,"nodeType":"ExpressionStatement","src":"24980:23:14"},{"expression":{"id":5099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5090,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25089:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5091,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25095:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5092,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"25100:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5093,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25104:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5096,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5100,"nodeType":"ExpressionStatement","src":"25089:23:14"},{"expression":{"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5101,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25199:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5102,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25205:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"25210:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5104,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25214:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5111,"nodeType":"ExpressionStatement","src":"25199:23:14"},{"expression":{"id":5121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5112,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25309:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25315:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5114,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"25320:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5115,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25324:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":5119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5122,"nodeType":"ExpressionStatement","src":"25309:23:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5123,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25698:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5126,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25719:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"25724:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5128,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"25728:2:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5124,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"25703:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"25703:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4924,"id":5133,"nodeType":"Return","src":"25691:40:14"}]}]},"documentation":{"id":4918,"nodeType":"StructuredDocumentation","src":"20270:292:14","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":5136,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:14","nodeType":"FunctionDefinition","parameters":{"id":4921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4920,"mutability":"mutable","name":"a","nameLocation":"20589:1:14","nodeType":"VariableDeclaration","scope":5136,"src":"20581:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:14"},"returnParameters":{"id":4924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5136,"src":"20615:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4922,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:14"},"scope":5592,"src":"20567:5181:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5169,"nodeType":"Block","src":"25921:171:14","statements":[{"id":5168,"nodeType":"UncheckedBlock","src":"25931:155:14","statements":[{"assignments":[5148],"declarations":[{"constant":false,"id":5148,"mutability":"mutable","name":"result","nameLocation":"25963:6:14","nodeType":"VariableDeclaration","scope":5168,"src":"25955:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5147,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5152,"initialValue":{"arguments":[{"id":5150,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"25977:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5149,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[5136,5170],"referencedDeclaration":5136,"src":"25972:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5153,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"26000:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5157,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5142,"src":"26042:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}],"id":5156,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"26025:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3983_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"26055:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5160,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5148,"src":"26064:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5162,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5139,"src":"26073:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5154,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"26009:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"26009:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5146,"id":5167,"nodeType":"Return","src":"25993:82:14"}]}]},"documentation":{"id":5137,"nodeType":"StructuredDocumentation","src":"25754:86:14","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5170,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:14","nodeType":"FunctionDefinition","parameters":{"id":5143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"a","nameLocation":"25867:1:14","nodeType":"VariableDeclaration","scope":5170,"src":"25859:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5138,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5142,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:14","nodeType":"VariableDeclaration","scope":5170,"src":"25870:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"},"typeName":{"id":5141,"nodeType":"UserDefinedTypeName","pathNode":{"id":5140,"name":"Rounding","nameLocations":["25870:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3983,"src":"25870:8:14"},"referencedDeclaration":3983,"src":"25870:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:14"},"returnParameters":{"id":5146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5170,"src":"25912:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5144,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:14"},"scope":5592,"src":"25845:247:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5260,"nodeType":"Block","src":"26281:2334:14","statements":[{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5178,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26363:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"26383:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5179,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"26367:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"26367:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5188,"nodeType":"ExpressionStatement","src":"26363:64:14"},{"expression":{"id":5201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5189,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26503:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5192,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"26525:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5193,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26530:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5195,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5190,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"26508:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"26508:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5202,"nodeType":"ExpressionStatement","src":"26503:56:14"},{"expression":{"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5203,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26634:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5206,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"26656:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5207,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26661:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5209,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5204,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"26639:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"26639:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5216,"nodeType":"ExpressionStatement","src":"26634:48:14"},{"expression":{"id":5229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5217,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26757:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5220,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"26779:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5221,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26784:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5223,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5218,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"26762:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"26762:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5230,"nodeType":"ExpressionStatement","src":"26757:44:14"},{"expression":{"id":5243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5231,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26874:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"26896:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5235,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26901:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5237,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5232,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"26879:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"26879:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5244,"nodeType":"ExpressionStatement","src":"26874:42:14"},{"expression":{"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5245,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"26988:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5248,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5173,"src":"27010:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5249,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5176,"src":"27015:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5251,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5246,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"26993:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"26993:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":5255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5258,"nodeType":"ExpressionStatement","src":"26988:41:14"},{"AST":{"nativeSrc":"28490:119:14","nodeType":"YulBlock","src":"28490:119:14","statements":[{"nativeSrc":"28504:95:14","nodeType":"YulAssignment","src":"28504:95:14","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:14","nodeType":"YulIdentifier","src":"28512:1:14"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:14","nodeType":"YulIdentifier","src":"28524:1:14"},{"name":"x","nativeSrc":"28527:1:14","nodeType":"YulIdentifier","src":"28527:1:14"}],"functionName":{"name":"shr","nativeSrc":"28520:3:14","nodeType":"YulIdentifier","src":"28520:3:14"},"nativeSrc":"28520:9:14","nodeType":"YulFunctionCall","src":"28520:9:14"},{"kind":"number","nativeSrc":"28531:66:14","nodeType":"YulLiteral","src":"28531:66:14","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:14","nodeType":"YulIdentifier","src":"28515:4:14"},"nativeSrc":"28515:83:14","nodeType":"YulFunctionCall","src":"28515:83:14"}],"functionName":{"name":"or","nativeSrc":"28509:2:14","nodeType":"YulIdentifier","src":"28509:2:14"},"nativeSrc":"28509:90:14","nodeType":"YulFunctionCall","src":"28509:90:14"},"variableNames":[{"name":"r","nativeSrc":"28504:1:14","nodeType":"YulIdentifier","src":"28504:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5176,"isOffset":false,"isSlot":false,"src":"28504:1:14","valueSize":1},{"declaration":5176,"isOffset":false,"isSlot":false,"src":"28512:1:14","valueSize":1},{"declaration":5176,"isOffset":false,"isSlot":false,"src":"28524:1:14","valueSize":1},{"declaration":5173,"isOffset":false,"isSlot":false,"src":"28527:1:14","valueSize":1}],"flags":["memory-safe"],"id":5259,"nodeType":"InlineAssembly","src":"28465:144:14"}]},"documentation":{"id":5171,"nodeType":"StructuredDocumentation","src":"26098:119:14","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5261,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:14","nodeType":"FunctionDefinition","parameters":{"id":5174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5173,"mutability":"mutable","name":"x","nameLocation":"26244:1:14","nodeType":"VariableDeclaration","scope":5261,"src":"26236:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5172,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:14"},"returnParameters":{"id":5177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5176,"mutability":"mutable","name":"r","nameLocation":"26278:1:14","nodeType":"VariableDeclaration","scope":5261,"src":"26270:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5175,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:14"},"scope":5592,"src":"26222:2393:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5294,"nodeType":"Block","src":"28848:175:14","statements":[{"id":5293,"nodeType":"UncheckedBlock","src":"28858:159:14","statements":[{"assignments":[5273],"declarations":[{"constant":false,"id":5273,"mutability":"mutable","name":"result","nameLocation":"28890:6:14","nodeType":"VariableDeclaration","scope":5293,"src":"28882:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5272,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5277,"initialValue":{"arguments":[{"id":5275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"28904:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5274,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[5261,5295],"referencedDeclaration":5261,"src":"28899:4:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5278,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"28931:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5282,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5267,"src":"28973:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}],"id":5281,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"28956:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3983_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":5285,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5273,"src":"28991:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5264,"src":"29000:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5279,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"28940:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"28940:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5271,"id":5292,"nodeType":"Return","src":"28924:82:14"}]}]},"documentation":{"id":5262,"nodeType":"StructuredDocumentation","src":"28621:142:14","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5295,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:14","nodeType":"FunctionDefinition","parameters":{"id":5268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5264,"mutability":"mutable","name":"value","nameLocation":"28790:5:14","nodeType":"VariableDeclaration","scope":5295,"src":"28782:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5263,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5267,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:14","nodeType":"VariableDeclaration","scope":5295,"src":"28797:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"},"typeName":{"id":5266,"nodeType":"UserDefinedTypeName","pathNode":{"id":5265,"name":"Rounding","nameLocations":["28797:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3983,"src":"28797:8:14"},"referencedDeclaration":3983,"src":"28797:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:14"},"returnParameters":{"id":5271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5295,"src":"28839:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5269,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:14"},"scope":5592,"src":"28768:255:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5423,"nodeType":"Block","src":"29216:854:14","statements":[{"assignments":[5304],"declarations":[{"constant":false,"id":5304,"mutability":"mutable","name":"result","nameLocation":"29234:6:14","nodeType":"VariableDeclaration","scope":5423,"src":"29226:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5306,"initialValue":{"hexValue":"30","id":5305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:14"},{"id":5420,"nodeType":"UncheckedBlock","src":"29254:787:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29282:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5323,"nodeType":"IfStatement","src":"29278:103:14","trueBody":{"id":5322,"nodeType":"Block","src":"29301:80:14","statements":[{"expression":{"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29319:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":5315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":5314,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5317,"nodeType":"ExpressionStatement","src":"29319:17:14"},{"expression":{"id":5320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5318,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"29354:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":5319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5321,"nodeType":"ExpressionStatement","src":"29354:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29398:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5340,"nodeType":"IfStatement","src":"29394:103:14","trueBody":{"id":5339,"nodeType":"Block","src":"29417:80:14","statements":[{"expression":{"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29435:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":5332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5334,"nodeType":"ExpressionStatement","src":"29435:17:14"},{"expression":{"id":5337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5335,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"29470:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":5336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5338,"nodeType":"ExpressionStatement","src":"29470:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29514:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5344,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5357,"nodeType":"IfStatement","src":"29510:103:14","trueBody":{"id":5356,"nodeType":"Block","src":"29533:80:14","statements":[{"expression":{"id":5350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29551:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":5349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":5348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:14","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5351,"nodeType":"ExpressionStatement","src":"29551:17:14"},{"expression":{"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5352,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"29586:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":5353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5355,"nodeType":"ExpressionStatement","src":"29586:12:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29630:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5374,"nodeType":"IfStatement","src":"29626:100:14","trueBody":{"id":5373,"nodeType":"Block","src":"29648:78:14","statements":[{"expression":{"id":5367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29666:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":5365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5368,"nodeType":"ExpressionStatement","src":"29666:16:14"},{"expression":{"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"29700:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":5370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5372,"nodeType":"ExpressionStatement","src":"29700:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5391,"nodeType":"IfStatement","src":"29739:100:14","trueBody":{"id":5390,"nodeType":"Block","src":"29761:78:14","statements":[{"expression":{"id":5384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29779:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":5382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5385,"nodeType":"ExpressionStatement","src":"29779:16:14"},{"expression":{"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5386,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"29813:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5389,"nodeType":"ExpressionStatement","src":"29813:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29856:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5408,"nodeType":"IfStatement","src":"29852:100:14","trueBody":{"id":5407,"nodeType":"Block","src":"29874:78:14","statements":[{"expression":{"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29892:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5398,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:14","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5402,"nodeType":"ExpressionStatement","src":"29892:16:14"},{"expression":{"id":5405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5403,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"29926:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5406,"nodeType":"ExpressionStatement","src":"29926:11:14"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5298,"src":"29969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5419,"nodeType":"IfStatement","src":"29965:66:14","trueBody":{"id":5418,"nodeType":"Block","src":"29987:44:14","statements":[{"expression":{"id":5416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"30005:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5417,"nodeType":"ExpressionStatement","src":"30005:11:14"}]}}]},{"expression":{"id":5421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"30057:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5302,"id":5422,"nodeType":"Return","src":"30050:13:14"}]},"documentation":{"id":5296,"nodeType":"StructuredDocumentation","src":"29029:120:14","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":5424,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:14","nodeType":"FunctionDefinition","parameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"value","nameLocation":"29177:5:14","nodeType":"VariableDeclaration","scope":5424,"src":"29169:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5297,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:14"},"returnParameters":{"id":5302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5424,"src":"29207:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5300,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:14"},"scope":5592,"src":"29154:916:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5457,"nodeType":"Block","src":"30305:177:14","statements":[{"id":5456,"nodeType":"UncheckedBlock","src":"30315:161:14","statements":[{"assignments":[5436],"declarations":[{"constant":false,"id":5436,"mutability":"mutable","name":"result","nameLocation":"30347:6:14","nodeType":"VariableDeclaration","scope":5456,"src":"30339:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5435,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5440,"initialValue":{"arguments":[{"id":5438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5437,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[5424,5458],"referencedDeclaration":5424,"src":"30356:5:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5441,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"30389:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5445,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"30431:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}],"id":5444,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"30414:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3983_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":5448,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5436,"src":"30450:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5427,"src":"30459:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5442,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"30398:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"30398:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5434,"id":5455,"nodeType":"Return","src":"30382:83:14"}]}]},"documentation":{"id":5425,"nodeType":"StructuredDocumentation","src":"30076:143:14","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5458,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:14","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5427,"mutability":"mutable","name":"value","nameLocation":"30247:5:14","nodeType":"VariableDeclaration","scope":5458,"src":"30239:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5426,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5430,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:14","nodeType":"VariableDeclaration","scope":5458,"src":"30254:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"},"typeName":{"id":5429,"nodeType":"UserDefinedTypeName","pathNode":{"id":5428,"name":"Rounding","nameLocations":["30254:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3983,"src":"30254:8:14"},"referencedDeclaration":3983,"src":"30254:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:14"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5458,"src":"30296:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5432,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:14"},"scope":5592,"src":"30224:258:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5534,"nodeType":"Block","src":"30800:675:14","statements":[{"expression":{"id":5475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5466,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"30882:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5469,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"30902:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":5470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:14","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5467,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"30886:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"30886:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":5473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5476,"nodeType":"ExpressionStatement","src":"30882:64:14"},{"expression":{"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5477,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31022:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5480,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"31044:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5481,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31049:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5483,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":5484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:14","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5478,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"31027:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"31027:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":5487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:14","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5490,"nodeType":"ExpressionStatement","src":"31022:56:14"},{"expression":{"id":5503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5491,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31153:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5494,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"31175:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5495,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31180:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5497,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":5498,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:14","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5492,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"31158:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"31158:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":5501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:14","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5504,"nodeType":"ExpressionStatement","src":"31153:48:14"},{"expression":{"id":5517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5505,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31276:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5508,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"31298:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5509,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31303:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":5512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:14","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5506,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"31281:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"31281:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":5515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5518,"nodeType":"ExpressionStatement","src":"31276:44:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31426:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":5520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5522,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5525,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5461,"src":"31453:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":5526,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5464,"src":"31458:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":5529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:14","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5523,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"31436:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"31436:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5465,"id":5533,"nodeType":"Return","src":"31418:50:14"}]},"documentation":{"id":5459,"nodeType":"StructuredDocumentation","src":"30488:246:14","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":5535,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:14","nodeType":"FunctionDefinition","parameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"x","nameLocation":"30763:1:14","nodeType":"VariableDeclaration","scope":5535,"src":"30755:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5460,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:14"},"returnParameters":{"id":5465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5464,"mutability":"mutable","name":"r","nameLocation":"30797:1:14","nodeType":"VariableDeclaration","scope":5535,"src":"30789:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5463,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:14"},"scope":5592,"src":"30739:736:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5571,"nodeType":"Block","src":"31712:184:14","statements":[{"id":5570,"nodeType":"UncheckedBlock","src":"31722:168:14","statements":[{"assignments":[5547],"declarations":[{"constant":false,"id":5547,"mutability":"mutable","name":"result","nameLocation":"31754:6:14","nodeType":"VariableDeclaration","scope":5570,"src":"31746:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5546,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5551,"initialValue":{"arguments":[{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"31770:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5548,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[5535,5572],"referencedDeclaration":5535,"src":"31763:6:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:14"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"31797:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5556,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5541,"src":"31839:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}],"id":5555,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5591,"src":"31822:16:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3983_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5559,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5547,"src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":5560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:14","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5564,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"31873:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5553,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"31806:8:14","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":5554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:14","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"31806:15:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5545,"id":5569,"nodeType":"Return","src":"31790:89:14"}]}]},"documentation":{"id":5536,"nodeType":"StructuredDocumentation","src":"31481:144:14","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":5572,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:14","nodeType":"FunctionDefinition","parameters":{"id":5542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5538,"mutability":"mutable","name":"value","nameLocation":"31654:5:14","nodeType":"VariableDeclaration","scope":5572,"src":"31646:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5537,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5541,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:14","nodeType":"VariableDeclaration","scope":5572,"src":"31661:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"},"typeName":{"id":5540,"nodeType":"UserDefinedTypeName","pathNode":{"id":5539,"name":"Rounding","nameLocations":["31661:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3983,"src":"31661:8:14"},"referencedDeclaration":3983,"src":"31661:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:14"},"returnParameters":{"id":5545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5572,"src":"31703:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5543,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:14"},"scope":5592,"src":"31630:266:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5590,"nodeType":"Block","src":"32094:48:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5583,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5576,"src":"32117:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}],"id":5582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5581,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:14","typeDescriptions":{}}},"id":5584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":5585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":5587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5580,"id":5589,"nodeType":"Return","src":"32104:31:14"}]},"documentation":{"id":5573,"nodeType":"StructuredDocumentation","src":"31902:113:14","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":5591,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:14","nodeType":"FunctionDefinition","parameters":{"id":5577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5576,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:14","nodeType":"VariableDeclaration","scope":5591,"src":"32046:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"},"typeName":{"id":5575,"nodeType":"UserDefinedTypeName","pathNode":{"id":5574,"name":"Rounding","nameLocations":["32046:8:14"],"nodeType":"IdentifierPath","referencedDeclaration":3983,"src":"32046:8:14"},"referencedDeclaration":3983,"src":"32046:8:14","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3983","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:14"},"returnParameters":{"id":5580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5579,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5591,"src":"32088:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5578,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:14"},"scope":5592,"src":"32020:122:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5593,"src":"281:31863:14","usedErrors":[],"usedEvents":[]}],"src":"103:32042:14"},"id":14},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[7357]},"id":7358,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5594,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":5595,"nodeType":"StructuredDocumentation","src":"218:550:15","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":7357,"linearizedBaseContracts":[7357],"name":"SafeCast","nameLocation":"777:8:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"792:68:15","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":5602,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:15","nodeType":"ErrorDefinition","parameters":{"id":5601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"bits","nameLocation":"908:4:15","nodeType":"VariableDeclaration","scope":5602,"src":"902:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5597,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5600,"mutability":"mutable","name":"value","nameLocation":"922:5:15","nodeType":"VariableDeclaration","scope":5602,"src":"914:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5599,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:15"},"src":"865:64:15"},{"documentation":{"id":5603,"nodeType":"StructuredDocumentation","src":"935:75:15","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":5607,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:15","nodeType":"ErrorDefinition","parameters":{"id":5606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5605,"mutability":"mutable","name":"value","nameLocation":"1056:5:15","nodeType":"VariableDeclaration","scope":5607,"src":"1049:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5604,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:15"},"src":"1015:48:15"},{"documentation":{"id":5608,"nodeType":"StructuredDocumentation","src":"1069:67:15","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":5614,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:15","nodeType":"ErrorDefinition","parameters":{"id":5613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5610,"mutability":"mutable","name":"bits","nameLocation":"1183:4:15","nodeType":"VariableDeclaration","scope":5614,"src":"1177:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5609,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":5612,"mutability":"mutable","name":"value","nameLocation":"1196:5:15","nodeType":"VariableDeclaration","scope":5614,"src":"1189:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5611,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:15"},"src":"1141:62:15"},{"documentation":{"id":5615,"nodeType":"StructuredDocumentation","src":"1209:75:15","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":5619,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:15","nodeType":"ErrorDefinition","parameters":{"id":5618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5617,"mutability":"mutable","name":"value","nameLocation":"1331:5:15","nodeType":"VariableDeclaration","scope":5619,"src":"1323:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5616,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:15"},"src":"1289:49:15"},{"body":{"id":5646,"nodeType":"Block","src":"1695:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"1709:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5629,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":5628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:15","memberName":"max","nodeType":"MemberAccess","src":"1717:17:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5640,"nodeType":"IfStatement","src":"1705:105:15","trueBody":{"id":5639,"nodeType":"Block","src":"1736:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"1793:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"1757:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5638,"nodeType":"RevertStatement","src":"1750:49:15"}]}},{"expression":{"arguments":[{"id":5643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5622,"src":"1834:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":5641,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:15","typeDescriptions":{}}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":5626,"id":5645,"nodeType":"Return","src":"1819:21:15"}]},"documentation":{"id":5620,"nodeType":"StructuredDocumentation","src":"1344:280:15","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:15","nodeType":"FunctionDefinition","parameters":{"id":5623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5622,"mutability":"mutable","name":"value","nameLocation":"1656:5:15","nodeType":"VariableDeclaration","scope":5647,"src":"1648:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5621,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:15"},"returnParameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5647,"src":"1686:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":5624,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:15","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:15"},"scope":7357,"src":"1629:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5674,"nodeType":"Block","src":"2204:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"2218:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5657,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":5656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:15","memberName":"max","nodeType":"MemberAccess","src":"2226:17:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5668,"nodeType":"IfStatement","src":"2214:105:15","trueBody":{"id":5667,"nodeType":"Block","src":"2245:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"2302:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5662,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"2266:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5666,"nodeType":"RevertStatement","src":"2259:49:15"}]}},{"expression":{"arguments":[{"id":5671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5650,"src":"2343:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":5669,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:15","typeDescriptions":{}}},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":5654,"id":5673,"nodeType":"Return","src":"2328:21:15"}]},"documentation":{"id":5648,"nodeType":"StructuredDocumentation","src":"1853:280:15","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:15","nodeType":"FunctionDefinition","parameters":{"id":5651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5650,"mutability":"mutable","name":"value","nameLocation":"2165:5:15","nodeType":"VariableDeclaration","scope":5675,"src":"2157:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5649,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:15"},"returnParameters":{"id":5654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5675,"src":"2195:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":5652,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:15","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:15"},"scope":7357,"src":"2138:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5702,"nodeType":"Block","src":"2713:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"2727:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5685,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":5684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:15","memberName":"max","nodeType":"MemberAccess","src":"2735:17:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5696,"nodeType":"IfStatement","src":"2723:105:15","trueBody":{"id":5695,"nodeType":"Block","src":"2754:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"2811:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5690,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"2775:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5694,"nodeType":"RevertStatement","src":"2768:49:15"}]}},{"expression":{"arguments":[{"id":5699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5678,"src":"2852:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":5697,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:15","typeDescriptions":{}}},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":5682,"id":5701,"nodeType":"Return","src":"2837:21:15"}]},"documentation":{"id":5676,"nodeType":"StructuredDocumentation","src":"2362:280:15","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5703,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:15","nodeType":"FunctionDefinition","parameters":{"id":5679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5678,"mutability":"mutable","name":"value","nameLocation":"2674:5:15","nodeType":"VariableDeclaration","scope":5703,"src":"2666:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5677,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:15"},"returnParameters":{"id":5682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5703,"src":"2704:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":5680,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:15","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:15"},"scope":7357,"src":"2647:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5730,"nodeType":"Block","src":"3222:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"3236:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5713,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":5712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:15","memberName":"max","nodeType":"MemberAccess","src":"3244:17:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5724,"nodeType":"IfStatement","src":"3232:105:15","trueBody":{"id":5723,"nodeType":"Block","src":"3263:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"3320:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5718,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"3284:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5722,"nodeType":"RevertStatement","src":"3277:49:15"}]}},{"expression":{"arguments":[{"id":5727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"3361:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":5725,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:15","typeDescriptions":{}}},"id":5728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":5710,"id":5729,"nodeType":"Return","src":"3346:21:15"}]},"documentation":{"id":5704,"nodeType":"StructuredDocumentation","src":"2871:280:15","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5731,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:15","nodeType":"FunctionDefinition","parameters":{"id":5707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5706,"mutability":"mutable","name":"value","nameLocation":"3183:5:15","nodeType":"VariableDeclaration","scope":5731,"src":"3175:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5705,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:15"},"returnParameters":{"id":5710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5731,"src":"3213:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":5708,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:15","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:15"},"scope":7357,"src":"3156:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5758,"nodeType":"Block","src":"3731:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"3745:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5741,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:15","memberName":"max","nodeType":"MemberAccess","src":"3753:17:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5752,"nodeType":"IfStatement","src":"3741:105:15","trueBody":{"id":5751,"nodeType":"Block","src":"3772:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"3829:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5746,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"3793:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5750,"nodeType":"RevertStatement","src":"3786:49:15"}]}},{"expression":{"arguments":[{"id":5755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"3870:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5753,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:15","typeDescriptions":{}}},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5738,"id":5757,"nodeType":"Return","src":"3855:21:15"}]},"documentation":{"id":5732,"nodeType":"StructuredDocumentation","src":"3380:280:15","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:15","nodeType":"FunctionDefinition","parameters":{"id":5735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5734,"mutability":"mutable","name":"value","nameLocation":"3692:5:15","nodeType":"VariableDeclaration","scope":5759,"src":"3684:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5733,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:15"},"returnParameters":{"id":5738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5759,"src":"3722:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":5736,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:15","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:15"},"scope":7357,"src":"3665:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5786,"nodeType":"Block","src":"4240:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"4254:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5769,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:15","memberName":"max","nodeType":"MemberAccess","src":"4262:17:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5780,"nodeType":"IfStatement","src":"4250:105:15","trueBody":{"id":5779,"nodeType":"Block","src":"4281:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"4338:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5774,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"4302:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5778,"nodeType":"RevertStatement","src":"4295:49:15"}]}},{"expression":{"arguments":[{"id":5783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5762,"src":"4379:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5781,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:15","typeDescriptions":{}}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5766,"id":5785,"nodeType":"Return","src":"4364:21:15"}]},"documentation":{"id":5760,"nodeType":"StructuredDocumentation","src":"3889:280:15","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5787,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:15","nodeType":"FunctionDefinition","parameters":{"id":5763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5762,"mutability":"mutable","name":"value","nameLocation":"4201:5:15","nodeType":"VariableDeclaration","scope":5787,"src":"4193:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5761,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:15"},"returnParameters":{"id":5766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5787,"src":"4231:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5764,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:15","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:15"},"scope":7357,"src":"4174:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5814,"nodeType":"Block","src":"4749:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"4763:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5797,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5796,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:15","memberName":"max","nodeType":"MemberAccess","src":"4771:17:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5808,"nodeType":"IfStatement","src":"4759:105:15","trueBody":{"id":5807,"nodeType":"Block","src":"4790:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"4847:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5802,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"4811:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5806,"nodeType":"RevertStatement","src":"4804:49:15"}]}},{"expression":{"arguments":[{"id":5811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"4888:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5809,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:15","typeDescriptions":{}}},"id":5812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5794,"id":5813,"nodeType":"Return","src":"4873:21:15"}]},"documentation":{"id":5788,"nodeType":"StructuredDocumentation","src":"4398:280:15","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5815,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:15","nodeType":"FunctionDefinition","parameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5790,"mutability":"mutable","name":"value","nameLocation":"4710:5:15","nodeType":"VariableDeclaration","scope":5815,"src":"4702:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5789,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:15"},"returnParameters":{"id":5794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5815,"src":"4740:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5792,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:15","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:15"},"scope":7357,"src":"4683:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5842,"nodeType":"Block","src":"5258:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"5272:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5825,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5824,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:15","memberName":"max","nodeType":"MemberAccess","src":"5280:17:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5836,"nodeType":"IfStatement","src":"5268:105:15","trueBody":{"id":5835,"nodeType":"Block","src":"5299:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"5356:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5830,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"5320:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5834,"nodeType":"RevertStatement","src":"5313:49:15"}]}},{"expression":{"arguments":[{"id":5839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"5397:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5837,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:15","typeDescriptions":{}}},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5822,"id":5841,"nodeType":"Return","src":"5382:21:15"}]},"documentation":{"id":5816,"nodeType":"StructuredDocumentation","src":"4907:280:15","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5843,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:15","nodeType":"FunctionDefinition","parameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"value","nameLocation":"5219:5:15","nodeType":"VariableDeclaration","scope":5843,"src":"5211:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:15"},"returnParameters":{"id":5822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5843,"src":"5249:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5820,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:15","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:15"},"scope":7357,"src":"5192:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5870,"nodeType":"Block","src":"5767:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"5781:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5853,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5852,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:15","memberName":"max","nodeType":"MemberAccess","src":"5789:17:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5864,"nodeType":"IfStatement","src":"5777:105:15","trueBody":{"id":5863,"nodeType":"Block","src":"5808:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"5865:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5858,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"5829:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5862,"nodeType":"RevertStatement","src":"5822:49:15"}]}},{"expression":{"arguments":[{"id":5867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5846,"src":"5906:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5865,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:15","typeDescriptions":{}}},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5850,"id":5869,"nodeType":"Return","src":"5891:21:15"}]},"documentation":{"id":5844,"nodeType":"StructuredDocumentation","src":"5416:280:15","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5871,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:15","nodeType":"FunctionDefinition","parameters":{"id":5847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5846,"mutability":"mutable","name":"value","nameLocation":"5728:5:15","nodeType":"VariableDeclaration","scope":5871,"src":"5720:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5845,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:15"},"returnParameters":{"id":5850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5871,"src":"5758:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5848,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:15","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:15"},"scope":7357,"src":"5701:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5898,"nodeType":"Block","src":"6276:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"6290:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5881,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:15","memberName":"max","nodeType":"MemberAccess","src":"6298:17:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5892,"nodeType":"IfStatement","src":"6286:105:15","trueBody":{"id":5891,"nodeType":"Block","src":"6317:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"6374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5886,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"6338:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5890,"nodeType":"RevertStatement","src":"6331:49:15"}]}},{"expression":{"arguments":[{"id":5895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5874,"src":"6415:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5893,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:15","typeDescriptions":{}}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5878,"id":5897,"nodeType":"Return","src":"6400:21:15"}]},"documentation":{"id":5872,"nodeType":"StructuredDocumentation","src":"5925:280:15","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5899,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:15","nodeType":"FunctionDefinition","parameters":{"id":5875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5874,"mutability":"mutable","name":"value","nameLocation":"6237:5:15","nodeType":"VariableDeclaration","scope":5899,"src":"6229:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5873,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:15"},"returnParameters":{"id":5878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5899,"src":"6267:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5876,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:15","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:15"},"scope":7357,"src":"6210:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5926,"nodeType":"Block","src":"6785:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"6799:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5909,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:15","memberName":"max","nodeType":"MemberAccess","src":"6807:17:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5920,"nodeType":"IfStatement","src":"6795:105:15","trueBody":{"id":5919,"nodeType":"Block","src":"6826:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"6883:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5914,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"6847:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5918,"nodeType":"RevertStatement","src":"6840:49:15"}]}},{"expression":{"arguments":[{"id":5923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5902,"src":"6924:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5921,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:15","typeDescriptions":{}}},"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5906,"id":5925,"nodeType":"Return","src":"6909:21:15"}]},"documentation":{"id":5900,"nodeType":"StructuredDocumentation","src":"6434:280:15","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5927,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:15","nodeType":"FunctionDefinition","parameters":{"id":5903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5902,"mutability":"mutable","name":"value","nameLocation":"6746:5:15","nodeType":"VariableDeclaration","scope":5927,"src":"6738:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5901,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:15"},"returnParameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5927,"src":"6776:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5904,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:15","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:15"},"scope":7357,"src":"6719:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5954,"nodeType":"Block","src":"7294:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"7308:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5937,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5936,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:15","memberName":"max","nodeType":"MemberAccess","src":"7316:17:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5948,"nodeType":"IfStatement","src":"7304:105:15","trueBody":{"id":5947,"nodeType":"Block","src":"7335:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"7392:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5942,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"7356:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5946,"nodeType":"RevertStatement","src":"7349:49:15"}]}},{"expression":{"arguments":[{"id":5951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5930,"src":"7433:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5949,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:15","typeDescriptions":{}}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5934,"id":5953,"nodeType":"Return","src":"7418:21:15"}]},"documentation":{"id":5928,"nodeType":"StructuredDocumentation","src":"6943:280:15","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5955,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:15","nodeType":"FunctionDefinition","parameters":{"id":5931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5930,"mutability":"mutable","name":"value","nameLocation":"7255:5:15","nodeType":"VariableDeclaration","scope":5955,"src":"7247:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5929,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:15"},"returnParameters":{"id":5934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5955,"src":"7285:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5932,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:15"},"scope":7357,"src":"7228:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5982,"nodeType":"Block","src":"7803:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"7817:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5965,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5964,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:15","memberName":"max","nodeType":"MemberAccess","src":"7825:17:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5976,"nodeType":"IfStatement","src":"7813:105:15","trueBody":{"id":5975,"nodeType":"Block","src":"7844:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"7901:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5970,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"7865:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5974,"nodeType":"RevertStatement","src":"7858:49:15"}]}},{"expression":{"arguments":[{"id":5979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"7942:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5977,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:15","typeDescriptions":{}}},"id":5980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5962,"id":5981,"nodeType":"Return","src":"7927:21:15"}]},"documentation":{"id":5956,"nodeType":"StructuredDocumentation","src":"7452:280:15","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5983,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:15","nodeType":"FunctionDefinition","parameters":{"id":5959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5958,"mutability":"mutable","name":"value","nameLocation":"7764:5:15","nodeType":"VariableDeclaration","scope":5983,"src":"7756:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:15"},"returnParameters":{"id":5962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5983,"src":"7794:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5960,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:15","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:15"},"scope":7357,"src":"7737:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6010,"nodeType":"Block","src":"8312:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"8326:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5994,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5993,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5992,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:15","memberName":"max","nodeType":"MemberAccess","src":"8334:17:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6004,"nodeType":"IfStatement","src":"8322:105:15","trueBody":{"id":6003,"nodeType":"Block","src":"8353:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"8410:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5998,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"8374:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6002,"nodeType":"RevertStatement","src":"8367:49:15"}]}},{"expression":{"arguments":[{"id":6007,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"8451:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":6005,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:15","typeDescriptions":{}}},"id":6008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5990,"id":6009,"nodeType":"Return","src":"8436:21:15"}]},"documentation":{"id":5984,"nodeType":"StructuredDocumentation","src":"7961:280:15","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6011,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:15","nodeType":"FunctionDefinition","parameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"value","nameLocation":"8273:5:15","nodeType":"VariableDeclaration","scope":6011,"src":"8265:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:15"},"returnParameters":{"id":5990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6011,"src":"8303:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5988,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:15","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:15"},"scope":7357,"src":"8246:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6038,"nodeType":"Block","src":"8821:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"8835:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6021,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":6020,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":6024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:15","memberName":"max","nodeType":"MemberAccess","src":"8843:17:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6032,"nodeType":"IfStatement","src":"8831:105:15","trueBody":{"id":6031,"nodeType":"Block","src":"8862:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"8919:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6026,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"8883:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6030,"nodeType":"RevertStatement","src":"8876:49:15"}]}},{"expression":{"arguments":[{"id":6035,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6014,"src":"8960:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":6033,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:15","typeDescriptions":{}}},"id":6036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":6018,"id":6037,"nodeType":"Return","src":"8945:21:15"}]},"documentation":{"id":6012,"nodeType":"StructuredDocumentation","src":"8470:280:15","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6039,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:15","nodeType":"FunctionDefinition","parameters":{"id":6015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6014,"mutability":"mutable","name":"value","nameLocation":"8782:5:15","nodeType":"VariableDeclaration","scope":6039,"src":"8774:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6013,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:15"},"returnParameters":{"id":6018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6039,"src":"8812:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":6016,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:15","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:15"},"scope":7357,"src":"8755:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6066,"nodeType":"Block","src":"9330:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"9344:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6049,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":6048,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:15","memberName":"max","nodeType":"MemberAccess","src":"9352:17:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6060,"nodeType":"IfStatement","src":"9340:105:15","trueBody":{"id":6059,"nodeType":"Block","src":"9371:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6056,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"9428:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6054,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"9392:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6058,"nodeType":"RevertStatement","src":"9385:49:15"}]}},{"expression":{"arguments":[{"id":6063,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6042,"src":"9469:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":6061,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:15","typeDescriptions":{}}},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":6046,"id":6065,"nodeType":"Return","src":"9454:21:15"}]},"documentation":{"id":6040,"nodeType":"StructuredDocumentation","src":"8979:280:15","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6067,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:15","nodeType":"FunctionDefinition","parameters":{"id":6043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6042,"mutability":"mutable","name":"value","nameLocation":"9291:5:15","nodeType":"VariableDeclaration","scope":6067,"src":"9283:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6041,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:15"},"returnParameters":{"id":6046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6045,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"9321:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":6044,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:15"},"scope":7357,"src":"9264:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6094,"nodeType":"Block","src":"9839:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6075,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"9853:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6077,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":6076,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:15","memberName":"max","nodeType":"MemberAccess","src":"9861:17:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6088,"nodeType":"IfStatement","src":"9849:105:15","trueBody":{"id":6087,"nodeType":"Block","src":"9880:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6084,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"9937:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6082,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"9901:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6086,"nodeType":"RevertStatement","src":"9894:49:15"}]}},{"expression":{"arguments":[{"id":6091,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"9978:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":6089,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:15","typeDescriptions":{}}},"id":6092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":6074,"id":6093,"nodeType":"Return","src":"9963:21:15"}]},"documentation":{"id":6068,"nodeType":"StructuredDocumentation","src":"9488:280:15","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6095,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:15","nodeType":"FunctionDefinition","parameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"value","nameLocation":"9800:5:15","nodeType":"VariableDeclaration","scope":6095,"src":"9792:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6069,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:15"},"returnParameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6095,"src":"9830:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":6072,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:15","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:15"},"scope":7357,"src":"9773:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6122,"nodeType":"Block","src":"10348:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6103,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"10362:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6105,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":6104,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":6108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:15","memberName":"max","nodeType":"MemberAccess","src":"10370:17:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6116,"nodeType":"IfStatement","src":"10358:105:15","trueBody":{"id":6115,"nodeType":"Block","src":"10389:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"10446:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6110,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"10410:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6114,"nodeType":"RevertStatement","src":"10403:49:15"}]}},{"expression":{"arguments":[{"id":6119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6098,"src":"10487:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":6117,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:15","typeDescriptions":{}}},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":6102,"id":6121,"nodeType":"Return","src":"10472:21:15"}]},"documentation":{"id":6096,"nodeType":"StructuredDocumentation","src":"9997:280:15","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6123,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:15","nodeType":"FunctionDefinition","parameters":{"id":6099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"value","nameLocation":"10309:5:15","nodeType":"VariableDeclaration","scope":6123,"src":"10301:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6097,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:15"},"returnParameters":{"id":6102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6123,"src":"10339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":6100,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:15","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:15"},"scope":7357,"src":"10282:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6150,"nodeType":"Block","src":"10857:152:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"10871:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6133,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":6132,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":6136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:15","memberName":"max","nodeType":"MemberAccess","src":"10879:17:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6144,"nodeType":"IfStatement","src":"10867:105:15","trueBody":{"id":6143,"nodeType":"Block","src":"10898:74:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"10955:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6138,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"10919:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6142,"nodeType":"RevertStatement","src":"10912:49:15"}]}},{"expression":{"arguments":[{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6126,"src":"10996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":6145,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:15","typeDescriptions":{}}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":6130,"id":6149,"nodeType":"Return","src":"10981:21:15"}]},"documentation":{"id":6124,"nodeType":"StructuredDocumentation","src":"10506:280:15","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6151,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:15","nodeType":"FunctionDefinition","parameters":{"id":6127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6126,"mutability":"mutable","name":"value","nameLocation":"10818:5:15","nodeType":"VariableDeclaration","scope":6151,"src":"10810:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6125,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:15"},"returnParameters":{"id":6130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6151,"src":"10848:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":6128,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:15","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:15"},"scope":7357,"src":"10791:218:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6178,"nodeType":"Block","src":"11360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"11374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6161,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":6160,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":6164,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:15","memberName":"max","nodeType":"MemberAccess","src":"11382:16:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6172,"nodeType":"IfStatement","src":"11370:103:15","trueBody":{"id":6171,"nodeType":"Block","src":"11400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"11456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6166,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"11421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6170,"nodeType":"RevertStatement","src":"11414:48:15"}]}},{"expression":{"arguments":[{"id":6175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"11496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":6173,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:15","typeDescriptions":{}}},"id":6176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":6158,"id":6177,"nodeType":"Return","src":"11482:20:15"}]},"documentation":{"id":6152,"nodeType":"StructuredDocumentation","src":"11015:276:15","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6179,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:15","nodeType":"FunctionDefinition","parameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6154,"mutability":"mutable","name":"value","nameLocation":"11322:5:15","nodeType":"VariableDeclaration","scope":6179,"src":"11314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:15"},"returnParameters":{"id":6158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6179,"src":"11352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":6156,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:15","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:15"},"scope":7357,"src":"11296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6206,"nodeType":"Block","src":"11860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6187,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"11874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6189,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":6188,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":6192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:15","memberName":"max","nodeType":"MemberAccess","src":"11882:16:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6200,"nodeType":"IfStatement","src":"11870:103:15","trueBody":{"id":6199,"nodeType":"Block","src":"11900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6196,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"11956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6194,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"11921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6198,"nodeType":"RevertStatement","src":"11914:48:15"}]}},{"expression":{"arguments":[{"id":6203,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6182,"src":"11996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":6201,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:15","typeDescriptions":{}}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":6186,"id":6205,"nodeType":"Return","src":"11982:20:15"}]},"documentation":{"id":6180,"nodeType":"StructuredDocumentation","src":"11515:276:15","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6207,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:15","nodeType":"FunctionDefinition","parameters":{"id":6183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6182,"mutability":"mutable","name":"value","nameLocation":"11822:5:15","nodeType":"VariableDeclaration","scope":6207,"src":"11814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6181,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:15"},"returnParameters":{"id":6186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6207,"src":"11852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":6184,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:15","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:15"},"scope":7357,"src":"11796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6234,"nodeType":"Block","src":"12360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"12374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6217,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":6216,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":6220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:15","memberName":"max","nodeType":"MemberAccess","src":"12382:16:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6228,"nodeType":"IfStatement","src":"12370:103:15","trueBody":{"id":6227,"nodeType":"Block","src":"12400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"12456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6222,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"12421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6226,"nodeType":"RevertStatement","src":"12414:48:15"}]}},{"expression":{"arguments":[{"id":6231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6210,"src":"12496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":6229,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:15","typeDescriptions":{}}},"id":6232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":6214,"id":6233,"nodeType":"Return","src":"12482:20:15"}]},"documentation":{"id":6208,"nodeType":"StructuredDocumentation","src":"12015:276:15","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6235,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:15","nodeType":"FunctionDefinition","parameters":{"id":6211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6210,"mutability":"mutable","name":"value","nameLocation":"12322:5:15","nodeType":"VariableDeclaration","scope":6235,"src":"12314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6209,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:15"},"returnParameters":{"id":6214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6235,"src":"12352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":6212,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:15","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:15"},"scope":7357,"src":"12296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6262,"nodeType":"Block","src":"12860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6243,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"12874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6245,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":6244,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":6248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:15","memberName":"max","nodeType":"MemberAccess","src":"12882:16:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6256,"nodeType":"IfStatement","src":"12870:103:15","trueBody":{"id":6255,"nodeType":"Block","src":"12900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6252,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"12956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6250,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"12921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6254,"nodeType":"RevertStatement","src":"12914:48:15"}]}},{"expression":{"arguments":[{"id":6259,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6238,"src":"12996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":6257,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:15","typeDescriptions":{}}},"id":6260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":6242,"id":6261,"nodeType":"Return","src":"12982:20:15"}]},"documentation":{"id":6236,"nodeType":"StructuredDocumentation","src":"12515:276:15","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6263,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:15","nodeType":"FunctionDefinition","parameters":{"id":6239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6238,"mutability":"mutable","name":"value","nameLocation":"12822:5:15","nodeType":"VariableDeclaration","scope":6263,"src":"12814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6237,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:15"},"returnParameters":{"id":6242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6241,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6263,"src":"12852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":6240,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:15","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:15"},"scope":7357,"src":"12796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6290,"nodeType":"Block","src":"13360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6271,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"13374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6273,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":6272,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:15","memberName":"max","nodeType":"MemberAccess","src":"13382:16:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6284,"nodeType":"IfStatement","src":"13370:103:15","trueBody":{"id":6283,"nodeType":"Block","src":"13400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"13456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6278,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"13421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6282,"nodeType":"RevertStatement","src":"13414:48:15"}]}},{"expression":{"arguments":[{"id":6287,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6266,"src":"13496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":6285,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:15","typeDescriptions":{}}},"id":6288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":6270,"id":6289,"nodeType":"Return","src":"13482:20:15"}]},"documentation":{"id":6264,"nodeType":"StructuredDocumentation","src":"13015:276:15","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6291,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:15","nodeType":"FunctionDefinition","parameters":{"id":6267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6266,"mutability":"mutable","name":"value","nameLocation":"13322:5:15","nodeType":"VariableDeclaration","scope":6291,"src":"13314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6265,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:15"},"returnParameters":{"id":6270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6291,"src":"13352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":6268,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:15"},"scope":7357,"src":"13296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6318,"nodeType":"Block","src":"13860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6299,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"13874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6301,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":6300,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:15","memberName":"max","nodeType":"MemberAccess","src":"13882:16:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6312,"nodeType":"IfStatement","src":"13870:103:15","trueBody":{"id":6311,"nodeType":"Block","src":"13900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"13956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6306,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"13921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6310,"nodeType":"RevertStatement","src":"13914:48:15"}]}},{"expression":{"arguments":[{"id":6315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6294,"src":"13996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":6313,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:15","typeDescriptions":{}}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":6298,"id":6317,"nodeType":"Return","src":"13982:20:15"}]},"documentation":{"id":6292,"nodeType":"StructuredDocumentation","src":"13515:276:15","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6319,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:15","nodeType":"FunctionDefinition","parameters":{"id":6295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"value","nameLocation":"13822:5:15","nodeType":"VariableDeclaration","scope":6319,"src":"13814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6293,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:15"},"returnParameters":{"id":6298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6297,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6319,"src":"13852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":6296,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:15","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:15"},"scope":7357,"src":"13796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6346,"nodeType":"Block","src":"14360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6327,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"14374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6329,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":6328,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":6332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:15","memberName":"max","nodeType":"MemberAccess","src":"14382:16:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6340,"nodeType":"IfStatement","src":"14370:103:15","trueBody":{"id":6339,"nodeType":"Block","src":"14400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"14456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6334,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"14421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6338,"nodeType":"RevertStatement","src":"14414:48:15"}]}},{"expression":{"arguments":[{"id":6343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6322,"src":"14496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":6341,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:15","typeDescriptions":{}}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":6326,"id":6345,"nodeType":"Return","src":"14482:20:15"}]},"documentation":{"id":6320,"nodeType":"StructuredDocumentation","src":"14015:276:15","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6347,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:15","nodeType":"FunctionDefinition","parameters":{"id":6323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6322,"mutability":"mutable","name":"value","nameLocation":"14322:5:15","nodeType":"VariableDeclaration","scope":6347,"src":"14314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6321,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:15"},"returnParameters":{"id":6326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6347,"src":"14352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":6324,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:15","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:15"},"scope":7357,"src":"14296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6374,"nodeType":"Block","src":"14860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"14874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6357,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":6356,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":6360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:15","memberName":"max","nodeType":"MemberAccess","src":"14882:16:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6368,"nodeType":"IfStatement","src":"14870:103:15","trueBody":{"id":6367,"nodeType":"Block","src":"14900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"14956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6362,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"14921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6366,"nodeType":"RevertStatement","src":"14914:48:15"}]}},{"expression":{"arguments":[{"id":6371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"14996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":6369,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:15","typeDescriptions":{}}},"id":6372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":6354,"id":6373,"nodeType":"Return","src":"14982:20:15"}]},"documentation":{"id":6348,"nodeType":"StructuredDocumentation","src":"14515:276:15","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6375,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:15","nodeType":"FunctionDefinition","parameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"value","nameLocation":"14822:5:15","nodeType":"VariableDeclaration","scope":6375,"src":"14814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6349,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:15"},"returnParameters":{"id":6354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6375,"src":"14852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":6352,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:15","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:15"},"scope":7357,"src":"14796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6402,"nodeType":"Block","src":"15360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"15374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6385,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":6384,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":6388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:15","memberName":"max","nodeType":"MemberAccess","src":"15382:16:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6396,"nodeType":"IfStatement","src":"15370:103:15","trueBody":{"id":6395,"nodeType":"Block","src":"15400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"15456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6390,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"15421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6394,"nodeType":"RevertStatement","src":"15414:48:15"}]}},{"expression":{"arguments":[{"id":6399,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6378,"src":"15496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":6397,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:15","typeDescriptions":{}}},"id":6400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":6382,"id":6401,"nodeType":"Return","src":"15482:20:15"}]},"documentation":{"id":6376,"nodeType":"StructuredDocumentation","src":"15015:276:15","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6403,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:15","nodeType":"FunctionDefinition","parameters":{"id":6379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6378,"mutability":"mutable","name":"value","nameLocation":"15322:5:15","nodeType":"VariableDeclaration","scope":6403,"src":"15314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6377,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:15"},"returnParameters":{"id":6382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6403,"src":"15352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":6380,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:15"},"scope":7357,"src":"15296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6430,"nodeType":"Block","src":"15860:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6411,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"15874:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6413,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":6412,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":6416,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:15","memberName":"max","nodeType":"MemberAccess","src":"15882:16:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6424,"nodeType":"IfStatement","src":"15870:103:15","trueBody":{"id":6423,"nodeType":"Block","src":"15900:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6420,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"15956:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6418,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"15921:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6422,"nodeType":"RevertStatement","src":"15914:48:15"}]}},{"expression":{"arguments":[{"id":6427,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6406,"src":"15996:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":6425,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:15","typeDescriptions":{}}},"id":6428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":6410,"id":6429,"nodeType":"Return","src":"15982:20:15"}]},"documentation":{"id":6404,"nodeType":"StructuredDocumentation","src":"15515:276:15","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6431,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:15","nodeType":"FunctionDefinition","parameters":{"id":6407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6406,"mutability":"mutable","name":"value","nameLocation":"15822:5:15","nodeType":"VariableDeclaration","scope":6431,"src":"15814:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6405,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:15"},"returnParameters":{"id":6410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6409,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6431,"src":"15852:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":6408,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:15","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:15"},"scope":7357,"src":"15796:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6458,"nodeType":"Block","src":"16360:149:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"16374:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6441,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":6440,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:15","memberName":"max","nodeType":"MemberAccess","src":"16382:16:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6452,"nodeType":"IfStatement","src":"16370:103:15","trueBody":{"id":6451,"nodeType":"Block","src":"16400:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6448,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"16456:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6446,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"16421:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6450,"nodeType":"RevertStatement","src":"16414:48:15"}]}},{"expression":{"arguments":[{"id":6455,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6434,"src":"16496:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":6453,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:15","typeDescriptions":{}}},"id":6456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":6438,"id":6457,"nodeType":"Return","src":"16482:20:15"}]},"documentation":{"id":6432,"nodeType":"StructuredDocumentation","src":"16015:276:15","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6459,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:15","nodeType":"FunctionDefinition","parameters":{"id":6435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6434,"mutability":"mutable","name":"value","nameLocation":"16322:5:15","nodeType":"VariableDeclaration","scope":6459,"src":"16314:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6433,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:15"},"returnParameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6459,"src":"16352:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":6436,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:15"},"scope":7357,"src":"16296:213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6486,"nodeType":"Block","src":"16854:146:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6467,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"16868:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6469,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6468,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:15","memberName":"max","nodeType":"MemberAccess","src":"16876:15:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6480,"nodeType":"IfStatement","src":"16864:101:15","trueBody":{"id":6479,"nodeType":"Block","src":"16893:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"16948:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6474,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"16914:30:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6478,"nodeType":"RevertStatement","src":"16907:47:15"}]}},{"expression":{"arguments":[{"id":6483,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6462,"src":"16987:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6481,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:15","typeDescriptions":{}}},"id":6484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6466,"id":6485,"nodeType":"Return","src":"16974:19:15"}]},"documentation":{"id":6460,"nodeType":"StructuredDocumentation","src":"16515:272:15","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6487,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:15","nodeType":"FunctionDefinition","parameters":{"id":6463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6462,"mutability":"mutable","name":"value","nameLocation":"16817:5:15","nodeType":"VariableDeclaration","scope":6487,"src":"16809:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6461,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:15"},"returnParameters":{"id":6466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6465,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6487,"src":"16847:5:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6464,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:15"},"scope":7357,"src":"16792:208:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6509,"nodeType":"Block","src":"17236:128:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"17250:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6503,"nodeType":"IfStatement","src":"17246:81:15","trueBody":{"id":6502,"nodeType":"Block","src":"17261:66:15","statements":[{"errorCall":{"arguments":[{"id":6499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"17310:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6498,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5607,"src":"17282:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6501,"nodeType":"RevertStatement","src":"17275:41:15"}]}},{"expression":{"arguments":[{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6490,"src":"17351:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6505,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6504,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:15","typeDescriptions":{}}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6494,"id":6508,"nodeType":"Return","src":"17336:21:15"}]},"documentation":{"id":6488,"nodeType":"StructuredDocumentation","src":"17006:160:15","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":6510,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:15","nodeType":"FunctionDefinition","parameters":{"id":6491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6490,"mutability":"mutable","name":"value","nameLocation":"17197:5:15","nodeType":"VariableDeclaration","scope":6510,"src":"17190:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6489,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:15"},"returnParameters":{"id":6494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6510,"src":"17227:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6492,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:15"},"scope":7357,"src":"17171:193:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6535,"nodeType":"Block","src":"17761:150:15","statements":[{"expression":{"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6518,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"17771:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"17791:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":6519,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:15","typeDescriptions":{}}},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":6524,"nodeType":"ExpressionStatement","src":"17771:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6525,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6516,"src":"17811:10:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"17825:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6534,"nodeType":"IfStatement","src":"17807:98:15","trueBody":{"id":6533,"nodeType":"Block","src":"17832:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":6529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:15","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":6530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6513,"src":"17888:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6528,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"17853:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6532,"nodeType":"RevertStatement","src":"17846:48:15"}]}}]},"documentation":{"id":6511,"nodeType":"StructuredDocumentation","src":"17370:312:15","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":6536,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:15","nodeType":"FunctionDefinition","parameters":{"id":6514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6513,"mutability":"mutable","name":"value","nameLocation":"17712:5:15","nodeType":"VariableDeclaration","scope":6536,"src":"17705:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6512,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:15"},"returnParameters":{"id":6517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6516,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:15","nodeType":"VariableDeclaration","scope":6536,"src":"17742:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":6515,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:15","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:15"},"scope":7357,"src":"17687:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6561,"nodeType":"Block","src":"18308:150:15","statements":[{"expression":{"id":6549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6544,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"18318:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"18338:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":6545,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:15","typeDescriptions":{}}},"id":6548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":6550,"nodeType":"ExpressionStatement","src":"18318:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6551,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"18358:10:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"18372:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6560,"nodeType":"IfStatement","src":"18354:98:15","trueBody":{"id":6559,"nodeType":"Block","src":"18379:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":6555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:15","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":6556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6539,"src":"18435:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6554,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"18400:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6558,"nodeType":"RevertStatement","src":"18393:48:15"}]}}]},"documentation":{"id":6537,"nodeType":"StructuredDocumentation","src":"17917:312:15","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":6562,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:15","nodeType":"FunctionDefinition","parameters":{"id":6540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6539,"mutability":"mutable","name":"value","nameLocation":"18259:5:15","nodeType":"VariableDeclaration","scope":6562,"src":"18252:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6538,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:15"},"returnParameters":{"id":6543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6542,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:15","nodeType":"VariableDeclaration","scope":6562,"src":"18289:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":6541,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:15","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:15"},"scope":7357,"src":"18234:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6587,"nodeType":"Block","src":"18855:150:15","statements":[{"expression":{"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6570,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"18865:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"18885:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":6571,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:15","typeDescriptions":{}}},"id":6574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":6576,"nodeType":"ExpressionStatement","src":"18865:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6577,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6568,"src":"18905:10:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6578,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"18919:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6586,"nodeType":"IfStatement","src":"18901:98:15","trueBody":{"id":6585,"nodeType":"Block","src":"18926:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":6581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:15","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":6582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6565,"src":"18982:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6580,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"18947:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6584,"nodeType":"RevertStatement","src":"18940:48:15"}]}}]},"documentation":{"id":6563,"nodeType":"StructuredDocumentation","src":"18464:312:15","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":6588,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:15","nodeType":"FunctionDefinition","parameters":{"id":6566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6565,"mutability":"mutable","name":"value","nameLocation":"18806:5:15","nodeType":"VariableDeclaration","scope":6588,"src":"18799:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6564,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:15"},"returnParameters":{"id":6569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6568,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:15","nodeType":"VariableDeclaration","scope":6588,"src":"18836:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":6567,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:15","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:15"},"scope":7357,"src":"18781:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6613,"nodeType":"Block","src":"19402:150:15","statements":[{"expression":{"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6596,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"19412:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"19432:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6598,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":6597,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:15","typeDescriptions":{}}},"id":6600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":6602,"nodeType":"ExpressionStatement","src":"19412:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6603,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"19452:10:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"19466:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6612,"nodeType":"IfStatement","src":"19448:98:15","trueBody":{"id":6611,"nodeType":"Block","src":"19473:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":6607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:15","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":6608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6591,"src":"19529:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6606,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"19494:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6610,"nodeType":"RevertStatement","src":"19487:48:15"}]}}]},"documentation":{"id":6589,"nodeType":"StructuredDocumentation","src":"19011:312:15","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":6614,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:15","nodeType":"FunctionDefinition","parameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"value","nameLocation":"19353:5:15","nodeType":"VariableDeclaration","scope":6614,"src":"19346:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6590,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:15"},"returnParameters":{"id":6595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6594,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:15","nodeType":"VariableDeclaration","scope":6614,"src":"19383:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":6593,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:15","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:15"},"scope":7357,"src":"19328:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6639,"nodeType":"Block","src":"19949:150:15","statements":[{"expression":{"id":6627,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6622,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19959:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"19979:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":6623,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:15","typeDescriptions":{}}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":6628,"nodeType":"ExpressionStatement","src":"19959:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6629,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6620,"src":"19999:10:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"20013:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6638,"nodeType":"IfStatement","src":"19995:98:15","trueBody":{"id":6637,"nodeType":"Block","src":"20020:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":6633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:15","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":6634,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"20076:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6632,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"20041:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6636,"nodeType":"RevertStatement","src":"20034:48:15"}]}}]},"documentation":{"id":6615,"nodeType":"StructuredDocumentation","src":"19558:312:15","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":6640,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:15","nodeType":"FunctionDefinition","parameters":{"id":6618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6617,"mutability":"mutable","name":"value","nameLocation":"19900:5:15","nodeType":"VariableDeclaration","scope":6640,"src":"19893:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6616,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:15"},"returnParameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:15","nodeType":"VariableDeclaration","scope":6640,"src":"19930:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":6619,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:15","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:15"},"scope":7357,"src":"19875:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6665,"nodeType":"Block","src":"20496:150:15","statements":[{"expression":{"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6648,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"20506:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"20526:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":6649,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:15","typeDescriptions":{}}},"id":6652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":6654,"nodeType":"ExpressionStatement","src":"20506:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6655,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6646,"src":"20546:10:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6656,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"20560:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6664,"nodeType":"IfStatement","src":"20542:98:15","trueBody":{"id":6663,"nodeType":"Block","src":"20567:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:15","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":6660,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"20623:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6658,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"20588:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6662,"nodeType":"RevertStatement","src":"20581:48:15"}]}}]},"documentation":{"id":6641,"nodeType":"StructuredDocumentation","src":"20105:312:15","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":6666,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:15","nodeType":"FunctionDefinition","parameters":{"id":6644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6643,"mutability":"mutable","name":"value","nameLocation":"20447:5:15","nodeType":"VariableDeclaration","scope":6666,"src":"20440:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6642,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:15"},"returnParameters":{"id":6647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6646,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:15","nodeType":"VariableDeclaration","scope":6666,"src":"20477:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":6645,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:15","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:15"},"scope":7357,"src":"20422:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6691,"nodeType":"Block","src":"21043:150:15","statements":[{"expression":{"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6674,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"21053:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"21073:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":6675,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:15","typeDescriptions":{}}},"id":6678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":6680,"nodeType":"ExpressionStatement","src":"21053:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6681,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6672,"src":"21093:10:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"21107:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6690,"nodeType":"IfStatement","src":"21089:98:15","trueBody":{"id":6689,"nodeType":"Block","src":"21114:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":6685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:15","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":6686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6669,"src":"21170:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6684,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"21135:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6688,"nodeType":"RevertStatement","src":"21128:48:15"}]}}]},"documentation":{"id":6667,"nodeType":"StructuredDocumentation","src":"20652:312:15","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":6692,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:15","nodeType":"FunctionDefinition","parameters":{"id":6670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6669,"mutability":"mutable","name":"value","nameLocation":"20994:5:15","nodeType":"VariableDeclaration","scope":6692,"src":"20987:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6668,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:15"},"returnParameters":{"id":6673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6672,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:15","nodeType":"VariableDeclaration","scope":6692,"src":"21024:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":6671,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:15","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:15"},"scope":7357,"src":"20969:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6717,"nodeType":"Block","src":"21590:150:15","statements":[{"expression":{"id":6705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6700,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"21600:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"21620:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":6701,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:15","typeDescriptions":{}}},"id":6704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":6706,"nodeType":"ExpressionStatement","src":"21600:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6707,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6698,"src":"21640:10:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6708,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"21654:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6716,"nodeType":"IfStatement","src":"21636:98:15","trueBody":{"id":6715,"nodeType":"Block","src":"21661:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":6711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:15","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":6712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"21717:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6710,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"21682:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6714,"nodeType":"RevertStatement","src":"21675:48:15"}]}}]},"documentation":{"id":6693,"nodeType":"StructuredDocumentation","src":"21199:312:15","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":6718,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:15","nodeType":"FunctionDefinition","parameters":{"id":6696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"value","nameLocation":"21541:5:15","nodeType":"VariableDeclaration","scope":6718,"src":"21534:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6694,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:15"},"returnParameters":{"id":6699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6698,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:15","nodeType":"VariableDeclaration","scope":6718,"src":"21571:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":6697,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:15","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:15"},"scope":7357,"src":"21516:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6743,"nodeType":"Block","src":"22137:150:15","statements":[{"expression":{"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6726,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"22147:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"22167:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":6727,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:15","typeDescriptions":{}}},"id":6730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":6732,"nodeType":"ExpressionStatement","src":"22147:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6733,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6724,"src":"22187:10:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6734,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"22201:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6742,"nodeType":"IfStatement","src":"22183:98:15","trueBody":{"id":6741,"nodeType":"Block","src":"22208:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":6737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:15","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6721,"src":"22264:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6736,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"22229:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6740,"nodeType":"RevertStatement","src":"22222:48:15"}]}}]},"documentation":{"id":6719,"nodeType":"StructuredDocumentation","src":"21746:312:15","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6744,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:15","nodeType":"FunctionDefinition","parameters":{"id":6722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6721,"mutability":"mutable","name":"value","nameLocation":"22088:5:15","nodeType":"VariableDeclaration","scope":6744,"src":"22081:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6720,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:15"},"returnParameters":{"id":6725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6724,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:15","nodeType":"VariableDeclaration","scope":6744,"src":"22118:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":6723,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:15","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:15"},"scope":7357,"src":"22063:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6769,"nodeType":"Block","src":"22684:150:15","statements":[{"expression":{"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6752,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"22694:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"22714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6753,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:15","typeDescriptions":{}}},"id":6756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6758,"nodeType":"ExpressionStatement","src":"22694:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6759,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"22734:10:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6760,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"22748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6768,"nodeType":"IfStatement","src":"22730:98:15","trueBody":{"id":6767,"nodeType":"Block","src":"22755:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6764,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6747,"src":"22811:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6762,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"22776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6766,"nodeType":"RevertStatement","src":"22769:48:15"}]}}]},"documentation":{"id":6745,"nodeType":"StructuredDocumentation","src":"22293:312:15","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6770,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:15","nodeType":"FunctionDefinition","parameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"value","nameLocation":"22635:5:15","nodeType":"VariableDeclaration","scope":6770,"src":"22628:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6746,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:15"},"returnParameters":{"id":6751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6750,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:15","nodeType":"VariableDeclaration","scope":6770,"src":"22665:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6749,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:15","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:15"},"scope":7357,"src":"22610:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6795,"nodeType":"Block","src":"23231:150:15","statements":[{"expression":{"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6778,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"23241:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"23261:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6779,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:15","typeDescriptions":{}}},"id":6782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6784,"nodeType":"ExpressionStatement","src":"23241:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6785,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6776,"src":"23281:10:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"23295:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6794,"nodeType":"IfStatement","src":"23277:98:15","trueBody":{"id":6793,"nodeType":"Block","src":"23302:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:15","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6790,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6773,"src":"23358:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6788,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"23323:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6792,"nodeType":"RevertStatement","src":"23316:48:15"}]}}]},"documentation":{"id":6771,"nodeType":"StructuredDocumentation","src":"22840:312:15","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6796,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:15","nodeType":"FunctionDefinition","parameters":{"id":6774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6773,"mutability":"mutable","name":"value","nameLocation":"23182:5:15","nodeType":"VariableDeclaration","scope":6796,"src":"23175:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6772,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:15"},"returnParameters":{"id":6777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6776,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:15","nodeType":"VariableDeclaration","scope":6796,"src":"23212:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6775,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:15","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:15"},"scope":7357,"src":"23157:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6821,"nodeType":"Block","src":"23778:150:15","statements":[{"expression":{"id":6809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6804,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"23788:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"23808:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6805,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:15","typeDescriptions":{}}},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6810,"nodeType":"ExpressionStatement","src":"23788:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6811,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6802,"src":"23828:10:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"23842:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6820,"nodeType":"IfStatement","src":"23824:98:15","trueBody":{"id":6819,"nodeType":"Block","src":"23849:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:15","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"23905:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6814,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"23870:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6818,"nodeType":"RevertStatement","src":"23863:48:15"}]}}]},"documentation":{"id":6797,"nodeType":"StructuredDocumentation","src":"23387:312:15","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6822,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:15","nodeType":"FunctionDefinition","parameters":{"id":6800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6799,"mutability":"mutable","name":"value","nameLocation":"23729:5:15","nodeType":"VariableDeclaration","scope":6822,"src":"23722:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6798,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:15"},"returnParameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:15","nodeType":"VariableDeclaration","scope":6822,"src":"23759:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6801,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:15","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:15"},"scope":7357,"src":"23704:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6847,"nodeType":"Block","src":"24325:150:15","statements":[{"expression":{"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6830,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"24335:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"24355:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6831,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:15","typeDescriptions":{}}},"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6836,"nodeType":"ExpressionStatement","src":"24335:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6837,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6828,"src":"24375:10:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"24389:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6846,"nodeType":"IfStatement","src":"24371:98:15","trueBody":{"id":6845,"nodeType":"Block","src":"24396:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:15","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6825,"src":"24452:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6840,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"24417:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6844,"nodeType":"RevertStatement","src":"24410:48:15"}]}}]},"documentation":{"id":6823,"nodeType":"StructuredDocumentation","src":"23934:312:15","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6848,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:15","nodeType":"FunctionDefinition","parameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"value","nameLocation":"24276:5:15","nodeType":"VariableDeclaration","scope":6848,"src":"24269:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6824,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:15"},"returnParameters":{"id":6829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6828,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:15","nodeType":"VariableDeclaration","scope":6848,"src":"24306:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6827,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:15","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:15"},"scope":7357,"src":"24251:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6873,"nodeType":"Block","src":"24872:150:15","statements":[{"expression":{"id":6861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6856,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"24882:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"24902:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6857,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:15","typeDescriptions":{}}},"id":6860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6862,"nodeType":"ExpressionStatement","src":"24882:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6863,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6854,"src":"24922:10:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6864,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"24936:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6872,"nodeType":"IfStatement","src":"24918:98:15","trueBody":{"id":6871,"nodeType":"Block","src":"24943:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:15","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6868,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6851,"src":"24999:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6866,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"24964:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6870,"nodeType":"RevertStatement","src":"24957:48:15"}]}}]},"documentation":{"id":6849,"nodeType":"StructuredDocumentation","src":"24481:312:15","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6874,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:15","nodeType":"FunctionDefinition","parameters":{"id":6852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6851,"mutability":"mutable","name":"value","nameLocation":"24823:5:15","nodeType":"VariableDeclaration","scope":6874,"src":"24816:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6850,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:15"},"returnParameters":{"id":6855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6854,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:15","nodeType":"VariableDeclaration","scope":6874,"src":"24853:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6853,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:15","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:15"},"scope":7357,"src":"24798:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6899,"nodeType":"Block","src":"25419:150:15","statements":[{"expression":{"id":6887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6882,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"25429:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"25449:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6883,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:15","typeDescriptions":{}}},"id":6886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6888,"nodeType":"ExpressionStatement","src":"25429:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6889,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6880,"src":"25469:10:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"25483:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6898,"nodeType":"IfStatement","src":"25465:98:15","trueBody":{"id":6897,"nodeType":"Block","src":"25490:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:15","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6877,"src":"25546:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6892,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"25511:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6896,"nodeType":"RevertStatement","src":"25504:48:15"}]}}]},"documentation":{"id":6875,"nodeType":"StructuredDocumentation","src":"25028:312:15","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6900,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:15","nodeType":"FunctionDefinition","parameters":{"id":6878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6877,"mutability":"mutable","name":"value","nameLocation":"25370:5:15","nodeType":"VariableDeclaration","scope":6900,"src":"25363:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6876,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:15"},"returnParameters":{"id":6881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6880,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:15","nodeType":"VariableDeclaration","scope":6900,"src":"25400:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6879,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:15","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:15"},"scope":7357,"src":"25345:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6925,"nodeType":"Block","src":"25966:150:15","statements":[{"expression":{"id":6913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6908,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"25976:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6911,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"25996:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6909,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:15","typeDescriptions":{}}},"id":6912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6914,"nodeType":"ExpressionStatement","src":"25976:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6906,"src":"26016:10:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"26030:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6924,"nodeType":"IfStatement","src":"26012:98:15","trueBody":{"id":6923,"nodeType":"Block","src":"26037:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6903,"src":"26093:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6918,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"26058:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6922,"nodeType":"RevertStatement","src":"26051:48:15"}]}}]},"documentation":{"id":6901,"nodeType":"StructuredDocumentation","src":"25575:312:15","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6926,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:15","nodeType":"FunctionDefinition","parameters":{"id":6904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6903,"mutability":"mutable","name":"value","nameLocation":"25917:5:15","nodeType":"VariableDeclaration","scope":6926,"src":"25910:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6902,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:15"},"returnParameters":{"id":6907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6906,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:15","nodeType":"VariableDeclaration","scope":6926,"src":"25947:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6905,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:15","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:15"},"scope":7357,"src":"25892:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6951,"nodeType":"Block","src":"26513:150:15","statements":[{"expression":{"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6934,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26523:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"26543:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6935,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:15","typeDescriptions":{}}},"id":6938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6940,"nodeType":"ExpressionStatement","src":"26523:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6941,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6932,"src":"26563:10:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"26577:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6950,"nodeType":"IfStatement","src":"26559:98:15","trueBody":{"id":6949,"nodeType":"Block","src":"26584:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:15","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6929,"src":"26640:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6944,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"26605:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6948,"nodeType":"RevertStatement","src":"26598:48:15"}]}}]},"documentation":{"id":6927,"nodeType":"StructuredDocumentation","src":"26122:312:15","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6952,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:15","nodeType":"FunctionDefinition","parameters":{"id":6930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6929,"mutability":"mutable","name":"value","nameLocation":"26464:5:15","nodeType":"VariableDeclaration","scope":6952,"src":"26457:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6928,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:15"},"returnParameters":{"id":6933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6932,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:15","nodeType":"VariableDeclaration","scope":6952,"src":"26494:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6931,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:15","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:15"},"scope":7357,"src":"26439:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6977,"nodeType":"Block","src":"27060:150:15","statements":[{"expression":{"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6960,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"27070:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"27090:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6961,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:15","typeDescriptions":{}}},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6966,"nodeType":"ExpressionStatement","src":"27070:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6967,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6958,"src":"27110:10:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"27124:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6976,"nodeType":"IfStatement","src":"27106:98:15","trueBody":{"id":6975,"nodeType":"Block","src":"27131:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:15","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6955,"src":"27187:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6970,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"27152:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6974,"nodeType":"RevertStatement","src":"27145:48:15"}]}}]},"documentation":{"id":6953,"nodeType":"StructuredDocumentation","src":"26669:312:15","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6978,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:15","nodeType":"FunctionDefinition","parameters":{"id":6956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6955,"mutability":"mutable","name":"value","nameLocation":"27011:5:15","nodeType":"VariableDeclaration","scope":6978,"src":"27004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6954,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:15"},"returnParameters":{"id":6959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6958,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:15","nodeType":"VariableDeclaration","scope":6978,"src":"27041:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6957,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:15","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:15"},"scope":7357,"src":"26986:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7003,"nodeType":"Block","src":"27607:150:15","statements":[{"expression":{"id":6991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6986,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"27617:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"27637:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6987,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:15","typeDescriptions":{}}},"id":6990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6992,"nodeType":"ExpressionStatement","src":"27617:26:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6993,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"27657:10:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"27671:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7002,"nodeType":"IfStatement","src":"27653:98:15","trueBody":{"id":7001,"nodeType":"Block","src":"27678:73:15","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:15","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6981,"src":"27734:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6996,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"27699:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7000,"nodeType":"RevertStatement","src":"27692:48:15"}]}}]},"documentation":{"id":6979,"nodeType":"StructuredDocumentation","src":"27216:312:15","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7004,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:15","nodeType":"FunctionDefinition","parameters":{"id":6982,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6981,"mutability":"mutable","name":"value","nameLocation":"27558:5:15","nodeType":"VariableDeclaration","scope":7004,"src":"27551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6980,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:15"},"returnParameters":{"id":6985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:15","nodeType":"VariableDeclaration","scope":7004,"src":"27588:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6983,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:15","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:15"},"scope":7357,"src":"27533:224:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7029,"nodeType":"Block","src":"28147:148:15","statements":[{"expression":{"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7012,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"28157:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"28176:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":7013,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:15","typeDescriptions":{}}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":7018,"nodeType":"ExpressionStatement","src":"28157:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7019,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7010,"src":"28196:10:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7020,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"28210:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7028,"nodeType":"IfStatement","src":"28192:97:15","trueBody":{"id":7027,"nodeType":"Block","src":"28217:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:15","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7007,"src":"28272:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7022,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"28238:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7026,"nodeType":"RevertStatement","src":"28231:47:15"}]}}]},"documentation":{"id":7005,"nodeType":"StructuredDocumentation","src":"27763:307:15","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7030,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:15","nodeType":"FunctionDefinition","parameters":{"id":7008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"mutability":"mutable","name":"value","nameLocation":"28099:5:15","nodeType":"VariableDeclaration","scope":7030,"src":"28092:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7006,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:15"},"returnParameters":{"id":7011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7010,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:15","nodeType":"VariableDeclaration","scope":7030,"src":"28129:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":7009,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:15","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:15"},"scope":7357,"src":"28075:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7055,"nodeType":"Block","src":"28685:148:15","statements":[{"expression":{"id":7043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7038,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"28695:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7041,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"28714:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":7039,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:15","typeDescriptions":{}}},"id":7042,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":7044,"nodeType":"ExpressionStatement","src":"28695:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7045,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"28734:10:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7046,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"28748:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7054,"nodeType":"IfStatement","src":"28730:97:15","trueBody":{"id":7053,"nodeType":"Block","src":"28755:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:15","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7033,"src":"28810:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7048,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"28776:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7052,"nodeType":"RevertStatement","src":"28769:47:15"}]}}]},"documentation":{"id":7031,"nodeType":"StructuredDocumentation","src":"28301:307:15","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:15","nodeType":"FunctionDefinition","parameters":{"id":7034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7033,"mutability":"mutable","name":"value","nameLocation":"28637:5:15","nodeType":"VariableDeclaration","scope":7056,"src":"28630:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7032,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:15"},"returnParameters":{"id":7037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7036,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:15","nodeType":"VariableDeclaration","scope":7056,"src":"28667:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":7035,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:15","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:15"},"scope":7357,"src":"28613:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7081,"nodeType":"Block","src":"29223:148:15","statements":[{"expression":{"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"29233:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"29252:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":7065,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:15","typeDescriptions":{}}},"id":7068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":7070,"nodeType":"ExpressionStatement","src":"29233:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7071,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7062,"src":"29272:10:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"29286:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7080,"nodeType":"IfStatement","src":"29268:97:15","trueBody":{"id":7079,"nodeType":"Block","src":"29293:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:15","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"29348:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7074,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"29314:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7078,"nodeType":"RevertStatement","src":"29307:47:15"}]}}]},"documentation":{"id":7057,"nodeType":"StructuredDocumentation","src":"28839:307:15","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7082,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:15","nodeType":"FunctionDefinition","parameters":{"id":7060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7059,"mutability":"mutable","name":"value","nameLocation":"29175:5:15","nodeType":"VariableDeclaration","scope":7082,"src":"29168:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7058,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:15"},"returnParameters":{"id":7063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7062,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:15","nodeType":"VariableDeclaration","scope":7082,"src":"29205:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":7061,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:15","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:15"},"scope":7357,"src":"29151:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7107,"nodeType":"Block","src":"29761:148:15","statements":[{"expression":{"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7090,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"29771:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7093,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"29790:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":7091,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:15","typeDescriptions":{}}},"id":7094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":7096,"nodeType":"ExpressionStatement","src":"29771:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7097,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"29810:10:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7098,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"29824:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7106,"nodeType":"IfStatement","src":"29806:97:15","trueBody":{"id":7105,"nodeType":"Block","src":"29831:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:15","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7085,"src":"29886:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7100,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"29852:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7104,"nodeType":"RevertStatement","src":"29845:47:15"}]}}]},"documentation":{"id":7083,"nodeType":"StructuredDocumentation","src":"29377:307:15","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7108,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:15","nodeType":"FunctionDefinition","parameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"value","nameLocation":"29713:5:15","nodeType":"VariableDeclaration","scope":7108,"src":"29706:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7084,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:15"},"returnParameters":{"id":7089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7088,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:15","nodeType":"VariableDeclaration","scope":7108,"src":"29743:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":7087,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:15","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:15"},"scope":7357,"src":"29689:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7133,"nodeType":"Block","src":"30299:148:15","statements":[{"expression":{"id":7121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7116,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"30309:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"30328:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":7117,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:15","typeDescriptions":{}}},"id":7120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":7122,"nodeType":"ExpressionStatement","src":"30309:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7123,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"30348:10:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7124,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"30362:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7132,"nodeType":"IfStatement","src":"30344:97:15","trueBody":{"id":7131,"nodeType":"Block","src":"30369:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7111,"src":"30424:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7126,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"30390:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7130,"nodeType":"RevertStatement","src":"30383:47:15"}]}}]},"documentation":{"id":7109,"nodeType":"StructuredDocumentation","src":"29915:307:15","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7134,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:15","nodeType":"FunctionDefinition","parameters":{"id":7112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7111,"mutability":"mutable","name":"value","nameLocation":"30251:5:15","nodeType":"VariableDeclaration","scope":7134,"src":"30244:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7110,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:15"},"returnParameters":{"id":7115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7114,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:15","nodeType":"VariableDeclaration","scope":7134,"src":"30281:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":7113,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:15"},"scope":7357,"src":"30227:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7159,"nodeType":"Block","src":"30837:148:15","statements":[{"expression":{"id":7147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7142,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"30847:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"30866:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":7143,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:15","typeDescriptions":{}}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":7148,"nodeType":"ExpressionStatement","src":"30847:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7149,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7140,"src":"30886:10:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"30900:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7158,"nodeType":"IfStatement","src":"30882:97:15","trueBody":{"id":7157,"nodeType":"Block","src":"30907:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:15","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"30962:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7152,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"30928:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7156,"nodeType":"RevertStatement","src":"30921:47:15"}]}}]},"documentation":{"id":7135,"nodeType":"StructuredDocumentation","src":"30453:307:15","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7160,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:15","nodeType":"FunctionDefinition","parameters":{"id":7138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7137,"mutability":"mutable","name":"value","nameLocation":"30789:5:15","nodeType":"VariableDeclaration","scope":7160,"src":"30782:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7136,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:15"},"returnParameters":{"id":7141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7140,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:15","nodeType":"VariableDeclaration","scope":7160,"src":"30819:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":7139,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:15","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:15"},"scope":7357,"src":"30765:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7185,"nodeType":"Block","src":"31375:148:15","statements":[{"expression":{"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7168,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"31385:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"31404:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":7169,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:15","typeDescriptions":{}}},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":7174,"nodeType":"ExpressionStatement","src":"31385:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7175,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7166,"src":"31424:10:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7176,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"31438:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7184,"nodeType":"IfStatement","src":"31420:97:15","trueBody":{"id":7183,"nodeType":"Block","src":"31445:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:15","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"31500:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7178,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"31466:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7182,"nodeType":"RevertStatement","src":"31459:47:15"}]}}]},"documentation":{"id":7161,"nodeType":"StructuredDocumentation","src":"30991:307:15","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7186,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:15","nodeType":"FunctionDefinition","parameters":{"id":7164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7163,"mutability":"mutable","name":"value","nameLocation":"31327:5:15","nodeType":"VariableDeclaration","scope":7186,"src":"31320:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7162,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:15"},"returnParameters":{"id":7167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7166,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:15","nodeType":"VariableDeclaration","scope":7186,"src":"31357:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":7165,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:15","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:15"},"scope":7357,"src":"31303:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7211,"nodeType":"Block","src":"31913:148:15","statements":[{"expression":{"id":7199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7194,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"31923:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"31942:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":7195,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:15","typeDescriptions":{}}},"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":7200,"nodeType":"ExpressionStatement","src":"31923:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7201,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7192,"src":"31962:10:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7202,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"31976:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7210,"nodeType":"IfStatement","src":"31958:97:15","trueBody":{"id":7209,"nodeType":"Block","src":"31983:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:15","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7189,"src":"32038:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7204,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"32004:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7208,"nodeType":"RevertStatement","src":"31997:47:15"}]}}]},"documentation":{"id":7187,"nodeType":"StructuredDocumentation","src":"31529:307:15","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7212,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:15","nodeType":"FunctionDefinition","parameters":{"id":7190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7189,"mutability":"mutable","name":"value","nameLocation":"31865:5:15","nodeType":"VariableDeclaration","scope":7212,"src":"31858:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7188,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:15"},"returnParameters":{"id":7193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7192,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:15","nodeType":"VariableDeclaration","scope":7212,"src":"31895:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":7191,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:15","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:15"},"scope":7357,"src":"31841:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7237,"nodeType":"Block","src":"32451:148:15","statements":[{"expression":{"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7220,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"32461:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"32480:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":7221,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:15","typeDescriptions":{}}},"id":7224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":7226,"nodeType":"ExpressionStatement","src":"32461:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7227,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7218,"src":"32500:10:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"32514:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7236,"nodeType":"IfStatement","src":"32496:97:15","trueBody":{"id":7235,"nodeType":"Block","src":"32521:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7215,"src":"32576:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7230,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"32542:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7234,"nodeType":"RevertStatement","src":"32535:47:15"}]}}]},"documentation":{"id":7213,"nodeType":"StructuredDocumentation","src":"32067:307:15","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7238,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:15","nodeType":"FunctionDefinition","parameters":{"id":7216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7215,"mutability":"mutable","name":"value","nameLocation":"32403:5:15","nodeType":"VariableDeclaration","scope":7238,"src":"32396:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7214,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:15"},"returnParameters":{"id":7219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7218,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:15","nodeType":"VariableDeclaration","scope":7238,"src":"32433:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":7217,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:15"},"scope":7357,"src":"32379:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7263,"nodeType":"Block","src":"32989:148:15","statements":[{"expression":{"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7246,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"32999:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"33018:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":7247,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:15","typeDescriptions":{}}},"id":7250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":7252,"nodeType":"ExpressionStatement","src":"32999:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7253,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7244,"src":"33038:10:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"33052:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7262,"nodeType":"IfStatement","src":"33034:97:15","trueBody":{"id":7261,"nodeType":"Block","src":"33059:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:15","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"33114:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7256,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"33080:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7260,"nodeType":"RevertStatement","src":"33073:47:15"}]}}]},"documentation":{"id":7239,"nodeType":"StructuredDocumentation","src":"32605:307:15","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7264,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:15","nodeType":"FunctionDefinition","parameters":{"id":7242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"mutability":"mutable","name":"value","nameLocation":"32941:5:15","nodeType":"VariableDeclaration","scope":7264,"src":"32934:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7240,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:15"},"returnParameters":{"id":7245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7244,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:15","nodeType":"VariableDeclaration","scope":7264,"src":"32971:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":7243,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:15"},"scope":7357,"src":"32917:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7289,"nodeType":"Block","src":"33527:148:15","statements":[{"expression":{"id":7277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7272,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"33537:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7275,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"33556:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":7273,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:15","typeDescriptions":{}}},"id":7276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":7278,"nodeType":"ExpressionStatement","src":"33537:25:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7270,"src":"33576:10:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"33590:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7288,"nodeType":"IfStatement","src":"33572:97:15","trueBody":{"id":7287,"nodeType":"Block","src":"33597:72:15","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7267,"src":"33652:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7282,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"33618:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7286,"nodeType":"RevertStatement","src":"33611:47:15"}]}}]},"documentation":{"id":7265,"nodeType":"StructuredDocumentation","src":"33143:307:15","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7290,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:15","nodeType":"FunctionDefinition","parameters":{"id":7268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7267,"mutability":"mutable","name":"value","nameLocation":"33479:5:15","nodeType":"VariableDeclaration","scope":7290,"src":"33472:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7266,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:15"},"returnParameters":{"id":7271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7270,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:15","nodeType":"VariableDeclaration","scope":7290,"src":"33509:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":7269,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:15","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:15"},"scope":7357,"src":"33455:220:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7315,"nodeType":"Block","src":"34058:146:15","statements":[{"expression":{"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7298,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"34068:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7301,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"34086:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":7299,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:15","typeDescriptions":{}}},"id":7302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":7304,"nodeType":"ExpressionStatement","src":"34068:24:15"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7305,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7296,"src":"34106:10:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"34120:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7314,"nodeType":"IfStatement","src":"34102:96:15","trueBody":{"id":7313,"nodeType":"Block","src":"34127:71:15","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7309,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"34181:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7308,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5614,"src":"34148:29:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7312,"nodeType":"RevertStatement","src":"34141:46:15"}]}}]},"documentation":{"id":7291,"nodeType":"StructuredDocumentation","src":"33681:302:15","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7316,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:15","nodeType":"FunctionDefinition","parameters":{"id":7294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7293,"mutability":"mutable","name":"value","nameLocation":"34011:5:15","nodeType":"VariableDeclaration","scope":7316,"src":"34004:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7292,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:15"},"returnParameters":{"id":7297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7296,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:15","nodeType":"VariableDeclaration","scope":7316,"src":"34041:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":7295,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:15","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:15"},"scope":7357,"src":"33988:216:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7345,"nodeType":"Block","src":"34444:250:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"34557:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7328,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:15","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":7327,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:15","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":7331,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:15","memberName":"max","nodeType":"MemberAccess","src":"34573:16:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7325,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:15","typeDescriptions":{}}},"id":7332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7339,"nodeType":"IfStatement","src":"34553:105:15","trueBody":{"id":7338,"nodeType":"Block","src":"34592:66:15","statements":[{"errorCall":{"arguments":[{"id":7335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"34641:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7334,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5619,"src":"34613:27:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7337,"nodeType":"RevertStatement","src":"34606:41:15"}]}},{"expression":{"arguments":[{"id":7342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7319,"src":"34681:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7340,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:15","typeDescriptions":{}}},"id":7343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7323,"id":7344,"nodeType":"Return","src":"34667:20:15"}]},"documentation":{"id":7317,"nodeType":"StructuredDocumentation","src":"34210:165:15","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":7346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:15","nodeType":"FunctionDefinition","parameters":{"id":7320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7319,"mutability":"mutable","name":"value","nameLocation":"34406:5:15","nodeType":"VariableDeclaration","scope":7346,"src":"34398:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7318,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:15"},"returnParameters":{"id":7323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7322,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7346,"src":"34436:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7321,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:15"},"scope":7357,"src":"34380:314:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7355,"nodeType":"Block","src":"34853:87:15","statements":[{"AST":{"nativeSrc":"34888:46:15","nodeType":"YulBlock","src":"34888:46:15","statements":[{"nativeSrc":"34902:22:15","nodeType":"YulAssignment","src":"34902:22:15","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:15","nodeType":"YulIdentifier","src":"34921:1:15"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:15","nodeType":"YulIdentifier","src":"34914:6:15"},"nativeSrc":"34914:9:15","nodeType":"YulFunctionCall","src":"34914:9:15"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:15","nodeType":"YulIdentifier","src":"34907:6:15"},"nativeSrc":"34907:17:15","nodeType":"YulFunctionCall","src":"34907:17:15"},"variableNames":[{"name":"u","nativeSrc":"34902:1:15","nodeType":"YulIdentifier","src":"34902:1:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7349,"isOffset":false,"isSlot":false,"src":"34921:1:15","valueSize":1},{"declaration":7352,"isOffset":false,"isSlot":false,"src":"34902:1:15","valueSize":1}],"flags":["memory-safe"],"id":7354,"nodeType":"InlineAssembly","src":"34863:71:15"}]},"documentation":{"id":7347,"nodeType":"StructuredDocumentation","src":"34700:90:15","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":7356,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:15","nodeType":"FunctionDefinition","parameters":{"id":7350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7349,"mutability":"mutable","name":"b","nameLocation":"34816:1:15","nodeType":"VariableDeclaration","scope":7356,"src":"34811:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7348,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:15"},"returnParameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7352,"mutability":"mutable","name":"u","nameLocation":"34850:1:15","nodeType":"VariableDeclaration","scope":7356,"src":"34842:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7351,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:15"},"scope":7357,"src":"34795:145:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7358,"src":"769:34173:15","usedErrors":[5602,5607,5614,5619],"usedEvents":[]}],"src":"192:34751:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[7357],"SignedMath":[7501]},"id":7502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7359,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":7361,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7502,"sourceUnit":7358,"src":"135:40:16","symbolAliases":[{"foreign":{"id":7360,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"143:8:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":7362,"nodeType":"StructuredDocumentation","src":"177:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7501,"linearizedBaseContracts":[7501],"name":"SignedMath","nameLocation":"266:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":7391,"nodeType":"Block","src":"746:215:16","statements":[{"id":7390,"nodeType":"UncheckedBlock","src":"756:199:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"894:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7375,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7367,"src":"900:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7376,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7369,"src":"904:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7378,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":7383,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7365,"src":"932:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7381,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7357,"src":"916:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$7357_$","typeString":"type(library SafeCast)"}},"id":7382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:16","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":7356,"src":"916:15:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7379,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:16","typeDescriptions":{}}},"id":7385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7387,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7373,"id":7389,"nodeType":"Return","src":"887:57:16"}]}]},"documentation":{"id":7363,"nodeType":"StructuredDocumentation","src":"283:374:16","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":7392,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:16","nodeType":"FunctionDefinition","parameters":{"id":7370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7365,"mutability":"mutable","name":"condition","nameLocation":"684:9:16","nodeType":"VariableDeclaration","scope":7392,"src":"679:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7364,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7367,"mutability":"mutable","name":"a","nameLocation":"702:1:16","nodeType":"VariableDeclaration","scope":7392,"src":"695:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7366,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7369,"mutability":"mutable","name":"b","nameLocation":"712:1:16","nodeType":"VariableDeclaration","scope":7392,"src":"705:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7368,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:16"},"returnParameters":{"id":7373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7392,"src":"738:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7371,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:16"},"scope":7501,"src":"662:299:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7410,"nodeType":"Block","src":"1102:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7403,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"1127:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":7404,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"1131:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7406,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7395,"src":"1134:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7397,"src":"1137:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7402,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"1119:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7401,"id":7409,"nodeType":"Return","src":"1112:27:16"}]},"documentation":{"id":7393,"nodeType":"StructuredDocumentation","src":"967:66:16","text":" @dev Returns the largest of two signed numbers."},"id":7411,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:16","nodeType":"FunctionDefinition","parameters":{"id":7398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7395,"mutability":"mutable","name":"a","nameLocation":"1058:1:16","nodeType":"VariableDeclaration","scope":7411,"src":"1051:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7394,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7397,"mutability":"mutable","name":"b","nameLocation":"1068:1:16","nodeType":"VariableDeclaration","scope":7411,"src":"1061:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7396,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:16"},"returnParameters":{"id":7401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7411,"src":"1094:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7399,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:16"},"scope":7501,"src":"1038:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7429,"nodeType":"Block","src":"1288:44:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"1313:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"1317:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":7425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7414,"src":"1320:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7426,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"1323:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7421,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7392,"src":"1305:7:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":7427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7420,"id":7428,"nodeType":"Return","src":"1298:27:16"}]},"documentation":{"id":7412,"nodeType":"StructuredDocumentation","src":"1152:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":7430,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:16","nodeType":"FunctionDefinition","parameters":{"id":7417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7414,"mutability":"mutable","name":"a","nameLocation":"1244:1:16","nodeType":"VariableDeclaration","scope":7430,"src":"1237:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7413,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7416,"mutability":"mutable","name":"b","nameLocation":"1254:1:16","nodeType":"VariableDeclaration","scope":7430,"src":"1247:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7415,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:16"},"returnParameters":{"id":7420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7430,"src":"1280:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7418,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:16"},"scope":7501,"src":"1224:108:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7473,"nodeType":"Block","src":"1537:162:16","statements":[{"assignments":[7441],"declarations":[{"constant":false,"id":7441,"mutability":"mutable","name":"x","nameLocation":"1606:1:16","nodeType":"VariableDeclaration","scope":7473,"src":"1599:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7440,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7454,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"1611:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":7443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"1615:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7445,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7446,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"1622:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"1626:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7452,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7455,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"1651:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7460,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7441,"src":"1671:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7458,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:16","typeDescriptions":{}}},"id":7461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7456,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:16","typeDescriptions":{}}},"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7465,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"1685:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7466,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7435,"src":"1689:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":7439,"id":7472,"nodeType":"Return","src":"1644:48:16"}]},"documentation":{"id":7431,"nodeType":"StructuredDocumentation","src":"1338:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":7474,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:16","nodeType":"FunctionDefinition","parameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7433,"mutability":"mutable","name":"a","nameLocation":"1493:1:16","nodeType":"VariableDeclaration","scope":7474,"src":"1486:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7432,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":7435,"mutability":"mutable","name":"b","nameLocation":"1503:1:16","nodeType":"VariableDeclaration","scope":7474,"src":"1496:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7434,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:16"},"returnParameters":{"id":7439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7438,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7474,"src":"1529:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7437,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:16"},"scope":7501,"src":"1469:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7499,"nodeType":"Block","src":"1843:767:16","statements":[{"id":7498,"nodeType":"UncheckedBlock","src":"1853:751:16","statements":[{"assignments":[7483],"declarations":[{"constant":false,"id":7483,"mutability":"mutable","name":"mask","nameLocation":"2424:4:16","nodeType":"VariableDeclaration","scope":7498,"src":"2417:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7482,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7487,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7484,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"2431:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7490,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7477,"src":"2576:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7491,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"2580:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":7494,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7483,"src":"2588:4:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7488,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:16","typeDescriptions":{}}},"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7481,"id":7497,"nodeType":"Return","src":"2560:33:16"}]}]},"documentation":{"id":7475,"nodeType":"StructuredDocumentation","src":"1705:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":7500,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:16","nodeType":"FunctionDefinition","parameters":{"id":7478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7477,"mutability":"mutable","name":"n","nameLocation":"1808:1:16","nodeType":"VariableDeclaration","scope":7500,"src":"1801:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7476,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:16"},"returnParameters":{"id":7481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7480,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7500,"src":"1834:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7479,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:16"},"scope":7501,"src":"1788:822:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7502,"src":"258:2354:16","usedErrors":[],"usedEvents":[]}],"src":"109:2504:16"},"id":16},"contracts/AuthenticityNFT.sol":{"ast":{"absolutePath":"contracts/AuthenticityNFT.sol","exportedSymbols":{"AuthenticityNFT":[8237],"Base64":[2310],"Context":[2340],"ERC721A":[11205],"ERC721A__IERC721Receiver":[9123],"IERC721A":[11426],"Math":[5592],"Ownable":[2215],"ReentrancyGuard":[2569],"SafeCast":[7357],"SignedMath":[7501],"Strings":[3971]},"id":8238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7503,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"erc721a/contracts/ERC721A.sol","file":"erc721a/contracts/ERC721A.sol","id":7504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8238,"sourceUnit":11206,"src":"58:39:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":7505,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8238,"sourceUnit":2216,"src":"98:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":7506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8238,"sourceUnit":2570,"src":"151:59:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"@openzeppelin/contracts/utils/Strings.sol","id":7507,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8238,"sourceUnit":3972,"src":"211:51:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Base64.sol","file":"@openzeppelin/contracts/utils/Base64.sol","id":7508,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8238,"sourceUnit":2311,"src":"263:50:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7510,"name":"ERC721A","nameLocations":["517:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":11205,"src":"517:7:17"},"id":7511,"nodeType":"InheritanceSpecifier","src":"517:7:17"},{"baseName":{"id":7512,"name":"Ownable","nameLocations":["526:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":2215,"src":"526:7:17"},"id":7513,"nodeType":"InheritanceSpecifier","src":"526:7:17"},{"baseName":{"id":7514,"name":"ReentrancyGuard","nameLocations":["535:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":2569,"src":"535:15:17"},"id":7515,"nodeType":"InheritanceSpecifier","src":"535:15:17"}],"canonicalName":"AuthenticityNFT","contractDependencies":[],"contractKind":"contract","documentation":{"id":7509,"nodeType":"StructuredDocumentation","src":"315:173:17","text":" @title AuthenticityNFT\n @dev ERC721A NFT contract for authenticity certificates\n @notice This contract creates NFT certificates for verified authentic content"},"fullyImplemented":true,"id":8237,"linearizedBaseContracts":[8237,2569,2215,2340,11205,11426],"name":"AuthenticityNFT","nameLocation":"498:15:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":7518,"libraryName":{"id":7516,"name":"Strings","nameLocations":["563:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3971,"src":"563:7:17"},"nodeType":"UsingForDirective","src":"557:26:17","typeName":{"id":7517,"name":"uint256","nodeType":"ElementaryTypeName","src":"575:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"AuthenticityNFT.AuthenticityMetadata","id":7531,"members":[{"constant":false,"id":7520,"mutability":"mutable","name":"ipfsHash","nameLocation":"670:8:17","nodeType":"VariableDeclaration","scope":7531,"src":"663:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7519,"name":"string","nodeType":"ElementaryTypeName","src":"663:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7522,"mutability":"mutable","name":"confidenceScore","nameLocation":"696:15:17","nodeType":"VariableDeclaration","scope":7531,"src":"688:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7521,"name":"uint256","nodeType":"ElementaryTypeName","src":"688:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7524,"mutability":"mutable","name":"aiModel","nameLocation":"728:7:17","nodeType":"VariableDeclaration","scope":7531,"src":"721:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":7523,"name":"string","nodeType":"ElementaryTypeName","src":"721:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7526,"mutability":"mutable","name":"verificationTimestamp","nameLocation":"753:21:17","nodeType":"VariableDeclaration","scope":7531,"src":"745:29:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7525,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7528,"mutability":"mutable","name":"originalRequester","nameLocation":"792:17:17","nodeType":"VariableDeclaration","scope":7531,"src":"784:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7527,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7530,"mutability":"mutable","name":"isRevoked","nameLocation":"824:9:17","nodeType":"VariableDeclaration","scope":7531,"src":"819:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7529,"name":"bool","nodeType":"ElementaryTypeName","src":"819:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"AuthenticityMetadata","nameLocation":"632:20:17","nodeType":"StructDefinition","scope":8237,"src":"625:215:17","visibility":"public"},{"constant":false,"id":7533,"mutability":"mutable","name":"_baseTokenURI","nameLocation":"883:13:17","nodeType":"VariableDeclaration","scope":8237,"src":"868:28:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7532,"name":"string","nodeType":"ElementaryTypeName","src":"868:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"functionSelector":"6914db60","id":7538,"mutability":"mutable","name":"tokenMetadata","nameLocation":"950:13:17","nodeType":"VariableDeclaration","scope":8237,"src":"902:61:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata)"},"typeName":{"id":7537,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7534,"name":"uint256","nodeType":"ElementaryTypeName","src":"910:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"902:40:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7536,"nodeType":"UserDefinedTypeName","pathNode":{"id":7535,"name":"AuthenticityMetadata","nameLocations":["921:20:17"],"nodeType":"IdentifierPath","referencedDeclaration":7531,"src":"921:20:17"},"referencedDeclaration":7531,"src":"921:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata"}}},"visibility":"public"},{"constant":false,"functionSelector":"feb44988","id":7542,"mutability":"mutable","name":"ipfsToTokenId","nameLocation":"1003:13:17","nodeType":"VariableDeclaration","scope":8237,"src":"969:47:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"typeName":{"id":7541,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7539,"name":"string","nodeType":"ElementaryTypeName","src":"977:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"969:26:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7540,"name":"uint256","nodeType":"ElementaryTypeName","src":"987:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"aa2fe91b","id":7546,"mutability":"mutable","name":"authorizedMinters","nameLocation":"1077:17:17","nodeType":"VariableDeclaration","scope":8237,"src":"1045:49:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":7545,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7543,"name":"address","nodeType":"ElementaryTypeName","src":"1053:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1045:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7544,"name":"bool","nodeType":"ElementaryTypeName","src":"1064:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"a2309ff8","id":7548,"mutability":"mutable","name":"totalMinted","nameLocation":"1138:11:17","nodeType":"VariableDeclaration","scope":8237,"src":"1123:26:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7547,"name":"uint256","nodeType":"ElementaryTypeName","src":"1123:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"e62ce7ac","id":7550,"mutability":"mutable","name":"totalRevoked","nameLocation":"1170:12:17","nodeType":"VariableDeclaration","scope":8237,"src":"1155:27:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"anonymous":false,"eventSelector":"635ec4f27e96d361299e978a3dc7b7a7fd0b1293b1787b48d0b2b52c72b8b8d5","id":7564,"name":"AuthenticityNFTMinted","nameLocation":"1213:21:17","nodeType":"EventDefinition","parameters":{"id":7563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7552,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"1260:2:17","nodeType":"VariableDeclaration","scope":7564,"src":"1244:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7551,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7554,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1288:7:17","nodeType":"VariableDeclaration","scope":7564,"src":"1272:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7553,"name":"uint256","nodeType":"ElementaryTypeName","src":"1272:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7556,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"1312:8:17","nodeType":"VariableDeclaration","scope":7564,"src":"1305:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7555,"name":"string","nodeType":"ElementaryTypeName","src":"1305:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7558,"indexed":false,"mutability":"mutable","name":"confidenceScore","nameLocation":"1338:15:17","nodeType":"VariableDeclaration","scope":7564,"src":"1330:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1330:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7560,"indexed":false,"mutability":"mutable","name":"aiModel","nameLocation":"1370:7:17","nodeType":"VariableDeclaration","scope":7564,"src":"1363:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7559,"name":"string","nodeType":"ElementaryTypeName","src":"1363:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7562,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1395:9:17","nodeType":"VariableDeclaration","scope":7564,"src":"1387:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7561,"name":"uint256","nodeType":"ElementaryTypeName","src":"1387:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1234:176:17"},"src":"1207:204:17"},{"anonymous":false,"eventSelector":"d0571d484577e1a5e8a246e15dccfc8d2acb13e80e0320b06dae36de6d79ed71","id":7572,"name":"NFTRevoked","nameLocation":"1427:10:17","nodeType":"EventDefinition","parameters":{"id":7571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7566,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"1463:7:17","nodeType":"VariableDeclaration","scope":7572,"src":"1447:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7565,"name":"uint256","nodeType":"ElementaryTypeName","src":"1447:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7568,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1487:6:17","nodeType":"VariableDeclaration","scope":7572,"src":"1480:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7567,"name":"string","nodeType":"ElementaryTypeName","src":"1480:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7570,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1511:9:17","nodeType":"VariableDeclaration","scope":7572,"src":"1503:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7569,"name":"uint256","nodeType":"ElementaryTypeName","src":"1503:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1437:89:17"},"src":"1421:106:17"},{"anonymous":false,"eventSelector":"bf854ac1b3492efdc6a78402a969f9b4aa9315253853a9fe2ab02ff8f2d55639","id":7580,"name":"BaseURIUpdated","nameLocation":"1543:14:17","nodeType":"EventDefinition","parameters":{"id":7579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7574,"indexed":false,"mutability":"mutable","name":"oldBaseURI","nameLocation":"1574:10:17","nodeType":"VariableDeclaration","scope":7580,"src":"1567:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7573,"name":"string","nodeType":"ElementaryTypeName","src":"1567:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7576,"indexed":false,"mutability":"mutable","name":"newBaseURI","nameLocation":"1601:10:17","nodeType":"VariableDeclaration","scope":7580,"src":"1594:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7575,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7578,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1629:9:17","nodeType":"VariableDeclaration","scope":7580,"src":"1621:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1557:87:17"},"src":"1537:108:17"},{"anonymous":false,"eventSelector":"0aa0c2b5ea5c9f3fcc4c06f9e39f6afdbadc432e7617f393e5f17f31412d3ca5","id":7588,"name":"MinterAuthorized","nameLocation":"1661:16:17","nodeType":"EventDefinition","parameters":{"id":7587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7582,"indexed":true,"mutability":"mutable","name":"minter","nameLocation":"1703:6:17","nodeType":"VariableDeclaration","scope":7588,"src":"1687:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7581,"name":"address","nodeType":"ElementaryTypeName","src":"1687:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7584,"indexed":false,"mutability":"mutable","name":"authorized","nameLocation":"1724:10:17","nodeType":"VariableDeclaration","scope":7588,"src":"1719:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7583,"name":"bool","nodeType":"ElementaryTypeName","src":"1719:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7586,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1752:9:17","nodeType":"VariableDeclaration","scope":7588,"src":"1744:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7585,"name":"uint256","nodeType":"ElementaryTypeName","src":"1744:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1677:90:17"},"src":"1655:113:17"},{"body":{"id":7611,"nodeType":"Block","src":"2177:41:17","statements":[{"expression":{"id":7609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7607,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"2187:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7608,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7595,"src":"2203:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2187:24:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":7610,"nodeType":"ExpressionStatement","src":"2187:24:17"}]},"documentation":{"id":7589,"nodeType":"StructuredDocumentation","src":"1774:210:17","text":" @dev Constructor\n @param _name Token name\n @param _symbol Token symbol\n @param _baseURI Base URI for token metadata\n @param _initialOwner Initial owner of the contract"},"id":7612,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":7600,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7591,"src":"2138:5:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7601,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7593,"src":"2145:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":7602,"kind":"baseConstructorSpecifier","modifierName":{"id":7599,"name":"ERC721A","nameLocations":["2130:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":11205,"src":"2130:7:17"},"nodeType":"ModifierInvocation","src":"2130:23:17"},{"arguments":[{"id":7604,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7597,"src":"2162:13:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":7605,"kind":"baseConstructorSpecifier","modifierName":{"id":7603,"name":"Ownable","nameLocations":["2154:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":2215,"src":"2154:7:17"},"nodeType":"ModifierInvocation","src":"2154:22:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7591,"mutability":"mutable","name":"_name","nameLocation":"2024:5:17","nodeType":"VariableDeclaration","scope":7612,"src":"2010:19:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7590,"name":"string","nodeType":"ElementaryTypeName","src":"2010:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7593,"mutability":"mutable","name":"_symbol","nameLocation":"2053:7:17","nodeType":"VariableDeclaration","scope":7612,"src":"2039:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7592,"name":"string","nodeType":"ElementaryTypeName","src":"2039:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7595,"mutability":"mutable","name":"_baseURI","nameLocation":"2084:8:17","nodeType":"VariableDeclaration","scope":7612,"src":"2070:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7594,"name":"string","nodeType":"ElementaryTypeName","src":"2070:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7597,"mutability":"mutable","name":"_initialOwner","nameLocation":"2110:13:17","nodeType":"VariableDeclaration","scope":7612,"src":"2102:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7596,"name":"address","nodeType":"ElementaryTypeName","src":"2102:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2000:129:17"},"returnParameters":{"id":7606,"nodeType":"ParameterList","parameters":[],"src":"2177:0:17"},"scope":8237,"src":"1989:229:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7722,"nodeType":"Block","src":"2756:1127:17","statements":[{"expression":{"arguments":[{"baseExpression":{"id":7629,"name":"authorizedMinters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"2774:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":7632,"indexExpression":{"expression":{"id":7630,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2792:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2796:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2792:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2774:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206d696e74","id":7633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2805:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""},"value":"Not authorized to mint"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5eb0167452078d1a3c1eba1ba15b7c06d73425c22adab1bacd92c0b9e7dd325b","typeString":"literal_string \"Not authorized to mint\""}],"id":7628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2766:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2766:64:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7635,"nodeType":"ExpressionStatement","src":"2766:64:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7637,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"2848:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2863:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7639,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2855:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7638,"name":"address","nodeType":"ElementaryTypeName","src":"2855:7:17","typeDescriptions":{}}},"id":7641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2848:17:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74206d696e7420746f207a65726f2061646472657373","id":7643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2867:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""},"value":"Cannot mint to zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2ee0416c341986fdecc3cbd81cd5d77b44e6537a4f9aa8afff73aa35a7384cb9","typeString":"literal_string \"Cannot mint to zero address\""}],"id":7636,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2840:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2840:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7645,"nodeType":"ExpressionStatement","src":"2840:57:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":7649,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"2921:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2915:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7647,"name":"bytes","nodeType":"ElementaryTypeName","src":"2915:5:17","typeDescriptions":{}}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2915:16:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2932:6:17","memberName":"length","nodeType":"MemberAccess","src":"2915:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2941:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2915:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420495046532068617368","id":7654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2944:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_16b93e183216172d11ba47c5b359ff9d73286134337457ca2c0ddf4139e5ce8d","typeString":"literal_string \"Invalid IPFS hash\""},"value":"Invalid IPFS hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16b93e183216172d11ba47c5b359ff9d73286134337457ca2c0ddf4139e5ce8d","typeString":"literal_string \"Invalid IPFS hash\""}],"id":7646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2907:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2907:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7656,"nodeType":"ExpressionStatement","src":"2907:57:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7658,"name":"_confidenceScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"2982:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3530","id":7659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3002:2:17","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"src":"2982:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7661,"name":"_confidenceScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"3008:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":7662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3028:3:17","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"3008:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2982:49:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e666964656e63652073636f7265","id":7665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3033:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c03e174352bce7063a0d92c55e49902758c14d90f5ce6fc8ab9568c54031aea0","typeString":"literal_string \"Invalid confidence score\""},"value":"Invalid confidence score"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c03e174352bce7063a0d92c55e49902758c14d90f5ce6fc8ab9568c54031aea0","typeString":"literal_string \"Invalid confidence score\""}],"id":7657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2974:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2974:86:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7667,"nodeType":"ExpressionStatement","src":"2974:86:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7669,"name":"ipfsToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"3078:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7671,"indexExpression":{"id":7670,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"3092:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3078:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3106:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3078:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e465420616c72656164792065786973747320666f72207468697320636f6e74656e74","id":7674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:37:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_842090a30649a72bb19f6930849e69e3aed8f79863a6391da834ceb10e81692f","typeString":"literal_string \"NFT already exists for this content\""},"value":"NFT already exists for this content"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_842090a30649a72bb19f6930849e69e3aed8f79863a6391da834ceb10e81692f","typeString":"literal_string \"NFT already exists for this content\""}],"id":7668,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3070:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7676,"nodeType":"ExpressionStatement","src":"3070:77:17"},{"assignments":[7678],"declarations":[{"constant":false,"id":7678,"mutability":"mutable","name":"tokenId","nameLocation":"3166:7:17","nodeType":"VariableDeclaration","scope":7722,"src":"3158:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3158:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7681,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7679,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9287,"src":"3176:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3176:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3158:32:17"},{"expression":{"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7682,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"3235:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata storage ref)"}},"id":7684,"indexExpression":{"id":7683,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"3249:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3235:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage","typeString":"struct AuthenticityNFT.AuthenticityMetadata storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7686,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"3305:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7687,"name":"_confidenceScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"3345:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7688,"name":"_aiModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"3384:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7689,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3429:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3435:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"3429:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7691,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"3477:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":7692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3505:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":7685,"name":"AuthenticityMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7531,"src":"3260:20:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_AuthenticityMetadata_$7531_storage_ptr_$","typeString":"type(struct AuthenticityNFT.AuthenticityMetadata storage pointer)"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3295:8:17","3328:15:17","3375:7:17","3406:21:17","3458:17:17","3494:9:17"],"names":["ipfsHash","confidenceScore","aiModel","verificationTimestamp","originalRequester","isRevoked"],"nodeType":"FunctionCall","src":"3260:261:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}},"src":"3235:286:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage","typeString":"struct AuthenticityNFT.AuthenticityMetadata storage ref"}},"id":7695,"nodeType":"ExpressionStatement","src":"3235:286:17"},{"expression":{"id":7700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7696,"name":"ipfsToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"3559:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7698,"indexExpression":{"id":7697,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"3573:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3559:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"3586:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3559:34:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7701,"nodeType":"ExpressionStatement","src":"3559:34:17"},{"expression":{"id":7703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3603:13:17","subExpression":{"id":7702,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"3603:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7704,"nodeType":"ExpressionStatement","src":"3603:13:17"},{"expression":{"arguments":[{"id":7706,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"3655:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":7707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3660:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":7705,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10464,"src":"3649:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7709,"nodeType":"ExpressionStatement","src":"3649:13:17"},{"eventCall":{"arguments":[{"id":7711,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7615,"src":"3713:3:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7712,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"3730:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7713,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7617,"src":"3751:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":7714,"name":"_confidenceScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7619,"src":"3774:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7715,"name":"_aiModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7621,"src":"3804:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7716,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3826:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3832:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"3826:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7710,"name":"AuthenticityNFTMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7564,"src":"3678:21:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256,string memory,uint256)"}},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3678:173:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7719,"nodeType":"EmitStatement","src":"3673:178:17"},{"expression":{"id":7720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7678,"src":"3869:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7627,"id":7721,"nodeType":"Return","src":"3862:14:17"}]},"documentation":{"id":7613,"nodeType":"StructuredDocumentation","src":"2224:332:17","text":" @notice Mint authenticity NFT (only authorized minters)\n @param _to Address to mint NFT to\n @param _ipfsHash IPFS hash of verified content\n @param _confidenceScore AI confidence score (0-100)\n @param _aiModel AI model used for verification\n @return tokenId The ID of the minted token"},"functionSelector":"9450b3d6","id":7723,"implemented":true,"kind":"function","modifiers":[{"id":7624,"kind":"modifierInvocation","modifierName":{"id":7623,"name":"nonReentrant","nameLocations":["2725:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"2725:12:17"},"nodeType":"ModifierInvocation","src":"2725:12:17"}],"name":"mintAuthenticityNFT","nameLocation":"2570:19:17","nodeType":"FunctionDefinition","parameters":{"id":7622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7615,"mutability":"mutable","name":"_to","nameLocation":"2607:3:17","nodeType":"VariableDeclaration","scope":7723,"src":"2599:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7614,"name":"address","nodeType":"ElementaryTypeName","src":"2599:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7617,"mutability":"mutable","name":"_ipfsHash","nameLocation":"2634:9:17","nodeType":"VariableDeclaration","scope":7723,"src":"2620:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7616,"name":"string","nodeType":"ElementaryTypeName","src":"2620:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":7619,"mutability":"mutable","name":"_confidenceScore","nameLocation":"2661:16:17","nodeType":"VariableDeclaration","scope":7723,"src":"2653:24:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7618,"name":"uint256","nodeType":"ElementaryTypeName","src":"2653:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7621,"mutability":"mutable","name":"_aiModel","nameLocation":"2701:8:17","nodeType":"VariableDeclaration","scope":7723,"src":"2687:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7620,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2589:126:17"},"returnParameters":{"id":7627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7723,"src":"2747:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7625,"name":"uint256","nodeType":"ElementaryTypeName","src":"2747:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2746:9:17"},"scope":8237,"src":"2561:1322:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7766,"nodeType":"Block","src":"4153:282:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":7735,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"4179:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7734,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"4171:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4171:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4190:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7733,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4163:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4163:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7739,"nodeType":"ExpressionStatement","src":"4163:50:17"},{"expression":{"arguments":[{"id":7745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4231:34:17","subExpression":{"expression":{"baseExpression":{"id":7741,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"4232:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata storage ref)"}},"id":7743,"indexExpression":{"id":7742,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"4246:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4232:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage","typeString":"struct AuthenticityNFT.AuthenticityMetadata storage ref"}},"id":7744,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4256:9:17","memberName":"isRevoked","nodeType":"MemberAccess","referencedDeclaration":7530,"src":"4232:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20616c7265616479207265766f6b6564","id":7746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4267:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_eccde442a41d1699f50da1a8df105faa9e7fcb97d95c436ea5c7ea50dac811ff","typeString":"literal_string \"Token already revoked\""},"value":"Token already revoked"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eccde442a41d1699f50da1a8df105faa9e7fcb97d95c436ea5c7ea50dac811ff","typeString":"literal_string \"Token already revoked\""}],"id":7740,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4223:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:68:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7748,"nodeType":"ExpressionStatement","src":"4223:68:17"},{"expression":{"id":7754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7749,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"4302:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata storage ref)"}},"id":7751,"indexExpression":{"id":7750,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"4316:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4302:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage","typeString":"struct AuthenticityNFT.AuthenticityMetadata storage ref"}},"id":7752,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4326:9:17","memberName":"isRevoked","nodeType":"MemberAccess","referencedDeclaration":7530,"src":"4302:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4338:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4302:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7755,"nodeType":"ExpressionStatement","src":"4302:40:17"},{"expression":{"id":7757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4352:14:17","subExpression":{"id":7756,"name":"totalRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"4352:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7758,"nodeType":"ExpressionStatement","src":"4352:14:17"},{"eventCall":{"arguments":[{"id":7760,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7726,"src":"4393:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7761,"name":"_reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7728,"src":"4403:7:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":7762,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4412:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":7763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4418:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"4412:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7759,"name":"NFTRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"4382:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,uint256)"}},"id":7764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4382:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7765,"nodeType":"EmitStatement","src":"4377:51:17"}]},"documentation":{"id":7724,"nodeType":"StructuredDocumentation","src":"3889:158:17","text":" @notice Revoke NFT (owner only - for emergency cases)\n @param _tokenId Token ID to revoke\n @param _reason Reason for revocation"},"functionSelector":"558381e7","id":7767,"implemented":true,"kind":"function","modifiers":[{"id":7731,"kind":"modifierInvocation","modifierName":{"id":7730,"name":"onlyOwner","nameLocations":["4143:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"4143:9:17"},"nodeType":"ModifierInvocation","src":"4143:9:17"}],"name":"revokeNFT","nameLocation":"4061:9:17","nodeType":"FunctionDefinition","parameters":{"id":7729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7726,"mutability":"mutable","name":"_tokenId","nameLocation":"4088:8:17","nodeType":"VariableDeclaration","scope":7767,"src":"4080:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7725,"name":"uint256","nodeType":"ElementaryTypeName","src":"4080:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7728,"mutability":"mutable","name":"_reason","nameLocation":"4120:7:17","nodeType":"VariableDeclaration","scope":7767,"src":"4106:21:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7727,"name":"string","nodeType":"ElementaryTypeName","src":"4106:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4070:63:17"},"returnParameters":{"id":7732,"nodeType":"ParameterList","parameters":[],"src":"4153:0:17"},"scope":8237,"src":"4052:383:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7787,"nodeType":"Block","src":"4686:107:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":7778,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"4712:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7777,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"4704:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4704:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4723:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7776,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4696:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4696:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7782,"nodeType":"ExpressionStatement","src":"4696:50:17"},{"expression":{"baseExpression":{"id":7783,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"4763:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata storage ref)"}},"id":7785,"indexExpression":{"id":7784,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7770,"src":"4777:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4763:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage","typeString":"struct AuthenticityNFT.AuthenticityMetadata storage ref"}},"functionReturnParameters":7775,"id":7786,"nodeType":"Return","src":"4756:30:17"}]},"documentation":{"id":7768,"nodeType":"StructuredDocumentation","src":"4441:130:17","text":" @notice Get NFT metadata for a token\n @param _tokenId Token ID\n @return metadata The token metadata"},"functionSelector":"60316801","id":7788,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenMetadata","nameLocation":"4585:16:17","nodeType":"FunctionDefinition","parameters":{"id":7771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7770,"mutability":"mutable","name":"_tokenId","nameLocation":"4619:8:17","nodeType":"VariableDeclaration","scope":7788,"src":"4611:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7769,"name":"uint256","nodeType":"ElementaryTypeName","src":"4611:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4601:32:17"},"returnParameters":{"id":7775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7788,"src":"4657:27:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata"},"typeName":{"id":7773,"nodeType":"UserDefinedTypeName","pathNode":{"id":7772,"name":"AuthenticityMetadata","nameLocations":["4657:20:17"],"nodeType":"IdentifierPath","referencedDeclaration":7531,"src":"4657:20:17"},"referencedDeclaration":7531,"src":"4657:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata"}},"visibility":"internal"}],"src":"4656:29:17"},"scope":8237,"src":"4576:217:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7800,"nodeType":"Block","src":"5053:48:17","statements":[{"expression":{"baseExpression":{"id":7796,"name":"ipfsToTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7542,"src":"5070:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_uint256_$","typeString":"mapping(string memory => uint256)"}},"id":7798,"indexExpression":{"id":7797,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7791,"src":"5084:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5070:24:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7795,"id":7799,"nodeType":"Return","src":"5063:31:17"}]},"documentation":{"id":7789,"nodeType":"StructuredDocumentation","src":"4799:152:17","text":" @notice Check if content has an NFT\n @param _ipfsHash IPFS hash of content\n @return tokenId Token ID (0 if no NFT exists)"},"functionSelector":"b04458ca","id":7801,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenIdByIPFS","nameLocation":"4965:16:17","nodeType":"FunctionDefinition","parameters":{"id":7792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7791,"mutability":"mutable","name":"_ipfsHash","nameLocation":"5005:9:17","nodeType":"VariableDeclaration","scope":7801,"src":"4991:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7790,"name":"string","nodeType":"ElementaryTypeName","src":"4991:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4981:39:17"},"returnParameters":{"id":7795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7794,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7801,"src":"5044:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5044:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5043:9:17"},"scope":8237,"src":"4956:145:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":7891,"nodeType":"Block","src":"5344:599:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7811,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"5362:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":7814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5380:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5372:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":7812,"name":"address","nodeType":"ElementaryTypeName","src":"5372:7:17","typeDescriptions":{}}},"id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5372:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5362:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206f776e65722061646472657373","id":7817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5384:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""},"value":"Invalid owner address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_854cf043fa623ebed8453fda259d33de3f6e7493e6b8ff90fcfdd906ab498ce3","typeString":"literal_string \"Invalid owner address\""}],"id":7810,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7819,"nodeType":"ExpressionStatement","src":"5354:54:17"},{"assignments":[7821],"declarations":[{"constant":false,"id":7821,"mutability":"mutable","name":"balance","nameLocation":"5435:7:17","nodeType":"VariableDeclaration","scope":7891,"src":"5427:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5427:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7825,"initialValue":{"arguments":[{"id":7823,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"5455:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7822,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9392,"src":"5445:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5445:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5427:35:17"},{"assignments":[7830],"declarations":[{"constant":false,"id":7830,"mutability":"mutable","name":"tokenIds","nameLocation":"5489:8:17","nodeType":"VariableDeclaration","scope":7891,"src":"5472:25:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5472:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7829,"nodeType":"ArrayTypeName","src":"5472:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":7836,"initialValue":{"arguments":[{"id":7834,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"5514:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5500:13:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":7831,"name":"uint256","nodeType":"ElementaryTypeName","src":"5504:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7832,"nodeType":"ArrayTypeName","src":"5504:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5500:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5472:50:17"},{"assignments":[7838],"declarations":[{"constant":false,"id":7838,"mutability":"mutable","name":"currentIndex","nameLocation":"5540:12:17","nodeType":"VariableDeclaration","scope":7891,"src":"5532:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7837,"name":"uint256","nodeType":"ElementaryTypeName","src":"5532:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7840,"initialValue":{"hexValue":"30","id":7839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5555:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5532:24:17"},{"assignments":[7842],"declarations":[{"constant":false,"id":7842,"mutability":"mutable","name":"totalSupply","nameLocation":"5583:11:17","nodeType":"VariableDeclaration","scope":7891,"src":"5575:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7841,"name":"uint256","nodeType":"ElementaryTypeName","src":"5575:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7848,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7843,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9287,"src":"5597:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":7844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5597:14:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7845,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[8153],"referencedDeclaration":8153,"src":"5614:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5614:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5597:32:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5575:54:17"},{"body":{"id":7887,"nodeType":"Block","src":"5748:155:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7868,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"5774:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7867,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"5766:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5766:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7871,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"5788:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7870,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9599,"src":"5780:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":7872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5780:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7873,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7804,"src":"5794:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5780:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5766:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7886,"nodeType":"IfStatement","src":"5762:131:17","trueBody":{"id":7885,"nodeType":"Block","src":"5802:91:17","statements":[{"expression":{"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7876,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"5820:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":7878,"indexExpression":{"id":7877,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"5829:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5820:22:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7879,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"5845:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5820:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7881,"nodeType":"ExpressionStatement","src":"5820:26:17"},{"expression":{"id":7883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5864:14:17","subExpression":{"id":7882,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"5864:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7884,"nodeType":"ExpressionStatement","src":"5864:14:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7854,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"5682:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":7855,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[8153],"referencedDeclaration":8153,"src":"5686:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":7856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5686:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7857,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7842,"src":"5704:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5686:29:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5682:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7860,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7838,"src":"5719:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7861,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7821,"src":"5734:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5719:22:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5682:59:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7888,"initializationExpression":{"assignments":[7850],"declarations":[{"constant":false,"id":7850,"mutability":"mutable","name":"i","nameLocation":"5661:1:17","nodeType":"VariableDeclaration","scope":7888,"src":"5653:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7849,"name":"uint256","nodeType":"ElementaryTypeName","src":"5653:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7853,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":7851,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[8153],"referencedDeclaration":8153,"src":"5665:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_uint256_$","typeString":"function () pure returns (uint256)"}},"id":7852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5665:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5653:27:17"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":7865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5743:3:17","subExpression":{"id":7864,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7850,"src":"5743:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7866,"nodeType":"ExpressionStatement","src":"5743:3:17"},"nodeType":"ForStatement","src":"5648:255:17"},{"expression":{"id":7889,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7830,"src":"5928:8:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":7809,"id":7890,"nodeType":"Return","src":"5921:15:17"}]},"documentation":{"id":7802,"nodeType":"StructuredDocumentation","src":"5107:135:17","text":" @notice Get tokens owned by an address\n @param _owner Owner address\n @return tokenIds Array of token IDs"},"functionSelector":"40398d67","id":7892,"implemented":true,"kind":"function","modifiers":[],"name":"getTokensByOwner","nameLocation":"5256:16:17","nodeType":"FunctionDefinition","parameters":{"id":7805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7804,"mutability":"mutable","name":"_owner","nameLocation":"5290:6:17","nodeType":"VariableDeclaration","scope":7892,"src":"5282:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7803,"name":"address","nodeType":"ElementaryTypeName","src":"5282:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5272:30:17"},"returnParameters":{"id":7809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7892,"src":"5326:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":7806,"name":"uint256","nodeType":"ElementaryTypeName","src":"5326:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7807,"nodeType":"ArrayTypeName","src":"5326:9:17","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5325:18:17"},"scope":8237,"src":"5247:696:17","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9570],"body":{"id":7928,"nodeType":"Block","src":"6174:297:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":7903,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"6200:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7902,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"6192:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":7904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6192:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e20646f6573206e6f74206578697374","id":7905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6211:22:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""},"value":"Token does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_547be7f5ed2d17cca91d35e8212265e350385ed13daeee07722cf3e686dd6726","typeString":"literal_string \"Token does not exist\""}],"id":7901,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6184:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6184:50:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7907,"nodeType":"ExpressionStatement","src":"6184:50:17"},{"assignments":[7910],"declarations":[{"constant":false,"id":7910,"mutability":"mutable","name":"metadata","nameLocation":"6273:8:17","nodeType":"VariableDeclaration","scope":7928,"src":"6245:36:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata"},"typeName":{"id":7909,"nodeType":"UserDefinedTypeName","pathNode":{"id":7908,"name":"AuthenticityMetadata","nameLocations":["6245:20:17"],"nodeType":"IdentifierPath","referencedDeclaration":7531,"src":"6245:20:17"},"referencedDeclaration":7531,"src":"6245:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata"}},"visibility":"internal"}],"id":7914,"initialValue":{"baseExpression":{"id":7911,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"6284:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata storage ref)"}},"id":7913,"indexExpression":{"id":7912,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"6298:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6284:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage","typeString":"struct AuthenticityNFT.AuthenticityMetadata storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6245:62:17"},{"condition":{"expression":{"id":7915,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"6330:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}},"id":7916,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6339:9:17","memberName":"isRevoked","nodeType":"MemberAccess","referencedDeclaration":7530,"src":"6330:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7922,"nodeType":"IfStatement","src":"6326:87:17","trueBody":{"id":7921,"nodeType":"Block","src":"6350:63:17","statements":[{"expression":{"arguments":[{"id":7918,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"6393:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7917,"name":"_buildRevokedTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8044,"src":"6371:21:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6371:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7900,"id":7920,"nodeType":"Return","src":"6364:38:17"}]}},{"expression":{"arguments":[{"id":7924,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7895,"src":"6445:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7925,"name":"metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7910,"src":"6455:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}],"id":7923,"name":"_buildTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8000,"src":"6430:14:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,struct AuthenticityNFT.AuthenticityMetadata memory) view returns (string memory)"}},"id":7926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6430:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7900,"id":7927,"nodeType":"Return","src":"6423:41:17"}]},"documentation":{"id":7893,"nodeType":"StructuredDocumentation","src":"5949:131:17","text":" @notice Generate token URI with dynamic metadata\n @param _tokenId Token ID\n @return Token URI string"},"functionSelector":"c87b56dd","id":7929,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"6094:8:17","nodeType":"FunctionDefinition","overrides":{"id":7897,"nodeType":"OverrideSpecifier","overrides":[],"src":"6141:8:17"},"parameters":{"id":7896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7895,"mutability":"mutable","name":"_tokenId","nameLocation":"6111:8:17","nodeType":"VariableDeclaration","scope":7929,"src":"6103:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7894,"name":"uint256","nodeType":"ElementaryTypeName","src":"6103:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6102:18:17"},"returnParameters":{"id":7900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7929,"src":"6159:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7898,"name":"string","nodeType":"ElementaryTypeName","src":"6159:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6158:15:17"},"scope":8237,"src":"6085:386:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":7999,"nodeType":"Block","src":"6780:1567:17","statements":[{"assignments":[7941],"declarations":[{"constant":false,"id":7941,"mutability":"mutable","name":"json","nameLocation":"6804:4:17","nodeType":"VariableDeclaration","scope":7999,"src":"6790:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7940,"name":"string","nodeType":"ElementaryTypeName","src":"6790:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":7989,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7b226e616d65223a202241757468656e7469636974792043657274696669636174652023","id":7950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6931:38:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6bc4cffcbf1ed134757353a01ff081ab83b0385e9a3c59780e279712ec368978","typeString":"literal_string \"{\"name\": \"Authenticity Certificate #\""},"value":"{\"name\": \"Authenticity Certificate #"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":7951,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"6995:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7004:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2683,"src":"6995:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6995:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c20226465736372697074696f6e223a202254686973204e465420636572746966696573207468652061757468656e746963697479206f66206469676974616c20636f6e74656e7420766572696669656420627920414920616e616c797369732e222c20","id":7954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7040:103:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6a790b173344f29f187030c910dc3b4ca23acd97e970f5c47ec12e4719fb1275","typeString":"literal_string \"\", \"description\": \"This NFT certifies the authenticity of digital content verified by AI analysis.\", \""},"value":"\", \"description\": \"This NFT certifies the authenticity of digital content verified by AI analysis.\", "},{"hexValue":"22696d616765223a2022","id":7955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7169:12:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","typeString":"literal_string \"\"image\": \"\""},"value":"\"image\": \""},{"id":7956,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"7207:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"63657274696669636174652e706e67222c20","id":7957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7246:20:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0d5397c5ec7080963de117e5fae379b88d736e77510a952df455473a7176a353","typeString":"literal_string \"certificate.png\", \""},"value":"certificate.png\", "},{"hexValue":"2265787465726e616c5f75726c223a202268747470733a2f2f676174657761792e70696e6174612e636c6f75642f697066732f","id":7958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7292:53:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f33ab9e283e7f83bb8b4c3067f11afb394e210fe95accb80b72b00495e7b8d6","typeString":"literal_string \"\"external_url\": \"https://gateway.pinata.cloud/ipfs/\""},"value":"\"external_url\": \"https://gateway.pinata.cloud/ipfs/"},{"expression":{"id":7959,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"7371:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}},"id":7960,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7381:8:17","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":7520,"src":"7371:18:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c20","id":7961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7415:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_d31db5fa4cccdf0b2a7c8fa1b54fac1497461aa344c190614087e30f1494e3a3","typeString":"literal_string \"\", \""},"value":"\", "},{"hexValue":"2261747472696275746573223a205b","id":7962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7446:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","typeString":"literal_string \"\"attributes\": [\""},"value":"\"attributes\": ["},{"hexValue":"7b2274726169745f74797065223a2022436f6e666964656e63652053636f7265222c202276616c7565223a20","id":7963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7489:46:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_2488cc568cfd23287e53f9f0d9643f6160431cb7ab8b11a1ba027d3713c68694","typeString":"literal_string \"{\"trait_type\": \"Confidence Score\", \"value\": \""},"value":"{\"trait_type\": \"Confidence Score\", \"value\": "},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":7964,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"7561:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}},"id":7965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7571:15:17","memberName":"confidenceScore","nodeType":"MemberAccess","referencedDeclaration":7522,"src":"7561:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7587:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2683,"src":"7561:34:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7561:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7d2c20","id":7968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7623:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_de5a1a300b611f3d74480fad90017eb2a7f306fb178a1fa39f606046fc9304cd","typeString":"literal_string \"}, \""},"value":"}, "},{"hexValue":"7b2274726169745f74797065223a20224149204d6f64656c222c202276616c7565223a2022","id":7969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7654:39:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_fadf41c5d3ed889a8ea7dee301afb8e73c7a781473278cd7242f517a51cb1678","typeString":"literal_string \"{\"trait_type\": \"AI Model\", \"value\": \"\""},"value":"{\"trait_type\": \"AI Model\", \"value\": \""},{"expression":{"id":7970,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"7719:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}},"id":7971,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7729:7:17","memberName":"aiModel","nodeType":"MemberAccess","referencedDeclaration":7524,"src":"7719:17:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d2c20","id":7972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7762:6:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c07b5e20e0049894d310544630a44c18329f39849177f772c2a4ed4079ef9362","typeString":"literal_string \"\"}, \""},"value":"\"}, "},{"hexValue":"7b2274726169745f74797065223a2022566572696669636174696f6e2044617465222c202276616c7565223a20","id":7973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7794:47:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e41582e4d36c6dfd8750e37ef823cd329eeb2f5935019375295049daba0cecc","typeString":"literal_string \"{\"trait_type\": \"Verification Date\", \"value\": \""},"value":"{\"trait_type\": \"Verification Date\", \"value\": "},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":7974,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"7867:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}},"id":7975,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7877:21:17","memberName":"verificationTimestamp","nodeType":"MemberAccess","referencedDeclaration":7526,"src":"7867:31:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7899:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2683,"src":"7867:40:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":7977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7867:42:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"7d2c20","id":7978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7935:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_de5a1a300b611f3d74480fad90017eb2a7f306fb178a1fa39f606046fc9304cd","typeString":"literal_string \"}, \""},"value":"}, "},{"hexValue":"7b2274726169745f74797065223a2022537461747573222c202276616c7565223a202256657269666965642041757468656e746963227d2c20","id":7979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7966:59:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c8eb4d6513d3c80105a47a3d996122805c5dea75693b7cc63db8f0218e32e31c","typeString":"literal_string \"{\"trait_type\": \"Status\", \"value\": \"Verified Authentic\"}, \""},"value":"{\"trait_type\": \"Status\", \"value\": \"Verified Authentic\"}, "},{"hexValue":"7b2274726169745f74797065223a2022495046532048617368222c202276616c7565223a2022","id":7980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8051:40:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_936a50171fef0c711f411392db39e27f9b39a9df5363a736137e4b74889859eb","typeString":"literal_string \"{\"trait_type\": \"IPFS Hash\", \"value\": \"\""},"value":"{\"trait_type\": \"IPFS Hash\", \"value\": \""},{"expression":{"id":7981,"name":"_metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7935,"src":"8117:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata memory"}},"id":7982,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8127:8:17","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":7520,"src":"8117:18:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d","id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8161:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""},"value":"\"}"},{"hexValue":"5d7d","id":7984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8191:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""},"value":"]}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6bc4cffcbf1ed134757353a01ff081ab83b0385e9a3c59780e279712ec368978","typeString":"literal_string \"{\"name\": \"Authenticity Certificate #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_6a790b173344f29f187030c910dc3b4ca23acd97e970f5c47ec12e4719fb1275","typeString":"literal_string \"\", \"description\": \"This NFT certifies the authenticity of digital content verified by AI analysis.\", \""},{"typeIdentifier":"t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","typeString":"literal_string \"\"image\": \"\""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_0d5397c5ec7080963de117e5fae379b88d736e77510a952df455473a7176a353","typeString":"literal_string \"certificate.png\", \""},{"typeIdentifier":"t_stringliteral_1f33ab9e283e7f83bb8b4c3067f11afb394e210fe95accb80b72b00495e7b8d6","typeString":"literal_string \"\"external_url\": \"https://gateway.pinata.cloud/ipfs/\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_d31db5fa4cccdf0b2a7c8fa1b54fac1497461aa344c190614087e30f1494e3a3","typeString":"literal_string \"\", \""},{"typeIdentifier":"t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","typeString":"literal_string \"\"attributes\": [\""},{"typeIdentifier":"t_stringliteral_2488cc568cfd23287e53f9f0d9643f6160431cb7ab8b11a1ba027d3713c68694","typeString":"literal_string \"{\"trait_type\": \"Confidence Score\", \"value\": \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_de5a1a300b611f3d74480fad90017eb2a7f306fb178a1fa39f606046fc9304cd","typeString":"literal_string \"}, \""},{"typeIdentifier":"t_stringliteral_fadf41c5d3ed889a8ea7dee301afb8e73c7a781473278cd7242f517a51cb1678","typeString":"literal_string \"{\"trait_type\": \"AI Model\", \"value\": \"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_c07b5e20e0049894d310544630a44c18329f39849177f772c2a4ed4079ef9362","typeString":"literal_string \"\"}, \""},{"typeIdentifier":"t_stringliteral_1e41582e4d36c6dfd8750e37ef823cd329eeb2f5935019375295049daba0cecc","typeString":"literal_string \"{\"trait_type\": \"Verification Date\", \"value\": \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_de5a1a300b611f3d74480fad90017eb2a7f306fb178a1fa39f606046fc9304cd","typeString":"literal_string \"}, \""},{"typeIdentifier":"t_stringliteral_c8eb4d6513d3c80105a47a3d996122805c5dea75693b7cc63db8f0218e32e31c","typeString":"literal_string \"{\"trait_type\": \"Status\", \"value\": \"Verified Authentic\"}, \""},{"typeIdentifier":"t_stringliteral_936a50171fef0c711f411392db39e27f9b39a9df5363a736137e4b74889859eb","typeString":"literal_string \"{\"trait_type\": \"IPFS Hash\", \"value\": \"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""},{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""}],"expression":{"id":7948,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"6889:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6893:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"6889:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6889:1328:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6861:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7946,"name":"string","nodeType":"ElementaryTypeName","src":"6861:6:17","typeDescriptions":{}}},"id":7986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6861:1374:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7945,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6838:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7944,"name":"bytes","nodeType":"ElementaryTypeName","src":"6838:5:17","typeDescriptions":{}}},"id":7987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6838:1411:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7942,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"6811:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2310_$","typeString":"type(library Base64)"}},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6818:6:17","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2240,"src":"6811:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":7988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6811:1448:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6790:1469:17"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":7994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8301:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"id":7995,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7941,"src":"8334:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":7992,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8284:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7993,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8288:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"8284:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8284:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8277:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":7990,"name":"string","nodeType":"ElementaryTypeName","src":"8277:6:17","typeDescriptions":{}}},"id":7997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8277:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":7939,"id":7998,"nodeType":"Return","src":"8270:70:17"}]},"documentation":{"id":7930,"nodeType":"StructuredDocumentation","src":"6477:157:17","text":" @notice Build token URI for active tokens\n @param _tokenId Token ID\n @param _metadata Token metadata\n @return URI string"},"id":8000,"implemented":true,"kind":"function","modifiers":[],"name":"_buildTokenURI","nameLocation":"6648:14:17","nodeType":"FunctionDefinition","parameters":{"id":7936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7932,"mutability":"mutable","name":"_tokenId","nameLocation":"6680:8:17","nodeType":"VariableDeclaration","scope":8000,"src":"6672:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7931,"name":"uint256","nodeType":"ElementaryTypeName","src":"6672:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7935,"mutability":"mutable","name":"_metadata","nameLocation":"6726:9:17","nodeType":"VariableDeclaration","scope":8000,"src":"6698:37:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_memory_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata"},"typeName":{"id":7934,"nodeType":"UserDefinedTypeName","pathNode":{"id":7933,"name":"AuthenticityMetadata","nameLocations":["6698:20:17"],"nodeType":"IdentifierPath","referencedDeclaration":7531,"src":"6698:20:17"},"referencedDeclaration":7531,"src":"6698:20:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage_ptr","typeString":"struct AuthenticityNFT.AuthenticityMetadata"}},"visibility":"internal"}],"src":"6662:79:17"},"returnParameters":{"id":7939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8000,"src":"6765:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7937,"name":"string","nodeType":"ElementaryTypeName","src":"6765:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6764:15:17"},"scope":8237,"src":"6639:1708:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8043,"nodeType":"Block","src":"8564:742:17","statements":[{"assignments":[8009],"declarations":[{"constant":false,"id":8009,"mutability":"mutable","name":"json","nameLocation":"8588:4:17","nodeType":"VariableDeclaration","scope":8043,"src":"8574:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8008,"name":"string","nodeType":"ElementaryTypeName","src":"8574:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8033,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7b226e616d65223a20225265766f6b65642043657274696669636174652023","id":8018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8715:33:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef65856c9754fd7293b5e13875e7dc16dcac8bc5601378d760da3c14bf20814e","typeString":"literal_string \"{\"name\": \"Revoked Certificate #\""},"value":"{\"name\": \"Revoked Certificate #"},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8019,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8003,"src":"8774:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8783:8:17","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2683,"src":"8774:17:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8774:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c20226465736372697074696f6e223a2022546869732061757468656e74696369747920636572746966696361746520686173206265656e207265766f6b65642e222c20","id":8022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8819:71:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf42557c7a0e43a2acb09552a17560377dfeb684ece024c9a25ee8ad24489ab7","typeString":"literal_string \"\", \"description\": \"This authenticity certificate has been revoked.\", \""},"value":"\", \"description\": \"This authenticity certificate has been revoked.\", "},{"hexValue":"22696d616765223a2022","id":8023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8916:12:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","typeString":"literal_string \"\"image\": \"\""},"value":"\"image\": \""},{"id":8024,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"8954:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"hexValue":"7265766f6b65642e706e67222c20","id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8993:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e88c3b7393588cb730eb1d243999441b0c8fc02630d29776c5845199716b995","typeString":"literal_string \"revoked.png\", \""},"value":"revoked.png\", "},{"hexValue":"2261747472696275746573223a205b","id":8026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9035:17:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","typeString":"literal_string \"\"attributes\": [\""},"value":"\"attributes\": ["},{"hexValue":"7b2274726169745f74797065223a2022537461747573222c202276616c7565223a20225265766f6b6564227d","id":8027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9078:46:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffc9623766a1b4d9263864d2b20fb74c1d61772194fb2c24a85237f20e4b0c5","typeString":"literal_string \"{\"trait_type\": \"Status\", \"value\": \"Revoked\"}\""},"value":"{\"trait_type\": \"Status\", \"value\": \"Revoked\"}"},{"hexValue":"5d7d","id":8028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9150:4:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""},"value":"]}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ef65856c9754fd7293b5e13875e7dc16dcac8bc5601378d760da3c14bf20814e","typeString":"literal_string \"{\"name\": \"Revoked Certificate #\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_bf42557c7a0e43a2acb09552a17560377dfeb684ece024c9a25ee8ad24489ab7","typeString":"literal_string \"\", \"description\": \"This authenticity certificate has been revoked.\", \""},{"typeIdentifier":"t_stringliteral_dee71bd900939e5251fa52ed0e7fadcfe3990bd7a5ea546147c85d1b972c64b6","typeString":"literal_string \"\"image\": \"\""},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_stringliteral_0e88c3b7393588cb730eb1d243999441b0c8fc02630d29776c5845199716b995","typeString":"literal_string \"revoked.png\", \""},{"typeIdentifier":"t_stringliteral_a9d6c84473de3f3a866c16d436066b8d4df325a647d2d3a768ffba45df210f3c","typeString":"literal_string \"\"attributes\": [\""},{"typeIdentifier":"t_stringliteral_1ffc9623766a1b4d9263864d2b20fb74c1d61772194fb2c24a85237f20e4b0c5","typeString":"literal_string \"{\"trait_type\": \"Status\", \"value\": \"Revoked\"}\""},{"typeIdentifier":"t_stringliteral_ab149d31dbf8c3ed1cc7ba15c88205185e426c492b6b350058945b7266ec7e76","typeString":"literal_string \"]}\""}],"expression":{"id":8016,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8673:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8677:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"8673:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8673:503:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8645:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8014,"name":"string","nodeType":"ElementaryTypeName","src":"8645:6:17","typeDescriptions":{}}},"id":8030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8645:549:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8622:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8012,"name":"bytes","nodeType":"ElementaryTypeName","src":"8622:5:17","typeDescriptions":{}}},"id":8031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8622:586:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":8010,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"8595:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$2310_$","typeString":"type(library Base64)"}},"id":8011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8602:6:17","memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":2240,"src":"8595:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":8032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8595:623:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8574:644:17"},{"expression":{"arguments":[{"arguments":[{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":8038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9260:31:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},{"id":8039,"name":"json","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8009,"src":"9293:4:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8036,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9243:3:17","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9247:12:17","memberName":"encodePacked","nodeType":"MemberAccess","src":"9243:16:17","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":8040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9243:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":8035,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9236:6:17","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8034,"name":"string","nodeType":"ElementaryTypeName","src":"9236:6:17","typeDescriptions":{}}},"id":8041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9236:63:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":8007,"id":8042,"nodeType":"Return","src":"9229:70:17"}]},"documentation":{"id":8001,"nodeType":"StructuredDocumentation","src":"8353:119:17","text":" @notice Build token URI for revoked tokens\n @param _tokenId Token ID\n @return URI string"},"id":8044,"implemented":true,"kind":"function","modifiers":[],"name":"_buildRevokedTokenURI","nameLocation":"8486:21:17","nodeType":"FunctionDefinition","parameters":{"id":8004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8003,"mutability":"mutable","name":"_tokenId","nameLocation":"8516:8:17","nodeType":"VariableDeclaration","scope":8044,"src":"8508:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8002,"name":"uint256","nodeType":"ElementaryTypeName","src":"8508:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8507:18:17"},"returnParameters":{"id":8007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8044,"src":"8549:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8005,"name":"string","nodeType":"ElementaryTypeName","src":"8549:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8548:15:17"},"scope":8237,"src":"8477:829:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8067,"nodeType":"Block","src":"9468:168:17","statements":[{"assignments":[8053],"declarations":[{"constant":false,"id":8053,"mutability":"mutable","name":"oldBaseURI","nameLocation":"9492:10:17","nodeType":"VariableDeclaration","scope":8067,"src":"9478:24:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8052,"name":"string","nodeType":"ElementaryTypeName","src":"9478:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8055,"initialValue":{"id":8054,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"9505:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9478:40:17"},{"expression":{"id":8058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8056,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"9528:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8057,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"9544:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"9528:24:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8059,"nodeType":"ExpressionStatement","src":"9528:24:17"},{"eventCall":{"arguments":[{"id":8061,"name":"oldBaseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8053,"src":"9591:10:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8062,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8047,"src":"9603:8:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8063,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9613:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9619:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"9613:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8060,"name":"BaseURIUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7580,"src":"9576:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,string memory,uint256)"}},"id":8065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9576:53:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8066,"nodeType":"EmitStatement","src":"9571:58:17"}]},"documentation":{"id":8045,"nodeType":"StructuredDocumentation","src":"9312:88:17","text":" @notice Set base URI (owner only)\n @param _baseURI New base URI"},"functionSelector":"55f804b3","id":8068,"implemented":true,"kind":"function","modifiers":[{"id":8050,"kind":"modifierInvocation","modifierName":{"id":8049,"name":"onlyOwner","nameLocations":["9458:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"9458:9:17"},"nodeType":"ModifierInvocation","src":"9458:9:17"}],"name":"setBaseURI","nameLocation":"9414:10:17","nodeType":"FunctionDefinition","parameters":{"id":8048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8047,"mutability":"mutable","name":"_baseURI","nameLocation":"9439:8:17","nodeType":"VariableDeclaration","scope":8068,"src":"9425:22:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8046,"name":"string","nodeType":"ElementaryTypeName","src":"9425:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9424:24:17"},"returnParameters":{"id":8051,"nodeType":"ParameterList","parameters":[],"src":"9468:0:17"},"scope":8237,"src":"9405:231:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8101,"nodeType":"Block","src":"9904:202:17","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8079,"name":"_minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"9922:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":8082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9941:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9933:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8080,"name":"address","nodeType":"ElementaryTypeName","src":"9933:7:17","typeDescriptions":{}}},"id":8083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9933:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9922:21:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d696e7465722061646472657373","id":8085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9945:24:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7","typeString":"literal_string \"Invalid minter address\""},"value":"Invalid minter address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3adb7d3d4b05d52976eb6f1e87832b563c080c421bbca64d88e781ef3c7604e7","typeString":"literal_string \"Invalid minter address\""}],"id":8078,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9914:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8086,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9914:56:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8087,"nodeType":"ExpressionStatement","src":"9914:56:17"},{"expression":{"id":8092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8088,"name":"authorizedMinters","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7546,"src":"9980:17:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":8090,"indexExpression":{"id":8089,"name":"_minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"9998:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9980:26:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8091,"name":"_authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"10009:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9980:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8093,"nodeType":"ExpressionStatement","src":"9980:40:17"},{"eventCall":{"arguments":[{"id":8095,"name":"_minter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8071,"src":"10061:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8096,"name":"_authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8073,"src":"10070:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":8097,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10083:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"10083:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8094,"name":"MinterAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7588,"src":"10044:16:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (address,bool,uint256)"}},"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10044:55:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8100,"nodeType":"EmitStatement","src":"10039:60:17"}]},"documentation":{"id":8069,"nodeType":"StructuredDocumentation","src":"9642:152:17","text":" @notice Authorize/deauthorize minter (owner only)\n @param _minter Minter address\n @param _authorized Authorization status"},"functionSelector":"ed58bad8","id":8102,"implemented":true,"kind":"function","modifiers":[{"id":8076,"kind":"modifierInvocation","modifierName":{"id":8075,"name":"onlyOwner","nameLocations":["9894:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"9894:9:17"},"nodeType":"ModifierInvocation","src":"9894:9:17"}],"name":"setAuthorizedMinter","nameLocation":"9808:19:17","nodeType":"FunctionDefinition","parameters":{"id":8074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8071,"mutability":"mutable","name":"_minter","nameLocation":"9845:7:17","nodeType":"VariableDeclaration","scope":8102,"src":"9837:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8070,"name":"address","nodeType":"ElementaryTypeName","src":"9837:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8073,"mutability":"mutable","name":"_authorized","nameLocation":"9867:11:17","nodeType":"VariableDeclaration","scope":8102,"src":"9862:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8072,"name":"bool","nodeType":"ElementaryTypeName","src":"9862:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9827:57:17"},"returnParameters":{"id":8077,"nodeType":"ParameterList","parameters":[],"src":"9904:0:17"},"scope":8237,"src":"9799:307:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8119,"nodeType":"Block","src":"10450:79:17","statements":[{"expression":{"components":[{"id":8112,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"10468:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8113,"name":"totalRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"10481:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8114,"name":"totalMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7548,"src":"10495:11:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":8115,"name":"totalRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7550,"src":"10509:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10495:26:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8117,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10467:55:17","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256)"}},"functionReturnParameters":8111,"id":8118,"nodeType":"Return","src":"10460:62:17"}]},"documentation":{"id":8103,"nodeType":"StructuredDocumentation","src":"10112:189:17","text":" @notice Get contract statistics\n @return totalMinted_ Total NFTs minted\n @return totalRevoked_ Total NFTs revoked\n @return totalActive Total active NFTs"},"functionSelector":"372d6b27","id":8120,"implemented":true,"kind":"function","modifiers":[],"name":"getStatistics","nameLocation":"10315:13:17","nodeType":"FunctionDefinition","parameters":{"id":8104,"nodeType":"ParameterList","parameters":[],"src":"10328:2:17"},"returnParameters":{"id":8111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"totalMinted_","nameLocation":"10371:12:17","nodeType":"VariableDeclaration","scope":8120,"src":"10363:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8105,"name":"uint256","nodeType":"ElementaryTypeName","src":"10363:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8108,"mutability":"mutable","name":"totalRevoked_","nameLocation":"10401:13:17","nodeType":"VariableDeclaration","scope":8120,"src":"10393:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8107,"name":"uint256","nodeType":"ElementaryTypeName","src":"10393:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8110,"mutability":"mutable","name":"totalActive","nameLocation":"10432:11:17","nodeType":"VariableDeclaration","scope":8120,"src":"10424:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8109,"name":"uint256","nodeType":"ElementaryTypeName","src":"10424:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10353:96:17"},"scope":8237,"src":"10306:223:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8142,"nodeType":"Block","src":"10749:128:17","statements":[{"condition":{"id":8131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10763:18:17","subExpression":{"arguments":[{"id":8129,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"10772:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8128,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"10764:7:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":8130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10764:17:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8135,"nodeType":"IfStatement","src":"10759:61:17","trueBody":{"id":8134,"nodeType":"Block","src":"10783:37:17","statements":[{"expression":{"hexValue":"66616c7365","id":8132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10804:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":8127,"id":8133,"nodeType":"Return","src":"10797:12:17"}]}},{"expression":{"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"10836:34:17","subExpression":{"expression":{"baseExpression":{"id":8136,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"10837:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata storage ref)"}},"id":8138,"indexExpression":{"id":8137,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8123,"src":"10851:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10837:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage","typeString":"struct AuthenticityNFT.AuthenticityMetadata storage ref"}},"id":8139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10861:9:17","memberName":"isRevoked","nodeType":"MemberAccess","referencedDeclaration":7530,"src":"10837:33:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8127,"id":8141,"nodeType":"Return","src":"10829:41:17"}]},"documentation":{"id":8121,"nodeType":"StructuredDocumentation","src":"10535:142:17","text":" @notice Check if NFT is valid (not revoked)\n @param _tokenId Token ID\n @return isValid Whether the NFT is valid"},"functionSelector":"a2f1c87b","id":8143,"implemented":true,"kind":"function","modifiers":[],"name":"isValidNFT","nameLocation":"10691:10:17","nodeType":"FunctionDefinition","parameters":{"id":8124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8123,"mutability":"mutable","name":"_tokenId","nameLocation":"10710:8:17","nodeType":"VariableDeclaration","scope":8143,"src":"10702:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8122,"name":"uint256","nodeType":"ElementaryTypeName","src":"10702:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10701:18:17"},"returnParameters":{"id":8127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8143,"src":"10743:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8125,"name":"bool","nodeType":"ElementaryTypeName","src":"10743:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10742:6:17"},"scope":8237,"src":"10682:195:17","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9265],"body":{"id":8152,"nodeType":"Block","src":"11019:25:17","statements":[{"expression":{"hexValue":"31","id":8150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11036:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"functionReturnParameters":8149,"id":8151,"nodeType":"Return","src":"11029:8:17"}]},"documentation":{"id":8144,"nodeType":"StructuredDocumentation","src":"10883:65:17","text":" @notice Override _startTokenId to start from 1"},"id":8153,"implemented":true,"kind":"function","modifiers":[],"name":"_startTokenId","nameLocation":"10962:13:17","nodeType":"FunctionDefinition","overrides":{"id":8146,"nodeType":"OverrideSpecifier","overrides":[],"src":"10992:8:17"},"parameters":{"id":8145,"nodeType":"ParameterList","parameters":[],"src":"10975:2:17"},"returnParameters":{"id":8149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8153,"src":"11010:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8147,"name":"uint256","nodeType":"ElementaryTypeName","src":"11010:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11009:9:17"},"scope":8237,"src":"10953:91:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[10264],"body":{"id":8202,"nodeType":"Block","src":"11312:366:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8166,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8156,"src":"11372:4:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":8169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11388:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8168,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11380:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8167,"name":"address","nodeType":"ElementaryTypeName","src":"11380:7:17","typeDescriptions":{}}},"id":8170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11380:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11372:18:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8174,"nodeType":"IfStatement","src":"11368:55:17","trueBody":{"id":8173,"nodeType":"Block","src":"11392:31:17","statements":[{"functionReturnParameters":8165,"id":8172,"nodeType":"Return","src":"11406:7:17"}]}},{"body":{"id":8200,"nodeType":"Block","src":"11526:146:17","statements":[{"assignments":[8186],"declarations":[{"constant":false,"id":8186,"mutability":"mutable","name":"tokenId","nameLocation":"11548:7:17","nodeType":"VariableDeclaration","scope":8200,"src":"11540:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8185,"name":"uint256","nodeType":"ElementaryTypeName","src":"11540:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8190,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8187,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8160,"src":"11558:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8188,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"11573:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11558:16:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11540:34:17"},{"expression":{"arguments":[{"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11596:33:17","subExpression":{"expression":{"baseExpression":{"id":8192,"name":"tokenMetadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7538,"src":"11597:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_AuthenticityMetadata_$7531_storage_$","typeString":"mapping(uint256 => struct AuthenticityNFT.AuthenticityMetadata storage ref)"}},"id":8194,"indexExpression":{"id":8193,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8186,"src":"11611:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11597:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_AuthenticityMetadata_$7531_storage","typeString":"struct AuthenticityNFT.AuthenticityMetadata storage ref"}},"id":8195,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11620:9:17","memberName":"isRevoked","nodeType":"MemberAccess","referencedDeclaration":7530,"src":"11597:32:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616e6e6f74207472616e73666572207265766f6b6564204e4654","id":8197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11631:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_67147e6ed423d9a2485ea0281fff62ad1d38f2539632357efa4304eff6b51345","typeString":"literal_string \"Cannot transfer revoked NFT\""},"value":"Cannot transfer revoked NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67147e6ed423d9a2485ea0281fff62ad1d38f2539632357efa4304eff6b51345","typeString":"literal_string \"Cannot transfer revoked NFT\""}],"id":8191,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11588:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11588:73:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8199,"nodeType":"ExpressionStatement","src":"11588:73:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8179,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"11507:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8180,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8162,"src":"11511:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11507:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8201,"initializationExpression":{"assignments":[8176],"declarations":[{"constant":false,"id":8176,"mutability":"mutable","name":"i","nameLocation":"11500:1:17","nodeType":"VariableDeclaration","scope":8201,"src":"11492:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8175,"name":"uint256","nodeType":"ElementaryTypeName","src":"11492:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8178,"initialValue":{"hexValue":"30","id":8177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11504:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11492:13:17"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":8183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11521:3:17","subExpression":{"id":8182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8176,"src":"11521:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8184,"nodeType":"ExpressionStatement","src":"11521:3:17"},"nodeType":"ForStatement","src":"11487:185:17"}]},"documentation":{"id":8154,"nodeType":"StructuredDocumentation","src":"11050:93:17","text":" @notice Override transfer functions to prevent transfers of revoked tokens"},"id":8203,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfers","nameLocation":"11157:21:17","nodeType":"FunctionDefinition","overrides":{"id":8164,"nodeType":"OverrideSpecifier","overrides":[],"src":"11303:8:17"},"parameters":{"id":8163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8156,"mutability":"mutable","name":"from","nameLocation":"11196:4:17","nodeType":"VariableDeclaration","scope":8203,"src":"11188:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8155,"name":"address","nodeType":"ElementaryTypeName","src":"11188:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8158,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8203,"src":"11210:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8157,"name":"address","nodeType":"ElementaryTypeName","src":"11210:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8160,"mutability":"mutable","name":"startTokenId","nameLocation":"11244:12:17","nodeType":"VariableDeclaration","scope":8203,"src":"11236:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8159,"name":"uint256","nodeType":"ElementaryTypeName","src":"11236:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8162,"mutability":"mutable","name":"quantity","nameLocation":"11274:8:17","nodeType":"VariableDeclaration","scope":8203,"src":"11266:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8161,"name":"uint256","nodeType":"ElementaryTypeName","src":"11266:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11178:110:17"},"returnParameters":{"id":8165,"nodeType":"ParameterList","parameters":[],"src":"11312:0:17"},"scope":8237,"src":"11148:530:17","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":8211,"nodeType":"Block","src":"11816:37:17","statements":[{"expression":{"id":8209,"name":"_baseTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7533,"src":"11833:13:17","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":8208,"id":8210,"nodeType":"Return","src":"11826:20:17"}]},"documentation":{"id":8204,"nodeType":"StructuredDocumentation","src":"11684:70:17","text":" @notice Get base URI\n @return Base URI string"},"functionSelector":"6c0360eb","id":8212,"implemented":true,"kind":"function","modifiers":[],"name":"baseURI","nameLocation":"11768:7:17","nodeType":"FunctionDefinition","parameters":{"id":8205,"nodeType":"ParameterList","parameters":[],"src":"11775:2:17"},"returnParameters":{"id":8208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8207,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8212,"src":"11801:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8206,"name":"string","nodeType":"ElementaryTypeName","src":"11801:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11800:15:17"},"scope":8237,"src":"11759:94:17","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[9505],"body":{"id":8226,"nodeType":"Block","src":"12103:60:17","statements":[{"expression":{"arguments":[{"id":8223,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8215,"src":"12144:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":8221,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"12120:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AuthenticityNFT_$8237_$","typeString":"type(contract super AuthenticityNFT)"}},"id":8222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12126:17:17","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":9505,"src":"12120:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12120:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8220,"id":8225,"nodeType":"Return","src":"12113:43:17"}]},"documentation":{"id":8213,"nodeType":"StructuredDocumentation","src":"11859:148:17","text":" @notice Check if contract supports interface\n @param interfaceId Interface ID\n @return Whether interface is supported"},"functionSelector":"01ffc9a7","id":8227,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"12021:17:17","nodeType":"FunctionDefinition","overrides":{"id":8217,"nodeType":"OverrideSpecifier","overrides":[],"src":"12079:8:17"},"parameters":{"id":8216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8215,"mutability":"mutable","name":"interfaceId","nameLocation":"12046:11:17","nodeType":"VariableDeclaration","scope":8227,"src":"12039:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":8214,"name":"bytes4","nodeType":"ElementaryTypeName","src":"12039:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"12038:20:17"},"returnParameters":{"id":8220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8219,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8227,"src":"12097:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8218,"name":"bool","nodeType":"ElementaryTypeName","src":"12097:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12096:6:17"},"scope":8237,"src":"12012:151:17","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":8235,"nodeType":"Block","src":"12308:31:17","statements":[{"expression":{"hexValue":"312e302e30","id":8233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12325:7:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""},"value":"1.0.0"},"functionReturnParameters":8232,"id":8234,"nodeType":"Return","src":"12318:14:17"}]},"documentation":{"id":8228,"nodeType":"StructuredDocumentation","src":"12169:77:17","text":" @notice Get contract version\n @return Version string"},"functionSelector":"54fd4d50","id":8236,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"12260:7:17","nodeType":"FunctionDefinition","parameters":{"id":8229,"nodeType":"ParameterList","parameters":[],"src":"12267:2:17"},"returnParameters":{"id":8232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8236,"src":"12293:13:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8230,"name":"string","nodeType":"ElementaryTypeName","src":"12293:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12292:15:17"},"scope":8237,"src":"12251:88:17","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":8238,"src":"489:11852:17","usedErrors":[2081,2086,2514,11211,11214,11217,11220,11223,11226,11229,11232,11235,11238,11241,11244,11247,11250,11253,11256,11259,11262],"usedEvents":[2092,7564,7572,7580,7588,11294,11303,11312,11425]}],"src":"32:12310:17"},"id":17},"contracts/AuthenticityRegistry.sol":{"ast":{"absolutePath":"contracts/AuthenticityRegistry.sol","exportedSymbols":{"AuthenticityNFT":[8237],"AuthenticityRegistry":[9105],"Base64":[2310],"CBOR":[2067],"Context":[2340],"ERC721A":[11205],"ERC721A__IERC721Receiver":[9123],"FunctionsClient":[117],"FunctionsRequest":[728],"IERC721A":[11426],"IFunctionsClient":[131],"IFunctionsRouter":[265],"Math":[5592],"Ownable":[2215],"Pausable":[2500],"ReentrancyGuard":[2569],"SafeCast":[7357],"SignedMath":[7501],"Strings":[3971]},"id":9106,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:18"},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol","file":"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol","id":8240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9106,"sourceUnit":118,"src":"58:76:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","file":"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol","id":8241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9106,"sourceUnit":729,"src":"135:87:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8242,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9106,"sourceUnit":2216,"src":"223:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":8243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9106,"sourceUnit":2570,"src":"276:59:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Pausable.sol","file":"@openzeppelin/contracts/utils/Pausable.sol","id":8244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9106,"sourceUnit":2501,"src":"336:52:18","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/AuthenticityNFT.sol","file":"./AuthenticityNFT.sol","id":8245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9106,"sourceUnit":8238,"src":"389:31:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8247,"name":"FunctionsClient","nameLocations":["673:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":117,"src":"673:15:18"},"id":8248,"nodeType":"InheritanceSpecifier","src":"673:15:18"},{"baseName":{"id":8249,"name":"Ownable","nameLocations":["690:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2215,"src":"690:7:18"},"id":8250,"nodeType":"InheritanceSpecifier","src":"690:7:18"},{"baseName":{"id":8251,"name":"ReentrancyGuard","nameLocations":["699:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":2569,"src":"699:15:18"},"id":8252,"nodeType":"InheritanceSpecifier","src":"699:15:18"},{"baseName":{"id":8253,"name":"Pausable","nameLocations":["716:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":2500,"src":"716:8:18"},"id":8254,"nodeType":"InheritanceSpecifier","src":"716:8:18"}],"canonicalName":"AuthenticityRegistry","contractDependencies":[],"contractKind":"contract","documentation":{"id":8246,"nodeType":"StructuredDocumentation","src":"422:217:18","text":" @title AuthenticityRegistry\n @dev Smart contract for verifying media authenticity using Chainlink Functions\n @notice This contract integrates with AI services via Chainlink Functions to detect deepfakes"},"fullyImplemented":true,"id":9105,"linearizedBaseContracts":[9105,2500,2569,2215,2340,117,131],"name":"AuthenticityRegistry","nameLocation":"649:20:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":8258,"libraryName":{"id":8255,"name":"FunctionsRequest","nameLocations":["737:16:18"],"nodeType":"IdentifierPath","referencedDeclaration":728,"src":"737:16:18"},"nodeType":"UsingForDirective","src":"731:52:18","typeName":{"id":8257,"nodeType":"UserDefinedTypeName","pathNode":{"id":8256,"name":"FunctionsRequest.Request","nameLocations":["758:16:18","775:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"758:24:18"},"referencedDeclaration":306,"src":"758:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}}},{"canonicalName":"AuthenticityRegistry.VerificationRequest","id":8277,"members":[{"constant":false,"id":8260,"mutability":"mutable","name":"requester","nameLocation":"883:9:18","nodeType":"VariableDeclaration","scope":8277,"src":"875:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8259,"name":"address","nodeType":"ElementaryTypeName","src":"875:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8262,"mutability":"mutable","name":"ipfsHash","nameLocation":"909:8:18","nodeType":"VariableDeclaration","scope":8277,"src":"902:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8261,"name":"string","nodeType":"ElementaryTypeName","src":"902:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8264,"mutability":"mutable","name":"mediaType","nameLocation":"934:9:18","nodeType":"VariableDeclaration","scope":8277,"src":"927:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8263,"name":"string","nodeType":"ElementaryTypeName","src":"927:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8266,"mutability":"mutable","name":"timestamp","nameLocation":"961:9:18","nodeType":"VariableDeclaration","scope":8277,"src":"953:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8265,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8268,"mutability":"mutable","name":"isProcessed","nameLocation":"985:11:18","nodeType":"VariableDeclaration","scope":8277,"src":"980:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8267,"name":"bool","nodeType":"ElementaryTypeName","src":"980:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8270,"mutability":"mutable","name":"isAuthentic","nameLocation":"1011:11:18","nodeType":"VariableDeclaration","scope":8277,"src":"1006:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8269,"name":"bool","nodeType":"ElementaryTypeName","src":"1006:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8272,"mutability":"mutable","name":"confidenceScore","nameLocation":"1040:15:18","nodeType":"VariableDeclaration","scope":8277,"src":"1032:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8271,"name":"uint256","nodeType":"ElementaryTypeName","src":"1032:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8274,"mutability":"mutable","name":"aiModel","nameLocation":"1081:7:18","nodeType":"VariableDeclaration","scope":8277,"src":"1074:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8273,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8276,"mutability":"mutable","name":"nftTokenId","nameLocation":"1106:10:18","nodeType":"VariableDeclaration","scope":8277,"src":"1098:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1098:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VerificationRequest","nameLocation":"845:19:18","nodeType":"StructDefinition","scope":9105,"src":"838:307:18","visibility":"public"},{"canonicalName":"AuthenticityRegistry.VerificationResult","id":8290,"members":[{"constant":false,"id":8279,"mutability":"mutable","name":"requestId","nameLocation":"1238:9:18","nodeType":"VariableDeclaration","scope":8290,"src":"1230:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8278,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1230:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8281,"mutability":"mutable","name":"isAuthentic","nameLocation":"1262:11:18","nodeType":"VariableDeclaration","scope":8290,"src":"1257:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8280,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8283,"mutability":"mutable","name":"confidenceScore","nameLocation":"1291:15:18","nodeType":"VariableDeclaration","scope":8290,"src":"1283:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8285,"mutability":"mutable","name":"aiModel","nameLocation":"1323:7:18","nodeType":"VariableDeclaration","scope":8290,"src":"1316:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8284,"name":"string","nodeType":"ElementaryTypeName","src":"1316:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8287,"mutability":"mutable","name":"reasoning","nameLocation":"1347:9:18","nodeType":"VariableDeclaration","scope":8290,"src":"1340:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":8286,"name":"string","nodeType":"ElementaryTypeName","src":"1340:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8289,"mutability":"mutable","name":"timestamp","nameLocation":"1374:9:18","nodeType":"VariableDeclaration","scope":8290,"src":"1366:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8288,"name":"uint256","nodeType":"ElementaryTypeName","src":"1366:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"VerificationResult","nameLocation":"1201:18:18","nodeType":"StructDefinition","scope":9105,"src":"1194:196:18","visibility":"public"},{"constant":false,"functionSelector":"01ff8b7d","id":8293,"mutability":"immutable","name":"authenticityNFT","nameLocation":"1461:15:18","nodeType":"VariableDeclaration","scope":9105,"src":"1428:48:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AuthenticityNFT_$8237","typeString":"contract AuthenticityNFT"},"typeName":{"id":8292,"nodeType":"UserDefinedTypeName","pathNode":{"id":8291,"name":"AuthenticityNFT","nameLocations":["1428:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":8237,"src":"1428:15:18"},"referencedDeclaration":8237,"src":"1428:15:18","typeDescriptions":{"typeIdentifier":"t_contract$_AuthenticityNFT_$8237","typeString":"contract AuthenticityNFT"}},"visibility":"public"},{"constant":false,"functionSelector":"09c1ba2e","id":8295,"mutability":"mutable","name":"subscriptionId","nameLocation":"1496:14:18","nodeType":"VariableDeclaration","scope":9105,"src":"1482:28:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8294,"name":"uint64","nodeType":"ElementaryTypeName","src":"1482:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"public"},{"constant":false,"functionSelector":"f68016b7","id":8297,"mutability":"mutable","name":"gasLimit","nameLocation":"1530:8:18","nodeType":"VariableDeclaration","scope":9105,"src":"1516:22:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8296,"name":"uint32","nodeType":"ElementaryTypeName","src":"1516:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"public"},{"constant":false,"functionSelector":"6e74336b","id":8299,"mutability":"mutable","name":"donID","nameLocation":"1559:5:18","nodeType":"VariableDeclaration","scope":9105,"src":"1544:20:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8298,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1544:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"13c60177","id":8301,"mutability":"mutable","name":"sourceCode","nameLocation":"1584:10:18","nodeType":"VariableDeclaration","scope":9105,"src":"1570:24:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":8300,"name":"string","nodeType":"ElementaryTypeName","src":"1570:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"constant":false,"functionSelector":"0f3908c8","id":8306,"mutability":"mutable","name":"verificationRequests","nameLocation":"1668:20:18","nodeType":"VariableDeclaration","scope":9105,"src":"1621:67:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VerificationRequest_$8277_storage_$","typeString":"mapping(bytes32 => struct AuthenticityRegistry.VerificationRequest)"},"typeName":{"id":8305,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8302,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1629:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1621:39:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VerificationRequest_$8277_storage_$","typeString":"mapping(bytes32 => struct AuthenticityRegistry.VerificationRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8304,"nodeType":"UserDefinedTypeName","pathNode":{"id":8303,"name":"VerificationRequest","nameLocations":["1640:19:18"],"nodeType":"IdentifierPath","referencedDeclaration":8277,"src":"1640:19:18"},"referencedDeclaration":8277,"src":"1640:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest"}}},"visibility":"public"},{"constant":false,"functionSelector":"5a55977e","id":8311,"mutability":"mutable","name":"verificationResults","nameLocation":"1739:19:18","nodeType":"VariableDeclaration","scope":9105,"src":"1694:64:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VerificationResult_$8290_storage_$","typeString":"mapping(string => struct AuthenticityRegistry.VerificationResult)"},"typeName":{"id":8310,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8307,"name":"string","nodeType":"ElementaryTypeName","src":"1702:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1694:37:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VerificationResult_$8290_storage_$","typeString":"mapping(string => struct AuthenticityRegistry.VerificationResult)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8309,"nodeType":"UserDefinedTypeName","pathNode":{"id":8308,"name":"VerificationResult","nameLocations":["1712:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":8290,"src":"1712:18:18"},"referencedDeclaration":8290,"src":"1712:18:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationResult"}}},"visibility":"public"},{"constant":false,"functionSelector":"263cb6b6","id":8316,"mutability":"mutable","name":"userRequests","nameLocation":"1823:12:18","nodeType":"VariableDeclaration","scope":9105,"src":"1786:49:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"typeName":{"id":8315,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8312,"name":"address","nodeType":"ElementaryTypeName","src":"1794:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1786:29:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":8313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1805:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8314,"nodeType":"ArrayTypeName","src":"1805:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"b32eaa0e","id":8320,"mutability":"mutable","name":"flaggedContent","nameLocation":"1872:14:18","nodeType":"VariableDeclaration","scope":9105,"src":"1841:45:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":8319,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":8317,"name":"string","nodeType":"ElementaryTypeName","src":"1849:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1841:23:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":8318,"name":"bool","nodeType":"ElementaryTypeName","src":"1859:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"968e5a0d","id":8323,"mutability":"mutable","name":"allRequestIds","nameLocation":"1969:13:18","nodeType":"VariableDeclaration","scope":9105,"src":"1952:30:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8321,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1952:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8322,"nodeType":"ArrayTypeName","src":"1952:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"public"},{"constant":false,"functionSelector":"6bc9d5b3","id":8326,"mutability":"mutable","name":"allVerifiedContent","nameLocation":"2004:18:18","nodeType":"VariableDeclaration","scope":9105,"src":"1988:34:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":8324,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8325,"nodeType":"ArrayTypeName","src":"1988:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"public"},{"constant":false,"functionSelector":"f16fb433","id":8329,"mutability":"mutable","name":"allFlaggedContent","nameLocation":"2044:17:18","nodeType":"VariableDeclaration","scope":9105,"src":"2028:33:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":8327,"name":"string","nodeType":"ElementaryTypeName","src":"2028:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8328,"nodeType":"ArrayTypeName","src":"2028:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"public"},{"constant":false,"functionSelector":"ac90c140","id":8331,"mutability":"mutable","name":"totalVerifications","nameLocation":"2105:18:18","nodeType":"VariableDeclaration","scope":9105,"src":"2090:33:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8330,"name":"uint256","nodeType":"ElementaryTypeName","src":"2090:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"35c1260d","id":8333,"mutability":"mutable","name":"totalAuthentic","nameLocation":"2144:14:18","nodeType":"VariableDeclaration","scope":9105,"src":"2129:29:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8332,"name":"uint256","nodeType":"ElementaryTypeName","src":"2129:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"39ffbe0b","id":8335,"mutability":"mutable","name":"totalFake","nameLocation":"2179:9:18","nodeType":"VariableDeclaration","scope":9105,"src":"2164:24:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8334,"name":"uint256","nodeType":"ElementaryTypeName","src":"2164:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"4eb7e95f","id":8337,"mutability":"mutable","name":"totalNFTsMinted","nameLocation":"2209:15:18","nodeType":"VariableDeclaration","scope":9105,"src":"2194:30:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8336,"name":"uint256","nodeType":"ElementaryTypeName","src":"2194:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"a8c278a2","id":8340,"mutability":"mutable","name":"verificationFee","nameLocation":"2271:15:18","nodeType":"VariableDeclaration","scope":9105,"src":"2256:44:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8338,"name":"uint256","nodeType":"ElementaryTypeName","src":"2256:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e303031","id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2289:11:18","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000_by_1","typeString":"int_const 1000000000000000"},"value":"0.001"},"visibility":"public"},{"constant":false,"functionSelector":"b9f83f06","id":8343,"mutability":"mutable","name":"nftMintFee","nameLocation":"2344:10:18","nodeType":"VariableDeclaration","scope":9105,"src":"2329:38:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2329:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":8342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2357:10:18","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"anonymous":false,"eventSelector":"94238ad9433a44eacaeae5de7a6bed1a8c4d80b9a77ad9b5856d42646aa4a3b7","id":8355,"name":"VerificationRequested","nameLocation":"2432:21:18","nodeType":"EventDefinition","parameters":{"id":8354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8345,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"2479:9:18","nodeType":"VariableDeclaration","scope":8355,"src":"2463:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8344,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2463:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8347,"indexed":true,"mutability":"mutable","name":"requester","nameLocation":"2514:9:18","nodeType":"VariableDeclaration","scope":8355,"src":"2498:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8346,"name":"address","nodeType":"ElementaryTypeName","src":"2498:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8349,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"2540:8:18","nodeType":"VariableDeclaration","scope":8355,"src":"2533:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8348,"name":"string","nodeType":"ElementaryTypeName","src":"2533:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8351,"indexed":false,"mutability":"mutable","name":"mediaType","nameLocation":"2565:9:18","nodeType":"VariableDeclaration","scope":8355,"src":"2558:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8350,"name":"string","nodeType":"ElementaryTypeName","src":"2558:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8353,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2592:9:18","nodeType":"VariableDeclaration","scope":8355,"src":"2584:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2584:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2453:154:18"},"src":"2426:182:18"},{"anonymous":false,"eventSelector":"a200e87a2f5086e32a1c23aced4fbe4be33197f26728243a2f4e04c31dc31957","id":8369,"name":"VerificationCompleted","nameLocation":"2624:21:18","nodeType":"EventDefinition","parameters":{"id":8368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8357,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"2671:9:18","nodeType":"VariableDeclaration","scope":8369,"src":"2655:25:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2655:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8359,"indexed":true,"mutability":"mutable","name":"ipfsHash","nameLocation":"2705:8:18","nodeType":"VariableDeclaration","scope":8369,"src":"2690:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8358,"name":"string","nodeType":"ElementaryTypeName","src":"2690:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8361,"indexed":false,"mutability":"mutable","name":"isAuthentic","nameLocation":"2728:11:18","nodeType":"VariableDeclaration","scope":8369,"src":"2723:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8360,"name":"bool","nodeType":"ElementaryTypeName","src":"2723:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8363,"indexed":false,"mutability":"mutable","name":"confidenceScore","nameLocation":"2757:15:18","nodeType":"VariableDeclaration","scope":8369,"src":"2749:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8362,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8365,"indexed":false,"mutability":"mutable","name":"aiModel","nameLocation":"2789:7:18","nodeType":"VariableDeclaration","scope":8369,"src":"2782:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8364,"name":"string","nodeType":"ElementaryTypeName","src":"2782:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8367,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2814:9:18","nodeType":"VariableDeclaration","scope":8369,"src":"2806:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8366,"name":"uint256","nodeType":"ElementaryTypeName","src":"2806:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2645:184:18"},"src":"2618:212:18"},{"anonymous":false,"eventSelector":"ab9e11a26bcf11da1acec616512e75c224c85dbe525ebed13e7c583a299bbc5a","id":8377,"name":"ContentFlagged","nameLocation":"2846:14:18","nodeType":"EventDefinition","parameters":{"id":8376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8371,"indexed":true,"mutability":"mutable","name":"ipfsHash","nameLocation":"2885:8:18","nodeType":"VariableDeclaration","scope":8377,"src":"2870:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8370,"name":"string","nodeType":"ElementaryTypeName","src":"2870:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8373,"indexed":true,"mutability":"mutable","name":"reporter","nameLocation":"2919:8:18","nodeType":"VariableDeclaration","scope":8377,"src":"2903:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8372,"name":"address","nodeType":"ElementaryTypeName","src":"2903:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8375,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2945:9:18","nodeType":"VariableDeclaration","scope":8377,"src":"2937:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8374,"name":"uint256","nodeType":"ElementaryTypeName","src":"2937:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2860:100:18"},"src":"2840:121:18"},{"anonymous":false,"eventSelector":"6d17924bd76c5e1fe0e46264cf6f9d66b1a75b860335729e9d45f1d0ab4446ab","id":8387,"name":"NFTMinted","nameLocation":"2977:9:18","nodeType":"EventDefinition","parameters":{"id":8386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8379,"indexed":true,"mutability":"mutable","name":"ipfsHash","nameLocation":"3011:8:18","nodeType":"VariableDeclaration","scope":8387,"src":"2996:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8378,"name":"string","nodeType":"ElementaryTypeName","src":"2996:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8381,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3045:5:18","nodeType":"VariableDeclaration","scope":8387,"src":"3029:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8380,"name":"address","nodeType":"ElementaryTypeName","src":"3029:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8383,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"3068:7:18","nodeType":"VariableDeclaration","scope":8387,"src":"3060:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8382,"name":"uint256","nodeType":"ElementaryTypeName","src":"3060:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8385,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3093:9:18","nodeType":"VariableDeclaration","scope":8387,"src":"3085:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8384,"name":"uint256","nodeType":"ElementaryTypeName","src":"3085:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2986:122:18"},"src":"2971:138:18"},{"anonymous":false,"eventSelector":"cf8a1e1d5f09cf3c97dbb653cd9a4d7aace9292fbc1bb8211febf2d400febbdd","id":8395,"name":"FeesUpdated","nameLocation":"3125:11:18","nodeType":"EventDefinition","parameters":{"id":8394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8389,"indexed":false,"mutability":"mutable","name":"verificationFee","nameLocation":"3154:15:18","nodeType":"VariableDeclaration","scope":8395,"src":"3146:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8388,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8391,"indexed":false,"mutability":"mutable","name":"nftMintFee","nameLocation":"3187:10:18","nodeType":"VariableDeclaration","scope":8395,"src":"3179:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8390,"name":"uint256","nodeType":"ElementaryTypeName","src":"3179:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8393,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3215:9:18","nodeType":"VariableDeclaration","scope":8395,"src":"3207:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8392,"name":"uint256","nodeType":"ElementaryTypeName","src":"3207:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3136:94:18"},"src":"3119:112:18"},{"anonymous":false,"eventSelector":"fbc3a599b784fe88772fc5abcc07223f64ca0b13acc341f4fb1e46bef0510eb4","id":8403,"name":"FundsWithdrawn","nameLocation":"3247:14:18","nodeType":"EventDefinition","parameters":{"id":8402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8397,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"3287:5:18","nodeType":"VariableDeclaration","scope":8403,"src":"3271:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8396,"name":"address","nodeType":"ElementaryTypeName","src":"3271:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8399,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3310:6:18","nodeType":"VariableDeclaration","scope":8403,"src":"3302:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3302:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8401,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"3334:9:18","nodeType":"VariableDeclaration","scope":8403,"src":"3326:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8400,"name":"uint256","nodeType":"ElementaryTypeName","src":"3326:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:88:18"},"src":"3241:109:18"},{"body":{"id":8449,"nodeType":"Block","src":"4113:194:18","statements":[{"expression":{"id":8429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8427,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"4123:14:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8428,"name":"_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8408,"src":"4140:15:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"4123:32:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":8430,"nodeType":"ExpressionStatement","src":"4123:32:18"},{"expression":{"id":8433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8431,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"4165:8:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8432,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8410,"src":"4176:9:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"4165:20:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8434,"nodeType":"ExpressionStatement","src":"4165:20:18"},{"expression":{"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8435,"name":"donID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"4195:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8436,"name":"_donID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8412,"src":"4203:6:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4195:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8438,"nodeType":"ExpressionStatement","src":"4195:14:18"},{"expression":{"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8439,"name":"sourceCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"4219:10:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8440,"name":"_sourceCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8414,"src":"4232:11:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"4219:24:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8442,"nodeType":"ExpressionStatement","src":"4219:24:18"},{"expression":{"id":8447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8443,"name":"authenticityNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"4253:15:18","typeDescriptions":{"typeIdentifier":"t_contract$_AuthenticityNFT_$8237","typeString":"contract AuthenticityNFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8445,"name":"_nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8416,"src":"4287:12:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":8444,"name":"AuthenticityNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8237,"src":"4271:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AuthenticityNFT_$8237_$","typeString":"type(contract AuthenticityNFT)"}},"id":8446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AuthenticityNFT_$8237","typeString":"contract AuthenticityNFT"}},"src":"4253:47:18","typeDescriptions":{"typeIdentifier":"t_contract$_AuthenticityNFT_$8237","typeString":"contract AuthenticityNFT"}},"id":8448,"nodeType":"ExpressionStatement","src":"4253:47:18"}]},"documentation":{"id":8404,"nodeType":"StructuredDocumentation","src":"3356:483:18","text":" @dev Constructor to initialize the contract\n @param _router Chainlink Functions router address\n @param _subscriptionId Chainlink subscription ID\n @param _gasLimit Gas limit for Functions requests\n @param _donID Decentralized Oracle Network ID\n @param _sourceCode JavaScript source code for Chainlink Functions\n @param _nftContract Address of the AuthenticityNFT contract\n @param _initialOwner Initial owner of the contract"},"id":8450,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":8421,"name":"_router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8406,"src":"4081:7:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8422,"kind":"baseConstructorSpecifier","modifierName":{"id":8420,"name":"FunctionsClient","nameLocations":["4065:15:18"],"nodeType":"IdentifierPath","referencedDeclaration":117,"src":"4065:15:18"},"nodeType":"ModifierInvocation","src":"4065:24:18"},{"arguments":[{"id":8424,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8418,"src":"4098:13:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8425,"kind":"baseConstructorSpecifier","modifierName":{"id":8423,"name":"Ownable","nameLocations":["4090:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":2215,"src":"4090:7:18"},"nodeType":"ModifierInvocation","src":"4090:22:18"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8406,"mutability":"mutable","name":"_router","nameLocation":"3873:7:18","nodeType":"VariableDeclaration","scope":8450,"src":"3865:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8405,"name":"address","nodeType":"ElementaryTypeName","src":"3865:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8408,"mutability":"mutable","name":"_subscriptionId","nameLocation":"3897:15:18","nodeType":"VariableDeclaration","scope":8450,"src":"3890:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8407,"name":"uint64","nodeType":"ElementaryTypeName","src":"3890:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":8410,"mutability":"mutable","name":"_gasLimit","nameLocation":"3929:9:18","nodeType":"VariableDeclaration","scope":8450,"src":"3922:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8409,"name":"uint32","nodeType":"ElementaryTypeName","src":"3922:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8412,"mutability":"mutable","name":"_donID","nameLocation":"3956:6:18","nodeType":"VariableDeclaration","scope":8450,"src":"3948:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8411,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3948:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8414,"mutability":"mutable","name":"_sourceCode","nameLocation":"3986:11:18","nodeType":"VariableDeclaration","scope":8450,"src":"3972:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8413,"name":"string","nodeType":"ElementaryTypeName","src":"3972:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8416,"mutability":"mutable","name":"_nftContract","nameLocation":"4015:12:18","nodeType":"VariableDeclaration","scope":8450,"src":"4007:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8415,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":8418,"mutability":"mutable","name":"_initialOwner","nameLocation":"4045:13:18","nodeType":"VariableDeclaration","scope":8450,"src":"4037:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8417,"name":"address","nodeType":"ElementaryTypeName","src":"4037:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3855:209:18"},"returnParameters":{"id":8426,"nodeType":"ParameterList","parameters":[],"src":"4113:0:18"},"scope":9105,"src":"3844:463:18","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8603,"nodeType":"Block","src":"4725:1609:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8465,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4743:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4747:5:18","memberName":"value","nodeType":"MemberAccess","src":"4743:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8467,"name":"verificationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"4756:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4743:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420666565","id":8469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4773:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","typeString":"literal_string \"Insufficient fee\""},"value":"Insufficient fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","typeString":"literal_string \"Insufficient fee\""}],"id":8464,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4735:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4735:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8471,"nodeType":"ExpressionStatement","src":"4735:57:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8475,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"4816:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8473,"name":"bytes","nodeType":"ElementaryTypeName","src":"4810:5:18","typeDescriptions":{}}},"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4827:6:18","memberName":"length","nodeType":"MemberAccess","src":"4810:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4836:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:27:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420495046532068617368","id":8480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4839:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_16b93e183216172d11ba47c5b359ff9d73286134337457ca2c0ddf4139e5ce8d","typeString":"literal_string \"Invalid IPFS hash\""},"value":"Invalid IPFS hash"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_16b93e183216172d11ba47c5b359ff9d73286134337457ca2c0ddf4139e5ce8d","typeString":"literal_string \"Invalid IPFS hash\""}],"id":8472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4802:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4802:57:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8482,"nodeType":"ExpressionStatement","src":"4802:57:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":8486,"name":"_mediaType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"4883:10:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":8485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4877:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":8484,"name":"bytes","nodeType":"ElementaryTypeName","src":"4877:5:18","typeDescriptions":{}}},"id":8487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4877:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4895:6:18","memberName":"length","nodeType":"MemberAccess","src":"4877:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4904:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4877:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d656469612074797065","id":8491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4907:20:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_73a11fcc6b8003fedb42e9d98a49ba10da586f9eee05f23b7b0ce43172dbac98","typeString":"literal_string \"Invalid media type\""},"value":"Invalid media type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_73a11fcc6b8003fedb42e9d98a49ba10da586f9eee05f23b7b0ce43172dbac98","typeString":"literal_string \"Invalid media type\""}],"id":8483,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4869:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8493,"nodeType":"ExpressionStatement","src":"4869:59:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":8495,"name":"verificationResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"4959:19:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VerificationResult_$8290_storage_$","typeString":"mapping(string memory => struct AuthenticityRegistry.VerificationResult storage ref)"}},"id":8497,"indexExpression":{"id":8496,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"4979:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4959:30:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_storage","typeString":"struct AuthenticityRegistry.VerificationResult storage ref"}},"id":8498,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4990:9:18","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":8289,"src":"4959:40:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4959:45:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74656e7420616c7265616479207665726966696564","id":8501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5018:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_14e7622da93d3b7cc5ffe60dda19161d76e85992bc233c1293633fed7820ec90","typeString":"literal_string \"Content already verified\""},"value":"Content already verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_14e7622da93d3b7cc5ffe60dda19161d76e85992bc233c1293633fed7820ec90","typeString":"literal_string \"Content already verified\""}],"id":8494,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4938:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4938:116:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8503,"nodeType":"ExpressionStatement","src":"4938:116:18"},{"assignments":[8508],"declarations":[{"constant":false,"id":8508,"mutability":"mutable","name":"req","nameLocation":"5143:3:18","nodeType":"VariableDeclaration","scope":8603,"src":"5111:35:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request"},"typeName":{"id":8507,"nodeType":"UserDefinedTypeName","pathNode":{"id":8506,"name":"FunctionsRequest.Request","nameLocations":["5111:16:18","5128:7:18"],"nodeType":"IdentifierPath","referencedDeclaration":306,"src":"5111:24:18"},"referencedDeclaration":306,"src":"5111:24:18","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_storage_ptr","typeString":"struct FunctionsRequest.Request"}},"visibility":"internal"}],"id":8509,"nodeType":"VariableDeclarationStatement","src":"5111:35:18"},{"expression":{"arguments":[{"id":8513,"name":"sourceCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"5197:10:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":8510,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"5156:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":8512,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5160:36:18","memberName":"initializeRequestForInlineJavaScript","nodeType":"MemberAccess","referencedDeclaration":585,"src":"5156:40:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$306_memory_ptr_$_t_string_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$306_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory,string memory) pure"}},"id":8514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5156:52:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8515,"nodeType":"ExpressionStatement","src":"5156:52:18"},{"assignments":[8520],"declarations":[{"constant":false,"id":8520,"mutability":"mutable","name":"args","nameLocation":"5291:4:18","nodeType":"VariableDeclaration","scope":8603,"src":"5275:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8518,"name":"string","nodeType":"ElementaryTypeName","src":"5275:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8519,"nodeType":"ArrayTypeName","src":"5275:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"id":8526,"initialValue":{"arguments":[{"hexValue":"32","id":8524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5311:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"id":8523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5298:12:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (string memory[] memory)"},"typeName":{"baseType":{"id":8521,"name":"string","nodeType":"ElementaryTypeName","src":"5302:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8522,"nodeType":"ArrayTypeName","src":"5302:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}}},"id":8525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5298:15:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5275:38:18"},{"expression":{"id":8531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8527,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"5323:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8529,"indexExpression":{"hexValue":"30","id":8528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5328:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5323:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8530,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"5333:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5323:19:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8532,"nodeType":"ExpressionStatement","src":"5323:19:18"},{"expression":{"id":8537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8533,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"5352:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}},"id":8535,"indexExpression":{"hexValue":"31","id":8534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5357:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5352:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8536,"name":"_mediaType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"5362:10:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5352:20:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":8538,"nodeType":"ExpressionStatement","src":"5352:20:18"},{"expression":{"arguments":[{"id":8542,"name":"args","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8520,"src":"5394:4:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string memory[] memory"}],"expression":{"id":8539,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"5382:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":8541,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5386:7:18","memberName":"setArgs","nodeType":"MemberAccess","referencedDeclaration":702,"src":"5382:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$306_memory_ptr_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$returns$__$attached_to$_t_struct$_Request_$306_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory,string memory[] memory) pure"}},"id":8543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5382:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8544,"nodeType":"ExpressionStatement","src":"5382:17:18"},{"assignments":[8546],"declarations":[{"constant":false,"id":8546,"mutability":"mutable","name":"requestId","nameLocation":"5442:9:18","nodeType":"VariableDeclaration","scope":8603,"src":"5434:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8545,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5434:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8555,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":8548,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"5480:3:18","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$306_memory_ptr","typeString":"struct FunctionsRequest.Request memory"}},"id":8549,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5484:10:18","memberName":"encodeCBOR","nodeType":"MemberAccess","referencedDeclaration":521,"src":"5480:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_Request_$306_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_struct$_Request_$306_memory_ptr_$","typeString":"function (struct FunctionsRequest.Request memory) pure returns (bytes memory)"}},"id":8550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5480:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":8551,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"5510:14:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":8552,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"5538:8:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":8553,"name":"donID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"5560:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":8547,"name":"_sendRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"5454:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_uint64_$_t_uint32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint64,uint32,bytes32) returns (bytes32)"}},"id":8554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:121:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5434:141:18"},{"expression":{"id":8572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8556,"name":"verificationRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"5616:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VerificationRequest_$8277_storage_$","typeString":"mapping(bytes32 => struct AuthenticityRegistry.VerificationRequest storage ref)"}},"id":8558,"indexExpression":{"id":8557,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"5637:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5616:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage","typeString":"struct AuthenticityRegistry.VerificationRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":8560,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5695:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5699:6:18","memberName":"sender","nodeType":"MemberAccess","src":"5695:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8562,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"5729:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8563,"name":"_mediaType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"5763:10:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8564,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5798:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5804:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"5798:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":8566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5840:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"66616c7365","id":8567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5872:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":8568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5908:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"","id":8569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5932:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},{"hexValue":"30","id":8570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5960:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":8559,"name":"VerificationRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8277,"src":"5650:19:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VerificationRequest_$8277_storage_ptr_$","typeString":"type(struct AuthenticityRegistry.VerificationRequest storage pointer)"}},"id":8571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5684:9:18","5719:8:18","5752:9:18","5787:9:18","5827:11:18","5859:11:18","5891:15:18","5923:7:18","5948:10:18"],"names":["requester","ipfsHash","mediaType","timestamp","isProcessed","isAuthentic","confidenceScore","aiModel","nftTokenId"],"nodeType":"FunctionCall","src":"5650:322:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest memory"}},"src":"5616:356:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage","typeString":"struct AuthenticityRegistry.VerificationRequest storage ref"}},"id":8573,"nodeType":"ExpressionStatement","src":"5616:356:18"},{"expression":{"arguments":[{"id":8579,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"6051:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"baseExpression":{"id":8574,"name":"userRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"6021:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":8577,"indexExpression":{"expression":{"id":8575,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6034:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6038:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6034:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6021:24:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6046:4:18","memberName":"push","nodeType":"MemberAccess","src":"6021:29:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":8580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6021:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8581,"nodeType":"ExpressionStatement","src":"6021:40:18"},{"expression":{"arguments":[{"id":8585,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"6090:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":8582,"name":"allRequestIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"6071:13:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":8584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6085:4:18","memberName":"push","nodeType":"MemberAccess","src":"6071:18:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":8586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6071:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8587,"nodeType":"ExpressionStatement","src":"6071:29:18"},{"expression":{"id":8589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6110:20:18","subExpression":{"id":8588,"name":"totalVerifications","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"6110:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8590,"nodeType":"ExpressionStatement","src":"6110:20:18"},{"eventCall":{"arguments":[{"id":8592,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"6181:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8593,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6204:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6208:6:18","memberName":"sender","nodeType":"MemberAccess","src":"6204:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8595,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"6228:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8596,"name":"_mediaType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8455,"src":"6251:10:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8597,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6275:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6281:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"6275:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8591,"name":"VerificationRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8355,"src":"6146:21:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,address,string memory,string memory,uint256)"}},"id":8599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6146:154:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8600,"nodeType":"EmitStatement","src":"6141:159:18"},{"expression":{"id":8601,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8546,"src":"6318:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":8463,"id":8602,"nodeType":"Return","src":"6311:16:18"}]},"documentation":{"id":8451,"nodeType":"StructuredDocumentation","src":"4313:243:18","text":" @notice Request verification for media content\n @param _ipfsHash IPFS hash of the media to verify\n @param _mediaType Type of media (image, video, audio)\n @return requestId The ID of the verification request"},"functionSelector":"4de2bfbf","id":8604,"implemented":true,"kind":"function","modifiers":[{"id":8458,"kind":"modifierInvocation","modifierName":{"id":8457,"name":"nonReentrant","nameLocations":["4680:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"4680:12:18"},"nodeType":"ModifierInvocation","src":"4680:12:18"},{"id":8460,"kind":"modifierInvocation","modifierName":{"id":8459,"name":"whenNotPaused","nameLocations":["4693:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"4693:13:18"},"nodeType":"ModifierInvocation","src":"4693:13:18"}],"name":"requestVerification","nameLocation":"4570:19:18","nodeType":"FunctionDefinition","parameters":{"id":8456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8453,"mutability":"mutable","name":"_ipfsHash","nameLocation":"4613:9:18","nodeType":"VariableDeclaration","scope":8604,"src":"4599:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8452,"name":"string","nodeType":"ElementaryTypeName","src":"4599:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8455,"mutability":"mutable","name":"_mediaType","nameLocation":"4646:10:18","nodeType":"VariableDeclaration","scope":8604,"src":"4632:24:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8454,"name":"string","nodeType":"ElementaryTypeName","src":"4632:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4589:73:18"},"returnParameters":{"id":8463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8462,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8604,"src":"4716:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8461,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4716:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4715:9:18"},"scope":9105,"src":"4561:1773:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[82],"body":{"id":8753,"nodeType":"Block","src":"6733:1623:18","statements":[{"assignments":[8617],"declarations":[{"constant":false,"id":8617,"mutability":"mutable","name":"request","nameLocation":"6771:7:18","nodeType":"VariableDeclaration","scope":8753,"src":"6743:35:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest"},"typeName":{"id":8616,"nodeType":"UserDefinedTypeName","pathNode":{"id":8615,"name":"VerificationRequest","nameLocations":["6743:19:18"],"nodeType":"IdentifierPath","referencedDeclaration":8277,"src":"6743:19:18"},"referencedDeclaration":8277,"src":"6743:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest"}},"visibility":"internal"}],"id":8621,"initialValue":{"baseExpression":{"id":8618,"name":"verificationRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"6781:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VerificationRequest_$8277_storage_$","typeString":"mapping(bytes32 => struct AuthenticityRegistry.VerificationRequest storage ref)"}},"id":8620,"indexExpression":{"id":8619,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"6802:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6781:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage","typeString":"struct AuthenticityRegistry.VerificationRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6743:69:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8623,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"6830:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8624,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6838:9:18","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":8266,"src":"6830:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6850:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6830:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52657175657374206e6f7420666f756e64","id":8627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6853:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_08d952b17500dd5902992a000c0649ecce782bfe207c5a5b9167049eb212b204","typeString":"literal_string \"Request not found\""},"value":"Request not found"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_08d952b17500dd5902992a000c0649ecce782bfe207c5a5b9167049eb212b204","typeString":"literal_string \"Request not found\""}],"id":8622,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6822:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6822:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8629,"nodeType":"ExpressionStatement","src":"6822:51:18"},{"expression":{"arguments":[{"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6891:20:18","subExpression":{"expression":{"id":8631,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"6892:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6900:11:18","memberName":"isProcessed","nodeType":"MemberAccess","referencedDeclaration":8268,"src":"6892:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265717565737420616c72656164792070726f636573736564","id":8634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6913:27:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_535f5f32107992b7b77fb6e593b8613bbafe3a6b338595ec1976a624e8d8f6b4","typeString":"literal_string \"Request already processed\""},"value":"Request already processed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_535f5f32107992b7b77fb6e593b8613bbafe3a6b338595ec1976a624e8d8f6b4","typeString":"literal_string \"Request already processed\""}],"id":8630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6883:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6883:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8636,"nodeType":"ExpressionStatement","src":"6883:58:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8637,"name":"err","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8611,"src":"6956:3:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":8638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6960:6:18","memberName":"length","nodeType":"MemberAccess","src":"6956:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6969:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6956:14:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8649,"nodeType":"IfStatement","src":"6952:124:18","trueBody":{"id":8648,"nodeType":"Block","src":"6972:104:18","statements":[{"expression":{"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8641,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"7019:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8643,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7027:11:18","memberName":"isProcessed","nodeType":"MemberAccess","referencedDeclaration":8268,"src":"7019:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7041:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7019:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8646,"nodeType":"ExpressionStatement","src":"7019:26:18"},{"functionReturnParameters":8614,"id":8647,"nodeType":"Return","src":"7059:7:18"}]}},{"assignments":[8651,8653,8655,8657],"declarations":[{"constant":false,"id":8651,"mutability":"mutable","name":"isAuthentic","nameLocation":"7171:11:18","nodeType":"VariableDeclaration","scope":8753,"src":"7166:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8650,"name":"bool","nodeType":"ElementaryTypeName","src":"7166:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8653,"mutability":"mutable","name":"confidenceScore","nameLocation":"7192:15:18","nodeType":"VariableDeclaration","scope":8753,"src":"7184:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8652,"name":"uint256","nodeType":"ElementaryTypeName","src":"7184:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8655,"mutability":"mutable","name":"aiModel","nameLocation":"7223:7:18","nodeType":"VariableDeclaration","scope":8753,"src":"7209:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8654,"name":"string","nodeType":"ElementaryTypeName","src":"7209:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":8657,"mutability":"mutable","name":"reasoning","nameLocation":"7246:9:18","nodeType":"VariableDeclaration","scope":8753,"src":"7232:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8656,"name":"string","nodeType":"ElementaryTypeName","src":"7232:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":8671,"initialValue":{"arguments":[{"id":8660,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"7283:8:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":8662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7294:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":8661,"name":"bool","nodeType":"ElementaryTypeName","src":"7294:4:18","typeDescriptions":{}}},{"id":8664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7300:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8663,"name":"uint256","nodeType":"ElementaryTypeName","src":"7300:7:18","typeDescriptions":{}}},{"id":8666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7309:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8665,"name":"string","nodeType":"ElementaryTypeName","src":"7309:6:18","typeDescriptions":{}}},{"id":8668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7317:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":8667,"name":"string","nodeType":"ElementaryTypeName","src":"7317:6:18","typeDescriptions":{}}}],"id":8669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7293:31:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_uint256_$_$_t_type$_t_string_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$","typeString":"tuple(type(bool),type(uint256),type(string storage pointer),type(string storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_bool_$_$_t_type$_t_uint256_$_$_t_type$_t_string_storage_ptr_$_$_t_type$_t_string_storage_ptr_$_$","typeString":"tuple(type(bool),type(uint256),type(string storage pointer),type(string storage pointer))"}],"expression":{"id":8658,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7272:3:18","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":8659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7276:6:18","memberName":"decode","nodeType":"MemberAccess","src":"7272:10:18","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":8670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7272:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$","typeString":"tuple(bool,uint256,string memory,string memory)"}},"nodeType":"VariableDeclarationStatement","src":"7165:160:18"},{"expression":{"id":8676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8672,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"7362:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8674,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7370:11:18","memberName":"isProcessed","nodeType":"MemberAccess","referencedDeclaration":8268,"src":"7362:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7384:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7362:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8677,"nodeType":"ExpressionStatement","src":"7362:26:18"},{"expression":{"id":8682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8678,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"7398:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7406:11:18","memberName":"isAuthentic","nodeType":"MemberAccess","referencedDeclaration":8270,"src":"7398:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8681,"name":"isAuthentic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"7420:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7398:33:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8683,"nodeType":"ExpressionStatement","src":"7398:33:18"},{"expression":{"id":8688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8684,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"7441:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7449:15:18","memberName":"confidenceScore","nodeType":"MemberAccess","referencedDeclaration":8272,"src":"7441:23:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8687,"name":"confidenceScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"7467:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7441:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8689,"nodeType":"ExpressionStatement","src":"7441:41:18"},{"expression":{"id":8694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8690,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"7492:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8692,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7500:7:18","memberName":"aiModel","nodeType":"MemberAccess","referencedDeclaration":8274,"src":"7492:15:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8693,"name":"aiModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"7510:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"7492:25:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8695,"nodeType":"ExpressionStatement","src":"7492:25:18"},{"expression":{"id":8709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8696,"name":"verificationResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"7552:19:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VerificationResult_$8290_storage_$","typeString":"mapping(string memory => struct AuthenticityRegistry.VerificationResult storage ref)"}},"id":8699,"indexExpression":{"expression":{"id":8697,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"7572:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8698,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7580:8:18","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":8262,"src":"7572:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7552:37:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_storage","typeString":"struct AuthenticityRegistry.VerificationResult storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8701,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"7636:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":8702,"name":"isAuthentic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"7672:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8703,"name":"confidenceScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"7714:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8704,"name":"aiModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"7752:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":8705,"name":"reasoning","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8657,"src":"7784:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8706,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7818:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7824:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"7818:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8700,"name":"VerificationResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8290,"src":"7592:18:18","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_VerificationResult_$8290_storage_ptr_$","typeString":"type(struct AuthenticityRegistry.VerificationResult storage pointer)"}},"id":8708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7625:9:18","7659:11:18","7697:15:18","7743:7:18","7773:9:18","7807:9:18"],"names":["requestId","isAuthentic","confidenceScore","aiModel","reasoning","timestamp"],"nodeType":"FunctionCall","src":"7592:252:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult memory"}},"src":"7552:292:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_storage","typeString":"struct AuthenticityRegistry.VerificationResult storage ref"}},"id":8710,"nodeType":"ExpressionStatement","src":"7552:292:18"},{"condition":{"id":8711,"name":"isAuthentic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"7888:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":8740,"nodeType":"Block","src":"8003:143:18","statements":[{"expression":{"id":8724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8017:11:18","subExpression":{"id":8723,"name":"totalFake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"8017:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8725,"nodeType":"ExpressionStatement","src":"8017:11:18"},{"expression":{"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":8726,"name":"flaggedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"8042:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":8729,"indexExpression":{"expression":{"id":8727,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"8057:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8065:8:18","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":8262,"src":"8057:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8042:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":8730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8077:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8042:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8732,"nodeType":"ExpressionStatement","src":"8042:39:18"},{"expression":{"arguments":[{"expression":{"id":8736,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"8118:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8737,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8126:8:18","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":8262,"src":"8118:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":8733,"name":"allFlaggedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"8095:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":8735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8113:4:18","memberName":"push","nodeType":"MemberAccess","src":"8095:22:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":8738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8739,"nodeType":"ExpressionStatement","src":"8095:40:18"}]},"id":8741,"nodeType":"IfStatement","src":"7884:262:18","trueBody":{"id":8722,"nodeType":"Block","src":"7901:96:18","statements":[{"expression":{"id":8713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7915:16:18","subExpression":{"id":8712,"name":"totalAuthentic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"7915:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8714,"nodeType":"ExpressionStatement","src":"7915:16:18"},{"expression":{"arguments":[{"expression":{"id":8718,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"7969:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8719,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7977:8:18","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":8262,"src":"7969:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":8715,"name":"allVerifiedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"7945:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7964:4:18","memberName":"push","nodeType":"MemberAccess","src":"7945:23:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":8720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7945:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8721,"nodeType":"ExpressionStatement","src":"7945:41:18"}]}},{"eventCall":{"arguments":[{"id":8743,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8607,"src":"8196:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":8744,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8617,"src":"8219:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8227:8:18","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":8262,"src":"8219:16:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":8746,"name":"isAuthentic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8651,"src":"8249:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8747,"name":"confidenceScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8653,"src":"8274:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8748,"name":"aiModel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8655,"src":"8303:7:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8749,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8324:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8330:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"8324:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8742,"name":"VerificationCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8369,"src":"8161:21:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_string_memory_ptr_$_t_bool_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (bytes32,string memory,bool,uint256,string memory,uint256)"}},"id":8751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8161:188:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8752,"nodeType":"EmitStatement","src":"8156:193:18"}]},"documentation":{"id":8605,"nodeType":"StructuredDocumentation","src":"6340:256:18","text":" @notice Chainlink Functions callback - processes verification result\n @param requestId The ID of the request\n @param response The verification result from AI service\n @param err Any error that occurred during processing"},"id":8754,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRequest","nameLocation":"6610:14:18","nodeType":"FunctionDefinition","overrides":{"id":8613,"nodeType":"OverrideSpecifier","overrides":[],"src":"6724:8:18"},"parameters":{"id":8612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8607,"mutability":"mutable","name":"requestId","nameLocation":"6642:9:18","nodeType":"VariableDeclaration","scope":8754,"src":"6634:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6634:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8609,"mutability":"mutable","name":"response","nameLocation":"6674:8:18","nodeType":"VariableDeclaration","scope":8754,"src":"6661:21:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8608,"name":"bytes","nodeType":"ElementaryTypeName","src":"6661:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":8611,"mutability":"mutable","name":"err","nameLocation":"6705:3:18","nodeType":"VariableDeclaration","scope":8754,"src":"6692:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":8610,"name":"bytes","nodeType":"ElementaryTypeName","src":"6692:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6624:90:18"},"returnParameters":{"id":8614,"nodeType":"ParameterList","parameters":[],"src":"6733:0:18"},"scope":9105,"src":"6601:1755:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":8865,"nodeType":"Block","src":"8682:1088:18","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8767,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8700:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8704:5:18","memberName":"value","nodeType":"MemberAccess","src":"8700:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":8769,"name":"nftMintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"8713:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8700:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74204e4654206d696e7420666565","id":8771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8725:27:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d4718cdfa5bf87492409ecc5441fccd1b8761af503a846976cba24acaf007f56","typeString":"literal_string \"Insufficient NFT mint fee\""},"value":"Insufficient NFT mint fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d4718cdfa5bf87492409ecc5441fccd1b8761af503a846976cba24acaf007f56","typeString":"literal_string \"Insufficient NFT mint fee\""}],"id":8766,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8692:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8692:61:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8773,"nodeType":"ExpressionStatement","src":"8692:61:18"},{"assignments":[8776],"declarations":[{"constant":false,"id":8776,"mutability":"mutable","name":"result","nameLocation":"8798:6:18","nodeType":"VariableDeclaration","scope":8865,"src":"8772:32:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult"},"typeName":{"id":8775,"nodeType":"UserDefinedTypeName","pathNode":{"id":8774,"name":"VerificationResult","nameLocations":["8772:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":8290,"src":"8772:18:18"},"referencedDeclaration":8290,"src":"8772:18:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationResult"}},"visibility":"internal"}],"id":8780,"initialValue":{"baseExpression":{"id":8777,"name":"verificationResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"8807:19:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VerificationResult_$8290_storage_$","typeString":"mapping(string memory => struct AuthenticityRegistry.VerificationResult storage ref)"}},"id":8779,"indexExpression":{"id":8778,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"8827:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8807:30:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_storage","typeString":"struct AuthenticityRegistry.VerificationResult storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8772:65:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8782,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"8855:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult memory"}},"id":8783,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8862:9:18","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":8289,"src":"8855:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":8784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8874:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8855:20:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74656e74206e6f74207665726966696564","id":8786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8877:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e26650395b346d54e80f6b44a0d0e1468af4f20fe5e65d69fd12fa8f5cb46ff","typeString":"literal_string \"Content not verified\""},"value":"Content not verified"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e26650395b346d54e80f6b44a0d0e1468af4f20fe5e65d69fd12fa8f5cb46ff","typeString":"literal_string \"Content not verified\""}],"id":8781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8847:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8847:53:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8788,"nodeType":"ExpressionStatement","src":"8847:53:18"},{"expression":{"arguments":[{"expression":{"id":8790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"8918:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult memory"}},"id":8791,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8925:11:18","memberName":"isAuthentic","nodeType":"MemberAccess","referencedDeclaration":8281,"src":"8918:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74656e74206973206e6f742061757468656e746963","id":8792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8938:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a06c24775ea04286bcbf6c64d8306a433af2285a48ba9a8242c0903e932a261","typeString":"literal_string \"Content is not authentic\""},"value":"Content is not authentic"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0a06c24775ea04286bcbf6c64d8306a433af2285a48ba9a8242c0903e932a261","typeString":"literal_string \"Content is not authentic\""}],"id":8789,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8910:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8910:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8794,"nodeType":"ExpressionStatement","src":"8910:55:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8796,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"8983:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult memory"}},"id":8797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8990:15:18","memberName":"confidenceScore","nodeType":"MemberAccess","referencedDeclaration":8283,"src":"8983:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"3830","id":8798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9009:2:18","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},"src":"8983:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e666964656e63652073636f726520746f6f206c6f77","id":8800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9013:26:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_840604282ab447f8d449ec2c3da6f7ac6eb9150a1f7447cad8115ecb6b706565","typeString":"literal_string \"Confidence score too low\""},"value":"Confidence score too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_840604282ab447f8d449ec2c3da6f7ac6eb9150a1f7447cad8115ecb6b706565","typeString":"literal_string \"Confidence score too low\""}],"id":8795,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8975:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8975:65:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8802,"nodeType":"ExpressionStatement","src":"8975:65:18"},{"assignments":[8804],"declarations":[{"constant":false,"id":8804,"mutability":"mutable","name":"requestId","nameLocation":"9115:9:18","nodeType":"VariableDeclaration","scope":8865,"src":"9107:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8803,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9107:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":8807,"initialValue":{"expression":{"id":8805,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"9127:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult memory"}},"id":8806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9134:9:18","memberName":"requestId","nodeType":"MemberAccess","referencedDeclaration":8279,"src":"9127:16:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9107:36:18"},{"assignments":[8810],"declarations":[{"constant":false,"id":8810,"mutability":"mutable","name":"request","nameLocation":"9181:7:18","nodeType":"VariableDeclaration","scope":8865,"src":"9153:35:18","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest"},"typeName":{"id":8809,"nodeType":"UserDefinedTypeName","pathNode":{"id":8808,"name":"VerificationRequest","nameLocations":["9153:19:18"],"nodeType":"IdentifierPath","referencedDeclaration":8277,"src":"9153:19:18"},"referencedDeclaration":8277,"src":"9153:19:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest"}},"visibility":"internal"}],"id":8814,"initialValue":{"baseExpression":{"id":8811,"name":"verificationRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8306,"src":"9191:20:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_VerificationRequest_$8277_storage_$","typeString":"mapping(bytes32 => struct AuthenticityRegistry.VerificationRequest storage ref)"}},"id":8813,"indexExpression":{"id":8812,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8804,"src":"9212:9:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9191:31:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage","typeString":"struct AuthenticityRegistry.VerificationRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"9153:69:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":8820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8816,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"9240:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8817,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9248:9:18","memberName":"requester","nodeType":"MemberAccess","referencedDeclaration":8260,"src":"9240:17:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":8818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9261:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9265:6:18","memberName":"sender","nodeType":"MemberAccess","src":"9261:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9240:31:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207265717565737465722063616e206d696e74204e4654","id":8821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9273:29:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_9566976addb8f41ad617ad10078b9530090ef4695fa20201818c0229cb66a61e","typeString":"literal_string \"Only requester can mint NFT\""},"value":"Only requester can mint NFT"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9566976addb8f41ad617ad10078b9530090ef4695fa20201818c0229cb66a61e","typeString":"literal_string \"Only requester can mint NFT\""}],"id":8815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9232:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9232:71:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8823,"nodeType":"ExpressionStatement","src":"9232:71:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":8825,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"9321:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8826,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9329:10:18","memberName":"nftTokenId","nodeType":"MemberAccess","referencedDeclaration":8276,"src":"9321:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":8827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9343:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9321:23:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e465420616c7265616479206d696e746564","id":8829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9346:20:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4586ab4fa36a1c133f47345078e15047165b4dc9694dd4653abea3a7e431f0f0","typeString":"literal_string \"NFT already minted\""},"value":"NFT already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4586ab4fa36a1c133f47345078e15047165b4dc9694dd4653abea3a7e431f0f0","typeString":"literal_string \"NFT already minted\""}],"id":8824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9313:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9313:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8831,"nodeType":"ExpressionStatement","src":"9313:54:18"},{"assignments":[8833],"declarations":[{"constant":false,"id":8833,"mutability":"mutable","name":"tokenId","nameLocation":"9406:7:18","nodeType":"VariableDeclaration","scope":8865,"src":"9398:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8832,"name":"uint256","nodeType":"ElementaryTypeName","src":"9398:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8844,"initialValue":{"arguments":[{"expression":{"id":8836,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9465:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9469:6:18","memberName":"sender","nodeType":"MemberAccess","src":"9465:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8838,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"9489:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8839,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"9512:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult memory"}},"id":8840,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9519:15:18","memberName":"confidenceScore","nodeType":"MemberAccess","referencedDeclaration":8283,"src":"9512:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8776,"src":"9548:6:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult memory"}},"id":8842,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9555:7:18","memberName":"aiModel","nodeType":"MemberAccess","referencedDeclaration":8285,"src":"9548:14:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":8834,"name":"authenticityNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8293,"src":"9416:15:18","typeDescriptions":{"typeIdentifier":"t_contract$_AuthenticityNFT_$8237","typeString":"contract AuthenticityNFT"}},"id":8835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9432:19:18","memberName":"mintAuthenticityNFT","nodeType":"MemberAccess","referencedDeclaration":7723,"src":"9416:35:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$","typeString":"function (address,string memory,uint256,string memory) external returns (uint256)"}},"id":8843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9416:156:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9398:174:18"},{"expression":{"id":8849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":8845,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8810,"src":"9609:7:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationRequest_$8277_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationRequest storage pointer"}},"id":8847,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9617:10:18","memberName":"nftTokenId","nodeType":"MemberAccess","referencedDeclaration":8276,"src":"9609:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"9630:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9609:28:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8850,"nodeType":"ExpressionStatement","src":"9609:28:18"},{"expression":{"id":8852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9647:17:18","subExpression":{"id":8851,"name":"totalNFTsMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"9647:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8853,"nodeType":"ExpressionStatement","src":"9647:17:18"},{"eventCall":{"arguments":[{"id":8855,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8757,"src":"9690:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":8856,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9701:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9705:6:18","memberName":"sender","nodeType":"MemberAccess","src":"9701:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":8858,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"9713:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8859,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9722:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9728:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"9722:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8854,"name":"NFTMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8387,"src":"9680:9:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256,uint256)"}},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9680:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8862,"nodeType":"EmitStatement","src":"9675:63:18"},{"expression":{"id":8863,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8833,"src":"9756:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8765,"id":8864,"nodeType":"Return","src":"9749:14:18"}]},"documentation":{"id":8755,"nodeType":"StructuredDocumentation","src":"8362:185:18","text":" @notice Mint NFT certificate for authentic content\n @param _ipfsHash IPFS hash of the verified authentic content\n @return tokenId The ID of the minted NFT"},"functionSelector":"8047bc1d","id":8866,"implemented":true,"kind":"function","modifiers":[{"id":8760,"kind":"modifierInvocation","modifierName":{"id":8759,"name":"nonReentrant","nameLocations":["8637:12:18"],"nodeType":"IdentifierPath","referencedDeclaration":2533,"src":"8637:12:18"},"nodeType":"ModifierInvocation","src":"8637:12:18"},{"id":8762,"kind":"modifierInvocation","modifierName":{"id":8761,"name":"whenNotPaused","nameLocations":["8650:13:18"],"nodeType":"IdentifierPath","referencedDeclaration":2425,"src":"8650:13:18"},"nodeType":"ModifierInvocation","src":"8650:13:18"}],"name":"mintAuthenticityNFT","nameLocation":"8561:19:18","nodeType":"FunctionDefinition","parameters":{"id":8758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8757,"mutability":"mutable","name":"_ipfsHash","nameLocation":"8604:9:18","nodeType":"VariableDeclaration","scope":8866,"src":"8590:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8756,"name":"string","nodeType":"ElementaryTypeName","src":"8590:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8580:39:18"},"returnParameters":{"id":8765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8866,"src":"8673:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8763,"name":"uint256","nodeType":"ElementaryTypeName","src":"8673:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8672:9:18"},"scope":9105,"src":"8552:1218:18","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":8879,"nodeType":"Block","src":"10058:54:18","statements":[{"expression":{"baseExpression":{"id":8875,"name":"verificationResults","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8311,"src":"10075:19:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_struct$_VerificationResult_$8290_storage_$","typeString":"mapping(string memory => struct AuthenticityRegistry.VerificationResult storage ref)"}},"id":8877,"indexExpression":{"id":8876,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8869,"src":"10095:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10075:30:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_storage","typeString":"struct AuthenticityRegistry.VerificationResult storage ref"}},"functionReturnParameters":8874,"id":8878,"nodeType":"Return","src":"10068:37:18"}]},"documentation":{"id":8867,"nodeType":"StructuredDocumentation","src":"9776:157:18","text":" @notice Get verification result for content\n @param _ipfsHash IPFS hash of the content\n @return result The verification result"},"functionSelector":"cddc911f","id":8880,"implemented":true,"kind":"function","modifiers":[],"name":"getVerificationResult","nameLocation":"9947:21:18","nodeType":"FunctionDefinition","parameters":{"id":8870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8869,"mutability":"mutable","name":"_ipfsHash","nameLocation":"9992:9:18","nodeType":"VariableDeclaration","scope":8880,"src":"9978:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8868,"name":"string","nodeType":"ElementaryTypeName","src":"9978:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9968:39:18"},"returnParameters":{"id":8874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8880,"src":"10031:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_memory_ptr","typeString":"struct AuthenticityRegistry.VerificationResult"},"typeName":{"id":8872,"nodeType":"UserDefinedTypeName","pathNode":{"id":8871,"name":"VerificationResult","nameLocations":["10031:18:18"],"nodeType":"IdentifierPath","referencedDeclaration":8290,"src":"10031:18:18"},"referencedDeclaration":8290,"src":"10031:18:18","typeDescriptions":{"typeIdentifier":"t_struct$_VerificationResult_$8290_storage_ptr","typeString":"struct AuthenticityRegistry.VerificationResult"}},"visibility":"internal"}],"src":"10030:27:18"},"scope":9105,"src":"9938:174:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8893,"nodeType":"Block","src":"10364:43:18","statements":[{"expression":{"baseExpression":{"id":8889,"name":"userRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8316,"src":"10381:12:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_bytes32_$dyn_storage_$","typeString":"mapping(address => bytes32[] storage ref)"}},"id":8891,"indexExpression":{"id":8890,"name":"_user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8883,"src":"10394:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10381:19:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":8888,"id":8892,"nodeType":"Return","src":"10374:26:18"}]},"documentation":{"id":8881,"nodeType":"StructuredDocumentation","src":"10118:146:18","text":" @notice Get user's verification requests\n @param _user Address of the user\n @return requestIds Array of request IDs"},"functionSelector":"b337cf74","id":8894,"implemented":true,"kind":"function","modifiers":[],"name":"getUserRequests","nameLocation":"10278:15:18","nodeType":"FunctionDefinition","parameters":{"id":8884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8883,"mutability":"mutable","name":"_user","nameLocation":"10311:5:18","nodeType":"VariableDeclaration","scope":8894,"src":"10303:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8882,"name":"address","nodeType":"ElementaryTypeName","src":"10303:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10293:29:18"},"returnParameters":{"id":8888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8894,"src":"10346:16:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":8885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10346:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8886,"nodeType":"ArrayTypeName","src":"10346:9:18","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10345:18:18"},"scope":9105,"src":"10269:138:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8903,"nodeType":"Block","src":"10588:42:18","statements":[{"expression":{"id":8901,"name":"allVerifiedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"10605:18:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":8900,"id":8902,"nodeType":"Return","src":"10598:25:18"}]},"documentation":{"id":8895,"nodeType":"StructuredDocumentation","src":"10413:97:18","text":" @notice Get all verified authentic content\n @return Array of IPFS hashes"},"functionSelector":"c8b22d24","id":8904,"implemented":true,"kind":"function","modifiers":[],"name":"getAllVerifiedContent","nameLocation":"10524:21:18","nodeType":"FunctionDefinition","parameters":{"id":8896,"nodeType":"ParameterList","parameters":[],"src":"10545:2:18"},"returnParameters":{"id":8900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8899,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8904,"src":"10571:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8897,"name":"string","nodeType":"ElementaryTypeName","src":"10571:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8898,"nodeType":"ArrayTypeName","src":"10571:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"10570:17:18"},"scope":9105,"src":"10515:115:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8913,"nodeType":"Block","src":"10799:41:18","statements":[{"expression":{"id":8911,"name":"allFlaggedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"10816:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"functionReturnParameters":8910,"id":8912,"nodeType":"Return","src":"10809:24:18"}]},"documentation":{"id":8905,"nodeType":"StructuredDocumentation","src":"10636:86:18","text":" @notice Get all flagged content\n @return Array of IPFS hashes"},"functionSelector":"f33b2491","id":8914,"implemented":true,"kind":"function","modifiers":[],"name":"getAllFlaggedContent","nameLocation":"10736:20:18","nodeType":"FunctionDefinition","parameters":{"id":8906,"nodeType":"ParameterList","parameters":[],"src":"10756:2:18"},"returnParameters":{"id":8910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8914,"src":"10782:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":8907,"name":"string","nodeType":"ElementaryTypeName","src":"10782:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":8908,"nodeType":"ArrayTypeName","src":"10782:8:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"10781:17:18"},"scope":9105,"src":"10727:113:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8932,"nodeType":"Block","src":"11302:88:18","statements":[{"expression":{"components":[{"id":8926,"name":"totalVerifications","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8331,"src":"11320:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8927,"name":"totalAuthentic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8333,"src":"11340:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8928,"name":"totalFake","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8335,"src":"11356:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8929,"name":"totalNFTsMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8337,"src":"11367:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8930,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11319:64:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256,uint256,uint256)"}},"functionReturnParameters":8925,"id":8931,"nodeType":"Return","src":"11312:71:18"}]},"documentation":{"id":8915,"nodeType":"StructuredDocumentation","src":"10846:265:18","text":" @notice Get platform statistics\n @return totalVerifications_ Total number of verifications\n @return totalAuthentic_ Total authentic content\n @return totalFake_ Total fake content\n @return totalNFTsMinted_ Total NFTs minted"},"functionSelector":"372d6b27","id":8933,"implemented":true,"kind":"function","modifiers":[],"name":"getStatistics","nameLocation":"11125:13:18","nodeType":"FunctionDefinition","parameters":{"id":8916,"nodeType":"ParameterList","parameters":[],"src":"11138:2:18"},"returnParameters":{"id":8925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8918,"mutability":"mutable","name":"totalVerifications_","nameLocation":"11181:19:18","nodeType":"VariableDeclaration","scope":8933,"src":"11173:27:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8917,"name":"uint256","nodeType":"ElementaryTypeName","src":"11173:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8920,"mutability":"mutable","name":"totalAuthentic_","nameLocation":"11218:15:18","nodeType":"VariableDeclaration","scope":8933,"src":"11210:23:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8919,"name":"uint256","nodeType":"ElementaryTypeName","src":"11210:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8922,"mutability":"mutable","name":"totalFake_","nameLocation":"11251:10:18","nodeType":"VariableDeclaration","scope":8933,"src":"11243:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8921,"name":"uint256","nodeType":"ElementaryTypeName","src":"11243:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8924,"mutability":"mutable","name":"totalNFTsMinted_","nameLocation":"11279:16:18","nodeType":"VariableDeclaration","scope":8933,"src":"11271:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8923,"name":"uint256","nodeType":"ElementaryTypeName","src":"11271:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11163:138:18"},"scope":9105,"src":"11116:274:18","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":8958,"nodeType":"Block","src":"11668:168:18","statements":[{"expression":{"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8943,"name":"verificationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8340,"src":"11678:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8944,"name":"_verificationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"11696:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11678:34:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8946,"nodeType":"ExpressionStatement","src":"11678:34:18"},{"expression":{"id":8949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8947,"name":"nftMintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8343,"src":"11722:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8948,"name":"_nftMintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"11735:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11722:24:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8950,"nodeType":"ExpressionStatement","src":"11722:24:18"},{"eventCall":{"arguments":[{"id":8952,"name":"_verificationFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8936,"src":"11782:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":8953,"name":"_nftMintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8938,"src":"11800:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":8954,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"11813:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":8955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11819:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"11813:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8951,"name":"FeesUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8395,"src":"11770:11:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":8956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11770:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8957,"nodeType":"EmitStatement","src":"11765:64:18"}]},"documentation":{"id":8934,"nodeType":"StructuredDocumentation","src":"11396:159:18","text":" @notice Update verification fees (owner only)\n @param _verificationFee New verification fee\n @param _nftMintFee New NFT mint fee"},"functionSelector":"6db79437","id":8959,"implemented":true,"kind":"function","modifiers":[{"id":8941,"kind":"modifierInvocation","modifierName":{"id":8940,"name":"onlyOwner","nameLocations":["11658:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"11658:9:18"},"nodeType":"ModifierInvocation","src":"11658:9:18"}],"name":"updateFees","nameLocation":"11569:10:18","nodeType":"FunctionDefinition","parameters":{"id":8939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8936,"mutability":"mutable","name":"_verificationFee","nameLocation":"11597:16:18","nodeType":"VariableDeclaration","scope":8959,"src":"11589:24:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8935,"name":"uint256","nodeType":"ElementaryTypeName","src":"11589:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8938,"mutability":"mutable","name":"_nftMintFee","nameLocation":"11631:11:18","nodeType":"VariableDeclaration","scope":8959,"src":"11623:19:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8937,"name":"uint256","nodeType":"ElementaryTypeName","src":"11623:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11579:69:18"},"returnParameters":{"id":8942,"nodeType":"ParameterList","parameters":[],"src":"11668:0:18"},"scope":9105,"src":"11560:276:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":8989,"nodeType":"Block","src":"12262:137:18","statements":[{"expression":{"id":8975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8973,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8295,"src":"12272:14:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8974,"name":"_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8962,"src":"12289:15:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"12272:32:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":8976,"nodeType":"ExpressionStatement","src":"12272:32:18"},{"expression":{"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8977,"name":"gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"12314:8:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8978,"name":"_gasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8964,"src":"12325:9:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"12314:20:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":8980,"nodeType":"ExpressionStatement","src":"12314:20:18"},{"expression":{"id":8983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8981,"name":"donID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8299,"src":"12344:5:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8982,"name":"_donID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8966,"src":"12352:6:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"12344:14:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":8984,"nodeType":"ExpressionStatement","src":"12344:14:18"},{"expression":{"id":8987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8985,"name":"sourceCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8301,"src":"12368:10:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":8986,"name":"_sourceCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8968,"src":"12381:11:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"12368:24:18","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":8988,"nodeType":"ExpressionStatement","src":"12368:24:18"}]},"documentation":{"id":8960,"nodeType":"StructuredDocumentation","src":"11842:242:18","text":" @notice Update Chainlink Functions configuration (owner only)\n @param _subscriptionId New subscription ID\n @param _gasLimit New gas limit\n @param _donID New DON ID\n @param _sourceCode New source code"},"functionSelector":"79cb62b0","id":8990,"implemented":true,"kind":"function","modifiers":[{"id":8971,"kind":"modifierInvocation","modifierName":{"id":8970,"name":"onlyOwner","nameLocations":["12252:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"12252:9:18"},"nodeType":"ModifierInvocation","src":"12252:9:18"}],"name":"updateChainlinkConfig","nameLocation":"12098:21:18","nodeType":"FunctionDefinition","parameters":{"id":8969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8962,"mutability":"mutable","name":"_subscriptionId","nameLocation":"12136:15:18","nodeType":"VariableDeclaration","scope":8990,"src":"12129:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8961,"name":"uint64","nodeType":"ElementaryTypeName","src":"12129:6:18","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":8964,"mutability":"mutable","name":"_gasLimit","nameLocation":"12168:9:18","nodeType":"VariableDeclaration","scope":8990,"src":"12161:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8963,"name":"uint32","nodeType":"ElementaryTypeName","src":"12161:6:18","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":8966,"mutability":"mutable","name":"_donID","nameLocation":"12195:6:18","nodeType":"VariableDeclaration","scope":8990,"src":"12187:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12187:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":8968,"mutability":"mutable","name":"_sourceCode","nameLocation":"12225:11:18","nodeType":"VariableDeclaration","scope":8990,"src":"12211:25:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":8967,"name":"string","nodeType":"ElementaryTypeName","src":"12211:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12119:123:18"},"returnParameters":{"id":8972,"nodeType":"ParameterList","parameters":[],"src":"12262:0:18"},"scope":9105,"src":"12089:310:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9037,"nodeType":"Block","src":"12517:309:18","statements":[{"assignments":[8997],"declarations":[{"constant":false,"id":8997,"mutability":"mutable","name":"balance","nameLocation":"12535:7:18","nodeType":"VariableDeclaration","scope":9037,"src":"12527:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8996,"name":"uint256","nodeType":"ElementaryTypeName","src":"12527:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9003,"initialValue":{"expression":{"arguments":[{"id":9000,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12553:4:18","typeDescriptions":{"typeIdentifier":"t_contract$_AuthenticityRegistry_$9105","typeString":"contract AuthenticityRegistry"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_AuthenticityRegistry_$9105","typeString":"contract AuthenticityRegistry"}],"id":8999,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12545:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":8998,"name":"address","nodeType":"ElementaryTypeName","src":"12545:7:18","typeDescriptions":{}}},"id":9001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12545:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12559:7:18","memberName":"balance","nodeType":"MemberAccess","src":"12545:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12527:39:18"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9005,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"12584:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":9006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12594:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12584:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2066756e647320746f207769746864726177","id":9008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12597:22:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""},"value":"No funds to withdraw"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4b4cc99522fdcee4d97d6d2d3cbabeb353d40433850bd46ba29c08dbfba843f9","typeString":"literal_string \"No funds to withdraw\""}],"id":9004,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12576:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12576:44:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9010,"nodeType":"ExpressionStatement","src":"12576:44:18"},{"assignments":[9012,null],"declarations":[{"constant":false,"id":9012,"mutability":"mutable","name":"success","nameLocation":"12645:7:18","nodeType":"VariableDeclaration","scope":9037,"src":"12640:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9011,"name":"bool","nodeType":"ElementaryTypeName","src":"12640:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":9023,"initialValue":{"arguments":[{"hexValue":"","id":9021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12696:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9015,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"12666:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12666:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":9014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12658:8:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":9013,"name":"address","nodeType":"ElementaryTypeName","src":"12658:8:18","stateMutability":"payable","typeDescriptions":{}}},"id":9017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12658:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12675:4:18","memberName":"call","nodeType":"MemberAccess","src":"12658:21:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":9019,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"12687:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"12658:37:18","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":9022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12658:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"12639:60:18"},{"expression":{"arguments":[{"id":9025,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"12717:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5769746864726177616c206661696c6564","id":9026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12726:19:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88","typeString":"literal_string \"Withdrawal failed\""},"value":"Withdrawal failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ec24209b271cd4d65181d9e8c6d9d718c94d28a7972011b1be42ea8d094a1a88","typeString":"literal_string \"Withdrawal failed\""}],"id":9024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12709:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12709:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9028,"nodeType":"ExpressionStatement","src":"12709:37:18"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9030,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2135,"src":"12785:5:18","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12785:7:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9032,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"12794:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9033,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12803:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12809:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"12803:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9029,"name":"FundsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8403,"src":"12770:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":9035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12770:49:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9036,"nodeType":"EmitStatement","src":"12765:54:18"}]},"documentation":{"id":8991,"nodeType":"StructuredDocumentation","src":"12405:63:18","text":" @notice Withdraw contract funds (owner only)"},"functionSelector":"24600fc3","id":9038,"implemented":true,"kind":"function","modifiers":[{"id":8994,"kind":"modifierInvocation","modifierName":{"id":8993,"name":"onlyOwner","nameLocations":["12507:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"12507:9:18"},"nodeType":"ModifierInvocation","src":"12507:9:18"}],"name":"withdrawFunds","nameLocation":"12482:13:18","nodeType":"FunctionDefinition","parameters":{"id":8992,"nodeType":"ParameterList","parameters":[],"src":"12495:2:18"},"returnParameters":{"id":8995,"nodeType":"ParameterList","parameters":[],"src":"12517:0:18"},"scope":9105,"src":"12473:353:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9047,"nodeType":"Block","src":"12927:25:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9044,"name":"_pause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2483,"src":"12937:6:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9046,"nodeType":"ExpressionStatement","src":"12937:8:18"}]},"documentation":{"id":9039,"nodeType":"StructuredDocumentation","src":"12832:54:18","text":" @notice Pause contract (owner only)"},"functionSelector":"8456cb59","id":9048,"implemented":true,"kind":"function","modifiers":[{"id":9042,"kind":"modifierInvocation","modifierName":{"id":9041,"name":"onlyOwner","nameLocations":["12917:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"12917:9:18"},"nodeType":"ModifierInvocation","src":"12917:9:18"}],"name":"pause","nameLocation":"12900:5:18","nodeType":"FunctionDefinition","parameters":{"id":9040,"nodeType":"ParameterList","parameters":[],"src":"12905:2:18"},"returnParameters":{"id":9043,"nodeType":"ParameterList","parameters":[],"src":"12927:0:18"},"scope":9105,"src":"12891:61:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9057,"nodeType":"Block","src":"13057:27:18","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9054,"name":"_unpause","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2499,"src":"13067:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13067:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9056,"nodeType":"ExpressionStatement","src":"13067:10:18"}]},"documentation":{"id":9049,"nodeType":"StructuredDocumentation","src":"12958:56:18","text":" @notice Unpause contract (owner only)"},"functionSelector":"3f4ba83a","id":9058,"implemented":true,"kind":"function","modifiers":[{"id":9052,"kind":"modifierInvocation","modifierName":{"id":9051,"name":"onlyOwner","nameLocations":["13047:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"13047:9:18"},"nodeType":"ModifierInvocation","src":"13047:9:18"}],"name":"unpause","nameLocation":"13028:7:18","nodeType":"FunctionDefinition","parameters":{"id":9050,"nodeType":"ParameterList","parameters":[],"src":"13035:2:18"},"returnParameters":{"id":9053,"nodeType":"ParameterList","parameters":[],"src":"13057:0:18"},"scope":9105,"src":"13019:65:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9094,"nodeType":"Block","src":"13305:251:18","statements":[{"expression":{"arguments":[{"id":9070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13323:26:18","subExpression":{"baseExpression":{"id":9067,"name":"flaggedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"13324:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":9069,"indexExpression":{"id":9068,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"13339:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13324:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74656e7420616c726561647920666c6167676564","id":9071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13351:25:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4fbd1fcb191965db3fed7787722304486e0fb6fbcaabb59e5596a830bdbc988f","typeString":"literal_string \"Content already flagged\""},"value":"Content already flagged"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4fbd1fcb191965db3fed7787722304486e0fb6fbcaabb59e5596a830bdbc988f","typeString":"literal_string \"Content already flagged\""}],"id":9066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13315:7:18","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13315:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9073,"nodeType":"ExpressionStatement","src":"13315:62:18"},{"expression":{"id":9078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9074,"name":"flaggedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8320,"src":"13396:14:18","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":9076,"indexExpression":{"id":9075,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"13411:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13396:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13424:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13396:32:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9079,"nodeType":"ExpressionStatement","src":"13396:32:18"},{"expression":{"arguments":[{"id":9083,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"13461:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":9080,"name":"allFlaggedContent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8329,"src":"13438:17:18","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":9082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13456:4:18","memberName":"push","nodeType":"MemberAccess","src":"13438:22:18","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_string_storage_$dyn_storage_ptr_$_t_string_storage_$returns$__$attached_to$_t_array$_t_string_storage_$dyn_storage_ptr_$","typeString":"function (string storage ref[] storage pointer,string storage ref)"}},"id":9084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13438:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9085,"nodeType":"ExpressionStatement","src":"13438:33:18"},{"eventCall":{"arguments":[{"id":9087,"name":"_ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"13510:9:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":9088,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13521:3:18","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13525:6:18","memberName":"sender","nodeType":"MemberAccess","src":"13521:10:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":9090,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13533:5:18","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":9091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13539:9:18","memberName":"timestamp","nodeType":"MemberAccess","src":"13533:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9086,"name":"ContentFlagged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8377,"src":"13495:14:18","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$","typeString":"function (string memory,address,uint256)"}},"id":9092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13495:54:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9093,"nodeType":"EmitStatement","src":"13490:59:18"}]},"documentation":{"id":9059,"nodeType":"StructuredDocumentation","src":"13090:136:18","text":" @notice Emergency function to flag content manually (owner only)\n @param _ipfsHash IPFS hash of content to flag"},"functionSelector":"bc9df56f","id":9095,"implemented":true,"kind":"function","modifiers":[{"id":9064,"kind":"modifierInvocation","modifierName":{"id":9063,"name":"onlyOwner","nameLocations":["13295:9:18"],"nodeType":"IdentifierPath","referencedDeclaration":2126,"src":"13295:9:18"},"nodeType":"ModifierInvocation","src":"13295:9:18"}],"name":"emergencyFlagContent","nameLocation":"13240:20:18","nodeType":"FunctionDefinition","parameters":{"id":9062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9061,"mutability":"mutable","name":"_ipfsHash","nameLocation":"13275:9:18","nodeType":"VariableDeclaration","scope":9095,"src":"13261:23:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9060,"name":"string","nodeType":"ElementaryTypeName","src":"13261:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13260:25:18"},"returnParameters":{"id":9065,"nodeType":"ParameterList","parameters":[],"src":"13305:0:18"},"scope":9105,"src":"13231:325:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9103,"nodeType":"Block","src":"13701:31:18","statements":[{"expression":{"hexValue":"312e302e30","id":9101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13718:7:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c","typeString":"literal_string \"1.0.0\""},"value":"1.0.0"},"functionReturnParameters":9100,"id":9102,"nodeType":"Return","src":"13711:14:18"}]},"documentation":{"id":9096,"nodeType":"StructuredDocumentation","src":"13562:77:18","text":" @notice Get contract version\n @return Version string"},"functionSelector":"54fd4d50","id":9104,"implemented":true,"kind":"function","modifiers":[],"name":"version","nameLocation":"13653:7:18","nodeType":"FunctionDefinition","parameters":{"id":9097,"nodeType":"ParameterList","parameters":[],"src":"13660:2:18"},"returnParameters":{"id":9100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9104,"src":"13686:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9098,"name":"string","nodeType":"ElementaryTypeName","src":"13686:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13685:15:18"},"scope":9105,"src":"13644:88:18","stateMutability":"pure","virtual":false,"visibility":"external"}],"scope":9106,"src":"640:13094:18","usedErrors":[27,308,312,314,2081,2086,2414,2417,2514],"usedEvents":[21,25,2092,2406,2411,8355,8369,8377,8387,8395,8403]}],"src":"32:13703:18"},"id":18},"erc721a/contracts/ERC721A.sol":{"ast":{"absolutePath":"erc721a/contracts/ERC721A.sol","exportedSymbols":{"ERC721A":[11205],"ERC721A__IERC721Receiver":[9123],"IERC721A":[11426]},"id":11206,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9107,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"84:23:19"},{"absolutePath":"erc721a/contracts/IERC721A.sol","file":"./IERC721A.sol","id":9108,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11206,"sourceUnit":11427,"src":"109:24:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721A__IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":9109,"nodeType":"StructuredDocumentation","src":"135:51:19","text":" @dev Interface of ERC721 token receiver."},"fullyImplemented":false,"id":9123,"linearizedBaseContracts":[9123],"name":"ERC721A__IERC721Receiver","nameLocation":"197:24:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"150b7a02","id":9122,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"237:16:19","nodeType":"FunctionDefinition","parameters":{"id":9118,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9111,"mutability":"mutable","name":"operator","nameLocation":"271:8:19","nodeType":"VariableDeclaration","scope":9122,"src":"263:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9110,"name":"address","nodeType":"ElementaryTypeName","src":"263:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9113,"mutability":"mutable","name":"from","nameLocation":"297:4:19","nodeType":"VariableDeclaration","scope":9122,"src":"289:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9112,"name":"address","nodeType":"ElementaryTypeName","src":"289:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9115,"mutability":"mutable","name":"tokenId","nameLocation":"319:7:19","nodeType":"VariableDeclaration","scope":9122,"src":"311:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9114,"name":"uint256","nodeType":"ElementaryTypeName","src":"311:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9117,"mutability":"mutable","name":"data","nameLocation":"351:4:19","nodeType":"VariableDeclaration","scope":9122,"src":"336:19:19","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":9116,"name":"bytes","nodeType":"ElementaryTypeName","src":"336:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"253:108:19"},"returnParameters":{"id":9121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9122,"src":"380:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9119,"name":"bytes4","nodeType":"ElementaryTypeName","src":"380:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"379:8:19"},"scope":9123,"src":"228:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":11206,"src":"187:203:19","usedErrors":[],"usedEvents":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":9125,"name":"IERC721A","nameLocations":["1073:8:19"],"nodeType":"IdentifierPath","referencedDeclaration":11426,"src":"1073:8:19"},"id":9126,"nodeType":"InheritanceSpecifier","src":"1073:8:19"}],"canonicalName":"ERC721A","contractDependencies":[],"contractKind":"contract","documentation":{"id":9124,"nodeType":"StructuredDocumentation","src":"392:660:19","text":" @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n The `_sequentialUpTo()` function can be overriden to enable spot mints\n (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."},"fullyImplemented":true,"id":11205,"linearizedBaseContracts":[11205,11426],"name":"ERC721A","nameLocation":"1062:7:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ERC721A.TokenApprovalRef","id":9129,"members":[{"constant":false,"id":9128,"mutability":"mutable","name":"value","nameLocation":"1215:5:19","nodeType":"VariableDeclaration","scope":9129,"src":"1207:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9127,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"TokenApprovalRef","nameLocation":"1180:16:19","nodeType":"StructDefinition","scope":11205,"src":"1173:54:19","visibility":"public"},{"constant":true,"id":9137,"mutability":"constant","name":"_BITMASK_ADDRESS_DATA_ENTRY","nameLocation":"1488:27:19","nodeType":"VariableDeclaration","scope":11205,"src":"1463:68:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9130,"name":"uint256","nodeType":"ElementaryTypeName","src":"1463:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":9136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":9133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1519:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":9132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1524:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"1519:7:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":9134,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1518:9:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1530:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1518:13:19","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"visibility":"private"},{"constant":true,"id":9140,"mutability":"constant","name":"_BITPOS_NUMBER_MINTED","nameLocation":"1629:21:19","nodeType":"VariableDeclaration","scope":11205,"src":"1604:51:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9138,"name":"uint256","nodeType":"ElementaryTypeName","src":"1604:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3634","id":9139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1653:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"visibility":"private"},{"constant":true,"id":9143,"mutability":"constant","name":"_BITPOS_NUMBER_BURNED","nameLocation":"1753:21:19","nodeType":"VariableDeclaration","scope":11205,"src":"1728:52:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9141,"name":"uint256","nodeType":"ElementaryTypeName","src":"1728:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313238","id":9142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"visibility":"private"},{"constant":true,"id":9146,"mutability":"constant","name":"_BITPOS_AUX","nameLocation":"1869:11:19","nodeType":"VariableDeclaration","scope":11205,"src":"1844:42:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9144,"name":"uint256","nodeType":"ElementaryTypeName","src":"1844:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313932","id":9145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"visibility":"private"},{"constant":true,"id":9154,"mutability":"constant","name":"_BITMASK_AUX_COMPLEMENT","nameLocation":"1999:23:19","nodeType":"VariableDeclaration","scope":11205,"src":"1974:65:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1974:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"},"id":9153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"},"id":9150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2026:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313932","id":9149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2031:3:19","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"2026:8:19","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}}],"id":9151,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2025:10:19","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512896_by_1","typeString":"int_const 6277...(50 digits omitted)...2896"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2038:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2025:14:19","typeDescriptions":{"typeIdentifier":"t_rational_6277101735386680763835789423207666416102355444464034512895_by_1","typeString":"int_const 6277...(50 digits omitted)...2895"}},"visibility":"private"},{"constant":true,"id":9157,"mutability":"constant","name":"_BITPOS_START_TIMESTAMP","nameLocation":"2136:23:19","nodeType":"VariableDeclaration","scope":11205,"src":"2111:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9155,"name":"uint256","nodeType":"ElementaryTypeName","src":"2111:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313630","id":9156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2162:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"visibility":"private"},{"constant":true,"id":9162,"mutability":"constant","name":"_BITMASK_BURNED","nameLocation":"2258:15:19","nodeType":"VariableDeclaration","scope":11205,"src":"2233:51:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9158,"name":"uint256","nodeType":"ElementaryTypeName","src":"2233:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1","typeString":"int_const 2695...(60 digits omitted)...9216"},"id":9161,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2276:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323234","id":9160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2281:3:19","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},"src":"2276:8:19","typeDescriptions":{"typeIdentifier":"t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1","typeString":"int_const 2695...(60 digits omitted)...9216"}},"visibility":"private"},{"constant":true,"id":9165,"mutability":"constant","name":"_BITPOS_NEXT_INITIALIZED","nameLocation":"2390:24:19","nodeType":"VariableDeclaration","scope":11205,"src":"2365:55:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9163,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323235","id":9164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2417:3:19","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"visibility":"private"},{"constant":true,"id":9170,"mutability":"constant","name":"_BITMASK_NEXT_INITIALIZED","nameLocation":"2522:25:19","nodeType":"VariableDeclaration","scope":11205,"src":"2497:61:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9166,"name":"uint256","nodeType":"ElementaryTypeName","src":"2497:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1","typeString":"int_const 5391...(60 digits omitted)...8432"},"id":9169,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2550:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323235","id":9168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2555:3:19","typeDescriptions":{"typeIdentifier":"t_rational_225_by_1","typeString":"int_const 225"},"value":"225"},"src":"2550:8:19","typeDescriptions":{"typeIdentifier":"t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1","typeString":"int_const 5391...(60 digits omitted)...8432"}},"visibility":"private"},{"constant":true,"id":9173,"mutability":"constant","name":"_BITPOS_EXTRA_DATA","nameLocation":"2650:18:19","nodeType":"VariableDeclaration","scope":11205,"src":"2625:49:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"323332","id":9172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2671:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"visibility":"private"},{"constant":true,"id":9181,"mutability":"constant","name":"_BITMASK_EXTRA_DATA_COMPLEMENT","nameLocation":"2792:30:19","nodeType":"VariableDeclaration","scope":11205,"src":"2767:72:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1","typeString":"int_const 6901...(62 digits omitted)...9295"},"id":9180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"},"id":9177,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2826:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"323332","id":9176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2831:3:19","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},"src":"2826:8:19","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"}}],"id":9178,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2825:10:19","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1","typeString":"int_const 6901...(62 digits omitted)...9296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2838:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2825:14:19","typeDescriptions":{"typeIdentifier":"t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1","typeString":"int_const 6901...(62 digits omitted)...9295"}},"visibility":"private"},{"constant":true,"id":9189,"mutability":"constant","name":"_BITMASK_ADDRESS","nameLocation":"2924:16:19","nodeType":"VariableDeclaration","scope":11205,"src":"2899:58:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"},"id":9188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"},"id":9185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":9183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2944:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313630","id":9184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2949:3:19","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},"src":"2944:8:19","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}}],"id":9186,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2943:10:19","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542976_by_1","typeString":"int_const 1461...(41 digits omitted)...2976"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":9187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2956:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2943:14:19","typeDescriptions":{"typeIdentifier":"t_rational_1461501637330902918203684832716283019655932542975_by_1","typeString":"int_const 1461...(41 digits omitted)...2975"}},"visibility":"private"},{"constant":true,"id":9192,"mutability":"constant","name":"_MAX_MINT_ERC2309_QUANTITY_LIMIT","nameLocation":"3265:32:19","nodeType":"VariableDeclaration","scope":11205,"src":"3240:64:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9190,"name":"uint256","nodeType":"ElementaryTypeName","src":"3240:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"35303030","id":9191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3300:4:19","typeDescriptions":{"typeIdentifier":"t_rational_5000_by_1","typeString":"int_const 5000"},"value":"5000"},"visibility":"private"},{"constant":true,"id":9195,"mutability":"constant","name":"_TRANSFER_EVENT_SIGNATURE","nameLocation":"3451:25:19","nodeType":"VariableDeclaration","scope":11205,"src":"3426:127:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":9193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3426:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566","id":9194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3487:66:19","typeDescriptions":{"typeIdentifier":"t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1","typeString":"int_const 1003...(70 digits omitted)...2991"},"value":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"visibility":"private"},{"constant":false,"id":9197,"mutability":"mutable","name":"_currentIndex","nameLocation":"3796:13:19","nodeType":"VariableDeclaration","scope":11205,"src":"3780:29:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9196,"name":"uint256","nodeType":"ElementaryTypeName","src":"3780:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":9199,"mutability":"mutable","name":"_burnCounter","nameLocation":"3868:12:19","nodeType":"VariableDeclaration","scope":11205,"src":"3852:28:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3852:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":9201,"mutability":"mutable","name":"_name","nameLocation":"3920:5:19","nodeType":"VariableDeclaration","scope":11205,"src":"3905:20:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9200,"name":"string","nodeType":"ElementaryTypeName","src":"3905:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":9203,"mutability":"mutable","name":"_symbol","nameLocation":"3967:7:19","nodeType":"VariableDeclaration","scope":11205,"src":"3952:22:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9202,"name":"string","nodeType":"ElementaryTypeName","src":"3952:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":9207,"mutability":"mutable","name":"_packedOwnerships","nameLocation":"4394:17:19","nodeType":"VariableDeclaration","scope":11205,"src":"4358:53:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":9206,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9204,"name":"uint256","nodeType":"ElementaryTypeName","src":"4366:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4358:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9205,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":9211,"mutability":"mutable","name":"_packedAddressData","nameLocation":"4653:18:19","nodeType":"VariableDeclaration","scope":11205,"src":"4617:54:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":9210,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9208,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4617:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9209,"name":"uint256","nodeType":"ElementaryTypeName","src":"4636:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":9216,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"4773:15:19","nodeType":"VariableDeclaration","scope":11205,"src":"4728:60:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$9129_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef)"},"typeName":{"id":9215,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9212,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"4728:36:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$9129_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9214,"nodeType":"UserDefinedTypeName","pathNode":{"id":9213,"name":"TokenApprovalRef","nameLocations":["4747:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":9129,"src":"4747:16:19"},"referencedDeclaration":9129,"src":"4747:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$9129_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"}}},"visibility":"private"},{"constant":false,"id":9222,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"4896:18:19","nodeType":"VariableDeclaration","scope":11205,"src":"4843:71:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":9221,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9217,"name":"address","nodeType":"ElementaryTypeName","src":"4851:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4843:44:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9220,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9218,"name":"address","nodeType":"ElementaryTypeName","src":"4870:7:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"4862:24:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9219,"name":"bool","nodeType":"ElementaryTypeName","src":"4881:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":9224,"mutability":"mutable","name":"_spotMinted","nameLocation":"5060:11:19","nodeType":"VariableDeclaration","scope":11205,"src":"5044:27:19","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9223,"name":"uint256","nodeType":"ElementaryTypeName","src":"5044:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":9255,"nodeType":"Block","src":"5317:190:19","statements":[{"expression":{"id":9233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9231,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9201,"src":"5327:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9232,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9226,"src":"5335:5:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5327:13:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9234,"nodeType":"ExpressionStatement","src":"5327:13:19"},{"expression":{"id":9237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9235,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"5350:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9236,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9228,"src":"5360:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"5350:17:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":9238,"nodeType":"ExpressionStatement","src":"5350:17:19"},{"expression":{"id":9242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9239,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"5377:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":9240,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9265,"src":"5393:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5393:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5377:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9243,"nodeType":"ExpressionStatement","src":"5377:31:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9244,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"5423:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5423:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9246,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9265,"src":"5443:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5443:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5423:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9254,"nodeType":"IfStatement","src":"5419:81:19","trueBody":{"expression":{"arguments":[{"expression":{"id":9250,"name":"SequentialUpToTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11250,"src":"5468:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5491:8:19","memberName":"selector","nodeType":"MemberAccess","src":"5468:31:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9249,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"5460:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5460:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9253,"nodeType":"ExpressionStatement","src":"5460:40:19"}}]},"id":9256,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9226,"mutability":"mutable","name":"name_","nameLocation":"5287:5:19","nodeType":"VariableDeclaration","scope":9256,"src":"5273:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9225,"name":"string","nodeType":"ElementaryTypeName","src":"5273:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9228,"mutability":"mutable","name":"symbol_","nameLocation":"5308:7:19","nodeType":"VariableDeclaration","scope":9256,"src":"5294:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9227,"name":"string","nodeType":"ElementaryTypeName","src":"5294:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5272:44:19"},"returnParameters":{"id":9230,"nodeType":"ParameterList","parameters":[],"src":"5317:0:19"},"scope":11205,"src":"5261:246:19","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9264,"nodeType":"Block","src":"6031:25:19","statements":[{"expression":{"hexValue":"30","id":9262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6048:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":9261,"id":9263,"nodeType":"Return","src":"6041:8:19"}]},"documentation":{"id":9257,"nodeType":"StructuredDocumentation","src":"5703:258:19","text":" @dev Returns the starting token ID for sequential mints.\n Override this function to change the starting token ID for sequential mints.\n Note: The value returned must never change after any tokens have been minted."},"id":9265,"implemented":true,"kind":"function","modifiers":[],"name":"_startTokenId","nameLocation":"5975:13:19","nodeType":"FunctionDefinition","parameters":{"id":9258,"nodeType":"ParameterList","parameters":[],"src":"5988:2:19"},"returnParameters":{"id":9261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9265,"src":"6022:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9259,"name":"uint256","nodeType":"ElementaryTypeName","src":"6022:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6021:9:19"},"scope":11205,"src":"5966:90:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9277,"nodeType":"Block","src":"6471:41:19","statements":[{"expression":{"expression":{"arguments":[{"id":9273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6493:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9272,"name":"uint256","nodeType":"ElementaryTypeName","src":"6493:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":9271,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6488:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6488:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":9275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6502:3:19","memberName":"max","nodeType":"MemberAccess","src":"6488:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9270,"id":9276,"nodeType":"Return","src":"6481:24:19"}]},"documentation":{"id":9266,"nodeType":"StructuredDocumentation","src":"6062:337:19","text":" @dev Returns the maximum token ID (inclusive) for sequential mints.\n Override this function to return a value less than 2**256 - 1,\n but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n Note: The value returned must never change after any tokens have been minted."},"id":9278,"implemented":true,"kind":"function","modifiers":[],"name":"_sequentialUpTo","nameLocation":"6413:15:19","nodeType":"FunctionDefinition","parameters":{"id":9267,"nodeType":"ParameterList","parameters":[],"src":"6428:2:19"},"returnParameters":{"id":9270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9269,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9278,"src":"6462:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9268,"name":"uint256","nodeType":"ElementaryTypeName","src":"6462:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6461:9:19"},"scope":11205,"src":"6404:108:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9286,"nodeType":"Block","src":"6650:37:19","statements":[{"expression":{"id":9284,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"6667:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9283,"id":9285,"nodeType":"Return","src":"6660:20:19"}]},"documentation":{"id":9279,"nodeType":"StructuredDocumentation","src":"6518:63:19","text":" @dev Returns the next token ID to be minted."},"id":9287,"implemented":true,"kind":"function","modifiers":[],"name":"_nextTokenId","nameLocation":"6595:12:19","nodeType":"FunctionDefinition","parameters":{"id":9280,"nodeType":"ParameterList","parameters":[],"src":"6607:2:19"},"returnParameters":{"id":9283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9282,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9287,"src":"6641:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9281,"name":"uint256","nodeType":"ElementaryTypeName","src":"6641:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6640:9:19"},"scope":11205,"src":"6586:101:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[11277],"body":{"id":9317,"nodeType":"Block","src":"6967:487:19","statements":[{"id":9316,"nodeType":"UncheckedBlock","src":"7136:312:19","statements":[{"expression":{"id":9301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9294,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9292,"src":"7303:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9295,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"7312:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":9296,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"7328:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7312:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9298,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9265,"src":"7343:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7343:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7312:46:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7303:55:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9302,"nodeType":"ExpressionStatement","src":"7303:55:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9303,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"7376:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":9307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7402:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9306,"name":"uint256","nodeType":"ElementaryTypeName","src":"7402:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":9305,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7397:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7397:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":9309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7411:3:19","memberName":"max","nodeType":"MemberAccess","src":"7397:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7376:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9315,"nodeType":"IfStatement","src":"7372:65:19","trueBody":{"expression":{"id":9313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9292,"src":"7416:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9312,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"7426:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7416:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9314,"nodeType":"ExpressionStatement","src":"7416:21:19"}}]}]},"documentation":{"id":9288,"nodeType":"StructuredDocumentation","src":"6693:192:19","text":" @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."},"functionSelector":"18160ddd","id":9318,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"6899:11:19","nodeType":"FunctionDefinition","overrides":{"id":9290,"nodeType":"OverrideSpecifier","overrides":[],"src":"6933:8:19"},"parameters":{"id":9289,"nodeType":"ParameterList","parameters":[],"src":"6910:2:19"},"returnParameters":{"id":9293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9292,"mutability":"mutable","name":"result","nameLocation":"6959:6:19","nodeType":"VariableDeclaration","scope":9318,"src":"6951:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9291,"name":"uint256","nodeType":"ElementaryTypeName","src":"6951:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6950:16:19"},"scope":11205,"src":"6890:564:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9345,"nodeType":"Block","src":"7618:307:19","statements":[{"id":9344,"nodeType":"UncheckedBlock","src":"7765:154:19","statements":[{"expression":{"id":9329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9324,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"7789:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9325,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"7798:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9326,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9265,"src":"7814:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7814:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7798:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7789:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9330,"nodeType":"ExpressionStatement","src":"7789:40:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9331,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"7847:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7847:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":9335,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7873:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9334,"name":"uint256","nodeType":"ElementaryTypeName","src":"7873:7:19","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":9333,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7868:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7868:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":9337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7882:3:19","memberName":"max","nodeType":"MemberAccess","src":"7868:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7847:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9343,"nodeType":"IfStatement","src":"7843:65:19","trueBody":{"expression":{"id":9341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9339,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9322,"src":"7887:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":9340,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"7897:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7887:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9342,"nodeType":"ExpressionStatement","src":"7887:21:19"}}]}]},"documentation":{"id":9319,"nodeType":"StructuredDocumentation","src":"7460:82:19","text":" @dev Returns the total amount of tokens minted in the contract."},"id":9346,"implemented":true,"kind":"function","modifiers":[],"name":"_totalMinted","nameLocation":"7556:12:19","nodeType":"FunctionDefinition","parameters":{"id":9320,"nodeType":"ParameterList","parameters":[],"src":"7568:2:19"},"returnParameters":{"id":9323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9322,"mutability":"mutable","name":"result","nameLocation":"7610:6:19","nodeType":"VariableDeclaration","scope":9346,"src":"7602:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9321,"name":"uint256","nodeType":"ElementaryTypeName","src":"7602:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7601:16:19"},"scope":11205,"src":"7547:378:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9354,"nodeType":"Block","src":"8066:36:19","statements":[{"expression":{"id":9352,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"8083:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9351,"id":9353,"nodeType":"Return","src":"8076:19:19"}]},"documentation":{"id":9347,"nodeType":"StructuredDocumentation","src":"7931:66:19","text":" @dev Returns the total number of tokens burned."},"id":9355,"implemented":true,"kind":"function","modifiers":[],"name":"_totalBurned","nameLocation":"8011:12:19","nodeType":"FunctionDefinition","parameters":{"id":9348,"nodeType":"ParameterList","parameters":[],"src":"8023:2:19"},"returnParameters":{"id":9351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9355,"src":"8057:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9349,"name":"uint256","nodeType":"ElementaryTypeName","src":"8057:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8056:9:19"},"scope":11205,"src":"8002:100:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9363,"nodeType":"Block","src":"8261:35:19","statements":[{"expression":{"id":9361,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"8278:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9360,"id":9362,"nodeType":"Return","src":"8271:18:19"}]},"documentation":{"id":9356,"nodeType":"StructuredDocumentation","src":"8108:80:19","text":" @dev Returns the total number of tokens that are spot-minted."},"id":9364,"implemented":true,"kind":"function","modifiers":[],"name":"_totalSpotMinted","nameLocation":"8202:16:19","nodeType":"FunctionDefinition","parameters":{"id":9357,"nodeType":"ParameterList","parameters":[],"src":"8218:2:19"},"returnParameters":{"id":9360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9359,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9364,"src":"8252:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9358,"name":"uint256","nodeType":"ElementaryTypeName","src":"8252:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8251:9:19"},"scope":11205,"src":"8193:103:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[11320],"body":{"id":9391,"nodeType":"Block","src":"8651:158:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":9378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9373,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"8665:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":9376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8682:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":9375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8674:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9374,"name":"address","nodeType":"ElementaryTypeName","src":"8674:7:19","typeDescriptions":{}}},"id":9377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8674:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8665:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9384,"nodeType":"IfStatement","src":"8661:69:19","trueBody":{"expression":{"arguments":[{"expression":{"id":9380,"name":"BalanceQueryForZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11217,"src":"8694:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8721:8:19","memberName":"selector","nodeType":"MemberAccess","src":"8694:35:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9379,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"8686:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8686:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9383,"nodeType":"ExpressionStatement","src":"8686:44:19"}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9385,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"8747:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9387,"indexExpression":{"id":9386,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9367,"src":"8766:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8747:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9388,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"8775:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8747:55:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9372,"id":9390,"nodeType":"Return","src":"8740:62:19"}]},"documentation":{"id":9365,"nodeType":"StructuredDocumentation","src":"8491:74:19","text":" @dev Returns the number of tokens in `owner`'s account."},"functionSelector":"70a08231","id":9392,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"8579:9:19","nodeType":"FunctionDefinition","overrides":{"id":9369,"nodeType":"OverrideSpecifier","overrides":[],"src":"8624:8:19"},"parameters":{"id":9368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9367,"mutability":"mutable","name":"owner","nameLocation":"8597:5:19","nodeType":"VariableDeclaration","scope":9392,"src":"8589:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9366,"name":"address","nodeType":"ElementaryTypeName","src":"8589:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8588:15:19"},"returnParameters":{"id":9372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9371,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9392,"src":"8642:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9370,"name":"uint256","nodeType":"ElementaryTypeName","src":"8642:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8641:9:19"},"scope":11205,"src":"8570:239:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9409,"nodeType":"Block","src":"8956:106:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9400,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"8974:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9402,"indexExpression":{"id":9401,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9395,"src":"8993:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8974:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9403,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9140,"src":"9003:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8974:50:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9405,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8973:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9406,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"9028:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8973:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9399,"id":9408,"nodeType":"Return","src":"8966:89:19"}]},"documentation":{"id":9393,"nodeType":"StructuredDocumentation","src":"8815:66:19","text":" Returns the number of tokens minted by `owner`."},"id":9410,"implemented":true,"kind":"function","modifiers":[],"name":"_numberMinted","nameLocation":"8895:13:19","nodeType":"FunctionDefinition","parameters":{"id":9396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9395,"mutability":"mutable","name":"owner","nameLocation":"8917:5:19","nodeType":"VariableDeclaration","scope":9410,"src":"8909:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9394,"name":"address","nodeType":"ElementaryTypeName","src":"8909:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8908:15:19"},"returnParameters":{"id":9399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9410,"src":"8947:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9397,"name":"uint256","nodeType":"ElementaryTypeName","src":"8947:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8946:9:19"},"scope":11205,"src":"8886:176:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9427,"nodeType":"Block","src":"9225:106:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9418,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"9243:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9420,"indexExpression":{"id":9419,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9413,"src":"9262:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9243:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9421,"name":"_BITPOS_NUMBER_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"9272:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9243:50:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9423,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9242:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9424,"name":"_BITMASK_ADDRESS_DATA_ENTRY","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9137,"src":"9297:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9242:82:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9417,"id":9426,"nodeType":"Return","src":"9235:89:19"}]},"documentation":{"id":9411,"nodeType":"StructuredDocumentation","src":"9068:82:19","text":" Returns the number of tokens burned by or on behalf of `owner`."},"id":9428,"implemented":true,"kind":"function","modifiers":[],"name":"_numberBurned","nameLocation":"9164:13:19","nodeType":"FunctionDefinition","parameters":{"id":9414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9413,"mutability":"mutable","name":"owner","nameLocation":"9186:5:19","nodeType":"VariableDeclaration","scope":9428,"src":"9178:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9412,"name":"address","nodeType":"ElementaryTypeName","src":"9178:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9177:15:19"},"returnParameters":{"id":9417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9428,"src":"9216:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9415,"name":"uint256","nodeType":"ElementaryTypeName","src":"9216:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9215:9:19"},"scope":11205,"src":"9155:176:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9445,"nodeType":"Block","src":"9507:72:19","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9438,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"9531:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9440,"indexExpression":{"id":9439,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9431,"src":"9550:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9531:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9441,"name":"_BITPOS_AUX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"9560:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9531:40:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9524:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":9436,"name":"uint64","nodeType":"ElementaryTypeName","src":"9524:6:19","typeDescriptions":{}}},"id":9443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9524:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":9435,"id":9444,"nodeType":"Return","src":"9517:55:19"}]},"documentation":{"id":9429,"nodeType":"StructuredDocumentation","src":"9337:102:19","text":" Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."},"id":9446,"implemented":true,"kind":"function","modifiers":[],"name":"_getAux","nameLocation":"9453:7:19","nodeType":"FunctionDefinition","parameters":{"id":9432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9431,"mutability":"mutable","name":"owner","nameLocation":"9469:5:19","nodeType":"VariableDeclaration","scope":9446,"src":"9461:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9430,"name":"address","nodeType":"ElementaryTypeName","src":"9461:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9460:15:19"},"returnParameters":{"id":9435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9434,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9446,"src":"9499:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9433,"name":"uint64","nodeType":"ElementaryTypeName","src":"9499:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9498:8:19"},"scope":11205,"src":"9444:135:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":9482,"nodeType":"Block","src":"9822:334:19","statements":[{"assignments":[9455],"declarations":[{"constant":false,"id":9455,"mutability":"mutable","name":"packed","nameLocation":"9840:6:19","nodeType":"VariableDeclaration","scope":9482,"src":"9832:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9454,"name":"uint256","nodeType":"ElementaryTypeName","src":"9832:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9459,"initialValue":{"baseExpression":{"id":9456,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"9849:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9458,"indexExpression":{"id":9457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9449,"src":"9868:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9849:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9832:42:19"},{"assignments":[9461],"declarations":[{"constant":false,"id":9461,"mutability":"mutable","name":"auxCasted","nameLocation":"9892:9:19","nodeType":"VariableDeclaration","scope":9482,"src":"9884:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9460,"name":"uint256","nodeType":"ElementaryTypeName","src":"9884:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9462,"nodeType":"VariableDeclarationStatement","src":"9884:17:19"},{"AST":{"nativeSrc":"9984:40:19","nodeType":"YulBlock","src":"9984:40:19","statements":[{"nativeSrc":"9998:16:19","nodeType":"YulAssignment","src":"9998:16:19","value":{"name":"aux","nativeSrc":"10011:3:19","nodeType":"YulIdentifier","src":"10011:3:19"},"variableNames":[{"name":"auxCasted","nativeSrc":"9998:9:19","nodeType":"YulIdentifier","src":"9998:9:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9451,"isOffset":false,"isSlot":false,"src":"10011:3:19","valueSize":1},{"declaration":9461,"isOffset":false,"isSlot":false,"src":"9998:9:19","valueSize":1}],"id":9463,"nodeType":"InlineAssembly","src":"9975:49:19"},{"expression":{"id":9474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9464,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9455,"src":"10033:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9465,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9455,"src":"10043:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9466,"name":"_BITMASK_AUX_COMPLEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9154,"src":"10052:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10043:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9468,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10042:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9469,"name":"auxCasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9461,"src":"10080:9:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":9470,"name":"_BITPOS_AUX","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"10093:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10080:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10079:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10042:63:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:72:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9475,"nodeType":"ExpressionStatement","src":"10033:72:19"},{"expression":{"id":9480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9476,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"10115:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":9478,"indexExpression":{"id":9477,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9449,"src":"10134:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10115:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9479,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9455,"src":"10143:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10115:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9481,"nodeType":"ExpressionStatement","src":"10115:34:19"}]},"documentation":{"id":9447,"nodeType":"StructuredDocumentation","src":"9585:171:19","text":" Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."},"id":9483,"implemented":true,"kind":"function","modifiers":[],"name":"_setAux","nameLocation":"9770:7:19","nodeType":"FunctionDefinition","parameters":{"id":9452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9449,"mutability":"mutable","name":"owner","nameLocation":"9786:5:19","nodeType":"VariableDeclaration","scope":9483,"src":"9778:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9448,"name":"address","nodeType":"ElementaryTypeName","src":"9778:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9451,"mutability":"mutable","name":"aux","nameLocation":"9800:3:19","nodeType":"VariableDeclaration","scope":9483,"src":"9793:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":9450,"name":"uint64","nodeType":"ElementaryTypeName","src":"9793:6:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9777:27:19"},"returnParameters":{"id":9453,"nodeType":"ParameterList","parameters":[],"src":"9822:0:19"},"scope":11205,"src":"9761:395:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[11285],"body":{"id":9504,"nodeType":"Block","src":"10780:539:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":9498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9492,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9486,"src":"11092:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783031666663396137","id":9493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11107:10:19","typeDescriptions":{"typeIdentifier":"t_rational_33540519_by_1","typeString":"int_const 33540519"},"value":"0x01ffc9a7"},"src":"11092:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9495,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9486,"src":"11168:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783830616335386364","id":9496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11183:10:19","typeDescriptions":{"typeIdentifier":"t_rational_2158778573_by_1","typeString":"int_const 2158778573"},"value":"0x80ac58cd"},"src":"11168:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11092:101:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":9501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9499,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9486,"src":"11244:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783562356531333966","id":9500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11259:10:19","typeDescriptions":{"typeIdentifier":"t_rational_1532892063_by_1","typeString":"int_const 1532892063"},"value":"0x5b5e139f"},"src":"11244:25:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11092:177:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9491,"id":9503,"nodeType":"Return","src":"11073:196:19"}]},"documentation":{"id":9484,"nodeType":"StructuredDocumentation","src":"10343:341:19","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."},"functionSelector":"01ffc9a7","id":9505,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"10698:17:19","nodeType":"FunctionDefinition","overrides":{"id":9488,"nodeType":"OverrideSpecifier","overrides":[],"src":"10756:8:19"},"parameters":{"id":9487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9486,"mutability":"mutable","name":"interfaceId","nameLocation":"10723:11:19","nodeType":"VariableDeclaration","scope":9505,"src":"10716:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":9485,"name":"bytes4","nodeType":"ElementaryTypeName","src":"10716:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"10715:20:19"},"returnParameters":{"id":9491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9505,"src":"10774:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9489,"name":"bool","nodeType":"ElementaryTypeName","src":"10774:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10773:6:19"},"scope":11205,"src":"10689:630:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[11400],"body":{"id":9514,"nodeType":"Block","src":"11642:29:19","statements":[{"expression":{"id":9512,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9201,"src":"11659:5:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":9511,"id":9513,"nodeType":"Return","src":"11652:12:19"}]},"documentation":{"id":9506,"nodeType":"StructuredDocumentation","src":"11510:58:19","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":9515,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"11582:4:19","nodeType":"FunctionDefinition","overrides":{"id":9508,"nodeType":"OverrideSpecifier","overrides":[],"src":"11609:8:19"},"parameters":{"id":9507,"nodeType":"ParameterList","parameters":[],"src":"11586:2:19"},"returnParameters":{"id":9511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9510,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9515,"src":"11627:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9509,"name":"string","nodeType":"ElementaryTypeName","src":"11627:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11626:15:19"},"scope":11205,"src":"11573:98:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[11406],"body":{"id":9524,"nodeType":"Block","src":"11813:31:19","statements":[{"expression":{"id":9522,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9203,"src":"11830:7:19","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":9521,"id":9523,"nodeType":"Return","src":"11823:14:19"}]},"documentation":{"id":9516,"nodeType":"StructuredDocumentation","src":"11677:60:19","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":9525,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"11751:6:19","nodeType":"FunctionDefinition","overrides":{"id":9518,"nodeType":"OverrideSpecifier","overrides":[],"src":"11780:8:19"},"parameters":{"id":9517,"nodeType":"ParameterList","parameters":[],"src":"11757:2:19"},"returnParameters":{"id":9521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9525,"src":"11798:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9519,"name":"string","nodeType":"ElementaryTypeName","src":"11798:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11797:15:19"},"scope":11205,"src":"11742:102:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[11414],"body":{"id":9569,"nodeType":"Block","src":"12033:234:19","statements":[{"condition":{"id":9537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12047:17:19","subExpression":{"arguments":[{"id":9535,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9528,"src":"12056:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9534,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"12048:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":9536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12048:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9543,"nodeType":"IfStatement","src":"12043:68:19","trueBody":{"expression":{"arguments":[{"expression":{"id":9539,"name":"URIQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11241,"src":"12074:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12102:8:19","memberName":"selector","nodeType":"MemberAccess","src":"12074:36:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9538,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"12066:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12066:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9542,"nodeType":"ExpressionStatement","src":"12066:45:19"}},{"assignments":[9545],"declarations":[{"constant":false,"id":9545,"mutability":"mutable","name":"baseURI","nameLocation":"12136:7:19","nodeType":"VariableDeclaration","scope":9569,"src":"12122:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9544,"name":"string","nodeType":"ElementaryTypeName","src":"12122:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":9548,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":9546,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9579,"src":"12146:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":9547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12146:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"12122:34:19"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":9551,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"12179:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12173:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":9549,"name":"bytes","nodeType":"ElementaryTypeName","src":"12173:5:19","typeDescriptions":{}}},"id":9552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12173:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":9553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12188:6:19","memberName":"length","nodeType":"MemberAccess","src":"12173:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12198:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12173:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":9566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12258:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":9567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12173:87:19","trueExpression":{"arguments":[{"arguments":[{"id":9560,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9545,"src":"12226:7:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"id":9562,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9528,"src":"12245:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9561,"name":"_toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11196,"src":"12235:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":9563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12235:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":9558,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"12209:3:19","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":9559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12213:12:19","memberName":"encodePacked","nodeType":"MemberAccess","src":"12209:16:19","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":9564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":9557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12202:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":9556,"name":"string","nodeType":"ElementaryTypeName","src":"12202:6:19","typeDescriptions":{}}},"id":9565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12202:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":9533,"id":9568,"nodeType":"Return","src":"12166:94:19"}]},"documentation":{"id":9526,"nodeType":"StructuredDocumentation","src":"11850:90:19","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":9570,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"11954:8:19","nodeType":"FunctionDefinition","overrides":{"id":9530,"nodeType":"OverrideSpecifier","overrides":[],"src":"12000:8:19"},"parameters":{"id":9529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9528,"mutability":"mutable","name":"tokenId","nameLocation":"11971:7:19","nodeType":"VariableDeclaration","scope":9570,"src":"11963:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9527,"name":"uint256","nodeType":"ElementaryTypeName","src":"11963:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11962:17:19"},"returnParameters":{"id":9533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9570,"src":"12018:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9531,"name":"string","nodeType":"ElementaryTypeName","src":"12018:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12017:15:19"},"scope":11205,"src":"11945:322:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9578,"nodeType":"Block","src":"12578:26:19","statements":[{"expression":{"hexValue":"","id":9576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12595:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":9575,"id":9577,"nodeType":"Return","src":"12588:9:19"}]},"documentation":{"id":9571,"nodeType":"StructuredDocumentation","src":"12273:234:19","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."},"id":9579,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"12521:8:19","nodeType":"FunctionDefinition","parameters":{"id":9572,"nodeType":"ParameterList","parameters":[],"src":"12529:2:19"},"returnParameters":{"id":9575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9579,"src":"12563:13:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9573,"name":"string","nodeType":"ElementaryTypeName","src":"12563:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12562:15:19"},"scope":11205,"src":"12512:92:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[11328],"body":{"id":9598,"nodeType":"Block","src":"13015:69:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":9593,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9582,"src":"13067:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9592,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9761,"src":"13048:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13048:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13040:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9590,"name":"uint160","nodeType":"ElementaryTypeName","src":"13040:7:19","typeDescriptions":{}}},"id":9595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13040:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9588,"name":"address","nodeType":"ElementaryTypeName","src":"13032:7:19","typeDescriptions":{}}},"id":9596,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9587,"id":9597,"nodeType":"Return","src":"13025:52:19"}]},"documentation":{"id":9580,"nodeType":"StructuredDocumentation","src":"12798:131:19","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":9599,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"12943:7:19","nodeType":"FunctionDefinition","overrides":{"id":9584,"nodeType":"OverrideSpecifier","overrides":[],"src":"12988:8:19"},"parameters":{"id":9583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9582,"mutability":"mutable","name":"tokenId","nameLocation":"12959:7:19","nodeType":"VariableDeclaration","scope":9599,"src":"12951:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9581,"name":"uint256","nodeType":"ElementaryTypeName","src":"12951:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12950:17:19"},"returnParameters":{"id":9587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9599,"src":"13006:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9585,"name":"address","nodeType":"ElementaryTypeName","src":"13006:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13005:9:19"},"scope":11205,"src":"12934:150:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9614,"nodeType":"Block","src":"13360:71:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":9610,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9602,"src":"13415:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9609,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9761,"src":"13396:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13396:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9608,"name":"_unpackedOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"13377:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$11271_memory_ptr_$","typeString":"function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"}},"id":9612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13377:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"functionReturnParameters":9607,"id":9613,"nodeType":"Return","src":"13370:54:19"}]},"documentation":{"id":9600,"nodeType":"StructuredDocumentation","src":"13090:172:19","text":" @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."},"id":9615,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipOf","nameLocation":"13276:12:19","nodeType":"FunctionDefinition","parameters":{"id":9603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9602,"mutability":"mutable","name":"tokenId","nameLocation":"13297:7:19","nodeType":"VariableDeclaration","scope":9615,"src":"13289:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9601,"name":"uint256","nodeType":"ElementaryTypeName","src":"13289:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13288:17:19"},"returnParameters":{"id":9607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9606,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9615,"src":"13337:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":9605,"nodeType":"UserDefinedTypeName","pathNode":{"id":9604,"name":"TokenOwnership","nameLocations":["13337:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":11271,"src":"13337:14:19"},"referencedDeclaration":11271,"src":"13337:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"13336:23:19"},"scope":11205,"src":"13267:164:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9630,"nodeType":"Block","src":"13613:68:19","statements":[{"expression":{"arguments":[{"baseExpression":{"id":9625,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"13649:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9627,"indexExpression":{"id":9626,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9618,"src":"13667:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13649:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9624,"name":"_unpackedOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"13630:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$11271_memory_ptr_$","typeString":"function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"}},"id":9628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13630:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"functionReturnParameters":9623,"id":9629,"nodeType":"Return","src":"13623:51:19"}]},"documentation":{"id":9616,"nodeType":"StructuredDocumentation","src":"13437:80:19","text":" @dev Returns the unpacked `TokenOwnership` struct at `index`."},"id":9631,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipAt","nameLocation":"13531:12:19","nodeType":"FunctionDefinition","parameters":{"id":9619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9618,"mutability":"mutable","name":"index","nameLocation":"13552:5:19","nodeType":"VariableDeclaration","scope":9631,"src":"13544:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9617,"name":"uint256","nodeType":"ElementaryTypeName","src":"13544:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13543:15:19"},"returnParameters":{"id":9623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9631,"src":"13590:21:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":9621,"nodeType":"UserDefinedTypeName","pathNode":{"id":9620,"name":"TokenOwnership","nameLocations":["13590:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":11271,"src":"13590:14:19"},"referencedDeclaration":11271,"src":"13590:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"13589:23:19"},"scope":11205,"src":"13522:159:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9645,"nodeType":"Block","src":"13945:53:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9639,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"13962:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9641,"indexExpression":{"id":9640,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9634,"src":"13980:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13962:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13990:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13962:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9638,"id":9644,"nodeType":"Return","src":"13955:36:19"}]},"documentation":{"id":9632,"nodeType":"StructuredDocumentation","src":"13687:168:19","text":" @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."},"id":9646,"implemented":true,"kind":"function","modifiers":[],"name":"_ownershipIsInitialized","nameLocation":"13869:23:19","nodeType":"FunctionDefinition","parameters":{"id":9635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9634,"mutability":"mutable","name":"index","nameLocation":"13901:5:19","nodeType":"VariableDeclaration","scope":9646,"src":"13893:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9633,"name":"uint256","nodeType":"ElementaryTypeName","src":"13893:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13892:15:19"},"returnParameters":{"id":9638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9646,"src":"13939:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9636,"name":"bool","nodeType":"ElementaryTypeName","src":"13939:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13938:6:19"},"scope":11205,"src":"13860:138:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9667,"nodeType":"Block","src":"14170:128:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":9652,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"14184:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9654,"indexExpression":{"id":9653,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"14202:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14184:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14184:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9666,"nodeType":"IfStatement","src":"14180:112:19","trueBody":{"id":9665,"nodeType":"Block","src":"14215:77:19","statements":[{"expression":{"id":9663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9657,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"14229:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9659,"indexExpression":{"id":9658,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"14247:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14229:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9661,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9649,"src":"14275:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9660,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9761,"src":"14256:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":9662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14256:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14229:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9664,"nodeType":"ExpressionStatement","src":"14229:52:19"}]}}]},"documentation":{"id":9647,"nodeType":"StructuredDocumentation","src":"14004:97:19","text":" @dev Initializes the ownership slot minted at `index` for efficiency purposes."},"id":9668,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeOwnershipAt","nameLocation":"14115:22:19","nodeType":"FunctionDefinition","parameters":{"id":9650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9649,"mutability":"mutable","name":"index","nameLocation":"14146:5:19","nodeType":"VariableDeclaration","scope":9668,"src":"14138:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9648,"name":"uint256","nodeType":"ElementaryTypeName","src":"14138:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14137:15:19"},"returnParameters":{"id":9651,"nodeType":"ParameterList","parameters":[],"src":"14170:0:19"},"scope":11205,"src":"14106:192:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":9760,"nodeType":"Block","src":"14463:2090:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9676,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9265,"src":"14477:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14477:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9678,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"14496:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9754,"nodeType":"IfStatement","src":"14473:2017:19","trueBody":{"id":9753,"nodeType":"Block","src":"14505:1985:19","statements":[{"expression":{"id":9684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9680,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"14519:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9681,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"14528:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9683,"indexExpression":{"id":9682,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"14546:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14528:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14519:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9685,"nodeType":"ExpressionStatement","src":"14519:35:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9686,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"14573:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9687,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"14583:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14583:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14573:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9702,"nodeType":"IfStatement","src":"14569:180:19","trueBody":{"id":9701,"nodeType":"Block","src":"14602:147:19","statements":[{"condition":{"arguments":[{"id":9691,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"14647:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9690,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"14624:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":9692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14624:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9695,"nodeType":"IfStatement","src":"14620:49:19","trueBody":{"expression":{"id":9693,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"14663:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9675,"id":9694,"nodeType":"Return","src":"14656:13:19"}},{"expression":{"arguments":[{"expression":{"id":9697,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11226,"src":"14695:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14725:8:19","memberName":"selector","nodeType":"MemberAccess","src":"14695:38:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9696,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"14687:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14687:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9700,"nodeType":"ExpressionStatement","src":"14687:47:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9703,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"14847:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14857:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14847:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9744,"nodeType":"IfStatement","src":"14843:1270:19","trueBody":{"id":9743,"nodeType":"Block","src":"14860:1253:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"14882:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":9707,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"14893:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14882:24:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9714,"nodeType":"IfStatement","src":"14878:77:19","trueBody":{"expression":{"arguments":[{"expression":{"id":9710,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11226,"src":"14916:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14946:8:19","memberName":"selector","nodeType":"MemberAccess","src":"14916:38:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9709,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"14908:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14908:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9713,"nodeType":"ExpressionStatement","src":"14908:47:19"}},{"body":{"id":9741,"nodeType":"Block","src":"15511:588:19","statements":[{"id":9722,"nodeType":"UncheckedBlock","src":"15533:96:19","statements":[{"expression":{"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9715,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"15569:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9716,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"15578:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9719,"indexExpression":{"id":9718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"15596:9:19","subExpression":{"id":9717,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9671,"src":"15598:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15578:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15569:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9721,"nodeType":"ExpressionStatement","src":"15569:37:19"}]},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9723,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"15654:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15664:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15654:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9727,"nodeType":"IfStatement","src":"15650:25:19","trueBody":{"id":9726,"nodeType":"Continue","src":"15667:8:19"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9728,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"15701:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9729,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"15710:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15701:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15729:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15701:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9735,"nodeType":"IfStatement","src":"15697:48:19","trueBody":{"expression":{"id":9733,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"15739:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9675,"id":9734,"nodeType":"Return","src":"15732:13:19"}},{"expression":{"arguments":[{"expression":{"id":9737,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11226,"src":"16041:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16071:8:19","memberName":"selector","nodeType":"MemberAccess","src":"16041:38:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9736,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"16033:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16033:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9740,"nodeType":"ExpressionStatement","src":"16033:47:19"}]},"id":9742,"isSimpleCounterLoop":false,"nodeType":"ForStatement","src":"15502:597:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9745,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"16435:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9746,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"16444:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16435:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16463:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16435:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9752,"nodeType":"IfStatement","src":"16431:48:19","trueBody":{"expression":{"id":9750,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9674,"src":"16473:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9675,"id":9751,"nodeType":"Return","src":"16466:13:19"}}]}},{"expression":{"arguments":[{"expression":{"id":9756,"name":"OwnerQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11226,"src":"16507:29:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16537:8:19","memberName":"selector","nodeType":"MemberAccess","src":"16507:38:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9755,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"16499:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16499:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9759,"nodeType":"ExpressionStatement","src":"16499:47:19"}]},"documentation":{"id":9669,"nodeType":"StructuredDocumentation","src":"14304:71:19","text":" @dev Returns the packed ownership data of `tokenId`."},"id":9761,"implemented":true,"kind":"function","modifiers":[],"name":"_packedOwnershipOf","nameLocation":"14389:18:19","nodeType":"FunctionDefinition","parameters":{"id":9672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9671,"mutability":"mutable","name":"tokenId","nameLocation":"14416:7:19","nodeType":"VariableDeclaration","scope":9761,"src":"14408:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9670,"name":"uint256","nodeType":"ElementaryTypeName","src":"14408:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14407:17:19"},"returnParameters":{"id":9675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9674,"mutability":"mutable","name":"packed","nameLocation":"14455:6:19","nodeType":"VariableDeclaration","scope":9761,"src":"14447:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9673,"name":"uint256","nodeType":"ElementaryTypeName","src":"14447:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14446:16:19"},"scope":11205,"src":"14380:2173:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9814,"nodeType":"Block","src":"16746:262:19","statements":[{"expression":{"id":9780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9770,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"16756:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9772,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16766:4:19","memberName":"addr","nodeType":"MemberAccess","referencedDeclaration":11264,"src":"16756:14:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":9777,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"16789:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16781:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":9775,"name":"uint160","nodeType":"ElementaryTypeName","src":"16781:7:19","typeDescriptions":{}}},"id":9778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16781:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":9774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16773:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":9773,"name":"address","nodeType":"ElementaryTypeName","src":"16773:7:19","typeDescriptions":{}}},"id":9779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16773:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16756:41:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":9781,"nodeType":"ExpressionStatement","src":"16756:41:19"},{"expression":{"id":9791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9782,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"16807:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16817:14:19","memberName":"startTimestamp","nodeType":"MemberAccess","referencedDeclaration":11266,"src":"16807:24:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9787,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"16841:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9788,"name":"_BITPOS_START_TIMESTAMP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9157,"src":"16851:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16841:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9786,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16834:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":9785,"name":"uint64","nodeType":"ElementaryTypeName","src":"16834:6:19","typeDescriptions":{}}},"id":9790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16834:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"16807:68:19","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":9792,"nodeType":"ExpressionStatement","src":"16807:68:19"},{"expression":{"id":9801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9793,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"16885:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16895:6:19","memberName":"burned","nodeType":"MemberAccess","referencedDeclaration":11268,"src":"16885:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9796,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"16904:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9797,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"16913:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16904:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":9799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16932:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16904:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16885:48:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9802,"nodeType":"ExpressionStatement","src":"16885:48:19"},{"expression":{"id":9812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":9803,"name":"ownership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9768,"src":"16943:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership memory"}},"id":9805,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16953:9:19","memberName":"extraData","nodeType":"MemberAccess","referencedDeclaration":11270,"src":"16943:19:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9808,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9764,"src":"16972:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":9809,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"16982:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16972:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16965:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":9806,"name":"uint24","nodeType":"ElementaryTypeName","src":"16965:6:19","typeDescriptions":{}}},"id":9811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16965:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"16943:58:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":9813,"nodeType":"ExpressionStatement","src":"16943:58:19"}]},"documentation":{"id":9762,"nodeType":"StructuredDocumentation","src":"16559:83:19","text":" @dev Returns the unpacked `TokenOwnership` struct from `packed`."},"id":9815,"implemented":true,"kind":"function","modifiers":[],"name":"_unpackedOwnership","nameLocation":"16656:18:19","nodeType":"FunctionDefinition","parameters":{"id":9765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9764,"mutability":"mutable","name":"packed","nameLocation":"16683:6:19","nodeType":"VariableDeclaration","scope":9815,"src":"16675:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9763,"name":"uint256","nodeType":"ElementaryTypeName","src":"16675:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16674:16:19"},"returnParameters":{"id":9769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9768,"mutability":"mutable","name":"ownership","nameLocation":"16735:9:19","nodeType":"VariableDeclaration","scope":9815,"src":"16713:31:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_memory_ptr","typeString":"struct IERC721A.TokenOwnership"},"typeName":{"id":9767,"nodeType":"UserDefinedTypeName","pathNode":{"id":9766,"name":"TokenOwnership","nameLocations":["16713:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":11271,"src":"16713:14:19"},"referencedDeclaration":11271,"src":"16713:14:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenOwnership_$11271_storage_ptr","typeString":"struct IERC721A.TokenOwnership"}},"visibility":"internal"}],"src":"16712:33:19"},"scope":11205,"src":"16647:361:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9826,"nodeType":"Block","src":"17182:347:19","statements":[{"AST":{"nativeSrc":"17201:322:19","nodeType":"YulBlock","src":"17201:322:19","statements":[{"nativeSrc":"17311:37:19","nodeType":"YulAssignment","src":"17311:37:19","value":{"arguments":[{"name":"owner","nativeSrc":"17324:5:19","nodeType":"YulIdentifier","src":"17324:5:19"},{"name":"_BITMASK_ADDRESS","nativeSrc":"17331:16:19","nodeType":"YulIdentifier","src":"17331:16:19"}],"functionName":{"name":"and","nativeSrc":"17320:3:19","nodeType":"YulIdentifier","src":"17320:3:19"},"nativeSrc":"17320:28:19","nodeType":"YulFunctionCall","src":"17320:28:19"},"variableNames":[{"name":"owner","nativeSrc":"17311:5:19","nodeType":"YulIdentifier","src":"17311:5:19"}]},{"nativeSrc":"17440:73:19","nodeType":"YulAssignment","src":"17440:73:19","value":{"arguments":[{"name":"owner","nativeSrc":"17453:5:19","nodeType":"YulIdentifier","src":"17453:5:19"},{"arguments":[{"arguments":[{"name":"_BITPOS_START_TIMESTAMP","nativeSrc":"17467:23:19","nodeType":"YulIdentifier","src":"17467:23:19"},{"arguments":[],"functionName":{"name":"timestamp","nativeSrc":"17492:9:19","nodeType":"YulIdentifier","src":"17492:9:19"},"nativeSrc":"17492:11:19","nodeType":"YulFunctionCall","src":"17492:11:19"}],"functionName":{"name":"shl","nativeSrc":"17463:3:19","nodeType":"YulIdentifier","src":"17463:3:19"},"nativeSrc":"17463:41:19","nodeType":"YulFunctionCall","src":"17463:41:19"},{"name":"flags","nativeSrc":"17506:5:19","nodeType":"YulIdentifier","src":"17506:5:19"}],"functionName":{"name":"or","nativeSrc":"17460:2:19","nodeType":"YulIdentifier","src":"17460:2:19"},"nativeSrc":"17460:52:19","nodeType":"YulFunctionCall","src":"17460:52:19"}],"functionName":{"name":"or","nativeSrc":"17450:2:19","nodeType":"YulIdentifier","src":"17450:2:19"},"nativeSrc":"17450:63:19","nodeType":"YulFunctionCall","src":"17450:63:19"},"variableNames":[{"name":"result","nativeSrc":"17440:6:19","nodeType":"YulIdentifier","src":"17440:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9189,"isOffset":false,"isSlot":false,"src":"17331:16:19","valueSize":1},{"declaration":9157,"isOffset":false,"isSlot":false,"src":"17467:23:19","valueSize":1},{"declaration":9820,"isOffset":false,"isSlot":false,"src":"17506:5:19","valueSize":1},{"declaration":9818,"isOffset":false,"isSlot":false,"src":"17311:5:19","valueSize":1},{"declaration":9818,"isOffset":false,"isSlot":false,"src":"17324:5:19","valueSize":1},{"declaration":9818,"isOffset":false,"isSlot":false,"src":"17453:5:19","valueSize":1},{"declaration":9823,"isOffset":false,"isSlot":false,"src":"17440:6:19","valueSize":1}],"id":9825,"nodeType":"InlineAssembly","src":"17192:331:19"}]},"documentation":{"id":9816,"nodeType":"StructuredDocumentation","src":"17014:67:19","text":" @dev Packs ownership data into a single uint256."},"id":9827,"implemented":true,"kind":"function","modifiers":[],"name":"_packOwnershipData","nameLocation":"17095:18:19","nodeType":"FunctionDefinition","parameters":{"id":9821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9818,"mutability":"mutable","name":"owner","nameLocation":"17122:5:19","nodeType":"VariableDeclaration","scope":9827,"src":"17114:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9817,"name":"address","nodeType":"ElementaryTypeName","src":"17114:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9820,"mutability":"mutable","name":"flags","nameLocation":"17137:5:19","nodeType":"VariableDeclaration","scope":9827,"src":"17129:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9819,"name":"uint256","nodeType":"ElementaryTypeName","src":"17129:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17113:30:19"},"returnParameters":{"id":9824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9823,"mutability":"mutable","name":"result","nameLocation":"17174:6:19","nodeType":"VariableDeclaration","scope":9827,"src":"17166:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9822,"name":"uint256","nodeType":"ElementaryTypeName","src":"17166:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17165:16:19"},"scope":11205,"src":"17086:443:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":9836,"nodeType":"Block","src":"17712:232:19","statements":[{"AST":{"nativeSrc":"17796:142:19","nodeType":"YulBlock","src":"17796:142:19","statements":[{"nativeSrc":"17872:56:19","nodeType":"YulAssignment","src":"17872:56:19","value":{"arguments":[{"name":"_BITPOS_NEXT_INITIALIZED","nativeSrc":"17886:24:19","nodeType":"YulIdentifier","src":"17886:24:19"},{"arguments":[{"name":"quantity","nativeSrc":"17915:8:19","nodeType":"YulIdentifier","src":"17915:8:19"},{"kind":"number","nativeSrc":"17925:1:19","nodeType":"YulLiteral","src":"17925:1:19","type":"","value":"1"}],"functionName":{"name":"eq","nativeSrc":"17912:2:19","nodeType":"YulIdentifier","src":"17912:2:19"},"nativeSrc":"17912:15:19","nodeType":"YulFunctionCall","src":"17912:15:19"}],"functionName":{"name":"shl","nativeSrc":"17882:3:19","nodeType":"YulIdentifier","src":"17882:3:19"},"nativeSrc":"17882:46:19","nodeType":"YulFunctionCall","src":"17882:46:19"},"variableNames":[{"name":"result","nativeSrc":"17872:6:19","nodeType":"YulIdentifier","src":"17872:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9165,"isOffset":false,"isSlot":false,"src":"17886:24:19","valueSize":1},{"declaration":9830,"isOffset":false,"isSlot":false,"src":"17915:8:19","valueSize":1},{"declaration":9833,"isOffset":false,"isSlot":false,"src":"17872:6:19","valueSize":1}],"id":9835,"nodeType":"InlineAssembly","src":"17787:151:19"}]},"documentation":{"id":9828,"nodeType":"StructuredDocumentation","src":"17535:86:19","text":" @dev Returns the `nextInitialized` flag set if `quantity` equals 1."},"id":9837,"implemented":true,"kind":"function","modifiers":[],"name":"_nextInitializedFlag","nameLocation":"17635:20:19","nodeType":"FunctionDefinition","parameters":{"id":9831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9830,"mutability":"mutable","name":"quantity","nameLocation":"17664:8:19","nodeType":"VariableDeclaration","scope":9837,"src":"17656:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9829,"name":"uint256","nodeType":"ElementaryTypeName","src":"17656:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17655:18:19"},"returnParameters":{"id":9834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9833,"mutability":"mutable","name":"result","nameLocation":"17704:6:19","nodeType":"VariableDeclaration","scope":9837,"src":"17696:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9832,"name":"uint256","nodeType":"ElementaryTypeName","src":"17696:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17695:16:19"},"scope":11205,"src":"17626:318:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"baseFunctions":[11368],"body":{"id":9852,"nodeType":"Block","src":"18442:44:19","statements":[{"expression":{"arguments":[{"id":9847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9840,"src":"18461:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9842,"src":"18465:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":9849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"18474:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9846,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[10868,10918],"referencedDeclaration":10918,"src":"18452:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":9850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18452:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9851,"nodeType":"ExpressionStatement","src":"18452:27:19"}]},"documentation":{"id":9838,"nodeType":"StructuredDocumentation","src":"18137:222:19","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."},"functionSelector":"095ea7b3","id":9853,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"18373:7:19","nodeType":"FunctionDefinition","overrides":{"id":9844,"nodeType":"OverrideSpecifier","overrides":[],"src":"18433:8:19"},"parameters":{"id":9843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9840,"mutability":"mutable","name":"to","nameLocation":"18389:2:19","nodeType":"VariableDeclaration","scope":9853,"src":"18381:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9839,"name":"address","nodeType":"ElementaryTypeName","src":"18381:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9842,"mutability":"mutable","name":"tokenId","nameLocation":"18401:7:19","nodeType":"VariableDeclaration","scope":9853,"src":"18393:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9841,"name":"uint256","nodeType":"ElementaryTypeName","src":"18393:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18380:29:19"},"returnParameters":{"id":9845,"nodeType":"ParameterList","parameters":[],"src":"18442:0:19"},"scope":11205,"src":"18364:122:19","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[11384],"body":{"id":9877,"nodeType":"Block","src":"18721:138:19","statements":[{"condition":{"id":9865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18735:17:19","subExpression":{"arguments":[{"id":9863,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9856,"src":"18744:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9862,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9976,"src":"18736:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":9864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18736:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9871,"nodeType":"IfStatement","src":"18731:73:19","trueBody":{"expression":{"arguments":[{"expression":{"id":9867,"name":"ApprovalQueryForNonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11214,"src":"18762:32:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":9868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18795:8:19","memberName":"selector","nodeType":"MemberAccess","src":"18762:41:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":9866,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"18754:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":9869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18754:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9870,"nodeType":"ExpressionStatement","src":"18754:50:19"}},{"expression":{"expression":{"baseExpression":{"id":9872,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"18822:15:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$9129_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":9874,"indexExpression":{"id":9873,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9856,"src":"18838:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"18822:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$9129_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"id":9875,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"18847:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":9128,"src":"18822:30:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":9861,"id":9876,"nodeType":"Return","src":"18815:37:19"}]},"documentation":{"id":9854,"nodeType":"StructuredDocumentation","src":"18492:139:19","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":9878,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"18645:11:19","nodeType":"FunctionDefinition","overrides":{"id":9858,"nodeType":"OverrideSpecifier","overrides":[],"src":"18694:8:19"},"parameters":{"id":9857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9856,"mutability":"mutable","name":"tokenId","nameLocation":"18665:7:19","nodeType":"VariableDeclaration","scope":9878,"src":"18657:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9855,"name":"uint256","nodeType":"ElementaryTypeName","src":"18657:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18656:17:19"},"returnParameters":{"id":9861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9878,"src":"18712:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9859,"name":"address","nodeType":"ElementaryTypeName","src":"18712:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"18711:9:19"},"scope":11205,"src":"18636:223:19","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[11376],"body":{"id":9903,"nodeType":"Block","src":"19270:147:19","statements":[{"expression":{"id":9894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9887,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9222,"src":"19280:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":9891,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9888,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"19299:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19299:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19280:39:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9892,"indexExpression":{"id":9890,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9881,"src":"19320:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"19280:49:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9893,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9883,"src":"19332:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"19280:60:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9895,"nodeType":"ExpressionStatement","src":"19280:60:19"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":9897,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"19370:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":9898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19370:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9899,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9881,"src":"19391:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9900,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9883,"src":"19401:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9896,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11312,"src":"19355:14:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":9901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19355:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9902,"nodeType":"EmitStatement","src":"19350:60:19"}]},"documentation":{"id":9879,"nodeType":"StructuredDocumentation","src":"18865:316:19","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":9904,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"19195:17:19","nodeType":"FunctionDefinition","overrides":{"id":9885,"nodeType":"OverrideSpecifier","overrides":[],"src":"19261:8:19"},"parameters":{"id":9884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9881,"mutability":"mutable","name":"operator","nameLocation":"19221:8:19","nodeType":"VariableDeclaration","scope":9904,"src":"19213:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9880,"name":"address","nodeType":"ElementaryTypeName","src":"19213:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9883,"mutability":"mutable","name":"approved","nameLocation":"19236:8:19","nodeType":"VariableDeclaration","scope":9904,"src":"19231:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9882,"name":"bool","nodeType":"ElementaryTypeName","src":"19231:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19212:33:19"},"returnParameters":{"id":9886,"nodeType":"ParameterList","parameters":[],"src":"19270:0:19"},"scope":11205,"src":"19186:231:19","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[11394],"body":{"id":9921,"nodeType":"Block","src":"19670:59:19","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":9915,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9222,"src":"19687:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":9917,"indexExpression":{"id":9916,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9907,"src":"19706:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19687:25:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9919,"indexExpression":{"id":9918,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9909,"src":"19713:8:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"19687:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9914,"id":9920,"nodeType":"Return","src":"19680:42:19"}]},"documentation":{"id":9905,"nodeType":"StructuredDocumentation","src":"19423:139:19","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":9922,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"19576:16:19","nodeType":"FunctionDefinition","overrides":{"id":9911,"nodeType":"OverrideSpecifier","overrides":[],"src":"19646:8:19"},"parameters":{"id":9910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9907,"mutability":"mutable","name":"owner","nameLocation":"19601:5:19","nodeType":"VariableDeclaration","scope":9922,"src":"19593:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9906,"name":"address","nodeType":"ElementaryTypeName","src":"19593:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9909,"mutability":"mutable","name":"operator","nameLocation":"19616:8:19","nodeType":"VariableDeclaration","scope":9922,"src":"19608:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9908,"name":"address","nodeType":"ElementaryTypeName","src":"19608:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"19592:33:19"},"returnParameters":{"id":9914,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9913,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9922,"src":"19664:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9912,"name":"bool","nodeType":"ElementaryTypeName","src":"19664:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"19663:6:19"},"scope":11205,"src":"19567:162:19","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":9975,"nodeType":"Block","src":"20056:387:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9930,"name":"_startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9265,"src":"20070:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20070:15:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":9932,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"20089:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20070:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9974,"nodeType":"IfStatement","src":"20066:371:19","trueBody":{"id":9973,"nodeType":"Block","src":"20098:339:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9934,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"20116:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":9935,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"20126:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":9936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20126:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20116:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9944,"nodeType":"IfStatement","src":"20112:90:19","trueBody":{"expression":{"arguments":[{"baseExpression":{"id":9939,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"20175:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9941,"indexExpression":{"id":9940,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"20193:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20175:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9938,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"20152:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":9942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20152:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9929,"id":9943,"nodeType":"Return","src":"20145:57:19"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9945,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"20221:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9946,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"20231:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20221:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9972,"nodeType":"IfStatement","src":"20217:210:19","trueBody":{"id":9971,"nodeType":"Block","src":"20246:181:19","statements":[{"assignments":[9949],"declarations":[{"constant":false,"id":9949,"mutability":"mutable","name":"packed","nameLocation":"20272:6:19","nodeType":"VariableDeclaration","scope":9971,"src":"20264:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9948,"name":"uint256","nodeType":"ElementaryTypeName","src":"20264:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9950,"nodeType":"VariableDeclarationStatement","src":"20264:14:19"},{"body":{"expression":{"id":9960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"20347:9:19","subExpression":{"id":9959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"20349:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9961,"nodeType":"ExpressionStatement","src":"20347:9:19"},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"id":9955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9951,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9949,"src":"20304:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":9952,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"20313:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":9954,"indexExpression":{"id":9953,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9925,"src":"20331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20313:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20304:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":9956,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20303:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20344:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20303:42:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9962,"nodeType":"WhileStatement","src":"20296:60:19"},{"expression":{"id":9969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9928,"src":"20374:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9964,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9949,"src":"20383:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9965,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"20392:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20383:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":9967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20411:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20383:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"20374:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9970,"nodeType":"ExpressionStatement","src":"20374:38:19"}]}}]}}]},"documentation":{"id":9923,"nodeType":"StructuredDocumentation","src":"19735:238:19","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."},"id":9976,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"19987:7:19","nodeType":"FunctionDefinition","parameters":{"id":9926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9925,"mutability":"mutable","name":"tokenId","nameLocation":"20003:7:19","nodeType":"VariableDeclaration","scope":9976,"src":"19995:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9924,"name":"uint256","nodeType":"ElementaryTypeName","src":"19995:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19994:17:19"},"returnParameters":{"id":9929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9928,"mutability":"mutable","name":"result","nameLocation":"20048:6:19","nodeType":"VariableDeclaration","scope":9976,"src":"20043:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9927,"name":"bool","nodeType":"ElementaryTypeName","src":"20043:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20042:13:19"},"scope":11205,"src":"19978:465:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":9985,"nodeType":"Block","src":"20617:246:19","statements":[{"AST":{"nativeSrc":"20636:221:19","nodeType":"YulBlock","src":"20636:221:19","statements":[{"nativeSrc":"20774:73:19","nodeType":"YulAssignment","src":"20774:73:19","value":{"arguments":[{"arguments":[{"name":"packed","nativeSrc":"20791:6:19","nodeType":"YulIdentifier","src":"20791:6:19"},{"name":"_BITMASK_ADDRESS","nativeSrc":"20799:16:19","nodeType":"YulIdentifier","src":"20799:16:19"}],"functionName":{"name":"and","nativeSrc":"20787:3:19","nodeType":"YulIdentifier","src":"20787:3:19"},"nativeSrc":"20787:29:19","nodeType":"YulFunctionCall","src":"20787:29:19"},{"arguments":[{"name":"packed","nativeSrc":"20822:6:19","nodeType":"YulIdentifier","src":"20822:6:19"},{"name":"_BITMASK_BURNED","nativeSrc":"20830:15:19","nodeType":"YulIdentifier","src":"20830:15:19"}],"functionName":{"name":"and","nativeSrc":"20818:3:19","nodeType":"YulIdentifier","src":"20818:3:19"},"nativeSrc":"20818:28:19","nodeType":"YulFunctionCall","src":"20818:28:19"}],"functionName":{"name":"gt","nativeSrc":"20784:2:19","nodeType":"YulIdentifier","src":"20784:2:19"},"nativeSrc":"20784:63:19","nodeType":"YulFunctionCall","src":"20784:63:19"},"variableNames":[{"name":"result","nativeSrc":"20774:6:19","nodeType":"YulIdentifier","src":"20774:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9189,"isOffset":false,"isSlot":false,"src":"20799:16:19","valueSize":1},{"declaration":9162,"isOffset":false,"isSlot":false,"src":"20830:15:19","valueSize":1},{"declaration":9979,"isOffset":false,"isSlot":false,"src":"20791:6:19","valueSize":1},{"declaration":9979,"isOffset":false,"isSlot":false,"src":"20822:6:19","valueSize":1},{"declaration":9982,"isOffset":false,"isSlot":false,"src":"20774:6:19","valueSize":1}],"id":9984,"nodeType":"InlineAssembly","src":"20627:230:19"}]},"documentation":{"id":9977,"nodeType":"StructuredDocumentation","src":"20449:80:19","text":" @dev Returns whether `packed` represents a token that exists."},"id":9986,"implemented":true,"kind":"function","modifiers":[],"name":"_packedOwnershipExists","nameLocation":"20543:22:19","nodeType":"FunctionDefinition","parameters":{"id":9980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9979,"mutability":"mutable","name":"packed","nameLocation":"20574:6:19","nodeType":"VariableDeclaration","scope":9986,"src":"20566:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9978,"name":"uint256","nodeType":"ElementaryTypeName","src":"20566:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20565:16:19"},"returnParameters":{"id":9983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9982,"mutability":"mutable","name":"result","nameLocation":"20609:6:19","nodeType":"VariableDeclaration","scope":9986,"src":"20604:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9981,"name":"bool","nodeType":"ElementaryTypeName","src":"20604:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20603:13:19"},"scope":11205,"src":"20534:329:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":9999,"nodeType":"Block","src":"21125:488:19","statements":[{"AST":{"nativeSrc":"21144:463:19","nodeType":"YulBlock","src":"21144:463:19","statements":[{"nativeSrc":"21254:37:19","nodeType":"YulAssignment","src":"21254:37:19","value":{"arguments":[{"name":"owner","nativeSrc":"21267:5:19","nodeType":"YulIdentifier","src":"21267:5:19"},{"name":"_BITMASK_ADDRESS","nativeSrc":"21274:16:19","nodeType":"YulIdentifier","src":"21274:16:19"}],"functionName":{"name":"and","nativeSrc":"21263:3:19","nodeType":"YulIdentifier","src":"21263:3:19"},"nativeSrc":"21263:28:19","nodeType":"YulFunctionCall","src":"21263:28:19"},"variableNames":[{"name":"owner","nativeSrc":"21254:5:19","nodeType":"YulIdentifier","src":"21254:5:19"}]},{"nativeSrc":"21404:45:19","nodeType":"YulAssignment","src":"21404:45:19","value":{"arguments":[{"name":"msgSender","nativeSrc":"21421:9:19","nodeType":"YulIdentifier","src":"21421:9:19"},{"name":"_BITMASK_ADDRESS","nativeSrc":"21432:16:19","nodeType":"YulIdentifier","src":"21432:16:19"}],"functionName":{"name":"and","nativeSrc":"21417:3:19","nodeType":"YulIdentifier","src":"21417:3:19"},"nativeSrc":"21417:32:19","nodeType":"YulFunctionCall","src":"21417:32:19"},"variableNames":[{"name":"msgSender","nativeSrc":"21404:9:19","nodeType":"YulIdentifier","src":"21404:9:19"}]},{"nativeSrc":"21531:66:19","nodeType":"YulAssignment","src":"21531:66:19","value":{"arguments":[{"arguments":[{"name":"msgSender","nativeSrc":"21547:9:19","nodeType":"YulIdentifier","src":"21547:9:19"},{"name":"owner","nativeSrc":"21558:5:19","nodeType":"YulIdentifier","src":"21558:5:19"}],"functionName":{"name":"eq","nativeSrc":"21544:2:19","nodeType":"YulIdentifier","src":"21544:2:19"},"nativeSrc":"21544:20:19","nodeType":"YulFunctionCall","src":"21544:20:19"},{"arguments":[{"name":"msgSender","nativeSrc":"21569:9:19","nodeType":"YulIdentifier","src":"21569:9:19"},{"name":"approvedAddress","nativeSrc":"21580:15:19","nodeType":"YulIdentifier","src":"21580:15:19"}],"functionName":{"name":"eq","nativeSrc":"21566:2:19","nodeType":"YulIdentifier","src":"21566:2:19"},"nativeSrc":"21566:30:19","nodeType":"YulFunctionCall","src":"21566:30:19"}],"functionName":{"name":"or","nativeSrc":"21541:2:19","nodeType":"YulIdentifier","src":"21541:2:19"},"nativeSrc":"21541:56:19","nodeType":"YulFunctionCall","src":"21541:56:19"},"variableNames":[{"name":"result","nativeSrc":"21531:6:19","nodeType":"YulIdentifier","src":"21531:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9189,"isOffset":false,"isSlot":false,"src":"21274:16:19","valueSize":1},{"declaration":9189,"isOffset":false,"isSlot":false,"src":"21432:16:19","valueSize":1},{"declaration":9989,"isOffset":false,"isSlot":false,"src":"21580:15:19","valueSize":1},{"declaration":9993,"isOffset":false,"isSlot":false,"src":"21404:9:19","valueSize":1},{"declaration":9993,"isOffset":false,"isSlot":false,"src":"21421:9:19","valueSize":1},{"declaration":9993,"isOffset":false,"isSlot":false,"src":"21547:9:19","valueSize":1},{"declaration":9993,"isOffset":false,"isSlot":false,"src":"21569:9:19","valueSize":1},{"declaration":9991,"isOffset":false,"isSlot":false,"src":"21254:5:19","valueSize":1},{"declaration":9991,"isOffset":false,"isSlot":false,"src":"21267:5:19","valueSize":1},{"declaration":9991,"isOffset":false,"isSlot":false,"src":"21558:5:19","valueSize":1},{"declaration":9996,"isOffset":false,"isSlot":false,"src":"21531:6:19","valueSize":1}],"id":9998,"nodeType":"InlineAssembly","src":"21135:472:19"}]},"documentation":{"id":9987,"nodeType":"StructuredDocumentation","src":"20869:93:19","text":" @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."},"id":10000,"implemented":true,"kind":"function","modifiers":[],"name":"_isSenderApprovedOrOwner","nameLocation":"20976:24:19","nodeType":"FunctionDefinition","parameters":{"id":9994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9989,"mutability":"mutable","name":"approvedAddress","nameLocation":"21018:15:19","nodeType":"VariableDeclaration","scope":10000,"src":"21010:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9988,"name":"address","nodeType":"ElementaryTypeName","src":"21010:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9991,"mutability":"mutable","name":"owner","nameLocation":"21051:5:19","nodeType":"VariableDeclaration","scope":10000,"src":"21043:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9990,"name":"address","nodeType":"ElementaryTypeName","src":"21043:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9993,"mutability":"mutable","name":"msgSender","nameLocation":"21074:9:19","nodeType":"VariableDeclaration","scope":10000,"src":"21066:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9992,"name":"address","nodeType":"ElementaryTypeName","src":"21066:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21000:89:19"},"returnParameters":{"id":9997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9996,"mutability":"mutable","name":"result","nameLocation":"21117:6:19","nodeType":"VariableDeclaration","scope":10000,"src":"21112:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9995,"name":"bool","nodeType":"ElementaryTypeName","src":"21112:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"21111:13:19"},"scope":11205,"src":"20967:646:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":10018,"nodeType":"Block","src":"21878:317:19","statements":[{"assignments":[10012],"declarations":[{"constant":false,"id":10012,"mutability":"mutable","name":"tokenApproval","nameLocation":"21913:13:19","nodeType":"VariableDeclaration","scope":10018,"src":"21888:38:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$9129_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"},"typeName":{"id":10011,"nodeType":"UserDefinedTypeName","pathNode":{"id":10010,"name":"TokenApprovalRef","nameLocations":["21888:16:19"],"nodeType":"IdentifierPath","referencedDeclaration":9129,"src":"21888:16:19"},"referencedDeclaration":9129,"src":"21888:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$9129_storage_ptr","typeString":"struct ERC721A.TokenApprovalRef"}},"visibility":"internal"}],"id":10016,"initialValue":{"baseExpression":{"id":10013,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"21929:15:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$9129_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":10015,"indexExpression":{"id":10014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10003,"src":"21945:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"21929:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$9129_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"nodeType":"VariableDeclarationStatement","src":"21888:65:19"},{"AST":{"nativeSrc":"22066:123:19","nodeType":"YulBlock","src":"22066:123:19","statements":[{"nativeSrc":"22080:41:19","nodeType":"YulAssignment","src":"22080:41:19","value":{"name":"tokenApproval.slot","nativeSrc":"22103:18:19","nodeType":"YulIdentifier","src":"22103:18:19"},"variableNames":[{"name":"approvedAddressSlot","nativeSrc":"22080:19:19","nodeType":"YulIdentifier","src":"22080:19:19"}]},{"nativeSrc":"22134:45:19","nodeType":"YulAssignment","src":"22134:45:19","value":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"22159:19:19","nodeType":"YulIdentifier","src":"22159:19:19"}],"functionName":{"name":"sload","nativeSrc":"22153:5:19","nodeType":"YulIdentifier","src":"22153:5:19"},"nativeSrc":"22153:26:19","nodeType":"YulFunctionCall","src":"22153:26:19"},"variableNames":[{"name":"approvedAddress","nativeSrc":"22134:15:19","nodeType":"YulIdentifier","src":"22134:15:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":10008,"isOffset":false,"isSlot":false,"src":"22134:15:19","valueSize":1},{"declaration":10006,"isOffset":false,"isSlot":false,"src":"22080:19:19","valueSize":1},{"declaration":10006,"isOffset":false,"isSlot":false,"src":"22159:19:19","valueSize":1},{"declaration":10012,"isOffset":false,"isSlot":true,"src":"22103:18:19","suffix":"slot","valueSize":1}],"id":10017,"nodeType":"InlineAssembly","src":"22057:132:19"}]},"documentation":{"id":10001,"nodeType":"StructuredDocumentation","src":"21619:97:19","text":" @dev Returns the storage slot and value for the approved address of `tokenId`."},"id":10019,"implemented":true,"kind":"function","modifiers":[],"name":"_getApprovedSlotAndAddress","nameLocation":"21730:26:19","nodeType":"FunctionDefinition","parameters":{"id":10004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10003,"mutability":"mutable","name":"tokenId","nameLocation":"21765:7:19","nodeType":"VariableDeclaration","scope":10019,"src":"21757:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10002,"name":"uint256","nodeType":"ElementaryTypeName","src":"21757:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"21756:17:19"},"returnParameters":{"id":10009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10006,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"21828:19:19","nodeType":"VariableDeclaration","scope":10019,"src":"21820:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10005,"name":"uint256","nodeType":"ElementaryTypeName","src":"21820:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10008,"mutability":"mutable","name":"approvedAddress","nameLocation":"21857:15:19","nodeType":"VariableDeclaration","scope":10019,"src":"21849:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10007,"name":"address","nodeType":"ElementaryTypeName","src":"21849:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21819:54:19"},"scope":11205,"src":"21721:474:19","stateMutability":"view","virtual":false,"visibility":"private"},{"baseFunctions":[11360],"body":{"id":10191,"nodeType":"Block","src":"22923:3320:19","statements":[{"assignments":[10031],"declarations":[{"constant":false,"id":10031,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"22941:19:19","nodeType":"VariableDeclaration","scope":10191,"src":"22933:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10030,"name":"uint256","nodeType":"ElementaryTypeName","src":"22933:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10035,"initialValue":{"arguments":[{"id":10033,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"22982:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10032,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9761,"src":"22963:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":10034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22963:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"22933:57:19"},{"expression":{"id":10052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10036,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"23092:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10045,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"23131:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23123:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10043,"name":"uint160","nodeType":"ElementaryTypeName","src":"23123:7:19","typeDescriptions":{}}},"id":10046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23123:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23115:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10041,"name":"uint256","nodeType":"ElementaryTypeName","src":"23115:7:19","typeDescriptions":{}}},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23115:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10048,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9189,"src":"23140:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23115:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10040,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23107:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10039,"name":"uint160","nodeType":"ElementaryTypeName","src":"23107:7:19","typeDescriptions":{}}},"id":10050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23107:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10038,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23099:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10037,"name":"address","nodeType":"ElementaryTypeName","src":"23099:7:19","typeDescriptions":{}}},"id":10051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23099:59:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23092:66:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10053,"nodeType":"ExpressionStatement","src":"23092:66:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10058,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"23189:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10057,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23181:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10056,"name":"uint160","nodeType":"ElementaryTypeName","src":"23181:7:19","typeDescriptions":{}}},"id":10059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23181:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10055,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23173:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10054,"name":"address","nodeType":"ElementaryTypeName","src":"23173:7:19","typeDescriptions":{}}},"id":10060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23173:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10061,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"23214:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"23173:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10068,"nodeType":"IfStatement","src":"23169:95:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10064,"name":"TransferFromIncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11232,"src":"23228:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23255:8:19","memberName":"selector","nodeType":"MemberAccess","src":"23228:35:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10063,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"23220:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23220:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10067,"nodeType":"ExpressionStatement","src":"23220:44:19"}},{"assignments":[10070,10072],"declarations":[{"constant":false,"id":10070,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"23284:19:19","nodeType":"VariableDeclaration","scope":10191,"src":"23276:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10069,"name":"uint256","nodeType":"ElementaryTypeName","src":"23276:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10072,"mutability":"mutable","name":"approvedAddress","nameLocation":"23313:15:19","nodeType":"VariableDeclaration","scope":10191,"src":"23305:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10071,"name":"address","nodeType":"ElementaryTypeName","src":"23305:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10076,"initialValue":{"arguments":[{"id":10074,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"23359:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10073,"name":"_getApprovedSlotAndAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10019,"src":"23332:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (uint256) view returns (uint256,address)"}},"id":10075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23332:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"23275:92:19"},{"condition":{"id":10083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23463:69:19","subExpression":{"arguments":[{"id":10078,"name":"approvedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10072,"src":"23489:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10079,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"23506:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10080,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"23512:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23512:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10077,"name":"_isSenderApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10000,"src":"23464:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,address) pure returns (bool)"}},"id":10082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23464:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10096,"nodeType":"IfStatement","src":"23459:188:19","trueBody":{"condition":{"id":10089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"23550:44:19","subExpression":{"arguments":[{"id":10085,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"23568:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10086,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"23574:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23574:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10084,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9922,"src":"23551:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":10088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23551:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10095,"nodeType":"IfStatement","src":"23546:101:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10091,"name":"TransferCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11229,"src":"23604:33:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23638:8:19","memberName":"selector","nodeType":"MemberAccess","src":"23604:42:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10090,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"23596:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23596:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10094,"nodeType":"ExpressionStatement","src":"23596:51:19"}}},{"expression":{"arguments":[{"id":10098,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"23680:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10099,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10024,"src":"23686:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10100,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"23690:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23699:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10097,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10264,"src":"23658:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23658:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10103,"nodeType":"ExpressionStatement","src":"23658:43:19"},{"AST":{"nativeSrc":"23773:181:19","nodeType":"YulBlock","src":"23773:181:19","statements":[{"body":{"nativeSrc":"23806:138:19","nodeType":"YulBlock","src":"23806:138:19","statements":[{"expression":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"23907:19:19","nodeType":"YulIdentifier","src":"23907:19:19"},{"kind":"number","nativeSrc":"23928:1:19","nodeType":"YulLiteral","src":"23928:1:19","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"23900:6:19","nodeType":"YulIdentifier","src":"23900:6:19"},"nativeSrc":"23900:30:19","nodeType":"YulFunctionCall","src":"23900:30:19"},"nativeSrc":"23900:30:19","nodeType":"YulExpressionStatement","src":"23900:30:19"}]},"condition":{"name":"approvedAddress","nativeSrc":"23790:15:19","nodeType":"YulIdentifier","src":"23790:15:19"},"nativeSrc":"23787:157:19","nodeType":"YulIf","src":"23787:157:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":10072,"isOffset":false,"isSlot":false,"src":"23790:15:19","valueSize":1},{"declaration":10070,"isOffset":false,"isSlot":false,"src":"23907:19:19","valueSize":1}],"id":10104,"nodeType":"InlineAssembly","src":"23764:190:19"},{"id":10161,"nodeType":"UncheckedBlock","src":"24221:1361:19","statements":[{"expression":{"id":10108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"24314:26:19","subExpression":{"baseExpression":{"id":10105,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"24316:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10107,"indexExpression":{"id":10106,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"24335:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24316:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10109,"nodeType":"ExpressionStatement","src":"24314:26:19"},{"expression":{"id":10113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"24382:24:19","subExpression":{"baseExpression":{"id":10110,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"24384:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10112,"indexExpression":{"id":10111,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10024,"src":"24403:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24384:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10114,"nodeType":"ExpressionStatement","src":"24382:24:19"},{"expression":{"id":10128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10115,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"24670:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10117,"indexExpression":{"id":10116,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"24688:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"24670:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10119,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10024,"src":"24735:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10120,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"24755:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":10122,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"24798:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10123,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10024,"src":"24804:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10124,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"24808:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10121,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11176,"src":"24783:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24783:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24755:73:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10118,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"24699:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24699:143:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24670:172:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10129,"nodeType":"ExpressionStatement","src":"24670:172:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10130,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"24959:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10131,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"24981:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24959:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25010:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24959:52:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10160,"nodeType":"IfStatement","src":"24955:617:19","trueBody":{"id":10159,"nodeType":"Block","src":"25013:559:19","statements":[{"assignments":[10136],"declarations":[{"constant":false,"id":10136,"mutability":"mutable","name":"nextTokenId","nameLocation":"25039:11:19","nodeType":"VariableDeclaration","scope":10159,"src":"25031:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10135,"name":"uint256","nodeType":"ElementaryTypeName","src":"25031:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10140,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10137,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"25053:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25063:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25053:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25031:33:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10141,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"25184:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10143,"indexExpression":{"id":10142,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"25202:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"25184:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25218:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"25184:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10158,"nodeType":"IfStatement","src":"25180:378:19","trueBody":{"id":10157,"nodeType":"Block","src":"25221:337:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10146,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"25305:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10147,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"25320:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25305:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10156,"nodeType":"IfStatement","src":"25301:239:19","trueBody":{"id":10155,"nodeType":"Block","src":"25335:205:19","statements":[{"expression":{"id":10153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10149,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"25465:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10151,"indexExpression":{"id":10150,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10136,"src":"25483:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"25465:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10152,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10031,"src":"25498:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25465:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10154,"nodeType":"ExpressionStatement","src":"25465:52:19"}]}}]}}]}}]},{"assignments":[10163],"declarations":[{"constant":false,"id":10163,"mutability":"mutable","name":"toMasked","nameLocation":"25689:8:19","nodeType":"VariableDeclaration","scope":10191,"src":"25681:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10162,"name":"uint256","nodeType":"ElementaryTypeName","src":"25681:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10173,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10168,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10024,"src":"25716:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10167,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25708:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10166,"name":"uint160","nodeType":"ElementaryTypeName","src":"25708:7:19","typeDescriptions":{}}},"id":10169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25708:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25700:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10164,"name":"uint256","nodeType":"ElementaryTypeName","src":"25700:7:19","typeDescriptions":{}}},"id":10170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25700:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10171,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9189,"src":"25723:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25700:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25681:58:19"},{"AST":{"nativeSrc":"25758:358:19","nodeType":"YulBlock","src":"25758:358:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"25836:1:19","nodeType":"YulLiteral","src":"25836:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"25892:1:19","nodeType":"YulLiteral","src":"25892:1:19","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"25946:25:19","nodeType":"YulIdentifier","src":"25946:25:19"},{"name":"from","nativeSrc":"26003:4:19","nodeType":"YulIdentifier","src":"26003:4:19"},{"name":"toMasked","nativeSrc":"26036:8:19","nodeType":"YulIdentifier","src":"26036:8:19"},{"name":"tokenId","nativeSrc":"26071:7:19","nodeType":"YulIdentifier","src":"26071:7:19"}],"functionName":{"name":"log4","nativeSrc":"25814:4:19","nodeType":"YulIdentifier","src":"25814:4:19"},"nativeSrc":"25814:292:19","nodeType":"YulFunctionCall","src":"25814:292:19"},"nativeSrc":"25814:292:19","nodeType":"YulExpressionStatement","src":"25814:292:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":9195,"isOffset":false,"isSlot":false,"src":"25946:25:19","valueSize":1},{"declaration":10022,"isOffset":false,"isSlot":false,"src":"26003:4:19","valueSize":1},{"declaration":10163,"isOffset":false,"isSlot":false,"src":"26036:8:19","valueSize":1},{"declaration":10026,"isOffset":false,"isSlot":false,"src":"26071:7:19","valueSize":1}],"id":10174,"nodeType":"InlineAssembly","src":"25749:367:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10175,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10163,"src":"26129:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26141:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"26129:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10183,"nodeType":"IfStatement","src":"26125:58:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10179,"name":"TransferToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11238,"src":"26152:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26174:8:19","memberName":"selector","nodeType":"MemberAccess","src":"26152:30:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10178,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"26144:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26144:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10182,"nodeType":"ExpressionStatement","src":"26144:39:19"}},{"expression":{"arguments":[{"id":10185,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10022,"src":"26215:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10186,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10024,"src":"26221:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10187,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10026,"src":"26225:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26234:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10184,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10277,"src":"26194:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26194:42:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10190,"nodeType":"ExpressionStatement","src":"26194:42:19"}]},"documentation":{"id":10020,"nodeType":"StructuredDocumentation","src":"22388:403:19","text":" @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":10192,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"22805:12:19","nodeType":"FunctionDefinition","overrides":{"id":10028,"nodeType":"OverrideSpecifier","overrides":[],"src":"22914:8:19"},"parameters":{"id":10027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10022,"mutability":"mutable","name":"from","nameLocation":"22835:4:19","nodeType":"VariableDeclaration","scope":10192,"src":"22827:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10021,"name":"address","nodeType":"ElementaryTypeName","src":"22827:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10024,"mutability":"mutable","name":"to","nameLocation":"22857:2:19","nodeType":"VariableDeclaration","scope":10192,"src":"22849:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10023,"name":"address","nodeType":"ElementaryTypeName","src":"22849:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10026,"mutability":"mutable","name":"tokenId","nameLocation":"22877:7:19","nodeType":"VariableDeclaration","scope":10192,"src":"22869:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10025,"name":"uint256","nodeType":"ElementaryTypeName","src":"22869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22817:73:19"},"returnParameters":{"id":10029,"nodeType":"ParameterList","parameters":[],"src":"22923:0:19"},"scope":11205,"src":"22796:3447:19","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[11350],"body":{"id":10210,"nodeType":"Block","src":"26465:56:19","statements":[{"expression":{"arguments":[{"id":10204,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10195,"src":"26492:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10205,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10197,"src":"26498:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10206,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10199,"src":"26502:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26511:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10203,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[10211,10251],"referencedDeclaration":10251,"src":"26475:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":10208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26475:39:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10209,"nodeType":"ExpressionStatement","src":"26475:39:19"}]},"documentation":{"id":10193,"nodeType":"StructuredDocumentation","src":"26249:80:19","text":" @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"functionSelector":"42842e0e","id":10211,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"26343:16:19","nodeType":"FunctionDefinition","overrides":{"id":10201,"nodeType":"OverrideSpecifier","overrides":[],"src":"26456:8:19"},"parameters":{"id":10200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10195,"mutability":"mutable","name":"from","nameLocation":"26377:4:19","nodeType":"VariableDeclaration","scope":10211,"src":"26369:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10194,"name":"address","nodeType":"ElementaryTypeName","src":"26369:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10197,"mutability":"mutable","name":"to","nameLocation":"26399:2:19","nodeType":"VariableDeclaration","scope":10211,"src":"26391:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10196,"name":"address","nodeType":"ElementaryTypeName","src":"26391:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10199,"mutability":"mutable","name":"tokenId","nameLocation":"26419:7:19","nodeType":"VariableDeclaration","scope":10211,"src":"26411:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10198,"name":"uint256","nodeType":"ElementaryTypeName","src":"26411:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26359:73:19"},"returnParameters":{"id":10202,"nodeType":"ParameterList","parameters":[],"src":"26465:0:19"},"scope":11205,"src":"26334:187:19","stateMutability":"payable","virtual":true,"visibility":"public"},{"baseFunctions":[11340],"body":{"id":10250,"nodeType":"Block","src":"27261:246:19","statements":[{"expression":{"arguments":[{"id":10225,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10214,"src":"27284:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10226,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10216,"src":"27290:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10227,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10218,"src":"27294:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10224,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10192,"src":"27271:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27271:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10229,"nodeType":"ExpressionStatement","src":"27271:31:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10230,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10216,"src":"27316:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27319:4:19","memberName":"code","nodeType":"MemberAccess","src":"27316:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27324:6:19","memberName":"length","nodeType":"MemberAccess","src":"27316:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27334:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"27316:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10249,"nodeType":"IfStatement","src":"27312:189:19","trueBody":{"condition":{"id":10241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"27353:57:19","subExpression":{"arguments":[{"id":10236,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10214,"src":"27385:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10237,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10216,"src":"27391:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10238,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10218,"src":"27395:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10239,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10220,"src":"27404:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10235,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"27354:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":10240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27354:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10248,"nodeType":"IfStatement","src":"27349:152:19","trueBody":{"id":10247,"nodeType":"Block","src":"27412:89:19","statements":[{"expression":{"arguments":[{"expression":{"id":10243,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11235,"src":"27438:38:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27477:8:19","memberName":"selector","nodeType":"MemberAccess","src":"27438:47:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10242,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"27430:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27430:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10246,"nodeType":"ExpressionStatement","src":"27430:56:19"}]}}}]},"documentation":{"id":10212,"nodeType":"StructuredDocumentation","src":"26527:570:19","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":10251,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"27111:16:19","nodeType":"FunctionDefinition","overrides":{"id":10222,"nodeType":"OverrideSpecifier","overrides":[],"src":"27252:8:19"},"parameters":{"id":10221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10214,"mutability":"mutable","name":"from","nameLocation":"27145:4:19","nodeType":"VariableDeclaration","scope":10251,"src":"27137:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10213,"name":"address","nodeType":"ElementaryTypeName","src":"27137:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10216,"mutability":"mutable","name":"to","nameLocation":"27167:2:19","nodeType":"VariableDeclaration","scope":10251,"src":"27159:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10215,"name":"address","nodeType":"ElementaryTypeName","src":"27159:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10218,"mutability":"mutable","name":"tokenId","nameLocation":"27187:7:19","nodeType":"VariableDeclaration","scope":10251,"src":"27179:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10217,"name":"uint256","nodeType":"ElementaryTypeName","src":"27179:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10220,"mutability":"mutable","name":"_data","nameLocation":"27217:5:19","nodeType":"VariableDeclaration","scope":10251,"src":"27204:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10219,"name":"bytes","nodeType":"ElementaryTypeName","src":"27204:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"27127:101:19"},"returnParameters":{"id":10223,"nodeType":"ParameterList","parameters":[],"src":"27261:0:19"},"scope":11205,"src":"27102:405:19","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":10263,"nodeType":"Block","src":"28303:2:19","statements":[]},"documentation":{"id":10252,"nodeType":"StructuredDocumentation","src":"27513:633:19","text":" @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."},"id":10264,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfers","nameLocation":"28160:21:19","nodeType":"FunctionDefinition","parameters":{"id":10261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10254,"mutability":"mutable","name":"from","nameLocation":"28199:4:19","nodeType":"VariableDeclaration","scope":10264,"src":"28191:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10253,"name":"address","nodeType":"ElementaryTypeName","src":"28191:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10256,"mutability":"mutable","name":"to","nameLocation":"28221:2:19","nodeType":"VariableDeclaration","scope":10264,"src":"28213:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10255,"name":"address","nodeType":"ElementaryTypeName","src":"28213:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10258,"mutability":"mutable","name":"startTokenId","nameLocation":"28241:12:19","nodeType":"VariableDeclaration","scope":10264,"src":"28233:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10257,"name":"uint256","nodeType":"ElementaryTypeName","src":"28233:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10260,"mutability":"mutable","name":"quantity","nameLocation":"28271:8:19","nodeType":"VariableDeclaration","scope":10264,"src":"28263:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10259,"name":"uint256","nodeType":"ElementaryTypeName","src":"28263:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28181:104:19"},"returnParameters":{"id":10262,"nodeType":"ParameterList","parameters":[],"src":"28303:0:19"},"scope":11205,"src":"28151:154:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10276,"nodeType":"Block","src":"29103:2:19","statements":[]},"documentation":{"id":10265,"nodeType":"StructuredDocumentation","src":"28311:636:19","text":" @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."},"id":10277,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfers","nameLocation":"28961:20:19","nodeType":"FunctionDefinition","parameters":{"id":10274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10267,"mutability":"mutable","name":"from","nameLocation":"28999:4:19","nodeType":"VariableDeclaration","scope":10277,"src":"28991:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10266,"name":"address","nodeType":"ElementaryTypeName","src":"28991:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10269,"mutability":"mutable","name":"to","nameLocation":"29021:2:19","nodeType":"VariableDeclaration","scope":10277,"src":"29013:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10268,"name":"address","nodeType":"ElementaryTypeName","src":"29013:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10271,"mutability":"mutable","name":"startTokenId","nameLocation":"29041:12:19","nodeType":"VariableDeclaration","scope":10277,"src":"29033:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10270,"name":"uint256","nodeType":"ElementaryTypeName","src":"29033:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10273,"mutability":"mutable","name":"quantity","nameLocation":"29071:8:19","nodeType":"VariableDeclaration","scope":10277,"src":"29063:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10272,"name":"uint256","nodeType":"ElementaryTypeName","src":"29063:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28981:104:19"},"returnParameters":{"id":10275,"nodeType":"ParameterList","parameters":[],"src":"29103:0:19"},"scope":11205,"src":"28952:153:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10332,"nodeType":"Block","src":"29697:509:19","statements":[{"clauses":[{"block":{"id":10312,"nodeType":"Block","src":"29846:96:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":10310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10304,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10302,"src":"29867:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"arguments":[{"id":10306,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10282,"src":"29902:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10305,"name":"ERC721A__IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9123,"src":"29877:24:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721A__IERC721Receiver_$9123_$","typeString":"type(contract ERC721A__IERC721Receiver)"}},"id":10307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29877:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721A__IERC721Receiver_$9123","typeString":"contract ERC721A__IERC721Receiver"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29906:16:19","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":9122,"src":"29877:45:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":10309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29923:8:19","memberName":"selector","nodeType":"MemberAccess","src":"29877:54:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"29867:64:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":10290,"id":10311,"nodeType":"Return","src":"29860:71:19"}]},"errorName":"","id":10313,"nodeType":"TryCatchClause","parameters":{"id":10303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10302,"mutability":"mutable","name":"retval","nameLocation":"29829:6:19","nodeType":"VariableDeclaration","scope":10313,"src":"29822:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":10301,"name":"bytes4","nodeType":"ElementaryTypeName","src":"29822:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"29808:37:19"},"src":"29800:142:19"},{"block":{"id":10329,"nodeType":"Block","src":"29971:229:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10317,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10315,"src":"29989:6:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29996:6:19","memberName":"length","nodeType":"MemberAccess","src":"29989:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30006:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"29989:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10327,"nodeType":"IfStatement","src":"29985:113:19","trueBody":{"id":10326,"nodeType":"Block","src":"30009:89:19","statements":[{"expression":{"arguments":[{"expression":{"id":10322,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11235,"src":"30035:38:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30074:8:19","memberName":"selector","nodeType":"MemberAccess","src":"30035:47:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10321,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"30027:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30027:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10325,"nodeType":"ExpressionStatement","src":"30027:56:19"}]}},{"AST":{"nativeSrc":"30120:70:19","nodeType":"YulBlock","src":"30120:70:19","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"30149:2:19","nodeType":"YulLiteral","src":"30149:2:19","type":"","value":"32"},{"name":"reason","nativeSrc":"30153:6:19","nodeType":"YulIdentifier","src":"30153:6:19"}],"functionName":{"name":"add","nativeSrc":"30145:3:19","nodeType":"YulIdentifier","src":"30145:3:19"},"nativeSrc":"30145:15:19","nodeType":"YulFunctionCall","src":"30145:15:19"},{"arguments":[{"name":"reason","nativeSrc":"30168:6:19","nodeType":"YulIdentifier","src":"30168:6:19"}],"functionName":{"name":"mload","nativeSrc":"30162:5:19","nodeType":"YulIdentifier","src":"30162:5:19"},"nativeSrc":"30162:13:19","nodeType":"YulFunctionCall","src":"30162:13:19"}],"functionName":{"name":"revert","nativeSrc":"30138:6:19","nodeType":"YulIdentifier","src":"30138:6:19"},"nativeSrc":"30138:38:19","nodeType":"YulFunctionCall","src":"30138:38:19"},"nativeSrc":"30138:38:19","nodeType":"YulExpressionStatement","src":"30138:38:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":10315,"isOffset":false,"isSlot":false,"src":"30153:6:19","valueSize":1},{"declaration":10315,"isOffset":false,"isSlot":false,"src":"30168:6:19","valueSize":1}],"id":10328,"nodeType":"InlineAssembly","src":"30111:79:19"}]},"errorName":"","id":10330,"nodeType":"TryCatchClause","parameters":{"id":10316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10315,"mutability":"mutable","name":"reason","nameLocation":"29963:6:19","nodeType":"VariableDeclaration","scope":10330,"src":"29950:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10314,"name":"bytes","nodeType":"ElementaryTypeName","src":"29950:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29949:21:19"},"src":"29943:257:19"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":10295,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"29757:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29757:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10297,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10280,"src":"29778:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10298,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10284,"src":"29784:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10299,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10286,"src":"29793:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":10292,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10282,"src":"29736:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10291,"name":"ERC721A__IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9123,"src":"29711:24:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721A__IERC721Receiver_$9123_$","typeString":"type(contract ERC721A__IERC721Receiver)"}},"id":10293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29711:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ERC721A__IERC721Receiver_$9123","typeString":"contract ERC721A__IERC721Receiver"}},"id":10294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"29740:16:19","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":9122,"src":"29711:45:19","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":10300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29711:88:19","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":10331,"nodeType":"TryStatement","src":"29707:493:19"}]},"documentation":{"id":10278,"nodeType":"StructuredDocumentation","src":"29111:417:19","text":" @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."},"id":10333,"implemented":true,"kind":"function","modifiers":[],"name":"_checkContractOnERC721Received","nameLocation":"29542:30:19","nodeType":"FunctionDefinition","parameters":{"id":10287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10280,"mutability":"mutable","name":"from","nameLocation":"29590:4:19","nodeType":"VariableDeclaration","scope":10333,"src":"29582:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10279,"name":"address","nodeType":"ElementaryTypeName","src":"29582:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10282,"mutability":"mutable","name":"to","nameLocation":"29612:2:19","nodeType":"VariableDeclaration","scope":10333,"src":"29604:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10281,"name":"address","nodeType":"ElementaryTypeName","src":"29604:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10284,"mutability":"mutable","name":"tokenId","nameLocation":"29632:7:19","nodeType":"VariableDeclaration","scope":10333,"src":"29624:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10283,"name":"uint256","nodeType":"ElementaryTypeName","src":"29624:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10286,"mutability":"mutable","name":"_data","nameLocation":"29662:5:19","nodeType":"VariableDeclaration","scope":10333,"src":"29649:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10285,"name":"bytes","nodeType":"ElementaryTypeName","src":"29649:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"29572:101:19"},"returnParameters":{"id":10290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10333,"src":"29691:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10288,"name":"bool","nodeType":"ElementaryTypeName","src":"29691:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29690:6:19"},"scope":11205,"src":"29533:673:19","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10463,"nodeType":"Block","src":"30714:2281:19","statements":[{"assignments":[10342],"declarations":[{"constant":false,"id":10342,"mutability":"mutable","name":"startTokenId","nameLocation":"30732:12:19","nodeType":"VariableDeclaration","scope":10463,"src":"30724:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10341,"name":"uint256","nodeType":"ElementaryTypeName","src":"30724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10344,"initialValue":{"id":10343,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"30747:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30724:36:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10345,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10338,"src":"30774:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30786:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"30774:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10353,"nodeType":"IfStatement","src":"30770:53:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10349,"name":"MintZeroQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11223,"src":"30797:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30814:8:19","memberName":"selector","nodeType":"MemberAccess","src":"30797:25:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10348,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"30789:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30789:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10352,"nodeType":"ExpressionStatement","src":"30789:34:19"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30864:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30856:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10355,"name":"address","nodeType":"ElementaryTypeName","src":"30856:7:19","typeDescriptions":{}}},"id":10358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30856:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10359,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10336,"src":"30868:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10360,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"30872:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10361,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10338,"src":"30886:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10354,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10264,"src":"30834:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30834:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10363,"nodeType":"ExpressionStatement","src":"30834:61:19"},{"id":10452,"nodeType":"UncheckedBlock","src":"31078:1841:19","statements":[{"expression":{"id":10382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10364,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"31323:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10366,"indexExpression":{"id":10365,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"31341:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31323:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10368,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10336,"src":"31393:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10370,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10338,"src":"31434:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10369,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9837,"src":"31413:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":10371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31413:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31469:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31461:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10373,"name":"address","nodeType":"ElementaryTypeName","src":"31461:7:19","typeDescriptions":{}}},"id":10376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31461:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10377,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10336,"src":"31473:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":10378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31477:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10372,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11176,"src":"31446:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31446:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31413:66:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10367,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"31357:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31357:136:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31323:170:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10383,"nodeType":"ExpressionStatement","src":"31323:170:19"},{"expression":{"id":10396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10384,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"31704:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10386,"indexExpression":{"id":10385,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10336,"src":"31723:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"31704:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10387,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10338,"src":"31730:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31743:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10389,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9140,"src":"31748:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31743:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10391,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31742:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":10392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31773:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"31742:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10394,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"31741:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31730:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31704:71:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10397,"nodeType":"ExpressionStatement","src":"31704:71:19"},{"assignments":[10399],"declarations":[{"constant":false,"id":10399,"mutability":"mutable","name":"toMasked","nameLocation":"31891:8:19","nodeType":"VariableDeclaration","scope":10452,"src":"31883:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10398,"name":"uint256","nodeType":"ElementaryTypeName","src":"31883:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10409,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10404,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10336,"src":"31918:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31910:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10402,"name":"uint160","nodeType":"ElementaryTypeName","src":"31910:7:19","typeDescriptions":{}}},"id":10405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31910:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31902:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10400,"name":"uint256","nodeType":"ElementaryTypeName","src":"31902:7:19","typeDescriptions":{}}},"id":10406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31902:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10407,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9189,"src":"31925:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31902:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31883:58:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10410,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10399,"src":"31960:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31972:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"31960:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10418,"nodeType":"IfStatement","src":"31956:54:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10414,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11220,"src":"31983:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32001:8:19","memberName":"selector","nodeType":"MemberAccess","src":"31983:26:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10413,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"31975:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31975:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10417,"nodeType":"ExpressionStatement","src":"31975:35:19"}},{"assignments":[10420],"declarations":[{"constant":false,"id":10420,"mutability":"mutable","name":"end","nameLocation":"32033:3:19","nodeType":"VariableDeclaration","scope":10452,"src":"32025:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10419,"name":"uint256","nodeType":"ElementaryTypeName","src":"32025:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10424,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10421,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"32039:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10422,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10338,"src":"32054:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32039:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32025:37:19"},{"assignments":[10426],"declarations":[{"constant":false,"id":10426,"mutability":"mutable","name":"tokenId","nameLocation":"32084:7:19","nodeType":"VariableDeclaration","scope":10452,"src":"32076:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10425,"name":"uint256","nodeType":"ElementaryTypeName","src":"32076:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10428,"initialValue":{"id":10427,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"32094:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"32076:30:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10429,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10420,"src":"32125:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32131:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32125:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10432,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"32135:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32135:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32125:27:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10440,"nodeType":"IfStatement","src":"32121:77:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10436,"name":"SequentialMintExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11253,"src":"32162:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"32189:8:19","memberName":"selector","nodeType":"MemberAccess","src":"32162:35:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10435,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"32154:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32154:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10439,"nodeType":"ExpressionStatement","src":"32154:44:19"}},{"body":{"id":10442,"nodeType":"Block","src":"32216:633:19","statements":[{"AST":{"nativeSrc":"32243:441:19","nodeType":"YulBlock","src":"32243:441:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"32345:1:19","nodeType":"YulLiteral","src":"32345:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"32409:1:19","nodeType":"YulLiteral","src":"32409:1:19","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"32471:25:19","nodeType":"YulIdentifier","src":"32471:25:19"},{"kind":"number","nativeSrc":"32536:1:19","nodeType":"YulLiteral","src":"32536:1:19","type":"","value":"0"},{"name":"toMasked","nativeSrc":"32580:8:19","nodeType":"YulIdentifier","src":"32580:8:19"},{"name":"tokenId","nativeSrc":"32623:7:19","nodeType":"YulIdentifier","src":"32623:7:19"}],"functionName":{"name":"log4","nativeSrc":"32315:4:19","nodeType":"YulIdentifier","src":"32315:4:19"},"nativeSrc":"32315:351:19","nodeType":"YulFunctionCall","src":"32315:351:19"},"nativeSrc":"32315:351:19","nodeType":"YulExpressionStatement","src":"32315:351:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":9195,"isOffset":false,"isSlot":false,"src":"32471:25:19","valueSize":1},{"declaration":10399,"isOffset":false,"isSlot":false,"src":"32580:8:19","valueSize":1},{"declaration":10426,"isOffset":false,"isSlot":false,"src":"32623:7:19","valueSize":1}],"id":10441,"nodeType":"InlineAssembly","src":"32234:450:19"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"32857:9:19","subExpression":{"id":10443,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10426,"src":"32859:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10445,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10420,"src":"32870:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32857:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10447,"nodeType":"DoWhileStatement","src":"32213:662:19"},{"expression":{"id":10450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10448,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"32889:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10449,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10420,"src":"32905:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"32889:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10451,"nodeType":"ExpressionStatement","src":"32889:19:19"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32957:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32949:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10454,"name":"address","nodeType":"ElementaryTypeName","src":"32949:7:19","typeDescriptions":{}}},"id":10457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32949:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10458,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10336,"src":"32961:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10459,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10342,"src":"32965:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10460,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10338,"src":"32979:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10453,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10277,"src":"32928:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32928:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10462,"nodeType":"ExpressionStatement","src":"32928:60:19"}]},"documentation":{"id":10334,"nodeType":"StructuredDocumentation","src":"30397:250:19","text":" @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."},"id":10464,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"30661:5:19","nodeType":"FunctionDefinition","parameters":{"id":10339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10336,"mutability":"mutable","name":"to","nameLocation":"30675:2:19","nodeType":"VariableDeclaration","scope":10464,"src":"30667:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10335,"name":"address","nodeType":"ElementaryTypeName","src":"30667:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10338,"mutability":"mutable","name":"quantity","nameLocation":"30687:8:19","nodeType":"VariableDeclaration","scope":10464,"src":"30679:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10337,"name":"uint256","nodeType":"ElementaryTypeName","src":"30679:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30666:30:19"},"returnParameters":{"id":10340,"nodeType":"ParameterList","parameters":[],"src":"30714:0:19"},"scope":11205,"src":"30652:2343:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10595,"nodeType":"Block","src":"33904:1513:19","statements":[{"assignments":[10473],"declarations":[{"constant":false,"id":10473,"mutability":"mutable","name":"startTokenId","nameLocation":"33922:12:19","nodeType":"VariableDeclaration","scope":10595,"src":"33914:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10472,"name":"uint256","nodeType":"ElementaryTypeName","src":"33914:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10475,"initialValue":{"id":10474,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"33937:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"33914:36:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10476,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"33964:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33978:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33970:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10477,"name":"address","nodeType":"ElementaryTypeName","src":"33970:7:19","typeDescriptions":{}}},"id":10480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33970:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"33964:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10487,"nodeType":"IfStatement","src":"33960:57:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10483,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11220,"src":"33990:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34008:8:19","memberName":"selector","nodeType":"MemberAccess","src":"33990:26:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10482,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"33982:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33982:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10486,"nodeType":"ExpressionStatement","src":"33982:35:19"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10488,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"34031:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34043:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"34031:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10496,"nodeType":"IfStatement","src":"34027:53:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10492,"name":"MintZeroQuantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11223,"src":"34054:16:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34071:8:19","memberName":"selector","nodeType":"MemberAccess","src":"34054:25:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10491,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"34046:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34046:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10495,"nodeType":"ExpressionStatement","src":"34046:34:19"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10497,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"34094:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10498,"name":"_MAX_MINT_ERC2309_QUANTITY_LIMIT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9192,"src":"34105:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34094:43:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10505,"nodeType":"IfStatement","src":"34090:98:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10501,"name":"MintERC2309QuantityExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11244,"src":"34147:31:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"34179:8:19","memberName":"selector","nodeType":"MemberAccess","src":"34147:40:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10500,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"34139:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34139:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10504,"nodeType":"ExpressionStatement","src":"34139:49:19"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34229:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34221:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10507,"name":"address","nodeType":"ElementaryTypeName","src":"34221:7:19","typeDescriptions":{}}},"id":10510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34221:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10511,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"34233:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10512,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10473,"src":"34237:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10513,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"34251:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10506,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10264,"src":"34199:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34199:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10515,"nodeType":"ExpressionStatement","src":"34199:61:19"},{"id":10584,"nodeType":"UncheckedBlock","src":"34369:972:19","statements":[{"expression":{"id":10528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10516,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"34589:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10518,"indexExpression":{"id":10517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"34608:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34589:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10519,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"34615:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10520,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34628:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10521,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9140,"src":"34633:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34628:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"34627:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":10524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34658:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"34627:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"34626:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34615:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34589:71:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10529,"nodeType":"ExpressionStatement","src":"34589:71:19"},{"expression":{"id":10548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10530,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"34896:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10532,"indexExpression":{"id":10531,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10473,"src":"34914:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"34896:31:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10534,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"34966:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10536,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"35007:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10535,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9837,"src":"34986:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":10537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34986:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35042:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35034:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10539,"name":"address","nodeType":"ElementaryTypeName","src":"35034:7:19","typeDescriptions":{}}},"id":10542,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35034:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10543,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"35046:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":10544,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35050:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10538,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11176,"src":"35019:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35019:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34986:66:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10533,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"34930:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34930:136:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34896:170:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10549,"nodeType":"ExpressionStatement","src":"34896:170:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10550,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10473,"src":"35085:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10551,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"35100:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35085:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35111:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"35085:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10555,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"35115:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35115:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35085:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10563,"nodeType":"IfStatement","src":"35081:97:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10559,"name":"SequentialMintExceedsLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11253,"src":"35142:26:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"35169:8:19","memberName":"selector","nodeType":"MemberAccess","src":"35142:35:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10558,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"35134:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35134:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10562,"nodeType":"ExpressionStatement","src":"35134:44:19"}},{"eventCall":{"arguments":[{"id":10565,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10473,"src":"35218:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10566,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10473,"src":"35232:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10567,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"35247:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35232:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":10569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35258:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"35232:27:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":10573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35269:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35261:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10571,"name":"address","nodeType":"ElementaryTypeName","src":"35261:7:19","typeDescriptions":{}}},"id":10574,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35261:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10575,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"35273:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10564,"name":"ConsecutiveTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11425,"src":"35198:19:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address,address)"}},"id":10576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35198:78:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10577,"nodeType":"EmitStatement","src":"35193:83:19"},{"expression":{"id":10582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10578,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"35291:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10579,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10473,"src":"35307:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":10580,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"35322:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35307:23:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"35291:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10583,"nodeType":"ExpressionStatement","src":"35291:39:19"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"35379:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10587,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35371:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10586,"name":"address","nodeType":"ElementaryTypeName","src":"35371:7:19","typeDescriptions":{}}},"id":10589,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35371:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10467,"src":"35383:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10591,"name":"startTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10473,"src":"35387:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10592,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10469,"src":"35401:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10585,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10277,"src":"35350:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10593,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35350:60:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10594,"nodeType":"ExpressionStatement","src":"35350:60:19"}]},"documentation":{"id":10465,"nodeType":"StructuredDocumentation","src":"33001:829:19","text":" @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."},"id":10596,"implemented":true,"kind":"function","modifiers":[],"name":"_mintERC2309","nameLocation":"33844:12:19","nodeType":"FunctionDefinition","parameters":{"id":10470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10467,"mutability":"mutable","name":"to","nameLocation":"33865:2:19","nodeType":"VariableDeclaration","scope":10596,"src":"33857:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10466,"name":"address","nodeType":"ElementaryTypeName","src":"33857:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10469,"mutability":"mutable","name":"quantity","nameLocation":"33877:8:19","nodeType":"VariableDeclaration","scope":10596,"src":"33869:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10468,"name":"uint256","nodeType":"ElementaryTypeName","src":"33869:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"33856:30:19"},"returnParameters":{"id":10471,"nodeType":"ParameterList","parameters":[],"src":"33904:0:19"},"scope":11205,"src":"33835:1582:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10659,"nodeType":"Block","src":"35932:650:19","statements":[{"expression":{"arguments":[{"id":10607,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"35948:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10608,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10601,"src":"35952:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10606,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10464,"src":"35942:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35942:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10610,"nodeType":"ExpressionStatement","src":"35942:19:19"},{"id":10658,"nodeType":"UncheckedBlock","src":"35972:604:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10611,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"36000:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36003:4:19","memberName":"code","nodeType":"MemberAccess","src":"36000:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36008:6:19","memberName":"length","nodeType":"MemberAccess","src":"36000:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36018:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"36000:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10657,"nodeType":"IfStatement","src":"35996:570:19","trueBody":{"id":10656,"nodeType":"Block","src":"36021:545:19","statements":[{"assignments":[10617],"declarations":[{"constant":false,"id":10617,"mutability":"mutable","name":"end","nameLocation":"36047:3:19","nodeType":"VariableDeclaration","scope":10656,"src":"36039:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10616,"name":"uint256","nodeType":"ElementaryTypeName","src":"36039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10619,"initialValue":{"id":10618,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"36053:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36039:27:19"},{"assignments":[10621],"declarations":[{"constant":false,"id":10621,"mutability":"mutable","name":"index","nameLocation":"36092:5:19","nodeType":"VariableDeclaration","scope":10656,"src":"36084:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10620,"name":"uint256","nodeType":"ElementaryTypeName","src":"36084:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10625,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10622,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10617,"src":"36100:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10623,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10601,"src":"36106:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36100:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"36084:30:19"},{"body":{"id":10644,"nodeType":"Block","src":"36135:214:19","statements":[{"condition":{"id":10636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"36161:63:19","subExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"36201:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"36193:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10627,"name":"address","nodeType":"ElementaryTypeName","src":"36193:7:19","typeDescriptions":{}}},"id":10630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36193:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10631,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10599,"src":"36205:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"36209:7:19","subExpression":{"id":10632,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10621,"src":"36209:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10634,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10603,"src":"36218:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10626,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"36162:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":10635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36162:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10643,"nodeType":"IfStatement","src":"36157:174:19","trueBody":{"id":10642,"nodeType":"Block","src":"36226:105:19","statements":[{"expression":{"arguments":[{"expression":{"id":10638,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11235,"src":"36260:38:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"36299:8:19","memberName":"selector","nodeType":"MemberAccess","src":"36260:47:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10637,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"36252:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36252:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10641,"nodeType":"ExpressionStatement","src":"36252:56:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10645,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10621,"src":"36357:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10646,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10617,"src":"36365:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36357:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10648,"nodeType":"DoWhileStatement","src":"36132:238:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10649,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"36521:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10650,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10617,"src":"36538:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"36521:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10655,"nodeType":"IfStatement","src":"36517:34:19","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10652,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"36543:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":10653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36543:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10654,"nodeType":"ExpressionStatement","src":"36543:8:19"}}]}}]}]},"documentation":{"id":10597,"nodeType":"StructuredDocumentation","src":"35423:388:19","text":" @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."},"id":10660,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"35825:9:19","nodeType":"FunctionDefinition","parameters":{"id":10604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10599,"mutability":"mutable","name":"to","nameLocation":"35852:2:19","nodeType":"VariableDeclaration","scope":10660,"src":"35844:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10598,"name":"address","nodeType":"ElementaryTypeName","src":"35844:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10601,"mutability":"mutable","name":"quantity","nameLocation":"35872:8:19","nodeType":"VariableDeclaration","scope":10660,"src":"35864:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10600,"name":"uint256","nodeType":"ElementaryTypeName","src":"35864:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10603,"mutability":"mutable","name":"_data","nameLocation":"35903:5:19","nodeType":"VariableDeclaration","scope":10660,"src":"35890:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10602,"name":"bytes","nodeType":"ElementaryTypeName","src":"35890:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35834:80:19"},"returnParameters":{"id":10605,"nodeType":"ParameterList","parameters":[],"src":"35932:0:19"},"scope":11205,"src":"35816:766:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10674,"nodeType":"Block","src":"36727:44:19","statements":[{"expression":{"arguments":[{"id":10669,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10663,"src":"36747:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10670,"name":"quantity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10665,"src":"36751:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"36761:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10668,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[10660,10675],"referencedDeclaration":10660,"src":"36737:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":10672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"36737:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10673,"nodeType":"ExpressionStatement","src":"36737:27:19"}]},"documentation":{"id":10661,"nodeType":"StructuredDocumentation","src":"36588:68:19","text":" @dev Equivalent to `_safeMint(to, quantity, '')`."},"id":10675,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"36670:9:19","nodeType":"FunctionDefinition","parameters":{"id":10666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10663,"mutability":"mutable","name":"to","nameLocation":"36688:2:19","nodeType":"VariableDeclaration","scope":10675,"src":"36680:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10662,"name":"address","nodeType":"ElementaryTypeName","src":"36680:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10665,"mutability":"mutable","name":"quantity","nameLocation":"36700:8:19","nodeType":"VariableDeclaration","scope":10675,"src":"36692:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10664,"name":"uint256","nodeType":"ElementaryTypeName","src":"36692:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"36679:30:19"},"returnParameters":{"id":10667,"nodeType":"ParameterList","parameters":[],"src":"36727:0:19"},"scope":11205,"src":"36661:110:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10785,"nodeType":"Block","src":"37221:1992:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10683,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10680,"src":"37235:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10684,"name":"_sequentialUpTo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9278,"src":"37246:15:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":10685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37246:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"37235:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10692,"nodeType":"IfStatement","src":"37231:75:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10688,"name":"SpotMintTokenIdTooSmall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11256,"src":"37273:23:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37297:8:19","memberName":"selector","nodeType":"MemberAccess","src":"37273:32:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10687,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"37265:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37265:41:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10691,"nodeType":"ExpressionStatement","src":"37265:41:19"}},{"assignments":[10694],"declarations":[{"constant":false,"id":10694,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"37324:19:19","nodeType":"VariableDeclaration","scope":10785,"src":"37316:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10693,"name":"uint256","nodeType":"ElementaryTypeName","src":"37316:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10698,"initialValue":{"baseExpression":{"id":10695,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"37346:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10697,"indexExpression":{"id":10696,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10680,"src":"37364:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"37346:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"37316:56:19"},{"condition":{"arguments":[{"id":10700,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10694,"src":"37409:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10699,"name":"_packedOwnershipExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9986,"src":"37386:22:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) pure returns (bool)"}},"id":10701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37386:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10707,"nodeType":"IfStatement","src":"37382:85:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10703,"name":"TokenAlreadyExists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11259,"src":"37439:18:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"37458:8:19","memberName":"selector","nodeType":"MemberAccess","src":"37439:27:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10702,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"37431:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37431:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10706,"nodeType":"ExpressionStatement","src":"37431:36:19"}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37508:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"37500:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10709,"name":"address","nodeType":"ElementaryTypeName","src":"37500:7:19","typeDescriptions":{}}},"id":10712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37500:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10713,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10678,"src":"37512:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10714,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10680,"src":"37516:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"37525:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10708,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10264,"src":"37478:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"37478:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10717,"nodeType":"ExpressionStatement","src":"37478:49:19"},{"id":10774,"nodeType":"UncheckedBlock","src":"37762:1386:19","statements":[{"expression":{"id":10736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10718,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"38019:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10720,"indexExpression":{"id":10719,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10680,"src":"38037:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"38019:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10722,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10678,"src":"38084:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"hexValue":"31","id":10724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38125:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10723,"name":"_nextInitializedFlag","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9837,"src":"38104:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":10725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38104:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38153:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38145:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10727,"name":"address","nodeType":"ElementaryTypeName","src":"38145:7:19","typeDescriptions":{}}},"id":10730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38145:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10731,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10678,"src":"38157:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10732,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10694,"src":"38161:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10726,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11176,"src":"38130:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":10733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38130:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38104:77:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10721,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"38048:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":10735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38048:147:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38019:176:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10737,"nodeType":"ExpressionStatement","src":"38019:176:19"},{"expression":{"id":10747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10738,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"38392:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10740,"indexExpression":{"id":10739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10678,"src":"38411:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"38392:22:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10741,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38419:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":10742,"name":"_BITPOS_NUMBER_MINTED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9140,"src":"38424:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38419:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10744,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"38418:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"hexValue":"31","id":10745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38449:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"38418:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38392:58:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10748,"nodeType":"ExpressionStatement","src":"38392:58:19"},{"assignments":[10750],"declarations":[{"constant":false,"id":10750,"mutability":"mutable","name":"toMasked","nameLocation":"38566:8:19","nodeType":"VariableDeclaration","scope":10774,"src":"38558:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10749,"name":"uint256","nodeType":"ElementaryTypeName","src":"38558:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10760,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10755,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10678,"src":"38593:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38585:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10753,"name":"uint160","nodeType":"ElementaryTypeName","src":"38585:7:19","typeDescriptions":{}}},"id":10756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38585:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"38577:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":10751,"name":"uint256","nodeType":"ElementaryTypeName","src":"38577:7:19","typeDescriptions":{}}},"id":10757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38577:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":10758,"name":"_BITMASK_ADDRESS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9189,"src":"38600:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"38577:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"38558:58:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10761,"name":"toMasked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10750,"src":"38635:8:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"38647:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"38635:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10769,"nodeType":"IfStatement","src":"38631:54:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10765,"name":"MintToZeroAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11220,"src":"38658:17:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"38676:8:19","memberName":"selector","nodeType":"MemberAccess","src":"38658:26:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10764,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"38650:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"38650:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10768,"nodeType":"ExpressionStatement","src":"38650:35:19"}},{"AST":{"nativeSrc":"38709:401:19","nodeType":"YulBlock","src":"38709:401:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"38799:1:19","nodeType":"YulLiteral","src":"38799:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"38859:1:19","nodeType":"YulLiteral","src":"38859:1:19","type":"","value":"0"},{"name":"_TRANSFER_EVENT_SIGNATURE","nativeSrc":"38917:25:19","nodeType":"YulIdentifier","src":"38917:25:19"},{"kind":"number","nativeSrc":"38978:1:19","nodeType":"YulLiteral","src":"38978:1:19","type":"","value":"0"},{"name":"toMasked","nativeSrc":"39018:8:19","nodeType":"YulIdentifier","src":"39018:8:19"},{"name":"tokenId","nativeSrc":"39057:7:19","nodeType":"YulIdentifier","src":"39057:7:19"}],"functionName":{"name":"log4","nativeSrc":"38773:4:19","nodeType":"YulIdentifier","src":"38773:4:19"},"nativeSrc":"38773:323:19","nodeType":"YulFunctionCall","src":"38773:323:19"},"nativeSrc":"38773:323:19","nodeType":"YulExpressionStatement","src":"38773:323:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":9195,"isOffset":false,"isSlot":false,"src":"38917:25:19","valueSize":1},{"declaration":10750,"isOffset":false,"isSlot":false,"src":"39018:8:19","valueSize":1},{"declaration":10680,"isOffset":false,"isSlot":false,"src":"39057:7:19","valueSize":1}],"id":10770,"nodeType":"InlineAssembly","src":"38700:410:19"},{"expression":{"id":10772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"39124:13:19","subExpression":{"id":10771,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"39126:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10773,"nodeType":"ExpressionStatement","src":"39124:13:19"}]},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":10778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39187:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"39179:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10776,"name":"address","nodeType":"ElementaryTypeName","src":"39179:7:19","typeDescriptions":{}}},"id":10779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39179:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10780,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10678,"src":"39191:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10781,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10680,"src":"39195:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39204:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10775,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10277,"src":"39158:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39158:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10784,"nodeType":"ExpressionStatement","src":"39158:48:19"}]},"documentation":{"id":10676,"nodeType":"StructuredDocumentation","src":"36777:374:19","text":" @dev Mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n Emits a {Transfer} event for each mint."},"id":10786,"implemented":true,"kind":"function","modifiers":[],"name":"_mintSpot","nameLocation":"37165:9:19","nodeType":"FunctionDefinition","parameters":{"id":10681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10678,"mutability":"mutable","name":"to","nameLocation":"37183:2:19","nodeType":"VariableDeclaration","scope":10786,"src":"37175:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10677,"name":"address","nodeType":"ElementaryTypeName","src":"37175:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10680,"mutability":"mutable","name":"tokenId","nameLocation":"37195:7:19","nodeType":"VariableDeclaration","scope":10786,"src":"37187:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10679,"name":"uint256","nodeType":"ElementaryTypeName","src":"37187:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"37174:29:19"},"returnParameters":{"id":10682,"nodeType":"ParameterList","parameters":[],"src":"37221:0:19"},"scope":11205,"src":"37156:2057:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10837,"nodeType":"Block","src":"39798:557:19","statements":[{"expression":{"arguments":[{"id":10797,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10789,"src":"39818:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10798,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10791,"src":"39822:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10796,"name":"_mintSpot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10786,"src":"39808:9:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39808:22:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10800,"nodeType":"ExpressionStatement","src":"39808:22:19"},{"id":10836,"nodeType":"UncheckedBlock","src":"39841:508:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":10801,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10789,"src":"39869:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39872:4:19","memberName":"code","nodeType":"MemberAccess","src":"39869:7:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":10803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"39877:6:19","memberName":"length","nodeType":"MemberAccess","src":"39869:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":10804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"39887:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"39869:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10835,"nodeType":"IfStatement","src":"39865:474:19","trueBody":{"id":10834,"nodeType":"Block","src":"39890:449:19","statements":[{"assignments":[10807],"declarations":[{"constant":false,"id":10807,"mutability":"mutable","name":"currentSpotMinted","nameLocation":"39916:17:19","nodeType":"VariableDeclaration","scope":10834,"src":"39908:25:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10806,"name":"uint256","nodeType":"ElementaryTypeName","src":"39908:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10809,"initialValue":{"id":10808,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"39936:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"39908:39:19"},{"condition":{"id":10819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"39969:63:19","subExpression":{"arguments":[{"arguments":[{"hexValue":"30","id":10813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"40009:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"40001:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10811,"name":"address","nodeType":"ElementaryTypeName","src":"40001:7:19","typeDescriptions":{}}},"id":10814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40001:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10789,"src":"40013:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10816,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10791,"src":"40017:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10817,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10793,"src":"40026:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":10810,"name":"_checkContractOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10333,"src":"39970:30:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":10818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"39970:62:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10826,"nodeType":"IfStatement","src":"39965:166:19","trueBody":{"id":10825,"nodeType":"Block","src":"40034:97:19","statements":[{"expression":{"arguments":[{"expression":{"id":10821,"name":"TransferToNonERC721ReceiverImplementer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11235,"src":"40064:38:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"40103:8:19","memberName":"selector","nodeType":"MemberAccess","src":"40064:47:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10820,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"40056:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40056:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10824,"nodeType":"ExpressionStatement","src":"40056:56:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10827,"name":"_spotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9224,"src":"40282:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10828,"name":"currentSpotMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10807,"src":"40297:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"40282:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10833,"nodeType":"IfStatement","src":"40278:46:19","trueBody":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10830,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"40316:6:19","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$__$returns$__$","typeString":"function () pure"}},"id":10831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40316:8:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10832,"nodeType":"ExpressionStatement","src":"40316:8:19"}}]}}]}]},"documentation":{"id":10787,"nodeType":"StructuredDocumentation","src":"39219:455:19","text":" @dev Safely mints a single token at `tokenId`.\n Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n - `tokenId` must be greater than `_sequentialUpTo()`.\n - `tokenId` must not exist.\n See {_mintSpot}.\n Emits a {Transfer} event."},"id":10838,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMintSpot","nameLocation":"39688:13:19","nodeType":"FunctionDefinition","parameters":{"id":10794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10789,"mutability":"mutable","name":"to","nameLocation":"39719:2:19","nodeType":"VariableDeclaration","scope":10838,"src":"39711:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10788,"name":"address","nodeType":"ElementaryTypeName","src":"39711:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10791,"mutability":"mutable","name":"tokenId","nameLocation":"39739:7:19","nodeType":"VariableDeclaration","scope":10838,"src":"39731:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10790,"name":"uint256","nodeType":"ElementaryTypeName","src":"39731:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10793,"mutability":"mutable","name":"_data","nameLocation":"39769:5:19","nodeType":"VariableDeclaration","scope":10838,"src":"39756:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":10792,"name":"bytes","nodeType":"ElementaryTypeName","src":"39756:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39701:79:19"},"returnParameters":{"id":10795,"nodeType":"ParameterList","parameters":[],"src":"39798:0:19"},"scope":11205,"src":"39679:676:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10852,"nodeType":"Block","src":"40506:47:19","statements":[{"expression":{"arguments":[{"id":10847,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10841,"src":"40530:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10848,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10843,"src":"40534:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"40543:2:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10846,"name":"_safeMintSpot","nodeType":"Identifier","overloadedDeclarations":[10838,10853],"referencedDeclaration":10838,"src":"40516:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":10850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40516:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10851,"nodeType":"ExpressionStatement","src":"40516:30:19"}]},"documentation":{"id":10839,"nodeType":"StructuredDocumentation","src":"40361:71:19","text":" @dev Equivalent to `_safeMintSpot(to, tokenId, '')`."},"id":10853,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMintSpot","nameLocation":"40446:13:19","nodeType":"FunctionDefinition","parameters":{"id":10844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10841,"mutability":"mutable","name":"to","nameLocation":"40468:2:19","nodeType":"VariableDeclaration","scope":10853,"src":"40460:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10840,"name":"address","nodeType":"ElementaryTypeName","src":"40460:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10843,"mutability":"mutable","name":"tokenId","nameLocation":"40480:7:19","nodeType":"VariableDeclaration","scope":10853,"src":"40472:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10842,"name":"uint256","nodeType":"ElementaryTypeName","src":"40472:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40459:29:19"},"returnParameters":{"id":10845,"nodeType":"ParameterList","parameters":[],"src":"40506:0:19"},"scope":11205,"src":"40437:116:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10867,"nodeType":"Block","src":"40885:45:19","statements":[{"expression":{"arguments":[{"id":10862,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10856,"src":"40904:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10863,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10858,"src":"40908:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"40917:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10861,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[10868,10918],"referencedDeclaration":10918,"src":"40895:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,bool)"}},"id":10865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"40895:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10866,"nodeType":"ExpressionStatement","src":"40895:28:19"}]},"documentation":{"id":10854,"nodeType":"StructuredDocumentation","src":"40747:69:19","text":" @dev Equivalent to `_approve(to, tokenId, false)`."},"id":10868,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"40830:8:19","nodeType":"FunctionDefinition","parameters":{"id":10859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10856,"mutability":"mutable","name":"to","nameLocation":"40847:2:19","nodeType":"VariableDeclaration","scope":10868,"src":"40839:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10855,"name":"address","nodeType":"ElementaryTypeName","src":"40839:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10858,"mutability":"mutable","name":"tokenId","nameLocation":"40859:7:19","nodeType":"VariableDeclaration","scope":10868,"src":"40851:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10857,"name":"uint256","nodeType":"ElementaryTypeName","src":"40851:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40838:29:19"},"returnParameters":{"id":10860,"nodeType":"ParameterList","parameters":[],"src":"40885:0:19"},"scope":11205,"src":"40821:109:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10917,"nodeType":"Block","src":"41447:346:19","statements":[{"assignments":[10879],"declarations":[{"constant":false,"id":10879,"mutability":"mutable","name":"owner","nameLocation":"41465:5:19","nodeType":"VariableDeclaration","scope":10917,"src":"41457:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10878,"name":"address","nodeType":"ElementaryTypeName","src":"41457:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10883,"initialValue":{"arguments":[{"id":10881,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10873,"src":"41481:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10880,"name":"ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9599,"src":"41473:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":10882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41473:16:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"41457:32:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10884,"name":"approvalCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10875,"src":"41504:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10885,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"41521:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41521:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":10887,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10879,"src":"41544:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"41521:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"41504:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10903,"nodeType":"IfStatement","src":"41500:198:19","trueBody":{"condition":{"id":10895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"41567:45:19","subExpression":{"arguments":[{"id":10891,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10879,"src":"41585:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10892,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"41592:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41592:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10890,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9922,"src":"41568:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":10894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41568:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10902,"nodeType":"IfStatement","src":"41563:135:19","trueBody":{"id":10901,"nodeType":"Block","src":"41614:84:19","statements":[{"expression":{"arguments":[{"expression":{"id":10897,"name":"ApprovalCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11211,"src":"41640:33:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"41674:8:19","memberName":"selector","nodeType":"MemberAccess","src":"41640:42:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10896,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"41632:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41632:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10900,"nodeType":"ExpressionStatement","src":"41632:51:19"}]}}},{"expression":{"id":10909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":10904,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"41708:15:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$9129_storage_$","typeString":"mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"}},"id":10906,"indexExpression":{"id":10905,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10873,"src":"41724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"41708:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_TokenApprovalRef_$9129_storage","typeString":"struct ERC721A.TokenApprovalRef storage ref"}},"id":10907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"41733:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":9128,"src":"41708:30:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10908,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10871,"src":"41741:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"41708:35:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":10910,"nodeType":"ExpressionStatement","src":"41708:35:19"},{"eventCall":{"arguments":[{"id":10912,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10879,"src":"41767:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10913,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10871,"src":"41774:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10914,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10873,"src":"41778:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10911,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11303,"src":"41758:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":10915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"41758:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10916,"nodeType":"EmitStatement","src":"41753:33:19"}]},"documentation":{"id":10869,"nodeType":"StructuredDocumentation","src":"40936:392:19","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."},"id":10918,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"41342:8:19","nodeType":"FunctionDefinition","parameters":{"id":10876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10871,"mutability":"mutable","name":"to","nameLocation":"41368:2:19","nodeType":"VariableDeclaration","scope":10918,"src":"41360:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10870,"name":"address","nodeType":"ElementaryTypeName","src":"41360:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10873,"mutability":"mutable","name":"tokenId","nameLocation":"41388:7:19","nodeType":"VariableDeclaration","scope":10918,"src":"41380:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10872,"name":"uint256","nodeType":"ElementaryTypeName","src":"41380:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10875,"mutability":"mutable","name":"approvalCheck","nameLocation":"41410:13:19","nodeType":"VariableDeclaration","scope":10918,"src":"41405:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10874,"name":"bool","nodeType":"ElementaryTypeName","src":"41405:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"41350:79:19"},"returnParameters":{"id":10877,"nodeType":"ParameterList","parameters":[],"src":"41447:0:19"},"scope":11205,"src":"41333:460:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":10929,"nodeType":"Block","src":"42100:38:19","statements":[{"expression":{"arguments":[{"id":10925,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10921,"src":"42116:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"42125:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10924,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[10930,11084],"referencedDeclaration":11084,"src":"42110:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$","typeString":"function (uint256,bool)"}},"id":10927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42110:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10928,"nodeType":"ExpressionStatement","src":"42110:21:19"}]},"documentation":{"id":10919,"nodeType":"StructuredDocumentation","src":"41984:62:19","text":" @dev Equivalent to `_burn(tokenId, false)`."},"id":10930,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"42060:5:19","nodeType":"FunctionDefinition","parameters":{"id":10922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10921,"mutability":"mutable","name":"tokenId","nameLocation":"42074:7:19","nodeType":"VariableDeclaration","scope":10930,"src":"42066:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10920,"name":"uint256","nodeType":"ElementaryTypeName","src":"42066:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42065:17:19"},"returnParameters":{"id":10923,"nodeType":"ParameterList","parameters":[],"src":"42100:0:19"},"scope":11205,"src":"42051:87:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":11083,"nodeType":"Block","src":"42424:2973:19","statements":[{"assignments":[10939],"declarations":[{"constant":false,"id":10939,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"42442:19:19","nodeType":"VariableDeclaration","scope":11083,"src":"42434:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10938,"name":"uint256","nodeType":"ElementaryTypeName","src":"42434:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10943,"initialValue":{"arguments":[{"id":10941,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"42483:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10940,"name":"_packedOwnershipOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9761,"src":"42464:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":10942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42464:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"42434:57:19"},{"assignments":[10945],"declarations":[{"constant":false,"id":10945,"mutability":"mutable","name":"from","nameLocation":"42510:4:19","nodeType":"VariableDeclaration","scope":11083,"src":"42502:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10944,"name":"address","nodeType":"ElementaryTypeName","src":"42502:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10953,"initialValue":{"arguments":[{"arguments":[{"id":10950,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10939,"src":"42533:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42525:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":10948,"name":"uint160","nodeType":"ElementaryTypeName","src":"42525:7:19","typeDescriptions":{}}},"id":10951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42525:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":10947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"42517:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10946,"name":"address","nodeType":"ElementaryTypeName","src":"42517:7:19","typeDescriptions":{}}},"id":10952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42517:37:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"42502:52:19"},{"assignments":[10955,10957],"declarations":[{"constant":false,"id":10955,"mutability":"mutable","name":"approvedAddressSlot","nameLocation":"42574:19:19","nodeType":"VariableDeclaration","scope":11083,"src":"42566:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10954,"name":"uint256","nodeType":"ElementaryTypeName","src":"42566:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10957,"mutability":"mutable","name":"approvedAddress","nameLocation":"42603:15:19","nodeType":"VariableDeclaration","scope":11083,"src":"42595:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10956,"name":"address","nodeType":"ElementaryTypeName","src":"42595:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10961,"initialValue":{"arguments":[{"id":10959,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"42649:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10958,"name":"_getApprovedSlotAndAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10019,"src":"42622:26:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$","typeString":"function (uint256) view returns (uint256,address)"}},"id":10960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42622:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"nodeType":"VariableDeclarationStatement","src":"42565:92:19"},{"condition":{"id":10962,"name":"approvalCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10935,"src":"42672:13:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10984,"nodeType":"IfStatement","src":"42668:321:19","trueBody":{"id":10983,"nodeType":"Block","src":"42687:302:19","statements":[{"condition":{"id":10969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"42790:69:19","subExpression":{"arguments":[{"id":10964,"name":"approvedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10957,"src":"42816:15:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10965,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"42833:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10966,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"42839:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42839:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10963,"name":"_isSenderApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10000,"src":"42791:24:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address,address) pure returns (bool)"}},"id":10968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42791:68:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10982,"nodeType":"IfStatement","src":"42786:192:19","trueBody":{"condition":{"id":10975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"42881:44:19","subExpression":{"arguments":[{"id":10971,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"42899:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":10972,"name":"_msgSenderERC721A","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11186,"src":"42905:17:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":10973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42905:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":10970,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9922,"src":"42882:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":10974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42882:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10981,"nodeType":"IfStatement","src":"42877:101:19","trueBody":{"expression":{"arguments":[{"expression":{"id":10977,"name":"TransferCallerNotOwnerNorApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11229,"src":"42935:33:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":10978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"42969:8:19","memberName":"selector","nodeType":"MemberAccess","src":"42935:42:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":10976,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"42927:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":10979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42927:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10980,"nodeType":"ExpressionStatement","src":"42927:51:19"}}}]}},{"expression":{"arguments":[{"id":10986,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"43021:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":10989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43035:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"43027:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10987,"name":"address","nodeType":"ElementaryTypeName","src":"43027:7:19","typeDescriptions":{}}},"id":10990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"43027:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10991,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"43039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":10992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43048:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":10985,"name":"_beforeTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10264,"src":"42999:21:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":10993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"42999:51:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10994,"nodeType":"ExpressionStatement","src":"42999:51:19"},{"AST":{"nativeSrc":"43122:181:19","nodeType":"YulBlock","src":"43122:181:19","statements":[{"body":{"nativeSrc":"43155:138:19","nodeType":"YulBlock","src":"43155:138:19","statements":[{"expression":{"arguments":[{"name":"approvedAddressSlot","nativeSrc":"43256:19:19","nodeType":"YulIdentifier","src":"43256:19:19"},{"kind":"number","nativeSrc":"43277:1:19","nodeType":"YulLiteral","src":"43277:1:19","type":"","value":"0"}],"functionName":{"name":"sstore","nativeSrc":"43249:6:19","nodeType":"YulIdentifier","src":"43249:6:19"},"nativeSrc":"43249:30:19","nodeType":"YulFunctionCall","src":"43249:30:19"},"nativeSrc":"43249:30:19","nodeType":"YulExpressionStatement","src":"43249:30:19"}]},"condition":{"name":"approvedAddress","nativeSrc":"43139:15:19","nodeType":"YulIdentifier","src":"43139:15:19"},"nativeSrc":"43136:157:19","nodeType":"YulIf","src":"43136:157:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":10957,"isOffset":false,"isSlot":false,"src":"43139:15:19","valueSize":1},{"declaration":10955,"isOffset":false,"isSlot":false,"src":"43256:19:19","valueSize":1}],"id":10995,"nodeType":"InlineAssembly","src":"43113:190:19"},{"id":11059,"nodeType":"UncheckedBlock","src":"43570:1545:19","statements":[{"expression":{"id":11005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10996,"name":"_packedAddressData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9211,"src":"43882:18:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":10998,"indexExpression":{"id":10997,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"43901:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"43882:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":10999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43911:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":11000,"name":"_BITPOS_NUMBER_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9143,"src":"43916:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43911:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11002,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"43910:28:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":11003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"43941:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"43910:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"43882:60:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11006,"nodeType":"ExpressionStatement","src":"43882:60:19"},{"expression":{"id":11026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11007,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"44173:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11009,"indexExpression":{"id":11008,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"44191:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"44173:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":11011,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"44238:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"id":11012,"name":"_BITMASK_BURNED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9162,"src":"44261:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"id":11013,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"44279:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44261:43:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"44260:45:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"id":11017,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"44323:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":11020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44337:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"44329:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11018,"name":"address","nodeType":"ElementaryTypeName","src":"44329:7:19","typeDescriptions":{}}},"id":11021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44329:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11022,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10939,"src":"44341:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11016,"name":"_nextExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11176,"src":"44308:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,address,uint256) view returns (uint256)"}},"id":11023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44308:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44260:101:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11010,"name":"_packOwnershipData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9827,"src":"44202:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":11025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"44202:173:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44173:202:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11027,"nodeType":"ExpressionStatement","src":"44173:202:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11028,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10939,"src":"44492:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":11029,"name":"_BITMASK_NEXT_INITIALIZED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9170,"src":"44514:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44492:47:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44543:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"44492:52:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11058,"nodeType":"IfStatement","src":"44488:617:19","trueBody":{"id":11057,"nodeType":"Block","src":"44546:559:19","statements":[{"assignments":[11034],"declarations":[{"constant":false,"id":11034,"mutability":"mutable","name":"nextTokenId","nameLocation":"44572:11:19","nodeType":"VariableDeclaration","scope":11057,"src":"44564:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11033,"name":"uint256","nodeType":"ElementaryTypeName","src":"44564:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11038,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11035,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"44586:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":11036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44596:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"44586:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"44564:33:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":11039,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"44717:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11041,"indexExpression":{"id":11040,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11034,"src":"44735:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"44717:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"44751:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"44717:35:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11056,"nodeType":"IfStatement","src":"44713:378:19","trueBody":{"id":11055,"nodeType":"Block","src":"44754:337:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11044,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11034,"src":"44838:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":11045,"name":"_currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9197,"src":"44853:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44838:28:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11054,"nodeType":"IfStatement","src":"44834:239:19","trueBody":{"id":11053,"nodeType":"Block","src":"44868:205:19","statements":[{"expression":{"id":11051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11047,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"44998:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11049,"indexExpression":{"id":11048,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11034,"src":"45016:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"44998:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11050,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10939,"src":"45031:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"44998:52:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11052,"nodeType":"ExpressionStatement","src":"44998:52:19"}]}}]}}]}}]},{"eventCall":{"arguments":[{"id":11061,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"45139:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":11064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45153:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45145:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11062,"name":"address","nodeType":"ElementaryTypeName","src":"45145:7:19","typeDescriptions":{}}},"id":11065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45145:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11066,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"45157:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11060,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11294,"src":"45130:8:19","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":11067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45130:35:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11068,"nodeType":"EmitStatement","src":"45125:40:19"},{"expression":{"arguments":[{"id":11070,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10945,"src":"45196:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":11073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45210:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":11072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"45202:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11071,"name":"address","nodeType":"ElementaryTypeName","src":"45202:7:19","typeDescriptions":{}}},"id":11074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45202:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11075,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10933,"src":"45214:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":11076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45223:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":11069,"name":"_afterTokenTransfers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10277,"src":"45175:20:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":11077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45175:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11078,"nodeType":"ExpressionStatement","src":"45175:50:19"},{"id":11082,"nodeType":"UncheckedBlock","src":"45342:49:19","statements":[{"expression":{"id":11080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"45366:14:19","subExpression":{"id":11079,"name":"_burnCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9199,"src":"45366:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11081,"nodeType":"ExpressionStatement","src":"45366:14:19"}]}]},"documentation":{"id":10931,"nodeType":"StructuredDocumentation","src":"42144:206:19","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":11084,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"42364:5:19","nodeType":"FunctionDefinition","parameters":{"id":10936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10933,"mutability":"mutable","name":"tokenId","nameLocation":"42378:7:19","nodeType":"VariableDeclaration","scope":11084,"src":"42370:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10932,"name":"uint256","nodeType":"ElementaryTypeName","src":"42370:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10935,"mutability":"mutable","name":"approvalCheck","nameLocation":"42392:13:19","nodeType":"VariableDeclaration","scope":11084,"src":"42387:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10934,"name":"bool","nodeType":"ElementaryTypeName","src":"42387:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42369:37:19"},"returnParameters":{"id":10937,"nodeType":"ParameterList","parameters":[],"src":"42424:0:19"},"scope":11205,"src":"42355:3042:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":11129,"nodeType":"Block","src":"45755:456:19","statements":[{"assignments":[11093],"declarations":[{"constant":false,"id":11093,"mutability":"mutable","name":"packed","nameLocation":"45773:6:19","nodeType":"VariableDeclaration","scope":11129,"src":"45765:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11092,"name":"uint256","nodeType":"ElementaryTypeName","src":"45765:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11097,"initialValue":{"baseExpression":{"id":11094,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"45782:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11096,"indexExpression":{"id":11095,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11087,"src":"45800:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"45782:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"45765:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11098,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"45820:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":11099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"45830:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"45820:11:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11106,"nodeType":"IfStatement","src":"45816:70:19","trueBody":{"expression":{"arguments":[{"expression":{"id":11102,"name":"OwnershipNotInitializedForExtraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11247,"src":"45841:35:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":11103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"45877:8:19","memberName":"selector","nodeType":"MemberAccess","src":"45841:44:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"id":11101,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11204,"src":"45833:7:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes4_$returns$__$","typeString":"function (bytes4) pure"}},"id":11104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"45833:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11105,"nodeType":"ExpressionStatement","src":"45833:53:19"}},{"assignments":[11108],"declarations":[{"constant":false,"id":11108,"mutability":"mutable","name":"extraDataCasted","nameLocation":"45904:15:19","nodeType":"VariableDeclaration","scope":11129,"src":"45896:23:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11107,"name":"uint256","nodeType":"ElementaryTypeName","src":"45896:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11109,"nodeType":"VariableDeclarationStatement","src":"45896:23:19"},{"AST":{"nativeSrc":"46008:52:19","nodeType":"YulBlock","src":"46008:52:19","statements":[{"nativeSrc":"46022:28:19","nodeType":"YulAssignment","src":"46022:28:19","value":{"name":"extraData","nativeSrc":"46041:9:19","nodeType":"YulIdentifier","src":"46041:9:19"},"variableNames":[{"name":"extraDataCasted","nativeSrc":"46022:15:19","nodeType":"YulIdentifier","src":"46022:15:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":11089,"isOffset":false,"isSlot":false,"src":"46041:9:19","valueSize":1},{"declaration":11108,"isOffset":false,"isSlot":false,"src":"46022:15:19","valueSize":1}],"id":11110,"nodeType":"InlineAssembly","src":"45999:61:19"},{"expression":{"id":11121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11111,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"46069:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11112,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"46079:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":11113,"name":"_BITMASK_EXTRA_DATA_COMPLEMENT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9181,"src":"46088:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46079:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11115,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"46078:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11116,"name":"extraDataCasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11108,"src":"46123:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":11117,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"46142:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46123:37:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":11119,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"46122:39:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46078:83:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46069:92:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11122,"nodeType":"ExpressionStatement","src":"46069:92:19"},{"expression":{"id":11127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":11123,"name":"_packedOwnerships","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9207,"src":"46171:17:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":11125,"indexExpression":{"id":11124,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11087,"src":"46189:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"46171:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11126,"name":"packed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11093,"src":"46198:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"46171:33:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11128,"nodeType":"ExpressionStatement","src":"46171:33:19"}]},"documentation":{"id":11085,"nodeType":"StructuredDocumentation","src":"45591:84:19","text":" @dev Directly sets the extra data for the ownership data `index`."},"id":11130,"implemented":true,"kind":"function","modifiers":[],"name":"_setExtraDataAt","nameLocation":"45689:15:19","nodeType":"FunctionDefinition","parameters":{"id":11090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11087,"mutability":"mutable","name":"index","nameLocation":"45713:5:19","nodeType":"VariableDeclaration","scope":11130,"src":"45705:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11086,"name":"uint256","nodeType":"ElementaryTypeName","src":"45705:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11089,"mutability":"mutable","name":"extraData","nameLocation":"45727:9:19","nodeType":"VariableDeclaration","scope":11130,"src":"45720:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":11088,"name":"uint24","nodeType":"ElementaryTypeName","src":"45720:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"45704:33:19"},"returnParameters":{"id":11091,"nodeType":"ParameterList","parameters":[],"src":"45755:0:19"},"scope":11205,"src":"45680:531:19","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":11142,"nodeType":"Block","src":"46912:2:19","statements":[]},"documentation":{"id":11131,"nodeType":"StructuredDocumentation","src":"46217:549:19","text":" @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."},"id":11143,"implemented":true,"kind":"function","modifiers":[],"name":"_extraData","nameLocation":"46780:10:19","nodeType":"FunctionDefinition","parameters":{"id":11138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11133,"mutability":"mutable","name":"from","nameLocation":"46808:4:19","nodeType":"VariableDeclaration","scope":11143,"src":"46800:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11132,"name":"address","nodeType":"ElementaryTypeName","src":"46800:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11135,"mutability":"mutable","name":"to","nameLocation":"46830:2:19","nodeType":"VariableDeclaration","scope":11143,"src":"46822:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11134,"name":"address","nodeType":"ElementaryTypeName","src":"46822:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11137,"mutability":"mutable","name":"previousExtraData","nameLocation":"46849:17:19","nodeType":"VariableDeclaration","scope":11143,"src":"46842:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":11136,"name":"uint24","nodeType":"ElementaryTypeName","src":"46842:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"46790:82:19"},"returnParameters":{"id":11141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11143,"src":"46904:6:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":11139,"name":"uint24","nodeType":"ElementaryTypeName","src":"46904:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"46903:8:19"},"scope":11205,"src":"46771:143:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":11175,"nodeType":"Block","src":"47200:164:19","statements":[{"assignments":[11156],"declarations":[{"constant":false,"id":11156,"mutability":"mutable","name":"extraData","nameLocation":"47217:9:19","nodeType":"VariableDeclaration","scope":11175,"src":"47210:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":11155,"name":"uint24","nodeType":"ElementaryTypeName","src":"47210:6:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"id":11163,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11159,"name":"prevOwnershipPacked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11150,"src":"47236:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":11160,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"47259:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47236:41:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47229:6:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":11157,"name":"uint24","nodeType":"ElementaryTypeName","src":"47229:6:19","typeDescriptions":{}}},"id":11162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47229:49:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"VariableDeclarationStatement","src":"47210:68:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":11167,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11146,"src":"47314:4:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11168,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11148,"src":"47320:2:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11169,"name":"extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11156,"src":"47324:9:19","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":11166,"name":"_extraData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11143,"src":"47303:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$","typeString":"function (address,address,uint24) view returns (uint24)"}},"id":11170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47303:31:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":11165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"47295:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":11164,"name":"uint256","nodeType":"ElementaryTypeName","src":"47295:7:19","typeDescriptions":{}}},"id":11171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"47295:40:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":11172,"name":"_BITPOS_EXTRA_DATA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9173,"src":"47339:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"47295:62:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":11154,"id":11174,"nodeType":"Return","src":"47288:69:19"}]},"documentation":{"id":11144,"nodeType":"StructuredDocumentation","src":"46920:135:19","text":" @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."},"id":11176,"implemented":true,"kind":"function","modifiers":[],"name":"_nextExtraData","nameLocation":"47069:14:19","nodeType":"FunctionDefinition","parameters":{"id":11151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11146,"mutability":"mutable","name":"from","nameLocation":"47101:4:19","nodeType":"VariableDeclaration","scope":11176,"src":"47093:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11145,"name":"address","nodeType":"ElementaryTypeName","src":"47093:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11148,"mutability":"mutable","name":"to","nameLocation":"47123:2:19","nodeType":"VariableDeclaration","scope":11176,"src":"47115:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11147,"name":"address","nodeType":"ElementaryTypeName","src":"47115:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11150,"mutability":"mutable","name":"prevOwnershipPacked","nameLocation":"47143:19:19","nodeType":"VariableDeclaration","scope":11176,"src":"47135:27:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11149,"name":"uint256","nodeType":"ElementaryTypeName","src":"47135:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47083:85:19"},"returnParameters":{"id":11154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11176,"src":"47191:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11152,"name":"uint256","nodeType":"ElementaryTypeName","src":"47191:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47190:9:19"},"scope":11205,"src":"47060:304:19","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":11185,"nodeType":"Block","src":"47802:34:19","statements":[{"expression":{"expression":{"id":11182,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"47819:3:19","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":11183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"47823:6:19","memberName":"sender","nodeType":"MemberAccess","src":"47819:10:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":11181,"id":11184,"nodeType":"Return","src":"47812:17:19"}]},"documentation":{"id":11177,"nodeType":"StructuredDocumentation","src":"47555:173:19","text":" @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."},"id":11186,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSenderERC721A","nameLocation":"47742:17:19","nodeType":"FunctionDefinition","parameters":{"id":11178,"nodeType":"ParameterList","parameters":[],"src":"47759:2:19"},"returnParameters":{"id":11181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11180,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11186,"src":"47793:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11179,"name":"address","nodeType":"ElementaryTypeName","src":"47793:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"47792:9:19"},"scope":11205,"src":"47733:103:19","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":11195,"nodeType":"Block","src":"48017:1624:19","statements":[{"AST":{"nativeSrc":"48036:1599:19","nodeType":"YulBlock","src":"48036:1599:19","statements":[{"nativeSrc":"48400:31:19","nodeType":"YulVariableDeclaration","src":"48400:31:19","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"48419:4:19","nodeType":"YulLiteral","src":"48419:4:19","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"48413:5:19","nodeType":"YulIdentifier","src":"48413:5:19"},"nativeSrc":"48413:11:19","nodeType":"YulFunctionCall","src":"48413:11:19"},{"kind":"number","nativeSrc":"48426:4:19","nodeType":"YulLiteral","src":"48426:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"48409:3:19","nodeType":"YulIdentifier","src":"48409:3:19"},"nativeSrc":"48409:22:19","nodeType":"YulFunctionCall","src":"48409:22:19"},"variables":[{"name":"m","nativeSrc":"48404:1:19","nodeType":"YulTypedName","src":"48404:1:19","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"48510:4:19","nodeType":"YulLiteral","src":"48510:4:19","type":"","value":"0x40"},{"name":"m","nativeSrc":"48516:1:19","nodeType":"YulIdentifier","src":"48516:1:19"}],"functionName":{"name":"mstore","nativeSrc":"48503:6:19","nodeType":"YulIdentifier","src":"48503:6:19"},"nativeSrc":"48503:15:19","nodeType":"YulFunctionCall","src":"48503:15:19"},"nativeSrc":"48503:15:19","nodeType":"YulExpressionStatement","src":"48503:15:19"},{"nativeSrc":"48575:19:19","nodeType":"YulAssignment","src":"48575:19:19","value":{"arguments":[{"name":"m","nativeSrc":"48586:1:19","nodeType":"YulIdentifier","src":"48586:1:19"},{"kind":"number","nativeSrc":"48589:4:19","nodeType":"YulLiteral","src":"48589:4:19","type":"","value":"0x20"}],"functionName":{"name":"sub","nativeSrc":"48582:3:19","nodeType":"YulIdentifier","src":"48582:3:19"},"nativeSrc":"48582:12:19","nodeType":"YulFunctionCall","src":"48582:12:19"},"variableNames":[{"name":"str","nativeSrc":"48575:3:19","nodeType":"YulIdentifier","src":"48575:3:19"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"48664:3:19","nodeType":"YulIdentifier","src":"48664:3:19"},{"kind":"number","nativeSrc":"48669:1:19","nodeType":"YulLiteral","src":"48669:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"48657:6:19","nodeType":"YulIdentifier","src":"48657:6:19"},"nativeSrc":"48657:14:19","nodeType":"YulFunctionCall","src":"48657:14:19"},"nativeSrc":"48657:14:19","nodeType":"YulExpressionStatement","src":"48657:14:19"},{"nativeSrc":"48759:14:19","nodeType":"YulVariableDeclaration","src":"48759:14:19","value":{"name":"str","nativeSrc":"48770:3:19","nodeType":"YulIdentifier","src":"48770:3:19"},"variables":[{"name":"end","nativeSrc":"48763:3:19","nodeType":"YulTypedName","src":"48763:3:19","type":""}]},{"body":{"nativeSrc":"49017:388:19","nodeType":"YulBlock","src":"49017:388:19","statements":[{"nativeSrc":"49035:18:19","nodeType":"YulAssignment","src":"49035:18:19","value":{"arguments":[{"name":"str","nativeSrc":"49046:3:19","nodeType":"YulIdentifier","src":"49046:3:19"},{"kind":"number","nativeSrc":"49051:1:19","nodeType":"YulLiteral","src":"49051:1:19","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"49042:3:19","nodeType":"YulIdentifier","src":"49042:3:19"},"nativeSrc":"49042:11:19","nodeType":"YulFunctionCall","src":"49042:11:19"},"variableNames":[{"name":"str","nativeSrc":"49035:3:19","nodeType":"YulIdentifier","src":"49035:3:19"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"49196:3:19","nodeType":"YulIdentifier","src":"49196:3:19"},{"arguments":[{"kind":"number","nativeSrc":"49205:2:19","nodeType":"YulLiteral","src":"49205:2:19","type":"","value":"48"},{"arguments":[{"name":"temp","nativeSrc":"49213:4:19","nodeType":"YulIdentifier","src":"49213:4:19"},{"kind":"number","nativeSrc":"49219:2:19","nodeType":"YulLiteral","src":"49219:2:19","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"49209:3:19","nodeType":"YulIdentifier","src":"49209:3:19"},"nativeSrc":"49209:13:19","nodeType":"YulFunctionCall","src":"49209:13:19"}],"functionName":{"name":"add","nativeSrc":"49201:3:19","nodeType":"YulIdentifier","src":"49201:3:19"},"nativeSrc":"49201:22:19","nodeType":"YulFunctionCall","src":"49201:22:19"}],"functionName":{"name":"mstore8","nativeSrc":"49188:7:19","nodeType":"YulIdentifier","src":"49188:7:19"},"nativeSrc":"49188:36:19","nodeType":"YulFunctionCall","src":"49188:36:19"},"nativeSrc":"49188:36:19","nodeType":"YulExpressionStatement","src":"49188:36:19"},{"nativeSrc":"49293:21:19","nodeType":"YulAssignment","src":"49293:21:19","value":{"arguments":[{"name":"temp","nativeSrc":"49305:4:19","nodeType":"YulIdentifier","src":"49305:4:19"},{"kind":"number","nativeSrc":"49311:2:19","nodeType":"YulLiteral","src":"49311:2:19","type":"","value":"10"}],"functionName":{"name":"div","nativeSrc":"49301:3:19","nodeType":"YulIdentifier","src":"49301:3:19"},"nativeSrc":"49301:13:19","nodeType":"YulFunctionCall","src":"49301:13:19"},"variableNames":[{"name":"temp","nativeSrc":"49293:4:19","nodeType":"YulIdentifier","src":"49293:4:19"}]},{"body":{"nativeSrc":"49382:9:19","nodeType":"YulBlock","src":"49382:9:19","statements":[{"nativeSrc":"49384:5:19","nodeType":"YulBreak","src":"49384:5:19"}]},"condition":{"arguments":[{"name":"temp","nativeSrc":"49376:4:19","nodeType":"YulIdentifier","src":"49376:4:19"}],"functionName":{"name":"iszero","nativeSrc":"49369:6:19","nodeType":"YulIdentifier","src":"49369:6:19"},"nativeSrc":"49369:12:19","nodeType":"YulFunctionCall","src":"49369:12:19"},"nativeSrc":"49366:25:19","nodeType":"YulIf","src":"49366:25:19"}]},"condition":{"kind":"number","nativeSrc":"49012:1:19","nodeType":"YulLiteral","src":"49012:1:19","type":"","value":"1"},"nativeSrc":"48986:419:19","nodeType":"YulForLoop","post":{"nativeSrc":"49014:2:19","nodeType":"YulBlock","src":"49014:2:19","statements":[]},"pre":{"nativeSrc":"48990:21:19","nodeType":"YulBlock","src":"48990:21:19","statements":[{"nativeSrc":"48992:17:19","nodeType":"YulVariableDeclaration","src":"48992:17:19","value":{"name":"value","nativeSrc":"49004:5:19","nodeType":"YulIdentifier","src":"49004:5:19"},"variables":[{"name":"temp","nativeSrc":"48996:4:19","nodeType":"YulTypedName","src":"48996:4:19","type":""}]}]},"src":"48986:419:19"},{"nativeSrc":"49419:27:19","nodeType":"YulVariableDeclaration","src":"49419:27:19","value":{"arguments":[{"name":"end","nativeSrc":"49437:3:19","nodeType":"YulIdentifier","src":"49437:3:19"},{"name":"str","nativeSrc":"49442:3:19","nodeType":"YulIdentifier","src":"49442:3:19"}],"functionName":{"name":"sub","nativeSrc":"49433:3:19","nodeType":"YulIdentifier","src":"49433:3:19"},"nativeSrc":"49433:13:19","nodeType":"YulFunctionCall","src":"49433:13:19"},"variables":[{"name":"length","nativeSrc":"49423:6:19","nodeType":"YulTypedName","src":"49423:6:19","type":""}]},{"nativeSrc":"49539:21:19","nodeType":"YulAssignment","src":"49539:21:19","value":{"arguments":[{"name":"str","nativeSrc":"49550:3:19","nodeType":"YulIdentifier","src":"49550:3:19"},{"kind":"number","nativeSrc":"49555:4:19","nodeType":"YulLiteral","src":"49555:4:19","type":"","value":"0x20"}],"functionName":{"name":"sub","nativeSrc":"49546:3:19","nodeType":"YulIdentifier","src":"49546:3:19"},"nativeSrc":"49546:14:19","nodeType":"YulFunctionCall","src":"49546:14:19"},"variableNames":[{"name":"str","nativeSrc":"49539:3:19","nodeType":"YulIdentifier","src":"49539:3:19"}]},{"expression":{"arguments":[{"name":"str","nativeSrc":"49613:3:19","nodeType":"YulIdentifier","src":"49613:3:19"},{"name":"length","nativeSrc":"49618:6:19","nodeType":"YulIdentifier","src":"49618:6:19"}],"functionName":{"name":"mstore","nativeSrc":"49606:6:19","nodeType":"YulIdentifier","src":"49606:6:19"},"nativeSrc":"49606:19:19","nodeType":"YulFunctionCall","src":"49606:19:19"},"nativeSrc":"49606:19:19","nodeType":"YulExpressionStatement","src":"49606:19:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":11192,"isOffset":false,"isSlot":false,"src":"48575:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"48664:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"48770:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"49035:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"49046:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"49196:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"49442:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"49539:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"49550:3:19","valueSize":1},{"declaration":11192,"isOffset":false,"isSlot":false,"src":"49613:3:19","valueSize":1},{"declaration":11189,"isOffset":false,"isSlot":false,"src":"49004:5:19","valueSize":1}],"id":11194,"nodeType":"InlineAssembly","src":"48027:1608:19"}]},"documentation":{"id":11187,"nodeType":"StructuredDocumentation","src":"47842:86:19","text":" @dev Converts a uint256 to its ASCII string decimal representation."},"id":11196,"implemented":true,"kind":"function","modifiers":[],"name":"_toString","nameLocation":"47942:9:19","nodeType":"FunctionDefinition","parameters":{"id":11190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11189,"mutability":"mutable","name":"value","nameLocation":"47960:5:19","nodeType":"VariableDeclaration","scope":11196,"src":"47952:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11188,"name":"uint256","nodeType":"ElementaryTypeName","src":"47952:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47951:15:19"},"returnParameters":{"id":11193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11192,"mutability":"mutable","name":"str","nameLocation":"48012:3:19","nodeType":"VariableDeclaration","scope":11196,"src":"47998:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11191,"name":"string","nodeType":"ElementaryTypeName","src":"47998:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47997:19:19"},"scope":11205,"src":"47933:1708:19","stateMutability":"pure","virtual":true,"visibility":"internal"},{"body":{"id":11203,"nodeType":"Block","src":"49756:107:19","statements":[{"AST":{"nativeSrc":"49775:82:19","nodeType":"YulBlock","src":"49775:82:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"49796:4:19","nodeType":"YulLiteral","src":"49796:4:19","type":"","value":"0x00"},{"name":"errorSelector","nativeSrc":"49802:13:19","nodeType":"YulIdentifier","src":"49802:13:19"}],"functionName":{"name":"mstore","nativeSrc":"49789:6:19","nodeType":"YulIdentifier","src":"49789:6:19"},"nativeSrc":"49789:27:19","nodeType":"YulFunctionCall","src":"49789:27:19"},"nativeSrc":"49789:27:19","nodeType":"YulExpressionStatement","src":"49789:27:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"49836:4:19","nodeType":"YulLiteral","src":"49836:4:19","type":"","value":"0x00"},{"kind":"number","nativeSrc":"49842:4:19","nodeType":"YulLiteral","src":"49842:4:19","type":"","value":"0x04"}],"functionName":{"name":"revert","nativeSrc":"49829:6:19","nodeType":"YulIdentifier","src":"49829:6:19"},"nativeSrc":"49829:18:19","nodeType":"YulFunctionCall","src":"49829:18:19"},"nativeSrc":"49829:18:19","nodeType":"YulExpressionStatement","src":"49829:18:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":11199,"isOffset":false,"isSlot":false,"src":"49802:13:19","valueSize":1}],"id":11202,"nodeType":"InlineAssembly","src":"49766:91:19"}]},"documentation":{"id":11197,"nodeType":"StructuredDocumentation","src":"49647:51:19","text":" @dev For more efficient reverts."},"id":11204,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"49712:7:19","nodeType":"FunctionDefinition","parameters":{"id":11200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11199,"mutability":"mutable","name":"errorSelector","nameLocation":"49727:13:19","nodeType":"VariableDeclaration","scope":11204,"src":"49720:20:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":11198,"name":"bytes4","nodeType":"ElementaryTypeName","src":"49720:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"49719:22:19"},"returnParameters":{"id":11201,"nodeType":"ParameterList","parameters":[],"src":"49756:0:19"},"scope":11205,"src":"49703:160:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":11206,"src":"1053:48812:19","usedErrors":[11211,11214,11217,11220,11223,11226,11229,11232,11235,11238,11241,11244,11247,11250,11253,11256,11259,11262],"usedEvents":[11294,11303,11312,11425]}],"src":"84:49782:19"},"id":19},"erc721a/contracts/IERC721A.sol":{"ast":{"absolutePath":"erc721a/contracts/IERC721A.sol","exportedSymbols":{"IERC721A":[11426]},"id":11427,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":11207,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"84:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721A","contractDependencies":[],"contractKind":"interface","documentation":{"id":11208,"nodeType":"StructuredDocumentation","src":"109:37:20","text":" @dev Interface of ERC721A."},"fullyImplemented":false,"id":11426,"linearizedBaseContracts":[11426],"name":"IERC721A","nameLocation":"157:8:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":11209,"nodeType":"StructuredDocumentation","src":"172:76:20","text":" The caller must own the token or be an approved operator."},"errorSelector":"cfb3b942","id":11211,"name":"ApprovalCallerNotOwnerNorApproved","nameLocation":"259:33:20","nodeType":"ErrorDefinition","parameters":{"id":11210,"nodeType":"ParameterList","parameters":[],"src":"292:2:20"},"src":"253:42:20"},{"documentation":{"id":11212,"nodeType":"StructuredDocumentation","src":"301:44:20","text":" The token does not exist."},"errorSelector":"cf4700e4","id":11214,"name":"ApprovalQueryForNonexistentToken","nameLocation":"356:32:20","nodeType":"ErrorDefinition","parameters":{"id":11213,"nodeType":"ParameterList","parameters":[],"src":"388:2:20"},"src":"350:41:20"},{"documentation":{"id":11215,"nodeType":"StructuredDocumentation","src":"397:65:20","text":" Cannot query the balance for the zero address."},"errorSelector":"8f4eb604","id":11217,"name":"BalanceQueryForZeroAddress","nameLocation":"473:26:20","nodeType":"ErrorDefinition","parameters":{"id":11216,"nodeType":"ParameterList","parameters":[],"src":"499:2:20"},"src":"467:35:20"},{"documentation":{"id":11218,"nodeType":"StructuredDocumentation","src":"508:51:20","text":" Cannot mint to the zero address."},"errorSelector":"2e076300","id":11220,"name":"MintToZeroAddress","nameLocation":"570:17:20","nodeType":"ErrorDefinition","parameters":{"id":11219,"nodeType":"ParameterList","parameters":[],"src":"587:2:20"},"src":"564:26:20"},{"documentation":{"id":11221,"nodeType":"StructuredDocumentation","src":"596:72:20","text":" The quantity of tokens minted must be more than zero."},"errorSelector":"b562e8dd","id":11223,"name":"MintZeroQuantity","nameLocation":"679:16:20","nodeType":"ErrorDefinition","parameters":{"id":11222,"nodeType":"ParameterList","parameters":[],"src":"695:2:20"},"src":"673:25:20"},{"documentation":{"id":11224,"nodeType":"StructuredDocumentation","src":"704:44:20","text":" The token does not exist."},"errorSelector":"df2d9b42","id":11226,"name":"OwnerQueryForNonexistentToken","nameLocation":"759:29:20","nodeType":"ErrorDefinition","parameters":{"id":11225,"nodeType":"ParameterList","parameters":[],"src":"788:2:20"},"src":"753:38:20"},{"documentation":{"id":11227,"nodeType":"StructuredDocumentation","src":"797:76:20","text":" The caller must own the token or be an approved operator."},"errorSelector":"59c896be","id":11229,"name":"TransferCallerNotOwnerNorApproved","nameLocation":"884:33:20","nodeType":"ErrorDefinition","parameters":{"id":11228,"nodeType":"ParameterList","parameters":[],"src":"917:2:20"},"src":"878:42:20"},{"documentation":{"id":11230,"nodeType":"StructuredDocumentation","src":"926:53:20","text":" The token must be owned by `from`."},"errorSelector":"a1148100","id":11232,"name":"TransferFromIncorrectOwner","nameLocation":"990:26:20","nodeType":"ErrorDefinition","parameters":{"id":11231,"nodeType":"ParameterList","parameters":[],"src":"1016:2:20"},"src":"984:35:20"},{"documentation":{"id":11233,"nodeType":"StructuredDocumentation","src":"1025:116:20","text":" Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."},"errorSelector":"d1a57ed6","id":11235,"name":"TransferToNonERC721ReceiverImplementer","nameLocation":"1152:38:20","nodeType":"ErrorDefinition","parameters":{"id":11234,"nodeType":"ParameterList","parameters":[],"src":"1190:2:20"},"src":"1146:47:20"},{"documentation":{"id":11236,"nodeType":"StructuredDocumentation","src":"1199:55:20","text":" Cannot transfer to the zero address."},"errorSelector":"ea553b34","id":11238,"name":"TransferToZeroAddress","nameLocation":"1265:21:20","nodeType":"ErrorDefinition","parameters":{"id":11237,"nodeType":"ParameterList","parameters":[],"src":"1286:2:20"},"src":"1259:30:20"},{"documentation":{"id":11239,"nodeType":"StructuredDocumentation","src":"1295:44:20","text":" The token does not exist."},"errorSelector":"a14c4b50","id":11241,"name":"URIQueryForNonexistentToken","nameLocation":"1350:27:20","nodeType":"ErrorDefinition","parameters":{"id":11240,"nodeType":"ParameterList","parameters":[],"src":"1377:2:20"},"src":"1344:36:20"},{"documentation":{"id":11242,"nodeType":"StructuredDocumentation","src":"1386:79:20","text":" The `quantity` minted with ERC2309 exceeds the safety limit."},"errorSelector":"3db1f9af","id":11244,"name":"MintERC2309QuantityExceedsLimit","nameLocation":"1476:31:20","nodeType":"ErrorDefinition","parameters":{"id":11243,"nodeType":"ParameterList","parameters":[],"src":"1507:2:20"},"src":"1470:40:20"},{"documentation":{"id":11245,"nodeType":"StructuredDocumentation","src":"1516:83:20","text":" The `extraData` cannot be set on an unintialized ownership slot."},"errorSelector":"00d58153","id":11247,"name":"OwnershipNotInitializedForExtraData","nameLocation":"1610:35:20","nodeType":"ErrorDefinition","parameters":{"id":11246,"nodeType":"ParameterList","parameters":[],"src":"1645:2:20"},"src":"1604:44:20"},{"documentation":{"id":11248,"nodeType":"StructuredDocumentation","src":"1654:78:20","text":" `_sequentialUpTo()` must be greater than `_startTokenId()`."},"errorSelector":"fed8210f","id":11250,"name":"SequentialUpToTooSmall","nameLocation":"1743:22:20","nodeType":"ErrorDefinition","parameters":{"id":11249,"nodeType":"ParameterList","parameters":[],"src":"1765:2:20"},"src":"1737:31:20"},{"documentation":{"id":11251,"nodeType":"StructuredDocumentation","src":"1774:82:20","text":" The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."},"errorSelector":"81647e3a","id":11253,"name":"SequentialMintExceedsLimit","nameLocation":"1867:26:20","nodeType":"ErrorDefinition","parameters":{"id":11252,"nodeType":"ParameterList","parameters":[],"src":"1893:2:20"},"src":"1861:35:20"},{"documentation":{"id":11254,"nodeType":"StructuredDocumentation","src":"1902:86:20","text":" Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."},"errorSelector":"524a12cc","id":11256,"name":"SpotMintTokenIdTooSmall","nameLocation":"1999:23:20","nodeType":"ErrorDefinition","parameters":{"id":11255,"nodeType":"ParameterList","parameters":[],"src":"2022:2:20"},"src":"1993:32:20"},{"documentation":{"id":11257,"nodeType":"StructuredDocumentation","src":"2031:64:20","text":" Cannot mint over a token that already exists."},"errorSelector":"c991cbb1","id":11259,"name":"TokenAlreadyExists","nameLocation":"2106:18:20","nodeType":"ErrorDefinition","parameters":{"id":11258,"nodeType":"ParameterList","parameters":[],"src":"2124:2:20"},"src":"2100:27:20"},{"documentation":{"id":11260,"nodeType":"StructuredDocumentation","src":"2133:65:20","text":" The feature is not compatible with spot mints."},"errorSelector":"bdba09d7","id":11262,"name":"NotCompatibleWithSpotMints","nameLocation":"2209:26:20","nodeType":"ErrorDefinition","parameters":{"id":11261,"nodeType":"ParameterList","parameters":[],"src":"2235:2:20"},"src":"2203:35:20"},{"canonicalName":"IERC721A.TokenOwnership","id":11271,"members":[{"constant":false,"id":11264,"mutability":"mutable","name":"addr","nameLocation":"2502:4:20","nodeType":"VariableDeclaration","scope":11271,"src":"2494:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11263,"name":"address","nodeType":"ElementaryTypeName","src":"2494:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11266,"mutability":"mutable","name":"startTimestamp","nameLocation":"2607:14:20","nodeType":"VariableDeclaration","scope":11271,"src":"2600:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":11265,"name":"uint64","nodeType":"ElementaryTypeName","src":"2600:6:20","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":11268,"mutability":"mutable","name":"burned","nameLocation":"2682:6:20","nodeType":"VariableDeclaration","scope":11271,"src":"2677:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11267,"name":"bool","nodeType":"ElementaryTypeName","src":"2677:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":11270,"mutability":"mutable","name":"extraData","nameLocation":"2793:9:20","nodeType":"VariableDeclaration","scope":11271,"src":"2786:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":11269,"name":"uint24","nodeType":"ElementaryTypeName","src":"2786:6:20","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"TokenOwnership","nameLocation":"2432:14:20","nodeType":"StructDefinition","scope":11426,"src":"2425:384:20","visibility":"public"},{"documentation":{"id":11272,"nodeType":"StructuredDocumentation","src":"3000:192:20","text":" @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."},"functionSelector":"18160ddd","id":11277,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3206:11:20","nodeType":"FunctionDefinition","parameters":{"id":11273,"nodeType":"ParameterList","parameters":[],"src":"3217:2:20"},"returnParameters":{"id":11276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11275,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11277,"src":"3243:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11274,"name":"uint256","nodeType":"ElementaryTypeName","src":"3243:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3242:9:20"},"scope":11426,"src":"3197:55:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11278,"nodeType":"StructuredDocumentation","src":"3439:341:20","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."},"functionSelector":"01ffc9a7","id":11285,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"3794:17:20","nodeType":"FunctionDefinition","parameters":{"id":11281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11280,"mutability":"mutable","name":"interfaceId","nameLocation":"3819:11:20","nodeType":"VariableDeclaration","scope":11285,"src":"3812:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":11279,"name":"bytes4","nodeType":"ElementaryTypeName","src":"3812:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"3811:20:20"},"returnParameters":{"id":11284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11285,"src":"3855:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11282,"name":"bool","nodeType":"ElementaryTypeName","src":"3855:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3854:6:20"},"scope":11426,"src":"3785:76:20","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":11286,"nodeType":"StructuredDocumentation","src":"4048:88:20","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":11294,"name":"Transfer","nameLocation":"4147:8:20","nodeType":"EventDefinition","parameters":{"id":11293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11288,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"4172:4:20","nodeType":"VariableDeclaration","scope":11294,"src":"4156:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11287,"name":"address","nodeType":"ElementaryTypeName","src":"4156:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11290,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"4194:2:20","nodeType":"VariableDeclaration","scope":11294,"src":"4178:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11289,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11292,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4214:7:20","nodeType":"VariableDeclaration","scope":11294,"src":"4198:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11291,"name":"uint256","nodeType":"ElementaryTypeName","src":"4198:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4155:67:20"},"src":"4141:82:20"},{"anonymous":false,"documentation":{"id":11295,"nodeType":"StructuredDocumentation","src":"4229:94:20","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":11303,"name":"Approval","nameLocation":"4334:8:20","nodeType":"EventDefinition","parameters":{"id":11302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11297,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"4359:5:20","nodeType":"VariableDeclaration","scope":11303,"src":"4343:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11296,"name":"address","nodeType":"ElementaryTypeName","src":"4343:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11299,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"4382:8:20","nodeType":"VariableDeclaration","scope":11303,"src":"4366:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11298,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11301,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"4408:7:20","nodeType":"VariableDeclaration","scope":11303,"src":"4392:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4392:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4342:74:20"},"src":"4328:89:20"},{"anonymous":false,"documentation":{"id":11304,"nodeType":"StructuredDocumentation","src":"4423:124:20","text":" @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":11312,"name":"ApprovalForAll","nameLocation":"4558:14:20","nodeType":"EventDefinition","parameters":{"id":11311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11306,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"4589:5:20","nodeType":"VariableDeclaration","scope":11312,"src":"4573:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11305,"name":"address","nodeType":"ElementaryTypeName","src":"4573:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11308,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"4612:8:20","nodeType":"VariableDeclaration","scope":11312,"src":"4596:24:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11307,"name":"address","nodeType":"ElementaryTypeName","src":"4596:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11310,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"4627:8:20","nodeType":"VariableDeclaration","scope":11312,"src":"4622:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11309,"name":"bool","nodeType":"ElementaryTypeName","src":"4622:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4572:64:20"},"src":"4552:85:20"},{"documentation":{"id":11313,"nodeType":"StructuredDocumentation","src":"4643:74:20","text":" @dev Returns the number of tokens in `owner`'s account."},"functionSelector":"70a08231","id":11320,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"4731:9:20","nodeType":"FunctionDefinition","parameters":{"id":11316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11315,"mutability":"mutable","name":"owner","nameLocation":"4749:5:20","nodeType":"VariableDeclaration","scope":11320,"src":"4741:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11314,"name":"address","nodeType":"ElementaryTypeName","src":"4741:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4740:15:20"},"returnParameters":{"id":11319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11318,"mutability":"mutable","name":"balance","nameLocation":"4787:7:20","nodeType":"VariableDeclaration","scope":11320,"src":"4779:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11317,"name":"uint256","nodeType":"ElementaryTypeName","src":"4779:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4778:17:20"},"scope":11426,"src":"4722:74:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11321,"nodeType":"StructuredDocumentation","src":"4802:131:20","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":11328,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"4947:7:20","nodeType":"FunctionDefinition","parameters":{"id":11324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11323,"mutability":"mutable","name":"tokenId","nameLocation":"4963:7:20","nodeType":"VariableDeclaration","scope":11328,"src":"4955:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11322,"name":"uint256","nodeType":"ElementaryTypeName","src":"4955:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4954:17:20"},"returnParameters":{"id":11327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11326,"mutability":"mutable","name":"owner","nameLocation":"5003:5:20","nodeType":"VariableDeclaration","scope":11328,"src":"4995:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11325,"name":"address","nodeType":"ElementaryTypeName","src":"4995:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4994:15:20"},"scope":11426,"src":"4938:72:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11329,"nodeType":"StructuredDocumentation","src":"5016:711:20","text":" @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":11340,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5741:16:20","nodeType":"FunctionDefinition","parameters":{"id":11338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11331,"mutability":"mutable","name":"from","nameLocation":"5775:4:20","nodeType":"VariableDeclaration","scope":11340,"src":"5767:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11330,"name":"address","nodeType":"ElementaryTypeName","src":"5767:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11333,"mutability":"mutable","name":"to","nameLocation":"5797:2:20","nodeType":"VariableDeclaration","scope":11340,"src":"5789:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11332,"name":"address","nodeType":"ElementaryTypeName","src":"5789:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11335,"mutability":"mutable","name":"tokenId","nameLocation":"5817:7:20","nodeType":"VariableDeclaration","scope":11340,"src":"5809:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11334,"name":"uint256","nodeType":"ElementaryTypeName","src":"5809:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11337,"mutability":"mutable","name":"data","nameLocation":"5849:4:20","nodeType":"VariableDeclaration","scope":11340,"src":"5834:19:20","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":11336,"name":"bytes","nodeType":"ElementaryTypeName","src":"5834:5:20","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5757:102:20"},"returnParameters":{"id":11339,"nodeType":"ParameterList","parameters":[],"src":"5876:0:20"},"scope":11426,"src":"5732:145:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":11341,"nodeType":"StructuredDocumentation","src":"5883:80:20","text":" @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."},"functionSelector":"42842e0e","id":11350,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5977:16:20","nodeType":"FunctionDefinition","parameters":{"id":11348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11343,"mutability":"mutable","name":"from","nameLocation":"6011:4:20","nodeType":"VariableDeclaration","scope":11350,"src":"6003:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11342,"name":"address","nodeType":"ElementaryTypeName","src":"6003:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11345,"mutability":"mutable","name":"to","nameLocation":"6033:2:20","nodeType":"VariableDeclaration","scope":11350,"src":"6025:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11344,"name":"address","nodeType":"ElementaryTypeName","src":"6025:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11347,"mutability":"mutable","name":"tokenId","nameLocation":"6053:7:20","nodeType":"VariableDeclaration","scope":11350,"src":"6045:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11346,"name":"uint256","nodeType":"ElementaryTypeName","src":"6045:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5993:73:20"},"returnParameters":{"id":11349,"nodeType":"ParameterList","parameters":[],"src":"6083:0:20"},"scope":11426,"src":"5968:116:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":11351,"nodeType":"StructuredDocumentation","src":"6090:512:20","text":" @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":11360,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"6616:12:20","nodeType":"FunctionDefinition","parameters":{"id":11358,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11353,"mutability":"mutable","name":"from","nameLocation":"6646:4:20","nodeType":"VariableDeclaration","scope":11360,"src":"6638:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11352,"name":"address","nodeType":"ElementaryTypeName","src":"6638:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11355,"mutability":"mutable","name":"to","nameLocation":"6668:2:20","nodeType":"VariableDeclaration","scope":11360,"src":"6660:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11354,"name":"address","nodeType":"ElementaryTypeName","src":"6660:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11357,"mutability":"mutable","name":"tokenId","nameLocation":"6688:7:20","nodeType":"VariableDeclaration","scope":11360,"src":"6680:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11356,"name":"uint256","nodeType":"ElementaryTypeName","src":"6680:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6628:73:20"},"returnParameters":{"id":11359,"nodeType":"ParameterList","parameters":[],"src":"6718:0:20"},"scope":11426,"src":"6607:112:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":11361,"nodeType":"StructuredDocumentation","src":"6725:459:20","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":11368,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"7198:7:20","nodeType":"FunctionDefinition","parameters":{"id":11366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11363,"mutability":"mutable","name":"to","nameLocation":"7214:2:20","nodeType":"VariableDeclaration","scope":11368,"src":"7206:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11362,"name":"address","nodeType":"ElementaryTypeName","src":"7206:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11365,"mutability":"mutable","name":"tokenId","nameLocation":"7226:7:20","nodeType":"VariableDeclaration","scope":11368,"src":"7218:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11364,"name":"uint256","nodeType":"ElementaryTypeName","src":"7218:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7205:29:20"},"returnParameters":{"id":11367,"nodeType":"ParameterList","parameters":[],"src":"7251:0:20"},"scope":11426,"src":"7189:63:20","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":11369,"nodeType":"StructuredDocumentation","src":"7258:316:20","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":11376,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"7588:17:20","nodeType":"FunctionDefinition","parameters":{"id":11374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11371,"mutability":"mutable","name":"operator","nameLocation":"7614:8:20","nodeType":"VariableDeclaration","scope":11376,"src":"7606:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11370,"name":"address","nodeType":"ElementaryTypeName","src":"7606:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11373,"mutability":"mutable","name":"_approved","nameLocation":"7629:9:20","nodeType":"VariableDeclaration","scope":11376,"src":"7624:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11372,"name":"bool","nodeType":"ElementaryTypeName","src":"7624:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7605:34:20"},"returnParameters":{"id":11375,"nodeType":"ParameterList","parameters":[],"src":"7648:0:20"},"scope":11426,"src":"7579:70:20","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":11377,"nodeType":"StructuredDocumentation","src":"7655:139:20","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":11384,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"7808:11:20","nodeType":"FunctionDefinition","parameters":{"id":11380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11379,"mutability":"mutable","name":"tokenId","nameLocation":"7828:7:20","nodeType":"VariableDeclaration","scope":11384,"src":"7820:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11378,"name":"uint256","nodeType":"ElementaryTypeName","src":"7820:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7819:17:20"},"returnParameters":{"id":11383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11382,"mutability":"mutable","name":"operator","nameLocation":"7868:8:20","nodeType":"VariableDeclaration","scope":11384,"src":"7860:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11381,"name":"address","nodeType":"ElementaryTypeName","src":"7860:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7859:18:20"},"scope":11426,"src":"7799:79:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11385,"nodeType":"StructuredDocumentation","src":"7884:139:20","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":11394,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"8037:16:20","nodeType":"FunctionDefinition","parameters":{"id":11390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11387,"mutability":"mutable","name":"owner","nameLocation":"8062:5:20","nodeType":"VariableDeclaration","scope":11394,"src":"8054:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11386,"name":"address","nodeType":"ElementaryTypeName","src":"8054:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11389,"mutability":"mutable","name":"operator","nameLocation":"8077:8:20","nodeType":"VariableDeclaration","scope":11394,"src":"8069:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11388,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8053:33:20"},"returnParameters":{"id":11393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11392,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11394,"src":"8110:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":11391,"name":"bool","nodeType":"ElementaryTypeName","src":"8110:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8109:6:20"},"scope":11426,"src":"8028:88:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11395,"nodeType":"StructuredDocumentation","src":"8307:58:20","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":11400,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"8379:4:20","nodeType":"FunctionDefinition","parameters":{"id":11396,"nodeType":"ParameterList","parameters":[],"src":"8383:2:20"},"returnParameters":{"id":11399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11398,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11400,"src":"8409:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11397,"name":"string","nodeType":"ElementaryTypeName","src":"8409:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8408:15:20"},"scope":11426,"src":"8370:54:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11401,"nodeType":"StructuredDocumentation","src":"8430:60:20","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":11406,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"8504:6:20","nodeType":"FunctionDefinition","parameters":{"id":11402,"nodeType":"ParameterList","parameters":[],"src":"8510:2:20"},"returnParameters":{"id":11405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11406,"src":"8536:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11403,"name":"string","nodeType":"ElementaryTypeName","src":"8536:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8535:15:20"},"scope":11426,"src":"8495:56:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":11407,"nodeType":"StructuredDocumentation","src":"8557:90:20","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":11414,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"8661:8:20","nodeType":"FunctionDefinition","parameters":{"id":11410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11409,"mutability":"mutable","name":"tokenId","nameLocation":"8678:7:20","nodeType":"VariableDeclaration","scope":11414,"src":"8670:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11408,"name":"uint256","nodeType":"ElementaryTypeName","src":"8670:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8669:17:20"},"returnParameters":{"id":11413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11412,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11414,"src":"8710:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":11411,"name":"string","nodeType":"ElementaryTypeName","src":"8710:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8709:15:20"},"scope":11426,"src":"8652:73:20","stateMutability":"view","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":11415,"nodeType":"StructuredDocumentation","src":"8912:267:20","text":" @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."},"eventSelector":"deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d","id":11425,"name":"ConsecutiveTransfer","nameLocation":"9190:19:20","nodeType":"EventDefinition","parameters":{"id":11424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11417,"indexed":true,"mutability":"mutable","name":"fromTokenId","nameLocation":"9226:11:20","nodeType":"VariableDeclaration","scope":11425,"src":"9210:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11416,"name":"uint256","nodeType":"ElementaryTypeName","src":"9210:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11419,"indexed":false,"mutability":"mutable","name":"toTokenId","nameLocation":"9247:9:20","nodeType":"VariableDeclaration","scope":11425,"src":"9239:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11418,"name":"uint256","nodeType":"ElementaryTypeName","src":"9239:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11421,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"9274:4:20","nodeType":"VariableDeclaration","scope":11425,"src":"9258:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11420,"name":"address","nodeType":"ElementaryTypeName","src":"9258:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11423,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"9296:2:20","nodeType":"VariableDeclaration","scope":11425,"src":"9280:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11422,"name":"address","nodeType":"ElementaryTypeName","src":"9280:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9209:90:20"},"src":"9184:116:20"}],"scope":11427,"src":"147:9155:20","usedErrors":[11211,11214,11217,11220,11223,11226,11229,11232,11235,11238,11241,11244,11247,11250,11253,11256,11259,11262],"usedEvents":[11294,11303,11312,11425]}],"src":"84:9219:20"},"id":20}},"contracts":{"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol":{"FunctionsClient":{"abi":[{"inputs":[],"name":"OnlyRouterCanFulfill","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestSent","type":"event"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"OnlyRouterCanFulfill\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}}},\"title\":\"The Chainlink Functions client contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"}},\"notice\":\"Contract developers can inherit this contract in order to make Chainlink Functions requests\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\":\"FunctionsClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\":{\"keccak256\":\"0x40224641403cb9fa03d4f060296d7420a9ff11b46abadc958ae048459205e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d1dabc1ca292b93c373589b1827f01b404d0d66669f58c03b6d2f92a6e64f2c\",\"dweb:/ipfs/QmP3yzaUfqUqb7qk4fBYw8U6rMgWsSgNKjSUGJncjwaHCq\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3\",\"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d\",\"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol":{"IFunctionsClient":{"abi":[{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}}},\"title\":\"Chainlink Functions client interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":\"IFunctionsClient\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3\",\"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol":{"IFunctionsRouter":{"abi":[{"inputs":[{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"},{"internalType":"uint96","name":"juelsPerGas","type":"uint96"},{"internalType":"uint96","name":"costWithoutFulfillment","type":"uint96"},{"internalType":"address","name":"transmitter","type":"address"},{"components":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"address","name":"coordinator","type":"address"},{"internalType":"uint96","name":"estimatedTotalCostJuels","type":"uint96"},{"internalType":"address","name":"client","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint72","name":"adminFee","type":"uint72"},{"internalType":"uint72","name":"donFee","type":"uint72"},{"internalType":"uint40","name":"gasOverheadBeforeCallback","type":"uint40"},{"internalType":"uint40","name":"gasOverheadAfterCallback","type":"uint40"},{"internalType":"uint32","name":"timeoutTimestamp","type":"uint32"}],"internalType":"struct FunctionsResponse.Commitment","name":"commitment","type":"tuple"}],"name":"fulfill","outputs":[{"internalType":"enum FunctionsResponse.FulfillResult","name":"","type":"uint8"},{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getAdminFee","outputs":[{"internalType":"uint72","name":"adminFee","type":"uint72"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllowListId","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getContractById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getProposedContractById","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getProposedContractSet","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"},{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"}],"name":"isValidCallbackGasLimit","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32[]","name":"proposalSetIds","type":"bytes32[]"},{"internalType":"address[]","name":"proposalSetAddresses","type":"address[]"}],"name":"proposeContractsUpdate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint16","name":"dataVersion","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"name":"sendRequest","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint16","name":"dataVersion","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"bytes32","name":"donId","type":"bytes32"}],"name":"sendRequestToProposed","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"allowListId","type":"bytes32"}],"name":"setAllowListId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"updateContracts","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))":"33060529","getAdminFee()":"2a905ccc","getAllowListId()":"aab396bd","getContractById(bytes32)":"a9c9a918","getProposedContractById(bytes32)":"6a2215de","getProposedContractSet()":"badc3eb6","isValidCallbackGasLimit(uint64,uint32)":"10fc49c1","pause()":"8456cb59","proposeContractsUpdate(bytes32[],address[])":"3e871e4d","sendRequest(uint64,bytes,uint16,uint32,bytes32)":"461d2762","sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)":"41db4ca3","setAllowListId(bytes32)":"ea320e0b","unpause()":"3f4ba83a","updateContracts()":"b734c0f4"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"},{\"internalType\":\"uint96\",\"name\":\"juelsPerGas\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"costWithoutFulfillment\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"transmitter\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"coordinator\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"estimatedTotalCostJuels\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"client\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"},{\"internalType\":\"uint72\",\"name\":\"donFee\",\"type\":\"uint72\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadBeforeCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint40\",\"name\":\"gasOverheadAfterCallback\",\"type\":\"uint40\"},{\"internalType\":\"uint32\",\"name\":\"timeoutTimestamp\",\"type\":\"uint32\"}],\"internalType\":\"struct FunctionsResponse.Commitment\",\"name\":\"commitment\",\"type\":\"tuple\"}],\"name\":\"fulfill\",\"outputs\":[{\"internalType\":\"enum FunctionsResponse.FulfillResult\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAdminFee\",\"outputs\":[{\"internalType\":\"uint72\",\"name\":\"adminFee\",\"type\":\"uint72\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllowListId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getContractById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getProposedContractById\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProposedContractSet\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"}],\"name\":\"isValidCallbackGasLimit\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"proposalSetIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"address[]\",\"name\":\"proposalSetAddresses\",\"type\":\"address[]\"}],\"name\":\"proposeContractsUpdate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"dataVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"sendRequest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"dataVersion\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"donId\",\"type\":\"bytes32\"}],\"name\":\"sendRequestToProposed\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"allowListId\",\"type\":\"bytes32\"}],\"name\":\"setAllowListId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))\":{\"details\":\"Only callable by the Coordinator contract that is saved in the commitment\",\"params\":{\"commitment\":\"- The parameters of the request that must be held consistent between request and response time\",\"costWithoutFulfillment\":\"- The cost of processing the request (in Juels of LINK ), without fulfillment\",\"err\":\"error from DON consensus\",\"juelsPerGas\":\"- current rate of juels/gas\",\"response\":\"response data from DON consensus\",\"transmitter\":\"- The Node that transmitted the OCR report\"},\"returns\":{\"_0\":\"fulfillResult -\",\"_1\":\"callbackGasCostJuels -\"}},\"getAdminFee()\":{\"returns\":{\"adminFee\":\"adminFee\"}},\"getAllowListId()\":{\"returns\":{\"_0\":\"id - bytes32 id that can be passed to the \\\"getContractById\\\" of the Router\"}},\"getContractById(bytes32)\":{\"params\":{\"id\":\"A bytes32 identifier for the route\"},\"returns\":{\"_0\":\"contract The current contract address\"}},\"getProposedContractById(bytes32)\":{\"params\":{\"id\":\"A bytes32 identifier for the route\"},\"returns\":{\"_0\":\"contract The current or proposed contract address\"}},\"getProposedContractSet()\":{\"returns\":{\"_0\":\"ids The identifiers of the contracts to update\",\"_1\":\"to The addresses of the contracts that will be updated to\"}},\"isValidCallbackGasLimit(uint64,uint32)\":{\"params\":{\"callbackGasLimit\":\"desired callback gas limit\",\"subscriptionId\":\"subscription ID\"}},\"pause()\":{\"details\":\"Puts the system into an emergency stopped state.Only callable by owner\"},\"proposeContractsUpdate(bytes32[],address[])\":{\"details\":\"Only callable by owner\"},\"sendRequest(uint64,bytes,uint16,uint32,bytes32)\":{\"params\":{\"callbackGasLimit\":\"- Gas limit for the fulfillment callback\",\"data\":\"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\",\"dataVersion\":\"- Gas limit for the fulfillment callback\",\"donId\":\"- An identifier used to determine which route to send the request along\",\"subscriptionId\":\"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription\"},\"returns\":{\"_0\":\"requestId - A unique request identifier\"}},\"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)\":{\"params\":{\"callbackGasLimit\":\"- Gas limit for the fulfillment callback\",\"data\":\"- CBOR encoded Chainlink Functions request data, use FunctionsClient API to encode a request\",\"dataVersion\":\"- Gas limit for the fulfillment callback\",\"donId\":\"- An identifier used to determine which route to send the request along\",\"subscriptionId\":\"- A unique subscription ID allocated by billing system, a client can make requests from different contracts referencing the same subscription\"},\"returns\":{\"_0\":\"requestId - A unique request identifier\"}},\"unpause()\":{\"details\":\"Takes the system out of an emergency stopped state.Only callable by owner\"},\"updateContracts()\":{\"details\":\"Only callable by owner\"}},\"title\":\"Chainlink Functions Router interface.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fulfill(bytes,bytes,uint96,uint96,address,(bytes32,address,uint96,address,uint64,uint32,uint72,uint72,uint40,uint40,uint32))\":{\"notice\":\"Fulfill the request by: - calling back the data that the Oracle returned to the client contract - pay the DON for processing the request\"},\"getAdminFee()\":{\"notice\":\"Get the flat fee (in Juels of LINK) that will be paid to the Router owner for operation of the network\"},\"getAllowListId()\":{\"notice\":\"The identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions\"},\"getContractById(bytes32)\":{\"notice\":\"Get the current contract given an ID\"},\"getProposedContractById(bytes32)\":{\"notice\":\"Get the proposed next contract given an ID\"},\"getProposedContractSet()\":{\"notice\":\"Return the latest proprosal set\"},\"isValidCallbackGasLimit(uint64,uint32)\":{\"notice\":\"Validate requested gas limit is below the subscription max.\"},\"proposeContractsUpdate(bytes32[],address[])\":{\"notice\":\"Proposes one or more updates to the contract routes\"},\"sendRequest(uint64,bytes,uint16,uint32,bytes32)\":{\"notice\":\"Sends a request using the provided subscriptionId\"},\"sendRequestToProposed(uint64,bytes,uint16,uint32,bytes32)\":{\"notice\":\"Sends a request to the proposed contracts\"},\"setAllowListId(bytes32)\":{\"notice\":\"Set the identifier of the route to retrieve the address of the access control contract The access control contract controls which accounts can manage subscriptions\"},\"updateContracts()\":{\"notice\":\"Updates the current contract routes to the proposed contracts\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":\"IFunctionsRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol":{"FunctionsRequest":{"abi":[{"inputs":[],"name":"EmptyArgs","type":"error"},{"inputs":[],"name":"EmptySecrets","type":"error"},{"inputs":[],"name":"EmptySource","type":"error"},{"inputs":[],"name":"NoInlineSecrets","type":"error"},{"inputs":[],"name":"REQUEST_DATA_VERSION","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080806040523460175760759081601d823930815050f35b600080fdfe6080806040526004361015601257600080fd5b60003560e01c635d641dfc14602657600080fd5b6000366003190112603a5780600160209252f35b600080fdfea2646970667358221220cda3ef2126951d16a0f96e298d8a0fb837d242f3defdd992ae4232f814716b3c64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x75 SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5D641DFC EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x3A JUMPI DUP1 PUSH1 0x1 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD LOG3 0xEF 0x21 0x26 SWAP6 SAR AND LOG0 0xF9 PUSH15 0x298D8A0FB837D242F3DEFDD992AE42 ORIGIN 0xF8 EQ PUSH18 0x6B3C64736F6C634300081900330000000000 ","sourceMap":"212:6086:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080806040526004361015601257600080fd5b60003560e01c635d641dfc14602657600080fd5b6000366003190112603a5780600160209252f35b600080fdfea2646970667358221220cda3ef2126951d16a0f96e298d8a0fb837d242f3defdd992ae4232f814716b3c64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH1 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR PUSH4 0x5D641DFC EQ PUSH1 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH1 0x3A JUMPI DUP1 PUSH1 0x1 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD LOG3 0xEF 0x21 0x26 SWAP6 SAR AND LOG0 0xF9 PUSH15 0x298D8A0FB837D242F3DEFDD992AE42 ORIGIN 0xF8 EQ PUSH18 0x6B3C64736F6C634300081900330000000000 ","sourceMap":"212:6086:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;212:6086:3;;;;;322:1;212:6086;;;;;;;"},"methodIdentifiers":{"REQUEST_DATA_VERSION()":"5d641dfc"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptyArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySecrets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoInlineSecrets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"REQUEST_DATA_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for encoding the input data of a Functions request into CBOR\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":\"FunctionsRequest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d\",\"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t\"]},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol":{"FunctionsResponse":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207eb96e8e97dedb8ac5782127534becead35560f2ededafbb4e329f295d0f4c1d64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xB96E8E97DEDB8AC5782127534BECEAD35560F2EDEDAFBB4E329F295D0F4C1D PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"139:3258:4:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207eb96e8e97dedb8ac5782127534becead35560f2ededafbb4e329f295d0f4c1d64736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xB96E8E97DEDB8AC5782127534BECEAD35560F2EDEDAFBB4E329F295D0F4C1D PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"139:3258:4:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library of types that are used for fulfillment of a Functions request\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":\"FunctionsResponse\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol":{"Buffer":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220411aa256b35e793e4343dce743ac22e661823a4d1374b21da241b79fb18a9c8164736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE BYTE LOG2 JUMP 0xB3 MCOPY PUSH26 0x3E4343DCE743AC22E661823A4D1374B21DA241B79FB18A9C8164 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"445:8435:5:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220411aa256b35e793e4343dce743ac22e661823a4d1374b21da241b79fb18a9c8164736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE BYTE LOG2 JUMP 0xB3 MCOPY PUSH26 0x3E4343DCE743AC22E661823A4D1374B21DA241B79FB18A9C8164 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"445:8435:5:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for working with mutable byte buffers in Solidity. Byte buffers are mutable and expandable, and provide a variety of primitives for appending to them. At any time you can fetch a bytes object containing the current contents of the buffer. The bytes object should not be stored between operations, as it may change due to resizing of the buffer.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":\"Buffer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol":{"CBOR":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f5a910f0d7ffb7252da285d30bffd52b922bb651036cb40810c4af75728cc03664736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xA9 LT CREATE 0xD7 SELFDESTRUCT 0xB7 0x25 0x2D LOG2 DUP6 0xD3 SIGNEXTEND SELFDESTRUCT 0xD5 0x2B SWAP3 0x2B 0xB6 MLOAD SUB PUSH13 0xB40810C4AF75728CC03664736F PUSH13 0x63430008190033000000000000 ","sourceMap":"666:6764:6:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220f5a910f0d7ffb7252da285d30bffd52b922bb651036cb40810c4af75728cc03664736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xA9 LT CREATE 0xD7 SELFDESTRUCT 0xB7 0x25 0x2D LOG2 DUP6 0xD3 SIGNEXTEND SELFDESTRUCT 0xD5 0x2B SWAP3 0x2B 0xB6 MLOAD SUB PUSH13 0xB40810C4AF75728CC03664736F PUSH13 0x63430008190033000000000000 ","sourceMap":"666:6764:6:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"A library for populating CBOR encoded payload in Solidity. https://datatracker.ietf.org/doc/html/rfc7049 The library offers various write* and start* methods to encode values of different types. The resulted buffer can be obtained with data() method. Encoding of primitive types is staightforward, whereas encoding of sequences can result in an invalid CBOR if start/write/end flow is violated. For the purpose of gas saving, the library does not verify start/write/end flow internally, except for nested start/end pairs.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":\"CBOR\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Base64.sol":{"Base64":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e597113f8cdfad0712dde9293164c1af5a6daff9853d8b9f02a62c35c3171e1d64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SWAP8 GT EXTCODEHASH DUP13 0xDF 0xAD SMOD SLT 0xDD 0xE9 0x29 BALANCE PUSH5 0xC1AF5A6DAF 0xF9 DUP6 RETURNDATASIZE DUP12 SWAP16 MUL 0xA6 0x2C CALLDATALOAD 0xC3 OR 0x1E SAR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"202:5008:8:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e597113f8cdfad0712dde9293164c1af5a6daff9853d8b9f02a62c35c3171e1d64736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE5 SWAP8 GT EXTCODEHASH DUP13 0xDF 0xAD SMOD SLT 0xDD 0xE9 0x29 BALANCE PUSH5 0xC1AF5A6DAF 0xF9 DUP6 RETURNDATASIZE DUP12 SWAP16 MUL 0xA6 0x2C CALLDATALOAD 0xC3 OR 0x1E SAR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"202:5008:8:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to operate with Base64 strings.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_TABLE\":{\"details\":\"Base64 Encoding/Decoding Table See sections 4 and 5 of https://datatracker.ietf.org/doc/html/rfc4648\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Base64.sol\":\"Base64\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122084cedbf3b4646264ba8f6c2af835d2602d95501646b8c00646806ca9597bed9564736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xCE 0xDB RETURN 0xB4 PUSH5 0x6264BA8F6C 0x2A 0xF8 CALLDATALOAD 0xD2 PUSH1 0x2D SWAP6 POP AND CHAINID 0xB8 0xC0 MOD CHAINID DUP1 PUSH13 0xA9597BED9564736F6C63430008 NOT STOP CALLER ","sourceMap":"657:1315:10:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122084cedbf3b4646264ba8f6c2af835d2602d95501646b8c00646806ca9597bed9564736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xCE 0xDB RETURN 0xB4 PUSH5 0x6264BA8F6C 0x2A 0xF8 CALLDATALOAD 0xD2 PUSH1 0x2D SWAP6 POP AND CHAINID 0xB8 0xC0 MOD CHAINID DUP1 PUSH13 0xA9597BED9564736F6C63430008 NOT STOP CALLER ","sourceMap":"657:1315:10:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Pausable.sol":{"Pausable":{"abi":[{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"paused()":"5c975abb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212200fa4ab8bc499054e9ea74fd6cee6348f06e692f2fb8bc14142039d8cbc8fb4a464736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF LOG4 0xAB DUP12 0xC4 SWAP10 SDIV 0x4E SWAP15 0xA7 0x4F 0xD6 0xCE 0xE6 CALLVALUE DUP16 MOD 0xE6 SWAP3 CALLCODE 0xFB DUP12 0xC1 COINBASE TIMESTAMP SUB SWAP14 DUP13 0xBC DUP16 0xB4 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"297:18980:13:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212200fa4ab8bc499054e9ea74fd6cee6348f06e692f2fb8bc14142039d8cbc8fb4a464736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF LOG4 0xAB DUP12 0xC4 SWAP10 SDIV 0x4E SWAP15 0xA7 0x4F 0xD6 0xCE 0xE6 CALLVALUE DUP16 MOD 0xE6 SWAP3 CALLCODE 0xFB DUP12 0xC1 COINBASE TIMESTAMP SUB SWAP14 DUP13 0xBC DUP16 0xB4 LOG4 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"297:18980:13:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122001c5fff49be25e8a6a3dd9e01da7a2d2b6a0f22193437a3022ba58475e9bd1dd64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC5 SELFDESTRUCT DELEGATECALL SWAP12 0xE2 MCOPY DUP11 PUSH11 0x3DD9E01DA7A2D2B6A0F221 SWAP4 NUMBER PUSH27 0x3022BA58475E9BD1DD64736F6C6343000819003300000000000000 ","sourceMap":"281:31863:14:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122001c5fff49be25e8a6a3dd9e01da7a2d2b6a0f22193437a3022ba58475e9bd1dd64736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xC5 SELFDESTRUCT DELEGATECALL SWAP12 0xE2 MCOPY DUP11 PUSH11 0x3DD9E01DA7A2D2B6A0F221 SWAP4 NUMBER PUSH27 0x3022BA58475E9BD1DD64736F6C6343000819003300000000000000 ","sourceMap":"281:31863:14:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e446fb05df7676e80e02e30a11ec0107e6867d04f5042757b7616d9d85e83d2f64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 CHAINID 0xFB SDIV 0xDF PUSH23 0x76E80E02E30A11EC0107E6867D04F5042757B7616D9D85 0xE8 RETURNDATASIZE 0x2F PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"769:34173:15:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e446fb05df7676e80e02e30a11ec0107e6867d04f5042757b7616d9d85e83d2f64736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 CHAINID 0xFB SDIV 0xDF PUSH23 0x76E80E02E30A11EC0107E6867D04F5042757B7616D9D85 0xE8 RETURNDATASIZE 0x2F PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"769:34173:15:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206edd3be4d6f718a340213e8bb4d9e8e324a0b9dcced33a30ab225a20acd66cad64736f6c63430008190033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xDD3BE4D6F718A340213E8BB4D9E8E3 0x24 LOG0 0xB9 0xDC 0xCE 0xD3 GASPRICE ADDRESS 0xAB 0x22 GAS KECCAK256 0xAC 0xD6 PUSH13 0xAD64736F6C6343000819003300 ","sourceMap":"258:2354:16:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212206edd3be4d6f718a340213e8bb4d9e8e324a0b9dcced33a30ab225a20acd66cad64736f6c63430008190033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xDD3BE4D6F718A340213E8BB4D9E8E3 0x24 LOG0 0xB9 0xDC 0xCE 0xD3 GASPRICE ADDRESS 0xAB 0x22 GAS KECCAK256 0xAC 0xD6 PUSH13 0xAD64736F6C6343000819003300 ","sourceMap":"258:2354:16:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/AuthenticityNFT.sol":{"AuthenticityNFT":{"abi":[{"inputs":[{"internalType":"string","name":"_name","type":"string"},{"internalType":"string","name":"_symbol","type":"string"},{"internalType":"string","name":"_baseURI","type":"string"},{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"confidenceScore","type":"uint256"},{"indexed":false,"internalType":"string","name":"aiModel","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"AuthenticityNFTMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"oldBaseURI","type":"string"},{"indexed":false,"internalType":"string","name":"newBaseURI","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"BaseURIUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"minter","type":"address"},{"indexed":false,"internalType":"bool","name":"authorized","type":"bool"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"MinterAuthorized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"NFTRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorizedMinters","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"baseURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStatistics","outputs":[{"internalType":"uint256","name":"totalMinted_","type":"uint256"},{"internalType":"uint256","name":"totalRevoked_","type":"uint256"},{"internalType":"uint256","name":"totalActive","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"getTokenIdByIPFS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"getTokenMetadata","outputs":[{"components":[{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"confidenceScore","type":"uint256"},{"internalType":"string","name":"aiModel","type":"string"},{"internalType":"uint256","name":"verificationTimestamp","type":"uint256"},{"internalType":"address","name":"originalRequester","type":"address"},{"internalType":"bool","name":"isRevoked","type":"bool"}],"internalType":"struct AuthenticityNFT.AuthenticityMetadata","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"getTokensByOwner","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"ipfsToTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"isValidNFT","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"string","name":"_ipfsHash","type":"string"},{"internalType":"uint256","name":"_confidenceScore","type":"uint256"},{"internalType":"string","name":"_aiModel","type":"string"}],"name":"mintAuthenticityNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"string","name":"_reason","type":"string"}],"name":"revokeNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_minter","type":"address"},{"internalType":"bool","name":"_authorized","type":"bool"}],"name":"setAuthorizedMinter","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_baseURI","type":"string"}],"name":"setBaseURI","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"tokenMetadata","outputs":[{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"confidenceScore","type":"uint256"},{"internalType":"string","name":"aiModel","type":"string"},{"internalType":"uint256","name":"verificationTimestamp","type":"uint256"},{"internalType":"address","name":"originalRequester","type":"address"},{"internalType":"bool","name":"isRevoked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalRevoked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"result","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":237,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":195,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_4050":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_4052":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":402,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_4049":{"entryPoint":488,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_4051":{"entryPoint":574,"id":null,"parameterSlots":2,"returnSlots":0},"constructor_AuthenticityNFT":{"entryPoint":1124,"id":7612,"parameterSlots":4,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":898,"id":null,"parameterSlots":1,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string_1881":{"entryPoint":660,"id":null,"parameterSlots":1,"returnSlots":0},"extract_byte_array_length":{"entryPoint":344,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"fun_transferOwnership":{"entryPoint":1443,"id":2214,"parameterSlots":1,"returnSlots":0},"panic_error_0x41":{"entryPoint":173,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_1885":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052346100a85761314b80380380610019816100c3565b9283398101906080818303126100a85780516001600160401b0391908281116100a857836100489183016100ed565b9260208201518381116100a857816100619184016100ed565b9260408301519081116100a85760609161007c9184016100ed565b910151916001600160a01b03831683036100a85761009993610464565b604051612b5e90816105ed8239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b038111838210176100e857604052565b6100ad565b919080601f840112156100a85782516001600160401b0381116100e85760209061011f601f8201601f191683016100c3565b928184528282870101116100a85760005b81811061014557508260009394955001015290565b8581018301518482018401528201610130565b90600182811c92168015610188575b602083101461017257565b634e487b7160e01b600052602260045260246000fd5b91607f1691610167565b601f811161019e575050565b60009060026000526020600020906020601f850160051c830194106101de575b601f0160051c01915b8281106101d357505050565b8181556001016101c7565b90925082906101be565b601f81116101f4575050565b60009060036000526020600020906020601f850160051c83019410610234575b601f0160051c01915b82811061022957505050565b81815560010161021d565b9092508290610214565b601f811161024a575050565b600090600b6000526020600020906020601f850160051c8301941061028a575b601f0160051c01915b82811061027f57505050565b818155600101610273565b909250829061026a565b80519091906001600160401b0381116100e8576102bb816102b6600354610158565b6101e8565b602080601f83116001146102fe575081906102ee93946000926102f3575b50508160011b916000199060031b1c19161790565b600355565b0151905038806102d9565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b87821061036a575050836001959610610351575b505050811b01600355565b015160001960f88460031b161c19169055388080610346565b80600185968294968601518155019501930190610332565b80519091906001600160401b0381116100e8576103a9816103a4600b54610158565b61023e565b602080601f83116001146103e0575081906103db93946000926102f35750508160011b916000199060031b1c19161790565b600b55565b600b600052601f198316949091907f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9926000905b87821061044c575050836001959610610433575b505050811b01600b55565b015160001960f88460031b161c19169055388080610428565b80600185968294968601518155019501930190610414565b8051906001600160401b0382116100e85761048982610484600254610158565b610192565b602090816001601f851114610517575091806104c0926104c895946000926102f35750508160011b916000199060031b1c19161790565b600255610294565b6104d26001600055565b6001600160a01b038216156104fe576104ed6104fc926105a3565b6104f76001600a55565b610382565b565b604051631e4fbdf760e01b815260006004820152602490fd5b60026000529190601f1984167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b82821061058b5750509160019391856104c897969410610572575b505050811b01600255610294565b015160001960f88460031b161c19169055388080610564565b80600186978294978701518155019601940190610549565b600980546001600160a01b039283166001600160a01b0319821681179092559091167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a356fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461022257806306fdde031461021d578063081812fc14610218578063095ea7b31461021357806318160ddd1461020e57806323b872dd14610209578063372d6b271461020457806340398d67146101ff57806342842e0e146101fa57806354fd4d50146101f5578063558381e7146101f057806355f804b3146101eb57806360316801146101e65780636352211e146101e15780636914db60146101dc5780636c0360eb146101d757806370a08231146101d2578063715018a6146101cd5780638da5cb5b146101c85780639450b3d6146101c357806395d89b41146101be578063a22cb465146101b9578063a2309ff8146101b4578063a2f1c87b146101af578063aa2fe91b146101aa578063b04458ca14610187578063b88d4fde146101a5578063c87b56dd146101a0578063e62ce7ac1461019b578063e985e9c514610196578063ed58bad814610191578063f2fde38b1461018c5763feb449881461018757600080fd5b61134c565b61151c565b611461565b611404565b6113e6565b6113c7565b61136d565b61130d565b6112e5565b6112c7565b61123e565b611167565b610f9a565b610f71565b610f13565b610ee8565b610eb8565b610e1e565b610c60565b610b9b565b6109e8565b6108a1565b610760565b61073d565b61060e565b610596565b610582565b610526565b610470565b6103f1565b610308565b61023e565b6001600160e01b031981160361023957565b600080fd5b3461023957602036600319011261023957602060043561025d81610227565b63ffffffff60e01b166301ffc9a760e01b811490811561029b575b811561028a575b506040519015158152f35b635b5e139f60e01b1490503861027f565b6380ac58cd60e01b81149150610278565b60005b8381106102bf5750506000910152565b81810151838201526020016102af565b906020916102e8815180928185528580860191016102ac565b601f01601f1916010190565b9060206103059281815201906102cf565b90565b34610239576000806003193601126103ee5760405190806002549061032c82610c8f565b808552916020916001918281169081156103c15750600114610369575b6103658661035981880382610804565b604051918291826102f4565b0390f35b9350600284527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8385106103ae575050505081016020016103598261036538610349565b8054868601840152938201938101610391565b90508695506103659693506020925061035994915060ff191682840152151560051b820101929338610349565b80fd5b346102395760203660031901126102395760043561040e81611e96565b15610433576000526006602052602060018060a01b0360406000205416604051908152f35b6333d1c03960e21b60005260046000fd5b600435906001600160a01b038216820361023957565b602435906001600160a01b038216820361023957565b604036600319011261023957610484610444565b6024356001600160a01b038061049983611f46565b16908133036104f4575b600083815260066020526040812080546001600160a01b0319166001600160a01b0387161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b600082815260076020908152604080832033845290915290205460ff166104a3576367d9dca160e11b60005260046000fd5b34610239576000366003190112610239576000546001546040519103600019018152602090f35b6060906003190112610239576001600160a01b0390600435828116810361023957916024359081168103610239579060443590565b61059461058e3661054d565b916115e7565b005b3461023957600036600319011261023957600f54601054908181038181116105cd5760609260405192835260208301526040820152f35b611797565b602090602060408183019282815285518094520193019160005b8281106105fa575050505090565b8351855293810193928101926001016105ec565b3461023957602036600319011261023957610627610444565b6001600160a01b0381169081156107005761064190611a80565b61064a816117d3565b9060006106586000546117ad565b6001929083805b610672575b6040518061036588826105d2565b61067b82611814565b8110806106f7575b156106f25761069181611e96565b806106cc575b6106ab575b6106a590611805565b8461065f565b926106c481856106be6106a5948a611830565b52611805565b93905061069c565b50866106ec6106e06106e06106e085611f46565b6001600160a01b031690565b14610697565b610664565b50828410610683565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b6044820152606490fd5b6105946107493661054d565b9060405192610757846107e9565b60008452611dc5565b346102395760003660031901126102395760405160408101908082106001600160401b038311176107b8576103659160405260058152640312e302e360dc1b60208201526040519182916020835260208301906102cf565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b038211176107b857604052565b602081019081106001600160401b038211176107b857604052565b90601f801991011681019081106001600160401b038211176107b857604052565b60405190610832826107ce565b565b6001600160401b0381116107b857601f01601f191660200190565b92919261085b82610834565b916108696040519384610804565b829481845281830111610239578281602093846000960137010152565b9080601f83011215610239578160206103059335910161084f565b34610239576040366003190112610239576004356024356001600160401b038111610239576108d4903690600401610886565b6108dc612063565b6108ed6108e883611e96565b61186d565b81600052600c60205260ff60046040600020015460a01c166109815761097c7fd0571d484577e1a5e8a246e15dccfc8d2acb13e80e0320b06dae36de6d79ed719161095b600461094786600052600c602052604060002090565b01805460ff60a01b1916600160a01b179055565b61096e610969601054611805565b601055565b6040519182914290836118b0565b0390a2005b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b88185b1c9958591e481c995d9bdad959605a1b6044820152606490fd5b602060031982011261023957600435906001600160401b0382116102395761030591600401610886565b34610239576109f6366109be565b6109fe612063565b610a06610cc9565b8151916001600160401b0383116107b857610a2b83610a26600b54610c8f565b6118cc565b602080601f8511600114610aa25750837fbf854ac1b3492efdc6a78402a969f9b4aa9315253853a9fe2ab02ff8f2d5563994610a7d92600091610a97575b508160011b916000199060031b1c19161790565b600b555b610a92604051928392429184611a57565b0390a1005b905083015138610a69565b600b60005290601f198516600080516020612b09833981519152926000905b828210610b1e5750509185917fbf854ac1b3492efdc6a78402a969f9b4aa9315253853a9fe2ab02ff8f2d556399660019410610b05575b5050811b01600b55610a81565b84015160001960f88460031b161c191690553880610af8565b80600185968294968901518155019501930190610ac1565b6020815260c060a0610b76610b56855184602087015260e08601906102cf565b602086015160408601526040860151601f198683030160608701526102cf565b9360608101516080850152600180831b03608082015116828501520151151591015290565b346102395760203660031901126102395761036560a060043560409182918251610bc4816107ce565b6060815260009281846020819401526060868201528260608201528260808201520152610bf36108e882611e96565b8152600c602052209060ff6004825193610c0c856107ce565b610c1581610d7b565b855260018101546020860152610c2d60028201610d7b565b8486015260038101546060860152015460018060a01b038116608085015260a01c16151560a08301525191829182610b36565b346102395760203660031901126102395760206001600160a01b03610c86600435611f46565b16604051908152f35b90600182811c92168015610cbf575b6020831014610ca957565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c9e565b60405190600082600b5491610cdd83610c8f565b80835292602090600190818116908115610d575750600114610d08575b505061083292500383610804565b915092600b600052600080516020612b09833981519152936000925b828410610d3f57506108329450505081016020013880610cfa565b85548885018301529485019487945092810192610d24565b9150506020925061083294915060ff191682840152151560051b8201013880610cfa565b90604051918260008254610d8e81610c8f565b90818452602094600191600181169081600014610dfc5750600114610dbd575b50505061083292500383610804565b600090815285812095935091905b818310610de45750506108329350820101388080610dae565b85548884018501529485019487945091830191610dcb565b9250505061083294925060ff191682840152151560051b820101388080610dae565b3461023957602036600319011261023957600435600052600c602052610e826040600020610e4b81610d7b565b9060ff6001820154610e95610e6260028501610d7b565b91600460038601549501549260405197889760c0895260c08901906102cf565b91602088015286820360408801526102cf565b92606085015260018060a01b038116608085015260a01c16151560a08301520390f35b3461023957600036600319011261023957610365610ed4610cc9565b6040519182916020835260208301906102cf565b34610239576020366003190112610239576020610f0b610f06610444565b611a80565b604051908152f35b34610239576000806003193601126103ee57610f2d612063565b600980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b34610239576000366003190112610239576009546040516001600160a01b039091168152602090f35b3461023957608036600319011261023957610fb3610444565b6001600160401b039060243582811161023957610fd4903690600401610886565b906044359260643590811161023957610ff1903690600401610886565b916002600a5414611155577f635ec4f27e96d361299e978a3dc7b7a7fd0b1293b1787b48d0b2b52c72b8b8d561111f93610365956002600a5561105861105361104c3360018060a01b0316600052600e602052604060002090565b5460ff1690565b611aba565b6001600160a01b0385169361112d90611072861515611aff565b61107e81511515611b4b565b60328310158061114a575b61109290611b8b565b6110a561109e826115c1565b5415611bd7565b6000549788976110fc6110b6610825565b84815260208101879052604081018890524260608201526001600160a01b0383166080820152600060a08201526110f78b600052600c602052604060002090565b611c2f565b88611106846115c1565b5561111a611115600f54611805565b600f55565b61208f565b604051938493429285611d7a565b0390a361113a6001600a55565b6040519081529081906020820190565b506064831115611089565b604051633ee5aeb560e01b8152600490fd5b34610239576000806003193601126103ee5760405190806003549061118b82610c8f565b808552916020916001918281169081156103c157506001146111b7576103658661035981880382610804565b9350600384527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106111fc575050505081016020016103598261036538610349565b80548686018401529382019381016111df565b6040906003190112610239576004356001600160a01b0381168103610239579060243580151581036102395790565b346102395761124c3661120f565b9033600052600760205261128b8261127a8360406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b60405191151582526001600160a01b03169033907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b34610239576000366003190112610239576020600f54604051908152f35b34610239576020366003190112610239576020611303600435611d96565b6040519015158152f35b34610239576020366003190112610239576001600160a01b0361132e610444565b16600052600e602052602060ff604060002054166040519015158152f35b3461023957602061136461135f366109be565b6115c1565b54604051908152f35b608036600319011261023957611381610444565b61138961045a565b606435916001600160401b0383116102395736602384011215610239576113bd61059493369060248160040135910161084f565b9160443591611dc5565b3461023957602036600319011261023957610365610ed4600435611e08565b34610239576000366003190112610239576020601054604051908152f35b3461023957604036600319011261023957602060ff611455611424610444565b61142c61045a565b6001600160a01b0391821660009081526007865260408082209290931681526020919091522090565b54166040519015158152f35b346102395761146f3661120f565b90611478612063565b6001600160a01b03169081156114de5760407f0aa0c2b5ea5c9f3fcc4c06f9e39f6afdbadc432e7617f393e5f17f31412d3ca59183600052600e6020526114ce81836000209060ff801983541691151516179055565b81519015158152426020820152a2005b60405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b6044820152606490fd5b3461023957602036600319011261023957611535610444565b61153d612063565b6001600160a01b0390811690811561159157600954826bffffffffffffffffffffffff60a01b821617600955167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b906115bd602092828151948592016102ac565b0190565b60206115da9181604051938285809451938492016102ac565b8101600d81520301902090565b9190916115f382611f46565b6001600160a01b03918216939082811685900361179257600084815260066020526040902080546116376001600160a01b03881633908114908314171590565b1590565b61174b575b6116468688611fce565b611741575b506001600160a01b038516600090815260056020526040902080546000190190556001600160a01b0382166000908152600560205260409020805460010190556001600160a01b0382164260a01b17600160e11b176116b4856000526004602052604060002090565b55600160e11b8116156116f7575b501680927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4156116f257565b611f24565b6001840161170f816000526004602052604060002090565b541561171c575b506116c2565b600054811461171657611739906000526004602052604060002090565b553880611716565b600090553861164b565b61178861163361104c336117718b60018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b1561163c57611f13565b611f03565b634e487b7160e01b600052601160045260246000fd5b6000198101919082116105cd57565b6001600160401b0381116107b85760051b60200190565b906117dd826117bc565b6117ea6040519182610804565b82815280926117fb601f19916117bc565b0190602036910137565b60001981146105cd5760010190565b60010190816001116105cd57565b90600282018092116105cd57565b80518210156118445760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60405190611867826107e9565b60008252565b1561187457565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b9291906118c76020916040865260408601906102cf565b930152565b601f81116118d8575050565b600090600b600052600080516020612b09833981519152906020601f850160051c83019410611922575b601f0160051c01915b82811061191757505050565b81815560010161190b565b9092508290611902565b90601f811161193a57505050565b6000916000526020600020906020601f850160051c83019410611978575b601f0160051c01915b82811061196d57505050565b818155600101611961565b9092508290611958565b91909182516001600160401b0381116107b8576119a9816119a38454610c8f565b8461192c565b602080601f83116001146119ec575081906119dd9394956000926119e1575b50508160011b916000199060031b1c19161790565b9055565b0151905038806119c8565b90601f19831695611a0285600052602060002090565b926000905b888210611a3f57505083600195969710611a26575b505050811b019055565b015160001960f88460031b161c19169055388080611a1c565b80600185968294968601518155019501930190611a07565b9392916118c790611a726040936060885260608801906102cf565b9086820360208801526102cf565b6001600160a01b03168015611aa95760005260056020526001600160401b036040600020541690565b6323d3ad8160e21b60005260046000fd5b15611ac157565b60405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b6044820152606490fd5b15611b0657565b60405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606490fd5b15611b5257565b60405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c84092a08ca640d0c2e6d607b1b6044820152606490fd5b15611b9257565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e666964656e63652073636f726500000000000000006044820152606490fd5b15611bde57565b60405162461bcd60e51b815260206004820152602360248201527f4e465420616c72656164792065786973747320666f72207468697320636f6e74604482015262195b9d60ea1b6064820152608490fd5b919080519283516001600160401b0381116107b857611c52816119a38454610c8f565b602080601f8311600114611cfe5750611ce492611c908360a094600494610832999a6000926119e15750508160011b916000199060031b1c19161790565b81555b60208501516001820155611cae604086015160028301611982565b606085015160038201556080850151910180546001600160a01b0319166001600160a01b03909216919091178155920151151590565b815460ff60a01b191690151560a01b60ff60a01b16179055565b90601f19831696611d1485600052602060002090565b926000905b898210611d6257505083600493611ce4969360019360a0976108329b9c10611d49575b505050811b018155611c93565b015160001960f88460031b161c19169055388080611d3c565b80600185968294968601518155019501930190611d19565b94939291606092610e826118c7936080895260808901906102cf565b611d9f81611e96565b15611dbf57600052600c60205260ff60046040600020015460a01c161590565b50600090565b929190611dd38282866115e7565b803b611de0575b50505050565b611de993612199565b15611df75738808080611dda565b6368d2bf6b60e11b60005260046000fd5b611e146108e882611e96565b80600052600c602052604060002060ff600460405192611e33846107ce565b611e3c81610d7b565b845260018101546020850152611e5460028201610d7b565b604085015260038101546060850152015460018060a01b038116608084015260a01c1615158060a0830152611e8c5761030591612494565b50610305906122cd565b600091906001908381831115611eab57505050565b6000548210611eb957505050565b829394506000929192935b611ed6575b505050600160e01b161590565b828152600460205260408120549350909183611efe5780156105cd5760001901919081611ec4565b611ec9565b62a1148160e81b60005260046000fd5b632ce44b5f60e11b60005260046000fd5b633a954ecd60e21b60005260046000fd5b636f96cda160e11b60005260046000fd5b60019080600111611f3557611f65816000526004602052604060002090565b54918215611f82575b5050600160e01b8116156103055780611f35565b600054821015611f355790815b15611f6e5790915060001901611faf816000526004602052604060002090565b54918215611fc7575050600160e01b8116611f355790565b9081611f8f565b6001600160a01b031615612060576000805b60018110611fed57505050565b8083018084116105cd5782526020600c8152600490604060ff83828720015460a01c1661201f57505050600101611fe0565b5162461bcd60e51b815291820152601b60248201527f43616e6e6f74207472616e73666572207265766f6b6564204e46540000000000604482015260649150fd5b50565b6009546001600160a01b0316330361207757565b60405163118cdaa760e01b8152336004820152602490fd5b60008054916001600160a01b0381164260a01b17600160e11b176120bd846000526004602052604060002090565b556001600160a01b03166000818152600560205260409020805468010000000000000001019055801561214657600183810193919080805b612101575b5050505055565b15612135575b83818484877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46120f5565b8092019184830361210757806120fa565b622e076360e81b8252600482fd5b90816020910312610239575161030581610227565b3d15612194573d9061217a82610834565b916121886040519384610804565b82523d6000602084013e565b606090565b926020916121e293600060018060a01b0360405180978196829584630a85bd0160e11b9c8d865233600487015216602485015260448401526080606484015260848301906102cf565b0393165af16000918161221f575b50612211576121fd612169565b80511561220c57805190602001fd5b611df7565b6001600160e01b0319161490565b61224291925060203d602011612249575b61223a8183610804565b810190612154565b90386121f0565b503d612230565b600b546000929161226082610c8f565b916001908181169081156122ba575060011461227b57505050565b9091929350600b600052600080516020612b09833981519152906000915b8483106122a7575050500190565b8181602092548587015201920191612299565b60ff191683525050811515909102019150565b61030560846124526122e16124889461285c565b6124306124226123e46123c96123af6123aa6040519889977f7b226e616d65223a20225265766f6b656420436572746966696361746520230060208a0152612333815180926020603f8d0191016102ac565b7f222c20226465736372697074696f6e223a2022546869732061757468656e7469603f918a01918201527f6369747920636572746966696361746520686173206265656e207265766f6b65605f82015264032171116160dd1b607f820152691134b6b0b3b2911d101160b11b9101908152600a0190565b612250565b6d03932bb37b5b2b2173837339116160951b8152600e0190565b6e2261747472696275746573223a205b60881b8152600f0190565b7f7b2274726169745f74797065223a2022537461747573222c202276616c75652281526b3a20225265766f6b6564227d60a01b6020820152602c0190565b615d7d60f01b815260020190565b0391612444601f1993848101835282610804565b61244c6129a0565b90612a27565b6040517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006020820152938491603d8301906115aa565b03908101835282610804565b61249d9061285c565b81519160208101516124ae9061285c565b90604081015160608201516124c29061285c565b9151926040519586956020870161250a906024907f7b226e616d65223a202241757468656e746963697479204365727469666963618152637465202360e01b60208201520190565b612513916115aa565b7f222c20226465736372697074696f6e223a202254686973204e4654206365727481527f6966696573207468652061757468656e746963697479206f662064696769746160208201527f6c20636f6e74656e7420766572696669656420627920414920616e616c797369604082015264039971116160dd1b6060820152606501691134b6b0b3b2911d101160b11b8152600a016125af90612250565b71031b2b93a34b334b1b0ba32973837339116160751b81526012017f2265787465726e616c5f75726c223a202268747470733a2f2f676174657761798152722e70696e6174612e636c6f75642f697066732f60681b6020820152603301612615916115aa565b6201116160ed1b81526003016e2261747472696275746573223a205b60881b8152600f017f7b2274726169745f74797065223a2022436f6e666964656e63652053636f726581526b0111610113b30b63ab2911d160a51b6020820152602c0161267d916115aa565b6203e96160ed1b81526003017f7b2274726169745f74797065223a20224149204d6f64656c222c202276616c7581526432911d101160d91b60208201526025016126c6916115aa565b630113e96160e51b81526004017f7b2274726169745f74797065223a2022566572696669636174696f6e2044617481526c032911610113b30b63ab2911d1609d1b6020820152602d01612718916115aa565b6203e96160ed1b81526003017f7b2274726169745f74797065223a2022537461747573222c202276616c75652281527f3a202256657269666965642041757468656e746963227d2c200000000000000060208201526039017f7b2274726169745f74797065223a2022495046532048617368222c202276616c8152653ab2911d101160d11b60208201526026016127ae916115aa565b61227d60f01b8152600201615d7d60f01b81526002010390601f199182810182526127d99082610804565b6127e16129a0565b6127ea91612a27565b6040517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000602082015291908290603d8201612824916115aa565b0390810182526103059082610804565b9061283e82610834565b61284b6040519182610804565b82815280926117fb601f1991610834565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015612992575b506d04ee2d6d415b85acef810000000080831015612983575b50662386f26fc1000080831015612974575b506305f5e10080831015612965575b5061271080831015612956575b506064821015612946575b600a8092101561293c575b6001908160216128f460018701612834565b95860101905b612906575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215612937579190826128fa565b6128ff565b91600101916128e2565b91906064600291049101916128d7565b600491939204910191386128cc565b600891939204910191386128bf565b601091939204910191386128b0565b6020919392049101913861289e565b604093508104915038612885565b60405190606082018281106001600160401b038211176107b857604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b600281901b91906001600160fe1b038116036105cd57565b90815115612afe57612a53612a4e612a49612a428551611822565b6003900490565b612a0f565b612834565b91602083019181825183016020810191825193600084525b828210612aac5750505052516003900660018114612a9957600214612a8e575090565b603d90600019015390565b50603d9081600019820153600119015390565b9091956004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301959190612a6b565b505061030561185a56fe0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9a2646970667358221220206daa353760fc0b2c9d8ea5ec551475e8ea2712fd98a004dbc73de5781538b164736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xA8 JUMPI PUSH2 0x314B DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0xC3 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x80 DUP2 DUP4 SUB SLT PUSH2 0xA8 JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP2 SWAP1 DUP3 DUP2 GT PUSH2 0xA8 JUMPI DUP4 PUSH2 0x48 SWAP2 DUP4 ADD PUSH2 0xED JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH2 0xA8 JUMPI DUP2 PUSH2 0x61 SWAP2 DUP5 ADD PUSH2 0xED JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0xA8 JUMPI PUSH1 0x60 SWAP2 PUSH2 0x7C SWAP2 DUP5 ADD PUSH2 0xED JUMP JUMPDEST SWAP2 ADD MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP4 SUB PUSH2 0xA8 JUMPI PUSH2 0x99 SWAP4 PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5E SWAP1 DUP2 PUSH2 0x5ED DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0xE8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xAD JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xA8 JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE8 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x11F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH2 0xC3 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH2 0xA8 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x145 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH2 0x130 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x188 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x172 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x167 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1DE JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1D3 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1C7 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1BE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1F4 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x234 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x229 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x21D JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x24A JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x28A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x27F JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x273 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x26A JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE8 JUMPI PUSH2 0x2BB DUP2 PUSH2 0x2B6 PUSH1 0x3 SLOAD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x2FE JUMPI POP DUP2 SWAP1 PUSH2 0x2EE SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2F3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x36A JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x351 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x346 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x332 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xE8 JUMPI PUSH2 0x3A9 DUP2 PUSH2 0x3A4 PUSH1 0xB SLOAD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3E0 JUMPI POP DUP2 SWAP1 PUSH2 0x3DB SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2F3 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xB SSTORE JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x44C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x433 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xB SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x428 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x414 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xE8 JUMPI PUSH2 0x489 DUP3 PUSH2 0x484 PUSH1 0x2 SLOAD PUSH2 0x158 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1F DUP6 GT EQ PUSH2 0x517 JUMPI POP SWAP2 DUP1 PUSH2 0x4C0 SWAP3 PUSH2 0x4C8 SWAP6 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x2F3 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x294 JUMP JUMPDEST PUSH2 0x4D2 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4ED PUSH2 0x4FC SWAP3 PUSH2 0x5A3 JUMP JUMPDEST PUSH2 0x4F7 PUSH1 0x1 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH2 0x382 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x58B JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP6 PUSH2 0x4C8 SWAP8 SWAP7 SWAP5 LT PUSH2 0x572 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH2 0x294 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x564 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE SWAP1 SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x372D6B27 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x40398D67 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x558381E7 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x60316801 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x6914DB60 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x9450B3D6 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xA2F1C87B EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xAA2FE91B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xB04458CA EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xE62CE7AC EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xED58BAD8 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI PUSH4 0xFEB44988 EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134C JUMP JUMPDEST PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x136D JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST PUSH2 0x1167 JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH2 0xF71 JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x25D DUP2 PUSH2 0x227 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x29B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x28A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x27F JUMP JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x278 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2BF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2E8 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x305 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH2 0x32C DUP3 PUSH2 0xC8F JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3C1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x369 JUMPI JUMPDEST PUSH2 0x365 DUP7 PUSH2 0x359 DUP2 DUP9 SUB DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2F4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP4 POP PUSH1 0x2 DUP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP6 LT PUSH2 0x3AE JUMPI POP POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x359 DUP3 PUSH2 0x365 CODESIZE PUSH2 0x349 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP7 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x391 JUMP JUMPDEST SWAP1 POP DUP7 SWAP6 POP PUSH2 0x365 SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x359 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 CODESIZE PUSH2 0x349 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x40E DUP2 PUSH2 0x1E96 JUMP JUMPDEST ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x484 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x499 DUP4 PUSH2 0x1F46 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x4F4 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4A3 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SUB PUSH1 0x0 NOT ADD DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x239 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x239 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x594 PUSH2 0x58E CALLDATASIZE PUSH2 0x54D JUMP JUMPDEST SWAP2 PUSH2 0x15E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0xF SLOAD PUSH1 0x10 SLOAD SWAP1 DUP2 DUP2 SUB DUP2 DUP2 GT PUSH2 0x5CD JUMPI PUSH1 0x60 SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5FA JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x5EC JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x627 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x700 JUMPI PUSH2 0x641 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0x17D3 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x658 PUSH1 0x0 SLOAD PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP1 DUP4 DUP1 JUMPDEST PUSH2 0x672 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x365 DUP9 DUP3 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x67B DUP3 PUSH2 0x1814 JUMP JUMPDEST DUP2 LT DUP1 PUSH2 0x6F7 JUMPI JUMPDEST ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x691 DUP2 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH2 0x6CC JUMPI JUMPDEST PUSH2 0x6AB JUMPI JUMPDEST PUSH2 0x6A5 SWAP1 PUSH2 0x1805 JUMP JUMPDEST DUP5 PUSH2 0x65F JUMP JUMPDEST SWAP3 PUSH2 0x6C4 DUP2 DUP6 PUSH2 0x6BE PUSH2 0x6A5 SWAP5 DUP11 PUSH2 0x1830 JUMP JUMPDEST MSTORE PUSH2 0x1805 JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x69C JUMP JUMPDEST POP DUP7 PUSH2 0x6EC PUSH2 0x6E0 PUSH2 0x6E0 PUSH2 0x6E0 DUP6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x697 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST POP DUP3 DUP5 LT PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x749 CALLDATASIZE PUSH2 0x54D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x757 DUP5 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x1DC5 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0x7B8 JUMPI PUSH2 0x365 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x832 DUP3 PUSH2 0x7CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7B8 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x85B DUP3 PUSH2 0x834 JUMP JUMPDEST SWAP2 PUSH2 0x869 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x804 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x239 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x239 JUMPI DUP2 PUSH1 0x20 PUSH2 0x305 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x84F JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x239 JUMPI PUSH2 0x8D4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x886 JUMP JUMPDEST PUSH2 0x8DC PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x8ED PUSH2 0x8E8 DUP4 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x186D JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x981 JUMPI PUSH2 0x97C PUSH32 0xD0571D484577E1A5E8A246E15DCCFC8D2ACB13E80E0320B06DAE36DE6D79ED71 SWAP2 PUSH2 0x95B PUSH1 0x4 PUSH2 0x947 DUP7 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x96E PUSH2 0x969 PUSH1 0x10 SLOAD PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x18B0 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B88185B1C9958591E481C995D9BDAD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x239 JUMPI PUSH2 0x305 SWAP2 PUSH1 0x4 ADD PUSH2 0x886 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH2 0x9F6 CALLDATASIZE PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x9FE PUSH2 0x2063 JUMP JUMPDEST PUSH2 0xA06 PUSH2 0xCC9 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x7B8 JUMPI PUSH2 0xA2B DUP4 PUSH2 0xA26 PUSH1 0xB SLOAD PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0xAA2 JUMPI POP DUP4 PUSH32 0xBF854AC1B3492EFDC6A78402A969F9B4AA9315253853A9FE2AB02FF8F2D55639 SWAP5 PUSH2 0xA7D SWAP3 PUSH1 0x0 SWAP2 PUSH2 0xA97 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH2 0xA92 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH2 0x1A57 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0xA69 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 MSTORE SWAP1 PUSH1 0x1F NOT DUP6 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xB1E JUMPI POP POP SWAP2 DUP6 SWAP2 PUSH32 0xBF854AC1B3492EFDC6A78402A969F9B4AA9315253853A9FE2AB02FF8F2D55639 SWAP7 PUSH1 0x1 SWAP5 LT PUSH2 0xB05 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0xB SSTORE PUSH2 0xA81 JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xAF8 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0xC0 PUSH1 0xA0 PUSH2 0xB76 PUSH2 0xB56 DUP6 MLOAD DUP5 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x1F NOT DUP7 DUP4 SUB ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x2CF JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 DUP4 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x365 PUSH1 0xA0 PUSH1 0x4 CALLDATALOAD PUSH1 0x40 SWAP2 DUP3 SWAP2 DUP3 MLOAD PUSH2 0xBC4 DUP2 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP2 DUP5 PUSH1 0x20 DUP2 SWAP5 ADD MSTORE PUSH1 0x60 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xBF3 PUSH2 0x8E8 DUP3 PUSH2 0x1E96 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x4 DUP3 MLOAD SWAP4 PUSH2 0xC0C DUP6 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0xD7B JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xC2D PUSH1 0x2 DUP3 ADD PUSH2 0xD7B JUMP JUMPDEST DUP5 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xB36 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC86 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F46 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xCBF JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xCA9 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xB SLOAD SWAP2 PUSH2 0xCDD DUP4 PUSH2 0xC8F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD57 JUMPI POP PUSH1 0x1 EQ PUSH2 0xD08 JUMPI JUMPDEST POP POP PUSH2 0x832 SWAP3 POP SUB DUP4 PUSH2 0x804 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xD3F JUMPI POP PUSH2 0x832 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xCFA JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xD24 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x832 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xCFA JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0xD8E DUP2 PUSH2 0xC8F JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xDFC JUMPI POP PUSH1 0x1 EQ PUSH2 0xDBD JUMPI JUMPDEST POP POP POP PUSH2 0x832 SWAP3 POP SUB DUP4 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0xDE4 JUMPI POP POP PUSH2 0x832 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0xDAE JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x832 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0xDAE JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0xE82 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xE4B DUP2 PUSH2 0xD7B JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0xE95 PUSH2 0xE62 PUSH1 0x2 DUP6 ADD PUSH2 0xD7B JUMP JUMPDEST SWAP2 PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xC0 DUP10 MSTORE PUSH1 0xC0 DUP10 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x2CF JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x365 PUSH2 0xED4 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH2 0xF0B PUSH2 0xF06 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EE JUMPI PUSH2 0xF2D PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0xFB3 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x239 JUMPI PUSH2 0xFD4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x886 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x239 JUMPI PUSH2 0xFF1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x886 JUMP JUMPDEST SWAP2 PUSH1 0x2 PUSH1 0xA SLOAD EQ PUSH2 0x1155 JUMPI PUSH32 0x635EC4F27E96D361299E978A3DC7B7A7FD0B1293B1787B48D0B2B52C72B8B8D5 PUSH2 0x111F SWAP4 PUSH2 0x365 SWAP6 PUSH1 0x2 PUSH1 0xA SSTORE PUSH2 0x1058 PUSH2 0x1053 PUSH2 0x104C CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 PUSH2 0x112D SWAP1 PUSH2 0x1072 DUP7 ISZERO ISZERO PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x107E DUP2 MLOAD ISZERO ISZERO PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x32 DUP4 LT ISZERO DUP1 PUSH2 0x114A JUMPI JUMPDEST PUSH2 0x1092 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x10A5 PUSH2 0x109E DUP3 PUSH2 0x15C1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP8 DUP9 SWAP8 PUSH2 0x10FC PUSH2 0x10B6 PUSH2 0x825 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP9 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x10F7 DUP12 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C2F JUMP JUMPDEST DUP9 PUSH2 0x1106 DUP5 PUSH2 0x15C1 JUMP JUMPDEST SSTORE PUSH2 0x111A PUSH2 0x1115 PUSH1 0xF SLOAD PUSH2 0x1805 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 PUSH2 0x1D7A JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x113A PUSH1 0x1 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST POP PUSH1 0x64 DUP4 GT ISZERO PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x118B DUP3 PUSH2 0xC8F JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3C1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x11B7 JUMPI PUSH2 0x365 DUP7 PUSH2 0x359 DUP2 DUP9 SUB DUP3 PUSH2 0x804 JUMP JUMPDEST SWAP4 POP PUSH1 0x3 DUP5 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x11FC JUMPI POP POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x359 DUP3 PUSH2 0x365 CODESIZE PUSH2 0x349 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP7 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x239 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x239 JUMPI SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH2 0x124C CALLDATASIZE PUSH2 0x120F JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x128B DUP3 PUSH2 0x127A DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH2 0x1303 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x132E PUSH2 0x444 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 PUSH2 0x1364 PUSH2 0x135F CALLDATASIZE PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x15C1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x1381 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x1389 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x239 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x239 JUMPI PUSH2 0x13BD PUSH2 0x594 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x84F JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1DC5 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x365 PUSH2 0xED4 PUSH1 0x4 CALLDATALOAD PUSH2 0x1E08 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1455 PUSH2 0x1424 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x142C PUSH2 0x45A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH2 0x146F CALLDATASIZE PUSH2 0x120F JUMP JUMPDEST SWAP1 PUSH2 0x1478 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x14DE JUMPI PUSH1 0x40 PUSH32 0xAA0C2B5EA5C9F3FCC4C06F9E39F6AFDBADC432E7617F393E5F17F31412D3CA5 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x14CE DUP2 DUP4 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206D696E7465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x1535 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x153D PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1591 JUMPI PUSH1 0x9 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x9 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15BD PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x2AC JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x15DA SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 ADD PUSH1 0xD DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x15F3 DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 DUP3 DUP2 AND DUP6 SWAP1 SUB PUSH2 0x1792 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1637 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x174B JUMPI JUMPDEST PUSH2 0x1646 DUP7 DUP9 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x1741 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH2 0x16B4 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP2 AND ISZERO PUSH2 0x16F7 JUMPI JUMPDEST POP AND DUP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x16F2 JUMPI JUMP JUMPDEST PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x170F DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x171C JUMPI JUMPDEST POP PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x1716 JUMPI PUSH2 0x1739 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1788 PUSH2 0x1633 PUSH2 0x104C CALLER PUSH2 0x1771 DUP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x163C JUMPI PUSH2 0x1F13 JUMP JUMPDEST PUSH2 0x1F03 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x5CD JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7B8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17DD DUP3 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x17EA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x804 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x17FB PUSH1 0x1F NOT SWAP2 PUSH2 0x17BC JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5CD JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 DUP2 PUSH1 0x1 GT PUSH2 0x5CD JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5CD JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1844 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1867 DUP3 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1874 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x18C7 PUSH1 0x20 SWAP2 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18D8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1922 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1917 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x190B JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1902 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x193A JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1978 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x196D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1961 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1958 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7B8 JUMPI PUSH2 0x19A9 DUP2 PUSH2 0x19A3 DUP5 SLOAD PUSH2 0xC8F JUMP JUMPDEST DUP5 PUSH2 0x192C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x19EC JUMPI POP DUP2 SWAP1 PUSH2 0x19DD SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x19E1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x1A02 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x1A3F JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1A26 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 PUSH2 0x18C7 SWAP1 PUSH2 0x1A72 PUSH1 0x40 SWAP4 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1AA9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1AC1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B06 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B52 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x92DCECC2D8D2C84092A08CA640D0C2E6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B92 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E666964656E63652073636F72650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BDE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E465420616C72656164792065786973747320666F72207468697320636F6E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x195B9D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7B8 JUMPI PUSH2 0x1C52 DUP2 PUSH2 0x19A3 DUP5 SLOAD PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1CFE JUMPI POP PUSH2 0x1CE4 SWAP3 PUSH2 0x1C90 DUP4 PUSH1 0xA0 SWAP5 PUSH1 0x4 SWAP5 PUSH2 0x832 SWAP10 SWAP11 PUSH1 0x0 SWAP3 PUSH2 0x19E1 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x1CAE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x2 DUP4 ADD PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP3 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP7 PUSH2 0x1D14 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP3 LT PUSH2 0x1D62 JUMPI POP POP DUP4 PUSH1 0x4 SWAP4 PUSH2 0x1CE4 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0xA0 SWAP8 PUSH2 0x832 SWAP12 SWAP13 LT PUSH2 0x1D49 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x1C93 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1D3C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x60 SWAP3 PUSH2 0xE82 PUSH2 0x18C7 SWAP4 PUSH1 0x80 DUP10 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x1E96 JUMP JUMPDEST ISZERO PUSH2 0x1DBF JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1DD3 DUP3 DUP3 DUP7 PUSH2 0x15E7 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x1DE0 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1DE9 SWAP4 PUSH2 0x2199 JUMP JUMPDEST ISZERO PUSH2 0x1DF7 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E14 PUSH2 0x8E8 DUP3 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E33 DUP5 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1E3C DUP2 PUSH2 0xD7B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1E54 PUSH1 0x2 DUP3 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO DUP1 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1E8C JUMPI PUSH2 0x305 SWAP2 PUSH2 0x2494 JUMP JUMPDEST POP PUSH2 0x305 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 SWAP1 DUP4 DUP2 DUP4 GT ISZERO PUSH2 0x1EAB JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 LT PUSH2 0x1EB9 JUMPI POP POP POP JUMP JUMPDEST DUP3 SWAP4 SWAP5 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 SWAP4 JUMPDEST PUSH2 0x1ED6 JUMPI JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP4 POP SWAP1 SWAP2 DUP4 PUSH2 0x1EFE JUMPI DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 NOT ADD SWAP2 SWAP1 DUP2 PUSH2 0x1EC4 JUMP JUMPDEST PUSH2 0x1EC9 JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 DUP1 PUSH1 0x1 GT PUSH2 0x1F35 JUMPI PUSH2 0x1F65 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP2 DUP3 ISZERO PUSH2 0x1F82 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND ISZERO PUSH2 0x305 JUMPI DUP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0x1F35 JUMPI SWAP1 DUP2 JUMPDEST ISZERO PUSH2 0x1F6E JUMPI SWAP1 SWAP2 POP PUSH1 0x0 NOT ADD PUSH2 0x1FAF DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP2 DUP3 ISZERO PUSH2 0x1FC7 JUMPI POP POP PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x1F35 JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2060 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x1FED JUMPI POP POP POP JUMP JUMPDEST DUP1 DUP4 ADD DUP1 DUP5 GT PUSH2 0x5CD JUMPI DUP3 MSTORE PUSH1 0x20 PUSH1 0xC DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x40 PUSH1 0xFF DUP4 DUP3 DUP8 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x201F JUMPI POP POP POP PUSH1 0x1 ADD PUSH2 0x1FE0 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E73666572207265766F6B6564204E46540000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2077 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH2 0x20BD DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 ADD SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2146 JUMPI PUSH1 0x1 DUP4 DUP2 ADD SWAP4 SWAP2 SWAP1 DUP1 DUP1 JUMPDEST PUSH2 0x2101 JUMPI JUMPDEST POP POP POP POP SSTORE JUMP JUMPDEST ISZERO PUSH2 0x2135 JUMPI JUMPDEST DUP4 DUP2 DUP5 DUP5 DUP8 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH2 0x20F5 JUMP JUMPDEST DUP1 SWAP3 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x2107 JUMPI DUP1 PUSH2 0x20FA JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x239 JUMPI MLOAD PUSH2 0x305 DUP2 PUSH2 0x227 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2194 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x217A DUP3 PUSH2 0x834 JUMP JUMPDEST SWAP2 PUSH2 0x2188 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x804 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x21E2 SWAP4 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 DUP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP13 DUP14 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x221F JUMPI JUMPDEST POP PUSH2 0x2211 JUMPI PUSH2 0x21FD PUSH2 0x2169 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x220C JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x2242 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2249 JUMPI JUMPDEST PUSH2 0x223A DUP2 DUP4 PUSH2 0x804 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2154 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x21F0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2230 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x2260 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22BA JUMPI POP PUSH1 0x1 EQ PUSH2 0x227B JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x22A7 JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2299 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST PUSH2 0x305 PUSH1 0x84 PUSH2 0x2452 PUSH2 0x22E1 PUSH2 0x2488 SWAP5 PUSH2 0x285C JUMP JUMPDEST PUSH2 0x2430 PUSH2 0x2422 PUSH2 0x23E4 PUSH2 0x23C9 PUSH2 0x23AF PUSH2 0x23AA PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 PUSH32 0x7B226E616D65223A20225265766F6B6564204365727469666963617465202300 PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0x2333 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x3F DUP14 ADD SWAP2 ADD PUSH2 0x2AC JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A2022546869732061757468656E7469 PUSH1 0x3F SWAP2 DUP11 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x6369747920636572746966696361746520686173206265656E207265766F6B65 PUSH1 0x5F DUP3 ADD MSTORE PUSH5 0x321711161 PUSH1 0xDD SHL PUSH1 0x7F DUP3 ADD MSTORE PUSH10 0x1134B6B0B3B2911D1011 PUSH1 0xB1 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0xA ADD SWAP1 JUMP JUMPDEST PUSH2 0x2250 JUMP JUMPDEST PUSH14 0x3932BB37B5B2B21738373391161 PUSH1 0x95 SHL DUP2 MSTORE PUSH1 0xE ADD SWAP1 JUMP JUMPDEST PUSH15 0x2261747472696275746573223A205B PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0xF ADD SWAP1 JUMP JUMPDEST PUSH32 0x7B2274726169745F74797065223A2022537461747573222C202276616C756522 DUP2 MSTORE PUSH12 0x3A20225265766F6B6564227D PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH2 0x5D7D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 PUSH2 0x2444 PUSH1 0x1F NOT SWAP4 DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x244C PUSH2 0x29A0 JUMP JUMPDEST SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 PUSH1 0x3D DUP4 ADD SWAP1 PUSH2 0x15AA JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x249D SWAP1 PUSH2 0x285C JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x24AE SWAP1 PUSH2 0x285C JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x24C2 SWAP1 PUSH2 0x285C JUMP JUMPDEST SWAP2 MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x20 DUP8 ADD PUSH2 0x250A SWAP1 PUSH1 0x24 SWAP1 PUSH32 0x7B226E616D65223A202241757468656E74696369747920436572746966696361 DUP2 MSTORE PUSH4 0x74652023 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x2513 SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A202254686973204E46542063657274 DUP2 MSTORE PUSH32 0x6966696573207468652061757468656E746963697479206F6620646967697461 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C20636F6E74656E7420766572696669656420627920414920616E616C797369 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x399711161 PUSH1 0xDD SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x65 ADD PUSH10 0x1134B6B0B3B2911D1011 PUSH1 0xB1 SHL DUP2 MSTORE PUSH1 0xA ADD PUSH2 0x25AF SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH18 0x31B2B93A34B334B1B0BA329738373391161 PUSH1 0x75 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH32 0x2265787465726E616C5F75726C223A202268747470733A2F2F67617465776179 DUP2 MSTORE PUSH19 0x2E70696E6174612E636C6F75642F697066732F PUSH1 0x68 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x33 ADD PUSH2 0x2615 SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH3 0x11161 PUSH1 0xED SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH15 0x2261747472696275746573223A205B PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0xF ADD PUSH32 0x7B2274726169745F74797065223A2022436F6E666964656E63652053636F7265 DUP2 MSTORE PUSH12 0x111610113B30B63AB2911D1 PUSH1 0xA5 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD PUSH2 0x267D SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH3 0x3E961 PUSH1 0xED SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH32 0x7B2274726169745F74797065223A20224149204D6F64656C222C202276616C75 DUP2 MSTORE PUSH5 0x32911D1011 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH2 0x26C6 SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH4 0x113E961 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH32 0x7B2274726169745F74797065223A2022566572696669636174696F6E20446174 DUP2 MSTORE PUSH13 0x32911610113B30B63AB2911D1 PUSH1 0x9D SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2D ADD PUSH2 0x2718 SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH3 0x3E961 PUSH1 0xED SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH32 0x7B2274726169745F74797065223A2022537461747573222C202276616C756522 DUP2 MSTORE PUSH32 0x3A202256657269666965642041757468656E746963227D2C2000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x39 ADD PUSH32 0x7B2274726169745F74797065223A2022495046532048617368222C202276616C DUP2 MSTORE PUSH6 0x3AB2911D1011 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD PUSH2 0x27AE SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH2 0x5D7D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SUB SWAP1 PUSH1 0x1F NOT SWAP2 DUP3 DUP2 ADD DUP3 MSTORE PUSH2 0x27D9 SWAP1 DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x27E1 PUSH2 0x29A0 JUMP JUMPDEST PUSH2 0x27EA SWAP2 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x3D DUP3 ADD PUSH2 0x2824 SWAP2 PUSH2 0x15AA JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x305 SWAP1 DUP3 PUSH2 0x804 JUMP JUMPDEST SWAP1 PUSH2 0x283E DUP3 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x284B PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x804 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x17FB PUSH1 0x1F NOT SWAP2 PUSH2 0x834 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x2992 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x2983 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x2974 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x2965 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x2956 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x2946 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x293C JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x28F4 PUSH1 0x1 DUP8 ADD PUSH2 0x2834 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x2906 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x2937 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x28FA JUMP JUMPDEST PUSH2 0x28FF JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x28B0 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x2885 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7B8 JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SHL SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND SUB PUSH2 0x5CD JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD ISZERO PUSH2 0x2AFE JUMPI PUSH2 0x2A53 PUSH2 0x2A4E PUSH2 0x2A49 PUSH2 0x2A42 DUP6 MLOAD PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x3 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x2834 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP2 DUP3 MLOAD DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MLOAD SWAP4 PUSH1 0x0 DUP5 MSTORE JUMPDEST DUP3 DUP3 LT PUSH2 0x2AAC JUMPI POP POP POP MSTORE MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0x2A99 JUMPI PUSH1 0x2 EQ PUSH2 0x2A8E JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP6 PUSH1 0x4 SWAP1 PUSH1 0x3 DUP1 SWAP5 ADD SWAP4 DUP5 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP6 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP7 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD PUSH1 0x2 DUP7 ADD MSTORE8 AND DUP6 ADD ADD MLOAD SWAP1 DUP3 ADD MSTORE8 ADD SWAP6 SWAP2 SWAP1 PUSH2 0x2A6B JUMP JUMPDEST POP POP PUSH2 0x305 PUSH2 0x185A JUMP INVALID ADD PUSH22 0xB7A638427703F0DBE7BB9BBF987A2551717B34E79F33 0xB5 0xB1 STOP DUP14 0x1F LOG0 SAR 0xB9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 PUSH14 0xAA353760FC0B2C9D8EA5EC551475 0xE8 0xEA 0x27 SLT REVERT SWAP9 LOG0 DIV 0xDB 0xC7 RETURNDATASIZE 0xE5 PUSH25 0x1538B164736F6C634300081900330000000000000000000000 ","sourceMap":"489:11852:17:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;489:11852:17;5327:13:19;-1:-1:-1;489:11852:17;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;:::o;:::-;-1:-1:-1;489:11852:17;5350:17:19;-1:-1:-1;489:11852:17;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;:::o;:::-;-1:-1:-1;489:11852:17;2187:24;-1:-1:-1;489:11852:17;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;5350:17:19;489:11852:17;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17:19;489:11852:17;:::o;:::-;;;;-1:-1:-1;489:11852:17;;;;;5350:17:19;489:11852:17;;-1:-1:-1;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17:19;489:11852:17;:::o;:::-;;;;;;;5350:17:19;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;2187:24;489:11852;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:24;489:11852;:::o;:::-;2187:24;489:11852;;-1:-1:-1;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2187:24;489:11852;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1989:229;489:11852;;;-1:-1:-1;;;;;489:11852:17;;;;;;;5327:13:19;489:11852:17;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13:19;489:11852:17;;:::i;:::-;5377:31:19;11036:1:17;489:11852;1857:1:12;;5377:31:19;-1:-1:-1;;;;;489:11852:17;;1273:26:7;1269:95;;1392:12;489:11852:17;1392:12:7;;:::i;:::-;2061:21:12;11036:1:17;2061:21:12;1857:1;;2061:21;489:11852:17;:::i;:::-;1989:229::o;1269:95:7:-;489:11852:17;;-1:-1:-1;;;1322:31:7;;489:11852:17;1322:31:7;;;489:11852:17;;;1322:31:7;489:11852:17;5327:13:19;489:11852:17;;;;-1:-1:-1;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13:19;489:11852:17;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2912:187:7;3004:6;489:11852:17;;-1:-1:-1;;;;;489:11852:17;;;-1:-1:-1;;;;;;489:11852:17;;;;;;;;;;3052:40:7;-1:-1:-1;;3052:40:7;2912:187::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1114,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_12409":{"entryPoint":1092,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":1357,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_addresst_bool":{"entryPoint":4623,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_available_length_string":{"entryPoint":2127,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":8532,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":2182,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string_12424":{"entryPoint":2494,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":1490,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":756,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":5546,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":8784,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_string_string_uint256":{"entryPoint":6743,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":719,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_uint256":{"entryPoint":6320,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_string_uint256_string_uint256":{"entryPoint":7546,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_stringliteral":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0d53":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_0e88":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1e41":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1f33":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_1ffc":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6a79":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_6bc4":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_835b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_936a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_a9d6":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_ab14":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_bcca":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c07b":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_c8eb":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_d31d":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_de5a":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_dee7":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_stringliteral_fadf":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_struct_AuthenticityMetadata":{"entryPoint":2870,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_and_zero_memory_array_array_uint256_dyn":{"entryPoint":6099,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_and_zero_memory_array_string":{"entryPoint":10292,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":2085,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":6234,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":6076,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_string":{"entryPoint":2100,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage_12427":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":6164,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_uint256_12564":{"entryPoint":6178,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":10767,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":6061,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6444,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_12426":{"entryPoint":6348,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":3451,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string_12425":{"entryPoint":3273,"id":null,"parameterSlots":0,"returnSlots":1},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":6530,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce":{"entryPoint":10656,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":684,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_AuthenticityMetadata_to_struct_AuthenticityMetadata":{"entryPoint":7215,"id":null,"parameterSlots":2,"returnSlots":0},"decrement_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_approve":{"entryPoint":1136,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_authorizedMinters":{"entryPoint":4877,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":3816,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_baseURI":{"entryPoint":3768,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getApproved":{"entryPoint":1009,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getStatistics":{"entryPoint":1430,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTokenIdByIPFS":{"entryPoint":4940,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTokenMetadata":{"entryPoint":2971,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getTokensByOwner":{"entryPoint":1550,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":5124,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isValidNFT":{"entryPoint":4837,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintAuthenticityNFT":{"entryPoint":3994,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":776,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":3953,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerOf":{"entryPoint":3168,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":3859,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_revokeNFT":{"entryPoint":2209,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":1853,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom_10251":{"entryPoint":4973,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":4670,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setAuthorizedMinter":{"entryPoint":5217,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setBaseURI":{"entryPoint":2536,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":574,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":4455,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenMetadata":{"entryPoint":3614,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":5063,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalMinted":{"entryPoint":4807,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalRevoked":{"entryPoint":5094,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1318,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":1410,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":5404,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_version":{"entryPoint":1888,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3215,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":8553,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":2052,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_12429":{"entryPoint":1998,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_22023":{"entryPoint":2025,"id":null,"parameterSlots":1,"returnSlots":0},"fun_balanceOf":{"entryPoint":6784,"id":9392,"parameterSlots":1,"returnSlots":1},"fun_beforeTokenTransfers":{"entryPoint":8142,"id":8203,"parameterSlots":2,"returnSlots":0},"fun_buildRevokedTokenURI":{"entryPoint":8909,"id":8044,"parameterSlots":1,"returnSlots":1},"fun_buildTokenURI":{"entryPoint":9364,"id":8000,"parameterSlots":2,"returnSlots":1},"fun_checkContractOnERC721Received":{"entryPoint":8601,"id":10333,"parameterSlots":4,"returnSlots":1},"fun_checkOwner":{"entryPoint":8291,"id":2152,"parameterSlots":0,"returnSlots":0},"fun_encode":{"entryPoint":10791,"id":2309,"parameterSlots":2,"returnSlots":1},"fun_exists":{"entryPoint":7830,"id":9976,"parameterSlots":1,"returnSlots":1},"fun_getApprovedSlotAndAddress":{"entryPoint":null,"id":10019,"parameterSlots":1,"returnSlots":2},"fun_isSenderApprovedOrOwner":{"entryPoint":null,"id":10000,"parameterSlots":3,"returnSlots":1},"fun_isValidNFT":{"entryPoint":7574,"id":8143,"parameterSlots":1,"returnSlots":1},"fun_mint":{"entryPoint":8335,"id":10464,"parameterSlots":1,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":2557,"parameterSlots":0,"returnSlots":0},"fun_packOwnershipData":{"entryPoint":null,"id":9827,"parameterSlots":1,"returnSlots":1},"fun_packedOwnershipOf":{"entryPoint":8006,"id":9761,"parameterSlots":1,"returnSlots":1},"fun_revert":{"entryPoint":7989,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_revert_12465":{"entryPoint":7939,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_revert_12467":{"entryPoint":7955,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_revert_12474":{"entryPoint":7972,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_revert_12540":{"entryPoint":null,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":7621,"id":10251,"parameterSlots":4,"returnSlots":0},"fun_toString":{"entryPoint":10332,"id":2683,"parameterSlots":1,"returnSlots":1},"fun_tokenURI":{"entryPoint":7688,"id":7929,"parameterSlots":1,"returnSlots":1},"fun_transferFrom":{"entryPoint":5607,"id":10192,"parameterSlots":3,"returnSlots":0},"increment_uint256":{"entryPoint":6149,"id":null,"parameterSlots":1,"returnSlots":1},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address_12438":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address_12466":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_bool_of_address_12469":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_AuthenticityMetadata_storage_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_AuthenticityMetadata_storage_of_uint256_12471":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":6192,"id":null,"parameterSlots":2,"returnSlots":1},"packed_hashed_string_uint256_to_string_uint":{"entryPoint":5569,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":6039,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral":{"entryPoint":7127,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_16b9":{"entryPoint":6987,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2ee0":{"entryPoint":6911,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_547b":{"entryPoint":6253,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_5eb0":{"entryPoint":6842,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_c03e":{"entryPoint":7051,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_12422":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_t_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_12423":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":551,"id":null,"parameterSlots":1,"returnSlots":0},"wrapping_div_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461022257806306fdde031461021d578063081812fc14610218578063095ea7b31461021357806318160ddd1461020e57806323b872dd14610209578063372d6b271461020457806340398d67146101ff57806342842e0e146101fa57806354fd4d50146101f5578063558381e7146101f057806355f804b3146101eb57806360316801146101e65780636352211e146101e15780636914db60146101dc5780636c0360eb146101d757806370a08231146101d2578063715018a6146101cd5780638da5cb5b146101c85780639450b3d6146101c357806395d89b41146101be578063a22cb465146101b9578063a2309ff8146101b4578063a2f1c87b146101af578063aa2fe91b146101aa578063b04458ca14610187578063b88d4fde146101a5578063c87b56dd146101a0578063e62ce7ac1461019b578063e985e9c514610196578063ed58bad814610191578063f2fde38b1461018c5763feb449881461018757600080fd5b61134c565b61151c565b611461565b611404565b6113e6565b6113c7565b61136d565b61130d565b6112e5565b6112c7565b61123e565b611167565b610f9a565b610f71565b610f13565b610ee8565b610eb8565b610e1e565b610c60565b610b9b565b6109e8565b6108a1565b610760565b61073d565b61060e565b610596565b610582565b610526565b610470565b6103f1565b610308565b61023e565b6001600160e01b031981160361023957565b600080fd5b3461023957602036600319011261023957602060043561025d81610227565b63ffffffff60e01b166301ffc9a760e01b811490811561029b575b811561028a575b506040519015158152f35b635b5e139f60e01b1490503861027f565b6380ac58cd60e01b81149150610278565b60005b8381106102bf5750506000910152565b81810151838201526020016102af565b906020916102e8815180928185528580860191016102ac565b601f01601f1916010190565b9060206103059281815201906102cf565b90565b34610239576000806003193601126103ee5760405190806002549061032c82610c8f565b808552916020916001918281169081156103c15750600114610369575b6103658661035981880382610804565b604051918291826102f4565b0390f35b9350600284527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8385106103ae575050505081016020016103598261036538610349565b8054868601840152938201938101610391565b90508695506103659693506020925061035994915060ff191682840152151560051b820101929338610349565b80fd5b346102395760203660031901126102395760043561040e81611e96565b15610433576000526006602052602060018060a01b0360406000205416604051908152f35b6333d1c03960e21b60005260046000fd5b600435906001600160a01b038216820361023957565b602435906001600160a01b038216820361023957565b604036600319011261023957610484610444565b6024356001600160a01b038061049983611f46565b16908133036104f4575b600083815260066020526040812080546001600160a01b0319166001600160a01b0387161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b600082815260076020908152604080832033845290915290205460ff166104a3576367d9dca160e11b60005260046000fd5b34610239576000366003190112610239576000546001546040519103600019018152602090f35b6060906003190112610239576001600160a01b0390600435828116810361023957916024359081168103610239579060443590565b61059461058e3661054d565b916115e7565b005b3461023957600036600319011261023957600f54601054908181038181116105cd5760609260405192835260208301526040820152f35b611797565b602090602060408183019282815285518094520193019160005b8281106105fa575050505090565b8351855293810193928101926001016105ec565b3461023957602036600319011261023957610627610444565b6001600160a01b0381169081156107005761064190611a80565b61064a816117d3565b9060006106586000546117ad565b6001929083805b610672575b6040518061036588826105d2565b61067b82611814565b8110806106f7575b156106f25761069181611e96565b806106cc575b6106ab575b6106a590611805565b8461065f565b926106c481856106be6106a5948a611830565b52611805565b93905061069c565b50866106ec6106e06106e06106e085611f46565b6001600160a01b031690565b14610697565b610664565b50828410610683565b60405162461bcd60e51b8152602060048201526015602482015274496e76616c6964206f776e6572206164647265737360581b6044820152606490fd5b6105946107493661054d565b9060405192610757846107e9565b60008452611dc5565b346102395760003660031901126102395760405160408101908082106001600160401b038311176107b8576103659160405260058152640312e302e360dc1b60208201526040519182916020835260208301906102cf565b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b038211176107b857604052565b602081019081106001600160401b038211176107b857604052565b90601f801991011681019081106001600160401b038211176107b857604052565b60405190610832826107ce565b565b6001600160401b0381116107b857601f01601f191660200190565b92919261085b82610834565b916108696040519384610804565b829481845281830111610239578281602093846000960137010152565b9080601f83011215610239578160206103059335910161084f565b34610239576040366003190112610239576004356024356001600160401b038111610239576108d4903690600401610886565b6108dc612063565b6108ed6108e883611e96565b61186d565b81600052600c60205260ff60046040600020015460a01c166109815761097c7fd0571d484577e1a5e8a246e15dccfc8d2acb13e80e0320b06dae36de6d79ed719161095b600461094786600052600c602052604060002090565b01805460ff60a01b1916600160a01b179055565b61096e610969601054611805565b601055565b6040519182914290836118b0565b0390a2005b60405162461bcd60e51b8152602060048201526015602482015274151bdad95b88185b1c9958591e481c995d9bdad959605a1b6044820152606490fd5b602060031982011261023957600435906001600160401b0382116102395761030591600401610886565b34610239576109f6366109be565b6109fe612063565b610a06610cc9565b8151916001600160401b0383116107b857610a2b83610a26600b54610c8f565b6118cc565b602080601f8511600114610aa25750837fbf854ac1b3492efdc6a78402a969f9b4aa9315253853a9fe2ab02ff8f2d5563994610a7d92600091610a97575b508160011b916000199060031b1c19161790565b600b555b610a92604051928392429184611a57565b0390a1005b905083015138610a69565b600b60005290601f198516600080516020612b09833981519152926000905b828210610b1e5750509185917fbf854ac1b3492efdc6a78402a969f9b4aa9315253853a9fe2ab02ff8f2d556399660019410610b05575b5050811b01600b55610a81565b84015160001960f88460031b161c191690553880610af8565b80600185968294968901518155019501930190610ac1565b6020815260c060a0610b76610b56855184602087015260e08601906102cf565b602086015160408601526040860151601f198683030160608701526102cf565b9360608101516080850152600180831b03608082015116828501520151151591015290565b346102395760203660031901126102395761036560a060043560409182918251610bc4816107ce565b6060815260009281846020819401526060868201528260608201528260808201520152610bf36108e882611e96565b8152600c602052209060ff6004825193610c0c856107ce565b610c1581610d7b565b855260018101546020860152610c2d60028201610d7b565b8486015260038101546060860152015460018060a01b038116608085015260a01c16151560a08301525191829182610b36565b346102395760203660031901126102395760206001600160a01b03610c86600435611f46565b16604051908152f35b90600182811c92168015610cbf575b6020831014610ca957565b634e487b7160e01b600052602260045260246000fd5b91607f1691610c9e565b60405190600082600b5491610cdd83610c8f565b80835292602090600190818116908115610d575750600114610d08575b505061083292500383610804565b915092600b600052600080516020612b09833981519152936000925b828410610d3f57506108329450505081016020013880610cfa565b85548885018301529485019487945092810192610d24565b9150506020925061083294915060ff191682840152151560051b8201013880610cfa565b90604051918260008254610d8e81610c8f565b90818452602094600191600181169081600014610dfc5750600114610dbd575b50505061083292500383610804565b600090815285812095935091905b818310610de45750506108329350820101388080610dae565b85548884018501529485019487945091830191610dcb565b9250505061083294925060ff191682840152151560051b820101388080610dae565b3461023957602036600319011261023957600435600052600c602052610e826040600020610e4b81610d7b565b9060ff6001820154610e95610e6260028501610d7b565b91600460038601549501549260405197889760c0895260c08901906102cf565b91602088015286820360408801526102cf565b92606085015260018060a01b038116608085015260a01c16151560a08301520390f35b3461023957600036600319011261023957610365610ed4610cc9565b6040519182916020835260208301906102cf565b34610239576020366003190112610239576020610f0b610f06610444565b611a80565b604051908152f35b34610239576000806003193601126103ee57610f2d612063565b600980546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b34610239576000366003190112610239576009546040516001600160a01b039091168152602090f35b3461023957608036600319011261023957610fb3610444565b6001600160401b039060243582811161023957610fd4903690600401610886565b906044359260643590811161023957610ff1903690600401610886565b916002600a5414611155577f635ec4f27e96d361299e978a3dc7b7a7fd0b1293b1787b48d0b2b52c72b8b8d561111f93610365956002600a5561105861105361104c3360018060a01b0316600052600e602052604060002090565b5460ff1690565b611aba565b6001600160a01b0385169361112d90611072861515611aff565b61107e81511515611b4b565b60328310158061114a575b61109290611b8b565b6110a561109e826115c1565b5415611bd7565b6000549788976110fc6110b6610825565b84815260208101879052604081018890524260608201526001600160a01b0383166080820152600060a08201526110f78b600052600c602052604060002090565b611c2f565b88611106846115c1565b5561111a611115600f54611805565b600f55565b61208f565b604051938493429285611d7a565b0390a361113a6001600a55565b6040519081529081906020820190565b506064831115611089565b604051633ee5aeb560e01b8152600490fd5b34610239576000806003193601126103ee5760405190806003549061118b82610c8f565b808552916020916001918281169081156103c157506001146111b7576103658661035981880382610804565b9350600384527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8385106111fc575050505081016020016103598261036538610349565b80548686018401529382019381016111df565b6040906003190112610239576004356001600160a01b0381168103610239579060243580151581036102395790565b346102395761124c3661120f565b9033600052600760205261128b8261127a8360406000209060018060a01b0316600052602052604060002090565b9060ff801983541691151516179055565b60405191151582526001600160a01b03169033907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190602090a3005b34610239576000366003190112610239576020600f54604051908152f35b34610239576020366003190112610239576020611303600435611d96565b6040519015158152f35b34610239576020366003190112610239576001600160a01b0361132e610444565b16600052600e602052602060ff604060002054166040519015158152f35b3461023957602061136461135f366109be565b6115c1565b54604051908152f35b608036600319011261023957611381610444565b61138961045a565b606435916001600160401b0383116102395736602384011215610239576113bd61059493369060248160040135910161084f565b9160443591611dc5565b3461023957602036600319011261023957610365610ed4600435611e08565b34610239576000366003190112610239576020601054604051908152f35b3461023957604036600319011261023957602060ff611455611424610444565b61142c61045a565b6001600160a01b0391821660009081526007865260408082209290931681526020919091522090565b54166040519015158152f35b346102395761146f3661120f565b90611478612063565b6001600160a01b03169081156114de5760407f0aa0c2b5ea5c9f3fcc4c06f9e39f6afdbadc432e7617f393e5f17f31412d3ca59183600052600e6020526114ce81836000209060ff801983541691151516179055565b81519015158152426020820152a2005b60405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206d696e746572206164647265737360501b6044820152606490fd5b3461023957602036600319011261023957611535610444565b61153d612063565b6001600160a01b0390811690811561159157600954826bffffffffffffffffffffffff60a01b821617600955167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b604051631e4fbdf760e01b815260006004820152602490fd5b906115bd602092828151948592016102ac565b0190565b60206115da9181604051938285809451938492016102ac565b8101600d81520301902090565b9190916115f382611f46565b6001600160a01b03918216939082811685900361179257600084815260066020526040902080546116376001600160a01b03881633908114908314171590565b1590565b61174b575b6116468688611fce565b611741575b506001600160a01b038516600090815260056020526040902080546000190190556001600160a01b0382166000908152600560205260409020805460010190556001600160a01b0382164260a01b17600160e11b176116b4856000526004602052604060002090565b55600160e11b8116156116f7575b501680927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4156116f257565b611f24565b6001840161170f816000526004602052604060002090565b541561171c575b506116c2565b600054811461171657611739906000526004602052604060002090565b553880611716565b600090553861164b565b61178861163361104c336117718b60018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b1561163c57611f13565b611f03565b634e487b7160e01b600052601160045260246000fd5b6000198101919082116105cd57565b6001600160401b0381116107b85760051b60200190565b906117dd826117bc565b6117ea6040519182610804565b82815280926117fb601f19916117bc565b0190602036910137565b60001981146105cd5760010190565b60010190816001116105cd57565b90600282018092116105cd57565b80518210156118445760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b60405190611867826107e9565b60008252565b1561187457565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b9291906118c76020916040865260408601906102cf565b930152565b601f81116118d8575050565b600090600b600052600080516020612b09833981519152906020601f850160051c83019410611922575b601f0160051c01915b82811061191757505050565b81815560010161190b565b9092508290611902565b90601f811161193a57505050565b6000916000526020600020906020601f850160051c83019410611978575b601f0160051c01915b82811061196d57505050565b818155600101611961565b9092508290611958565b91909182516001600160401b0381116107b8576119a9816119a38454610c8f565b8461192c565b602080601f83116001146119ec575081906119dd9394956000926119e1575b50508160011b916000199060031b1c19161790565b9055565b0151905038806119c8565b90601f19831695611a0285600052602060002090565b926000905b888210611a3f57505083600195969710611a26575b505050811b019055565b015160001960f88460031b161c19169055388080611a1c565b80600185968294968601518155019501930190611a07565b9392916118c790611a726040936060885260608801906102cf565b9086820360208801526102cf565b6001600160a01b03168015611aa95760005260056020526001600160401b036040600020541690565b6323d3ad8160e21b60005260046000fd5b15611ac157565b60405162461bcd60e51b8152602060048201526016602482015275139bdd08185d5d1a1bdc9a5e9959081d1bc81b5a5b9d60521b6044820152606490fd5b15611b0657565b60405162461bcd60e51b815260206004820152601b60248201527f43616e6e6f74206d696e7420746f207a65726f206164647265737300000000006044820152606490fd5b15611b5257565b60405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c84092a08ca640d0c2e6d607b1b6044820152606490fd5b15611b9257565b60405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e666964656e63652073636f726500000000000000006044820152606490fd5b15611bde57565b60405162461bcd60e51b815260206004820152602360248201527f4e465420616c72656164792065786973747320666f72207468697320636f6e74604482015262195b9d60ea1b6064820152608490fd5b919080519283516001600160401b0381116107b857611c52816119a38454610c8f565b602080601f8311600114611cfe5750611ce492611c908360a094600494610832999a6000926119e15750508160011b916000199060031b1c19161790565b81555b60208501516001820155611cae604086015160028301611982565b606085015160038201556080850151910180546001600160a01b0319166001600160a01b03909216919091178155920151151590565b815460ff60a01b191690151560a01b60ff60a01b16179055565b90601f19831696611d1485600052602060002090565b926000905b898210611d6257505083600493611ce4969360019360a0976108329b9c10611d49575b505050811b018155611c93565b015160001960f88460031b161c19169055388080611d3c565b80600185968294968601518155019501930190611d19565b94939291606092610e826118c7936080895260808901906102cf565b611d9f81611e96565b15611dbf57600052600c60205260ff60046040600020015460a01c161590565b50600090565b929190611dd38282866115e7565b803b611de0575b50505050565b611de993612199565b15611df75738808080611dda565b6368d2bf6b60e11b60005260046000fd5b611e146108e882611e96565b80600052600c602052604060002060ff600460405192611e33846107ce565b611e3c81610d7b565b845260018101546020850152611e5460028201610d7b565b604085015260038101546060850152015460018060a01b038116608084015260a01c1615158060a0830152611e8c5761030591612494565b50610305906122cd565b600091906001908381831115611eab57505050565b6000548210611eb957505050565b829394506000929192935b611ed6575b505050600160e01b161590565b828152600460205260408120549350909183611efe5780156105cd5760001901919081611ec4565b611ec9565b62a1148160e81b60005260046000fd5b632ce44b5f60e11b60005260046000fd5b633a954ecd60e21b60005260046000fd5b636f96cda160e11b60005260046000fd5b60019080600111611f3557611f65816000526004602052604060002090565b54918215611f82575b5050600160e01b8116156103055780611f35565b600054821015611f355790815b15611f6e5790915060001901611faf816000526004602052604060002090565b54918215611fc7575050600160e01b8116611f355790565b9081611f8f565b6001600160a01b031615612060576000805b60018110611fed57505050565b8083018084116105cd5782526020600c8152600490604060ff83828720015460a01c1661201f57505050600101611fe0565b5162461bcd60e51b815291820152601b60248201527f43616e6e6f74207472616e73666572207265766f6b6564204e46540000000000604482015260649150fd5b50565b6009546001600160a01b0316330361207757565b60405163118cdaa760e01b8152336004820152602490fd5b60008054916001600160a01b0381164260a01b17600160e11b176120bd846000526004602052604060002090565b556001600160a01b03166000818152600560205260409020805468010000000000000001019055801561214657600183810193919080805b612101575b5050505055565b15612135575b83818484877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46120f5565b8092019184830361210757806120fa565b622e076360e81b8252600482fd5b90816020910312610239575161030581610227565b3d15612194573d9061217a82610834565b916121886040519384610804565b82523d6000602084013e565b606090565b926020916121e293600060018060a01b0360405180978196829584630a85bd0160e11b9c8d865233600487015216602485015260448401526080606484015260848301906102cf565b0393165af16000918161221f575b50612211576121fd612169565b80511561220c57805190602001fd5b611df7565b6001600160e01b0319161490565b61224291925060203d602011612249575b61223a8183610804565b810190612154565b90386121f0565b503d612230565b600b546000929161226082610c8f565b916001908181169081156122ba575060011461227b57505050565b9091929350600b600052600080516020612b09833981519152906000915b8483106122a7575050500190565b8181602092548587015201920191612299565b60ff191683525050811515909102019150565b61030560846124526122e16124889461285c565b6124306124226123e46123c96123af6123aa6040519889977f7b226e616d65223a20225265766f6b656420436572746966696361746520230060208a0152612333815180926020603f8d0191016102ac565b7f222c20226465736372697074696f6e223a2022546869732061757468656e7469603f918a01918201527f6369747920636572746966696361746520686173206265656e207265766f6b65605f82015264032171116160dd1b607f820152691134b6b0b3b2911d101160b11b9101908152600a0190565b612250565b6d03932bb37b5b2b2173837339116160951b8152600e0190565b6e2261747472696275746573223a205b60881b8152600f0190565b7f7b2274726169745f74797065223a2022537461747573222c202276616c75652281526b3a20225265766f6b6564227d60a01b6020820152602c0190565b615d7d60f01b815260020190565b0391612444601f1993848101835282610804565b61244c6129a0565b90612a27565b6040517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c0000006020820152938491603d8301906115aa565b03908101835282610804565b61249d9061285c565b81519160208101516124ae9061285c565b90604081015160608201516124c29061285c565b9151926040519586956020870161250a906024907f7b226e616d65223a202241757468656e746963697479204365727469666963618152637465202360e01b60208201520190565b612513916115aa565b7f222c20226465736372697074696f6e223a202254686973204e4654206365727481527f6966696573207468652061757468656e746963697479206f662064696769746160208201527f6c20636f6e74656e7420766572696669656420627920414920616e616c797369604082015264039971116160dd1b6060820152606501691134b6b0b3b2911d101160b11b8152600a016125af90612250565b71031b2b93a34b334b1b0ba32973837339116160751b81526012017f2265787465726e616c5f75726c223a202268747470733a2f2f676174657761798152722e70696e6174612e636c6f75642f697066732f60681b6020820152603301612615916115aa565b6201116160ed1b81526003016e2261747472696275746573223a205b60881b8152600f017f7b2274726169745f74797065223a2022436f6e666964656e63652053636f726581526b0111610113b30b63ab2911d160a51b6020820152602c0161267d916115aa565b6203e96160ed1b81526003017f7b2274726169745f74797065223a20224149204d6f64656c222c202276616c7581526432911d101160d91b60208201526025016126c6916115aa565b630113e96160e51b81526004017f7b2274726169745f74797065223a2022566572696669636174696f6e2044617481526c032911610113b30b63ab2911d1609d1b6020820152602d01612718916115aa565b6203e96160ed1b81526003017f7b2274726169745f74797065223a2022537461747573222c202276616c75652281527f3a202256657269666965642041757468656e746963227d2c200000000000000060208201526039017f7b2274726169745f74797065223a2022495046532048617368222c202276616c8152653ab2911d101160d11b60208201526026016127ae916115aa565b61227d60f01b8152600201615d7d60f01b81526002010390601f199182810182526127d99082610804565b6127e16129a0565b6127ea91612a27565b6040517f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000602082015291908290603d8201612824916115aa565b0390810182526103059082610804565b9061283e82610834565b61284b6040519182610804565b82815280926117fb601f1991610834565b806000917a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015612992575b506d04ee2d6d415b85acef810000000080831015612983575b50662386f26fc1000080831015612974575b506305f5e10080831015612965575b5061271080831015612956575b506064821015612946575b600a8092101561293c575b6001908160216128f460018701612834565b95860101905b612906575b5050505090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215612937579190826128fa565b6128ff565b91600101916128e2565b91906064600291049101916128d7565b600491939204910191386128cc565b600891939204910191386128bf565b601091939204910191386128b0565b6020919392049101913861289e565b604093508104915038612885565b60405190606082018281106001600160401b038211176107b857604052604082527f6768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f6040837f4142434445464748494a4b4c4d4e4f505152535455565758595a61626364656660208201520152565b600281901b91906001600160fe1b038116036105cd57565b90815115612afe57612a53612a4e612a49612a428551611822565b6003900490565b612a0f565b612834565b91602083019181825183016020810191825193600084525b828210612aac5750505052516003900660018114612a9957600214612a8e575090565b603d90600019015390565b50603d9081600019820153600119015390565b9091956004906003809401938451600190603f9082828260121c16880101518553828282600c1c16880101518386015382828260061c1688010151600286015316850101519082015301959190612a6b565b505061030561185a56fe0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9a2646970667358221220206daa353760fc0b2c9d8ea5ec551475e8ea2712fd98a004dbc73de5781538b164736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x20E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x372D6B27 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x40398D67 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x558381E7 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x55F804B3 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x60316801 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x6914DB60 EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x9450B3D6 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0xA2309FF8 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0xA2F1C87B EQ PUSH2 0x1AF JUMPI DUP1 PUSH4 0xAA2FE91B EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xB04458CA EQ PUSH2 0x187 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1A0 JUMPI DUP1 PUSH4 0xE62CE7AC EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xED58BAD8 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x18C JUMPI PUSH4 0xFEB44988 EQ PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134C JUMP JUMPDEST PUSH2 0x151C JUMP JUMPDEST PUSH2 0x1461 JUMP JUMPDEST PUSH2 0x1404 JUMP JUMPDEST PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x13C7 JUMP JUMPDEST PUSH2 0x136D JUMP JUMPDEST PUSH2 0x130D JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x123E JUMP JUMPDEST PUSH2 0x1167 JUMP JUMPDEST PUSH2 0xF9A JUMP JUMPDEST PUSH2 0xF71 JUMP JUMPDEST PUSH2 0xF13 JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0xE1E JUMP JUMPDEST PUSH2 0xC60 JUMP JUMPDEST PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x9E8 JUMP JUMPDEST PUSH2 0x8A1 JUMP JUMPDEST PUSH2 0x760 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH2 0x596 JUMP JUMPDEST PUSH2 0x582 JUMP JUMPDEST PUSH2 0x526 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x3F1 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x25D DUP2 PUSH2 0x227 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x29B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x28A JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x27F JUMP JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x278 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x2BF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2AF JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x2E8 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x305 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH2 0x32C DUP3 PUSH2 0xC8F JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3C1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x369 JUMPI JUMPDEST PUSH2 0x365 DUP7 PUSH2 0x359 DUP2 DUP9 SUB DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2F4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP4 POP PUSH1 0x2 DUP5 MSTORE PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP6 LT PUSH2 0x3AE JUMPI POP POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x359 DUP3 PUSH2 0x365 CODESIZE PUSH2 0x349 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP7 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x391 JUMP JUMPDEST SWAP1 POP DUP7 SWAP6 POP PUSH2 0x365 SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x359 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 CODESIZE PUSH2 0x349 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x40E DUP2 PUSH2 0x1E96 JUMP JUMPDEST ISZERO PUSH2 0x433 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x239 JUMPI JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x484 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x499 DUP4 PUSH2 0x1F46 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x4F4 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x4A3 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD SWAP2 SUB PUSH1 0x0 NOT ADD DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x239 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x239 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x594 PUSH2 0x58E CALLDATASIZE PUSH2 0x54D JUMP JUMPDEST SWAP2 PUSH2 0x15E7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0xF SLOAD PUSH1 0x10 SLOAD SWAP1 DUP2 DUP2 SUB DUP2 DUP2 GT PUSH2 0x5CD JUMPI PUSH1 0x60 SWAP3 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH2 0x1797 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x5FA JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x5EC JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x627 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x700 JUMPI PUSH2 0x641 SWAP1 PUSH2 0x1A80 JUMP JUMPDEST PUSH2 0x64A DUP2 PUSH2 0x17D3 JUMP JUMPDEST SWAP1 PUSH1 0x0 PUSH2 0x658 PUSH1 0x0 SLOAD PUSH2 0x17AD JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP1 DUP4 DUP1 JUMPDEST PUSH2 0x672 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x365 DUP9 DUP3 PUSH2 0x5D2 JUMP JUMPDEST PUSH2 0x67B DUP3 PUSH2 0x1814 JUMP JUMPDEST DUP2 LT DUP1 PUSH2 0x6F7 JUMPI JUMPDEST ISZERO PUSH2 0x6F2 JUMPI PUSH2 0x691 DUP2 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH2 0x6CC JUMPI JUMPDEST PUSH2 0x6AB JUMPI JUMPDEST PUSH2 0x6A5 SWAP1 PUSH2 0x1805 JUMP JUMPDEST DUP5 PUSH2 0x65F JUMP JUMPDEST SWAP3 PUSH2 0x6C4 DUP2 DUP6 PUSH2 0x6BE PUSH2 0x6A5 SWAP5 DUP11 PUSH2 0x1830 JUMP JUMPDEST MSTORE PUSH2 0x1805 JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x69C JUMP JUMPDEST POP DUP7 PUSH2 0x6EC PUSH2 0x6E0 PUSH2 0x6E0 PUSH2 0x6E0 DUP6 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST EQ PUSH2 0x697 JUMP JUMPDEST PUSH2 0x664 JUMP JUMPDEST POP DUP3 DUP5 LT PUSH2 0x683 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E76616C6964206F776E65722061646472657373 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x594 PUSH2 0x749 CALLDATASIZE PUSH2 0x54D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x757 DUP5 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x1DC5 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT OR PUSH2 0x7B8 JUMPI PUSH2 0x365 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x832 DUP3 PUSH2 0x7CE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7B8 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x85B DUP3 PUSH2 0x834 JUMP JUMPDEST SWAP2 PUSH2 0x869 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x804 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x239 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x239 JUMPI DUP2 PUSH1 0x20 PUSH2 0x305 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x84F JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x239 JUMPI PUSH2 0x8D4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x886 JUMP JUMPDEST PUSH2 0x8DC PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x8ED PUSH2 0x8E8 DUP4 PUSH2 0x1E96 JUMP JUMPDEST PUSH2 0x186D JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x981 JUMPI PUSH2 0x97C PUSH32 0xD0571D484577E1A5E8A246E15DCCFC8D2ACB13E80E0320B06DAE36DE6D79ED71 SWAP2 PUSH2 0x95B PUSH1 0x4 PUSH2 0x947 DUP7 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x96E PUSH2 0x969 PUSH1 0x10 SLOAD PUSH2 0x1805 JUMP JUMPDEST PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 TIMESTAMP SWAP1 DUP4 PUSH2 0x18B0 JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B88185B1C9958591E481C995D9BDAD959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x239 JUMPI PUSH2 0x305 SWAP2 PUSH1 0x4 ADD PUSH2 0x886 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH2 0x9F6 CALLDATASIZE PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x9FE PUSH2 0x2063 JUMP JUMPDEST PUSH2 0xA06 PUSH2 0xCC9 JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x7B8 JUMPI PUSH2 0xA2B DUP4 PUSH2 0xA26 PUSH1 0xB SLOAD PUSH2 0xC8F JUMP JUMPDEST PUSH2 0x18CC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0xAA2 JUMPI POP DUP4 PUSH32 0xBF854AC1B3492EFDC6A78402A969F9B4AA9315253853A9FE2AB02FF8F2D55639 SWAP5 PUSH2 0xA7D SWAP3 PUSH1 0x0 SWAP2 PUSH2 0xA97 JUMPI JUMPDEST POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0xB SSTORE JUMPDEST PUSH2 0xA92 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 TIMESTAMP SWAP2 DUP5 PUSH2 0x1A57 JUMP JUMPDEST SUB SWAP1 LOG1 STOP JUMPDEST SWAP1 POP DUP4 ADD MLOAD CODESIZE PUSH2 0xA69 JUMP JUMPDEST PUSH1 0xB PUSH1 0x0 MSTORE SWAP1 PUSH1 0x1F NOT DUP6 AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xB1E JUMPI POP POP SWAP2 DUP6 SWAP2 PUSH32 0xBF854AC1B3492EFDC6A78402A969F9B4AA9315253853A9FE2AB02FF8F2D55639 SWAP7 PUSH1 0x1 SWAP5 LT PUSH2 0xB05 JUMPI JUMPDEST POP POP DUP2 SHL ADD PUSH1 0xB SSTORE PUSH2 0xA81 JUMP JUMPDEST DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 PUSH2 0xAF8 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP10 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0xC0 PUSH1 0xA0 PUSH2 0xB76 PUSH2 0xB56 DUP6 MLOAD DUP5 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x1F NOT DUP7 DUP4 SUB ADD PUSH1 0x60 DUP8 ADD MSTORE PUSH2 0x2CF JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x1 DUP1 DUP4 SHL SUB PUSH1 0x80 DUP3 ADD MLOAD AND DUP3 DUP6 ADD MSTORE ADD MLOAD ISZERO ISZERO SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x365 PUSH1 0xA0 PUSH1 0x4 CALLDATALOAD PUSH1 0x40 SWAP2 DUP3 SWAP2 DUP3 MLOAD PUSH2 0xBC4 DUP2 PUSH2 0x7CE JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP2 DUP5 PUSH1 0x20 DUP2 SWAP5 ADD MSTORE PUSH1 0x60 DUP7 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xBF3 PUSH2 0x8E8 DUP3 PUSH2 0x1E96 JUMP JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0xFF PUSH1 0x4 DUP3 MLOAD SWAP4 PUSH2 0xC0C DUP6 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0xC15 DUP2 PUSH2 0xD7B JUMP JUMPDEST DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xC2D PUSH1 0x2 DUP3 ADD PUSH2 0xD7B JUMP JUMPDEST DUP5 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0xB36 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xC86 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F46 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0xCBF JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0xCA9 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0xC9E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0xB SLOAD SWAP2 PUSH2 0xCDD DUP4 PUSH2 0xC8F JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0xD57 JUMPI POP PUSH1 0x1 EQ PUSH2 0xD08 JUMPI JUMPDEST POP POP PUSH2 0x832 SWAP3 POP SUB DUP4 PUSH2 0x804 JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0xD3F JUMPI POP PUSH2 0x832 SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0xCFA JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0xD24 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x832 SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0xCFA JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0xD8E DUP2 PUSH2 0xC8F JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0xDFC JUMPI POP PUSH1 0x1 EQ PUSH2 0xDBD JUMPI JUMPDEST POP POP POP PUSH2 0x832 SWAP3 POP SUB DUP4 PUSH2 0x804 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0xDE4 JUMPI POP POP PUSH2 0x832 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0xDAE JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0xDCB JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x832 SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0xDAE JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH2 0xE82 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0xE4B DUP2 PUSH2 0xD7B JUMP JUMPDEST SWAP1 PUSH1 0xFF PUSH1 0x1 DUP3 ADD SLOAD PUSH2 0xE95 PUSH2 0xE62 PUSH1 0x2 DUP6 ADD PUSH2 0xD7B JUMP JUMPDEST SWAP2 PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 PUSH1 0xC0 DUP10 MSTORE PUSH1 0xC0 DUP10 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x2CF JUMP JUMPDEST SWAP3 PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x365 PUSH2 0xED4 PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH2 0xF0B PUSH2 0xF06 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x1A80 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EE JUMPI PUSH2 0xF2D PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0xFB3 PUSH2 0x444 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x239 JUMPI PUSH2 0xFD4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x886 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP3 PUSH1 0x64 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x239 JUMPI PUSH2 0xFF1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x886 JUMP JUMPDEST SWAP2 PUSH1 0x2 PUSH1 0xA SLOAD EQ PUSH2 0x1155 JUMPI PUSH32 0x635EC4F27E96D361299E978A3DC7B7A7FD0B1293B1787B48D0B2B52C72B8B8D5 PUSH2 0x111F SWAP4 PUSH2 0x365 SWAP6 PUSH1 0x2 PUSH1 0xA SSTORE PUSH2 0x1058 PUSH2 0x1053 PUSH2 0x104C CALLER PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1ABA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP4 PUSH2 0x112D SWAP1 PUSH2 0x1072 DUP7 ISZERO ISZERO PUSH2 0x1AFF JUMP JUMPDEST PUSH2 0x107E DUP2 MLOAD ISZERO ISZERO PUSH2 0x1B4B JUMP JUMPDEST PUSH1 0x32 DUP4 LT ISZERO DUP1 PUSH2 0x114A JUMPI JUMPDEST PUSH2 0x1092 SWAP1 PUSH2 0x1B8B JUMP JUMPDEST PUSH2 0x10A5 PUSH2 0x109E DUP3 PUSH2 0x15C1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x1BD7 JUMP JUMPDEST PUSH1 0x0 SLOAD SWAP8 DUP9 SWAP8 PUSH2 0x10FC PUSH2 0x10B6 PUSH2 0x825 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP9 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x10F7 DUP12 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C2F JUMP JUMPDEST DUP9 PUSH2 0x1106 DUP5 PUSH2 0x15C1 JUMP JUMPDEST SSTORE PUSH2 0x111A PUSH2 0x1115 PUSH1 0xF SLOAD PUSH2 0x1805 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x208F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 PUSH2 0x1D7A JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0x113A PUSH1 0x1 PUSH1 0xA SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST POP PUSH1 0x64 DUP4 GT ISZERO PUSH2 0x1089 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3EE JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH2 0x118B DUP3 PUSH2 0xC8F JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x1 SWAP2 DUP3 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x3C1 JUMPI POP PUSH1 0x1 EQ PUSH2 0x11B7 JUMPI PUSH2 0x365 DUP7 PUSH2 0x359 DUP2 DUP9 SUB DUP3 PUSH2 0x804 JUMP JUMPDEST SWAP4 POP PUSH1 0x3 DUP5 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP6 LT PUSH2 0x11FC JUMPI POP POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x359 DUP3 PUSH2 0x365 CODESIZE PUSH2 0x349 JUMP JUMPDEST DUP1 SLOAD DUP7 DUP7 ADD DUP5 ADD MSTORE SWAP4 DUP3 ADD SWAP4 DUP2 ADD PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x239 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x239 JUMPI SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH2 0x124C CALLDATASIZE PUSH2 0x120F JUMP JUMPDEST SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x128B DUP3 PUSH2 0x127A DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH2 0x1303 PUSH1 0x4 CALLDATALOAD PUSH2 0x1D96 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x132E PUSH2 0x444 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 PUSH2 0x1364 PUSH2 0x135F CALLDATASIZE PUSH2 0x9BE JUMP JUMPDEST PUSH2 0x15C1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x1381 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x1389 PUSH2 0x45A JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x239 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x239 JUMPI PUSH2 0x13BD PUSH2 0x594 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x84F JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x1DC5 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x365 PUSH2 0xED4 PUSH1 0x4 CALLDATALOAD PUSH2 0x1E08 JUMP JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1455 PUSH2 0x1424 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x142C PUSH2 0x45A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH2 0x146F CALLDATASIZE PUSH2 0x120F JUMP JUMPDEST SWAP1 PUSH2 0x1478 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x14DE JUMPI PUSH1 0x40 PUSH32 0xAA0C2B5EA5C9F3FCC4C06F9E39F6AFDBADC432E7617F393E5F17F31412D3CA5 SWAP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH2 0x14CE DUP2 DUP4 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206D696E7465722061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x239 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x239 JUMPI PUSH2 0x1535 PUSH2 0x444 JUMP JUMPDEST PUSH2 0x153D PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1591 JUMPI PUSH1 0x9 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x9 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST SWAP1 PUSH2 0x15BD PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x2AC JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x15DA SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x2AC JUMP JUMPDEST DUP2 ADD PUSH1 0xD DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x15F3 DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 DUP3 DUP2 AND DUP6 SWAP1 SUB PUSH2 0x1792 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1637 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x174B JUMPI JUMPDEST PUSH2 0x1646 DUP7 DUP9 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x1741 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH2 0x16B4 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP2 AND ISZERO PUSH2 0x16F7 JUMPI JUMPDEST POP AND DUP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x16F2 JUMPI JUMP JUMPDEST PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x170F DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x171C JUMPI JUMPDEST POP PUSH2 0x16C2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x1716 JUMPI PUSH2 0x1739 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x1716 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x164B JUMP JUMPDEST PUSH2 0x1788 PUSH2 0x1633 PUSH2 0x104C CALLER PUSH2 0x1771 DUP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x163C JUMPI PUSH2 0x1F13 JUMP JUMPDEST PUSH2 0x1F03 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x5CD JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7B8 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x17DD DUP3 PUSH2 0x17BC JUMP JUMPDEST PUSH2 0x17EA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x804 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x17FB PUSH1 0x1F NOT SWAP2 PUSH2 0x17BC JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x5CD JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 DUP2 PUSH1 0x1 GT PUSH2 0x5CD JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x5CD JUMPI JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1844 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1867 DUP3 PUSH2 0x7E9 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1874 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B88191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x18C7 PUSH1 0x20 SWAP2 PUSH1 0x40 DUP7 MSTORE PUSH1 0x40 DUP7 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18D8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1922 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1917 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x190B JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1902 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x193A JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1978 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x196D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1961 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1958 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7B8 JUMPI PUSH2 0x19A9 DUP2 PUSH2 0x19A3 DUP5 SLOAD PUSH2 0xC8F JUMP JUMPDEST DUP5 PUSH2 0x192C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x19EC JUMPI POP DUP2 SWAP1 PUSH2 0x19DD SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0x19E1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x19C8 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x1A02 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x1A3F JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1A26 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1A1C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1A07 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 PUSH2 0x18C7 SWAP1 PUSH2 0x1A72 PUSH1 0x40 SWAP4 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x1AA9 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x1AC1 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x139BDD08185D5D1A1BDC9A5E9959081D1BC81B5A5B9D PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B06 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74206D696E7420746F207A65726F20616464726573730000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B52 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x92DCECC2D8D2C84092A08CA640D0C2E6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1B92 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E666964656E63652073636F72650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1BDE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E465420616C72656164792065786973747320666F72207468697320636F6E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x195B9D PUSH1 0xEA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 MLOAD SWAP3 DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x7B8 JUMPI PUSH2 0x1C52 DUP2 PUSH2 0x19A3 DUP5 SLOAD PUSH2 0xC8F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1CFE JUMPI POP PUSH2 0x1CE4 SWAP3 PUSH2 0x1C90 DUP4 PUSH1 0xA0 SWAP5 PUSH1 0x4 SWAP5 PUSH2 0x832 SWAP10 SWAP11 PUSH1 0x0 SWAP3 PUSH2 0x19E1 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH2 0x1CAE PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x2 DUP4 ADD PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE PUSH1 0x80 DUP6 ADD MLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP3 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP2 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 ISZERO ISZERO PUSH1 0xA0 SHL PUSH1 0xFF PUSH1 0xA0 SHL AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP7 PUSH2 0x1D14 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP10 DUP3 LT PUSH2 0x1D62 JUMPI POP POP DUP4 PUSH1 0x4 SWAP4 PUSH2 0x1CE4 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0xA0 SWAP8 PUSH2 0x832 SWAP12 SWAP13 LT PUSH2 0x1D49 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP2 SSTORE PUSH2 0x1C93 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1D3C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1D19 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 SWAP2 PUSH1 0x60 SWAP3 PUSH2 0xE82 PUSH2 0x18C7 SWAP4 PUSH1 0x80 DUP10 MSTORE PUSH1 0x80 DUP10 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x1D9F DUP2 PUSH2 0x1E96 JUMP JUMPDEST ISZERO PUSH2 0x1DBF JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND ISZERO SWAP1 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x1DD3 DUP3 DUP3 DUP7 PUSH2 0x15E7 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x1DE0 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1DE9 SWAP4 PUSH2 0x2199 JUMP JUMPDEST ISZERO PUSH2 0x1DF7 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1DDA JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E14 PUSH2 0x8E8 DUP3 PUSH2 0x1E96 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF PUSH1 0x4 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1E33 DUP5 PUSH2 0x7CE JUMP JUMPDEST PUSH2 0x1E3C DUP2 PUSH2 0xD7B JUMP JUMPDEST DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x1E54 PUSH1 0x2 DUP3 ADD PUSH2 0xD7B JUMP JUMPDEST PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 SHR AND ISZERO ISZERO DUP1 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x1E8C JUMPI PUSH2 0x305 SWAP2 PUSH2 0x2494 JUMP JUMPDEST POP PUSH2 0x305 SWAP1 PUSH2 0x22CD JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x1 SWAP1 DUP4 DUP2 DUP4 GT ISZERO PUSH2 0x1EAB JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 LT PUSH2 0x1EB9 JUMPI POP POP POP JUMP JUMPDEST DUP3 SWAP4 SWAP5 POP PUSH1 0x0 SWAP3 SWAP2 SWAP3 SWAP4 JUMPDEST PUSH2 0x1ED6 JUMPI JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP1 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP4 POP SWAP1 SWAP2 DUP4 PUSH2 0x1EFE JUMPI DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 NOT ADD SWAP2 SWAP1 DUP2 PUSH2 0x1EC4 JUMP JUMPDEST PUSH2 0x1EC9 JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 DUP1 PUSH1 0x1 GT PUSH2 0x1F35 JUMPI PUSH2 0x1F65 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP2 DUP3 ISZERO PUSH2 0x1F82 JUMPI JUMPDEST POP POP PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND ISZERO PUSH2 0x305 JUMPI DUP1 PUSH2 0x1F35 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0x1F35 JUMPI SWAP1 DUP2 JUMPDEST ISZERO PUSH2 0x1F6E JUMPI SWAP1 SWAP2 POP PUSH1 0x0 NOT ADD PUSH2 0x1FAF DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP2 DUP3 ISZERO PUSH2 0x1FC7 JUMPI POP POP PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0x1F35 JUMPI SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x1F8F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x2060 JUMPI PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x1 DUP2 LT PUSH2 0x1FED JUMPI POP POP POP JUMP JUMPDEST DUP1 DUP4 ADD DUP1 DUP5 GT PUSH2 0x5CD JUMPI DUP3 MSTORE PUSH1 0x20 PUSH1 0xC DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x40 PUSH1 0xFF DUP4 DUP3 DUP8 KECCAK256 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x201F JUMPI POP POP POP PUSH1 0x1 ADD PUSH2 0x1FE0 JUMP JUMPDEST MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE SWAP2 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E6E6F74207472616E73666572207265766F6B6564204E46540000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP2 POP REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2077 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH2 0x20BD DUP5 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH9 0x10000000000000001 ADD SWAP1 SSTORE DUP1 ISZERO PUSH2 0x2146 JUMPI PUSH1 0x1 DUP4 DUP2 ADD SWAP4 SWAP2 SWAP1 DUP1 DUP1 JUMPDEST PUSH2 0x2101 JUMPI JUMPDEST POP POP POP POP SSTORE JUMP JUMPDEST ISZERO PUSH2 0x2135 JUMPI JUMPDEST DUP4 DUP2 DUP5 DUP5 DUP8 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH2 0x20F5 JUMP JUMPDEST DUP1 SWAP3 ADD SWAP2 DUP5 DUP4 SUB PUSH2 0x2107 JUMPI DUP1 PUSH2 0x20FA JUMP JUMPDEST PUSH3 0x2E0763 PUSH1 0xE8 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x239 JUMPI MLOAD PUSH2 0x305 DUP2 PUSH2 0x227 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2194 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x217A DUP3 PUSH2 0x834 JUMP JUMPDEST SWAP2 PUSH2 0x2188 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x804 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x21E2 SWAP4 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 DUP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP13 DUP14 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x2CF JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x221F JUMPI JUMPDEST POP PUSH2 0x2211 JUMPI PUSH2 0x21FD PUSH2 0x2169 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x220C JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x2242 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2249 JUMPI JUMPDEST PUSH2 0x223A DUP2 DUP4 PUSH2 0x804 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2154 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x21F0 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2230 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH2 0x2260 DUP3 PUSH2 0xC8F JUMP JUMPDEST SWAP2 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x22BA JUMPI POP PUSH1 0x1 EQ PUSH2 0x227B JUMPI POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 POP PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2B09 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x22A7 JUMPI POP POP POP ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP6 DUP8 ADD MSTORE ADD SWAP3 ADD SWAP2 PUSH2 0x2299 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP4 MSTORE POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP JUMP JUMPDEST PUSH2 0x305 PUSH1 0x84 PUSH2 0x2452 PUSH2 0x22E1 PUSH2 0x2488 SWAP5 PUSH2 0x285C JUMP JUMPDEST PUSH2 0x2430 PUSH2 0x2422 PUSH2 0x23E4 PUSH2 0x23C9 PUSH2 0x23AF PUSH2 0x23AA PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 PUSH32 0x7B226E616D65223A20225265766F6B6564204365727469666963617465202300 PUSH1 0x20 DUP11 ADD MSTORE PUSH2 0x2333 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x3F DUP14 ADD SWAP2 ADD PUSH2 0x2AC JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A2022546869732061757468656E7469 PUSH1 0x3F SWAP2 DUP11 ADD SWAP2 DUP3 ADD MSTORE PUSH32 0x6369747920636572746966696361746520686173206265656E207265766F6B65 PUSH1 0x5F DUP3 ADD MSTORE PUSH5 0x321711161 PUSH1 0xDD SHL PUSH1 0x7F DUP3 ADD MSTORE PUSH10 0x1134B6B0B3B2911D1011 PUSH1 0xB1 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0xA ADD SWAP1 JUMP JUMPDEST PUSH2 0x2250 JUMP JUMPDEST PUSH14 0x3932BB37B5B2B21738373391161 PUSH1 0x95 SHL DUP2 MSTORE PUSH1 0xE ADD SWAP1 JUMP JUMPDEST PUSH15 0x2261747472696275746573223A205B PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0xF ADD SWAP1 JUMP JUMPDEST PUSH32 0x7B2274726169745F74797065223A2022537461747573222C202276616C756522 DUP2 MSTORE PUSH12 0x3A20225265766F6B6564227D PUSH1 0xA0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD SWAP1 JUMP JUMPDEST PUSH2 0x5D7D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SWAP1 JUMP JUMPDEST SUB SWAP2 PUSH2 0x2444 PUSH1 0x1F NOT SWAP4 DUP5 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x244C PUSH2 0x29A0 JUMP JUMPDEST SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP4 DUP5 SWAP2 PUSH1 0x3D DUP4 ADD SWAP1 PUSH2 0x15AA JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x249D SWAP1 PUSH2 0x285C JUMP JUMPDEST DUP2 MLOAD SWAP2 PUSH1 0x20 DUP2 ADD MLOAD PUSH2 0x24AE SWAP1 PUSH2 0x285C JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x24C2 SWAP1 PUSH2 0x285C JUMP JUMPDEST SWAP2 MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 PUSH1 0x20 DUP8 ADD PUSH2 0x250A SWAP1 PUSH1 0x24 SWAP1 PUSH32 0x7B226E616D65223A202241757468656E74696369747920436572746966696361 DUP2 MSTORE PUSH4 0x74652023 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST PUSH2 0x2513 SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A202254686973204E46542063657274 DUP2 MSTORE PUSH32 0x6966696573207468652061757468656E746963697479206F6620646967697461 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6C20636F6E74656E7420766572696669656420627920414920616E616C797369 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x399711161 PUSH1 0xDD SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x65 ADD PUSH10 0x1134B6B0B3B2911D1011 PUSH1 0xB1 SHL DUP2 MSTORE PUSH1 0xA ADD PUSH2 0x25AF SWAP1 PUSH2 0x2250 JUMP JUMPDEST PUSH18 0x31B2B93A34B334B1B0BA329738373391161 PUSH1 0x75 SHL DUP2 MSTORE PUSH1 0x12 ADD PUSH32 0x2265787465726E616C5F75726C223A202268747470733A2F2F67617465776179 DUP2 MSTORE PUSH19 0x2E70696E6174612E636C6F75642F697066732F PUSH1 0x68 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x33 ADD PUSH2 0x2615 SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH3 0x11161 PUSH1 0xED SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH15 0x2261747472696275746573223A205B PUSH1 0x88 SHL DUP2 MSTORE PUSH1 0xF ADD PUSH32 0x7B2274726169745F74797065223A2022436F6E666964656E63652053636F7265 DUP2 MSTORE PUSH12 0x111610113B30B63AB2911D1 PUSH1 0xA5 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2C ADD PUSH2 0x267D SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH3 0x3E961 PUSH1 0xED SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH32 0x7B2274726169745F74797065223A20224149204D6F64656C222C202276616C75 DUP2 MSTORE PUSH5 0x32911D1011 PUSH1 0xD9 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x25 ADD PUSH2 0x26C6 SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH4 0x113E961 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH32 0x7B2274726169745F74797065223A2022566572696669636174696F6E20446174 DUP2 MSTORE PUSH13 0x32911610113B30B63AB2911D1 PUSH1 0x9D SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2D ADD PUSH2 0x2718 SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH3 0x3E961 PUSH1 0xED SHL DUP2 MSTORE PUSH1 0x3 ADD PUSH32 0x7B2274726169745F74797065223A2022537461747573222C202276616C756522 DUP2 MSTORE PUSH32 0x3A202256657269666965642041757468656E746963227D2C2000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x39 ADD PUSH32 0x7B2274726169745F74797065223A2022495046532048617368222C202276616C DUP2 MSTORE PUSH6 0x3AB2911D1011 PUSH1 0xD1 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x26 ADD PUSH2 0x27AE SWAP2 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x227D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH2 0x5D7D PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD SUB SWAP1 PUSH1 0x1F NOT SWAP2 DUP3 DUP2 ADD DUP3 MSTORE PUSH2 0x27D9 SWAP1 DUP3 PUSH2 0x804 JUMP JUMPDEST PUSH2 0x27E1 PUSH2 0x29A0 JUMP JUMPDEST PUSH2 0x27EA SWAP2 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 PUSH1 0x20 DUP3 ADD MSTORE SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x3D DUP3 ADD PUSH2 0x2824 SWAP2 PUSH2 0x15AA JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP3 MSTORE PUSH2 0x305 SWAP1 DUP3 PUSH2 0x804 JUMP JUMPDEST SWAP1 PUSH2 0x283E DUP3 PUSH2 0x834 JUMP JUMPDEST PUSH2 0x284B PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x804 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x17FB PUSH1 0x1F NOT SWAP2 PUSH2 0x834 JUMP JUMPDEST DUP1 PUSH1 0x0 SWAP2 PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP1 DUP3 LT ISZERO PUSH2 0x2992 JUMPI JUMPDEST POP PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP1 DUP4 LT ISZERO PUSH2 0x2983 JUMPI JUMPDEST POP PUSH7 0x2386F26FC10000 DUP1 DUP4 LT ISZERO PUSH2 0x2974 JUMPI JUMPDEST POP PUSH4 0x5F5E100 DUP1 DUP4 LT ISZERO PUSH2 0x2965 JUMPI JUMPDEST POP PUSH2 0x2710 DUP1 DUP4 LT ISZERO PUSH2 0x2956 JUMPI JUMPDEST POP PUSH1 0x64 DUP3 LT ISZERO PUSH2 0x2946 JUMPI JUMPDEST PUSH1 0xA DUP1 SWAP3 LT ISZERO PUSH2 0x293C JUMPI JUMPDEST PUSH1 0x1 SWAP1 DUP2 PUSH1 0x21 PUSH2 0x28F4 PUSH1 0x1 DUP8 ADD PUSH2 0x2834 JUMP JUMPDEST SWAP6 DUP7 ADD ADD SWAP1 JUMPDEST PUSH2 0x2906 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD SWAP1 DUP4 SWAP1 PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP3 DUP3 MOD BYTE DUP4 MSTORE8 DIV SWAP2 DUP3 ISZERO PUSH2 0x2937 JUMPI SWAP2 SWAP1 DUP3 PUSH2 0x28FA JUMP JUMPDEST PUSH2 0x28FF JUMP JUMPDEST SWAP2 PUSH1 0x1 ADD SWAP2 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x64 PUSH1 0x2 SWAP2 DIV SWAP2 ADD SWAP2 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x4 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x28CC JUMP JUMPDEST PUSH1 0x8 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x28BF JUMP JUMPDEST PUSH1 0x10 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x28B0 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 SWAP3 DIV SWAP2 ADD SWAP2 CODESIZE PUSH2 0x289E JUMP JUMPDEST PUSH1 0x40 SWAP4 POP DUP2 DIV SWAP2 POP CODESIZE PUSH2 0x2885 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x7B8 JUMPI PUSH1 0x40 MSTORE PUSH1 0x40 DUP3 MSTORE PUSH32 0x6768696A6B6C6D6E6F707172737475767778797A303132333435363738392B2F PUSH1 0x40 DUP4 PUSH32 0x4142434445464748494A4B4C4D4E4F505152535455565758595A616263646566 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SHL SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFE SHL SUB DUP2 AND SUB PUSH2 0x5CD JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD ISZERO PUSH2 0x2AFE JUMPI PUSH2 0x2A53 PUSH2 0x2A4E PUSH2 0x2A49 PUSH2 0x2A42 DUP6 MLOAD PUSH2 0x1822 JUMP JUMPDEST PUSH1 0x3 SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH2 0x2A0F JUMP JUMPDEST PUSH2 0x2834 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP4 ADD SWAP2 DUP2 DUP3 MLOAD DUP4 ADD PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MLOAD SWAP4 PUSH1 0x0 DUP5 MSTORE JUMPDEST DUP3 DUP3 LT PUSH2 0x2AAC JUMPI POP POP POP MSTORE MLOAD PUSH1 0x3 SWAP1 MOD PUSH1 0x1 DUP2 EQ PUSH2 0x2A99 JUMPI PUSH1 0x2 EQ PUSH2 0x2A8E JUMPI POP SWAP1 JUMP JUMPDEST PUSH1 0x3D SWAP1 PUSH1 0x0 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST POP PUSH1 0x3D SWAP1 DUP2 PUSH1 0x0 NOT DUP3 ADD MSTORE8 PUSH1 0x1 NOT ADD MSTORE8 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP6 PUSH1 0x4 SWAP1 PUSH1 0x3 DUP1 SWAP5 ADD SWAP4 DUP5 MLOAD PUSH1 0x1 SWAP1 PUSH1 0x3F SWAP1 DUP3 DUP3 DUP3 PUSH1 0x12 SHR AND DUP9 ADD ADD MLOAD DUP6 MSTORE8 DUP3 DUP3 DUP3 PUSH1 0xC SHR AND DUP9 ADD ADD MLOAD DUP4 DUP7 ADD MSTORE8 DUP3 DUP3 DUP3 PUSH1 0x6 SHR AND DUP9 ADD ADD MLOAD PUSH1 0x2 DUP7 ADD MSTORE8 AND DUP6 ADD ADD MLOAD SWAP1 DUP3 ADD MSTORE8 ADD SWAP6 SWAP2 SWAP1 PUSH2 0x2A6B JUMP JUMPDEST POP POP PUSH2 0x305 PUSH2 0x185A JUMP INVALID ADD PUSH22 0xB7A638427703F0DBE7BB9BBF987A2551717B34E79F33 0xB5 0xB1 STOP DUP14 0x1F LOG0 SAR 0xB9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 PUSH14 0xAA353760FC0B2C9D8EA5EC551475 0xE8 0xEA 0x27 SLT REVERT SWAP9 LOG0 DIV 0xDB 0xC7 RETURNDATASIZE 0xE5 PUSH25 0x1538B164736F6C634300081900330000000000000000000000 ","sourceMap":"489:11852:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;;489:11852:17;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;;;:::i;:::-;;;;;;;;11092:25:19;;:101;;;;;489:11852:17;11092:177:19;;;;489:11852:17;;;;;;;;;;11092:177:19;-1:-1:-1;;;11244:25:19;;-1:-1:-1;11092:177:19;;;:101;-1:-1:-1;;;11168:25:19;;;-1:-1:-1;11092:101:19;;489:11852:17;;;;;;;;-1:-1:-1;;489:11852:17;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;489:11852:17;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;11659:5:19;489:11852:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;11659:5:19;489:11852:17;;;;;;;;;-1:-1:-1;;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;18736:16:19;;;:::i;:::-;18735:17;18731:73;;-1:-1:-1;489:11852:17;18822:15:19;489:11852:17;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;18731:73:19;18762:41;;;-1:-1:-1;49766:91:19;489:11852:17;-1:-1:-1;49766:91:19;489:11852:17;;;;-1:-1:-1;;;;;489:11852:17;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;489:11852:17;;;;;;:::o;:::-;;;-1:-1:-1;;489:11852:17;;;;;;:::i;:::-;;;-1:-1:-1;;;;;489:11852:17;13048:27:19;489:11852:17;13048:27:19;:::i;:::-;489:11852:17;47819:10:19;;;41521:28;41500:198;;489:11852:17;-1:-1:-1;489:11852:17;;;41708:15:19;489:11852:17;;;;;;;-1:-1:-1;;;;;;489:11852:17;-1:-1:-1;;;;;489:11852:17;;;;;-1:-1:-1;489:11852:17;41758:28:19;;;;;489:11852:17;;41500:198:19;-1:-1:-1;489:11852:17;;;19687:18:19;489:11852:17;;;;;;;;47819:10:19;489:11852:17;;;;;;;;;;41500:198:19;41563:135;41640:42;;;-1:-1:-1;49766:91:19;;-1:-1:-1;49766:91:19;489:11852:17;;;;;;-1:-1:-1;;489:11852:17;;;;;;7328:12:19;489:11852:17;;;;;-1:-1:-1;;489:11852:17;;;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;-1:-1:-1;;489:11852:17;;;;10468:11;489:11852;10481:12;489:11852;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;:::i;:::-;-1:-1:-1;;;;;489:11852:17;;;5362:20;;489:11852;;5445:17;;;:::i;:::-;5500:22;;;:::i;:::-;5532:24;-1:-1:-1;5597:32:17;-1:-1:-1;489:11852:17;5597:32;:::i;:::-;11036:1;;5653:27;11036:1;;;;;5648:255;489:11852;;;;;;;:::i;5743:3::-;5686:29;;;:::i;:::-;5682:33;;:59;;;5743:3;5682:59;;;5766:10;;;:::i;:::-;:34;;;5743:3;5762:131;;5743:3;;;;:::i;:::-;5653:27;;;5762:131;5820:26;5864:14;5820:26;;;5743:3;5820:26;;;:::i;:::-;489:11852;5864:14;:::i;:::-;5762:131;;;;;5766:34;13048:27:19;;5780:20:17;13032:45:19;13040:36;13048:27;;;:::i;:::-;-1:-1:-1;;;;;489:11852:17;;;5780:20;;5766:34;;5682:59;;;;5719:22;;;;5682:59;;489:11852;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;26475:39:19;489:11852:17;;;:::i;:::-;;;;;;;;:::i;:::-;;;;26475:39:19;:::i;489:11852:17:-;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;489:11852:17;;;;;;-1:-1:-1;;489:11852:17;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;:::i;:::-;1500:62:7;;:::i;:::-;4163:50:17;4171:17;;;:::i;:::-;4163:50;:::i;:::-;489:11852;-1:-1:-1;489:11852:17;4232:13;489:11852;;;;;-1:-1:-1;489:11852:17;4232:33;489:11852;;;;;;4382:46;;4302:23;:40;489:11852;4302:23;;489:11852;;4232:13;489:11852;;;;;;;4302:23;:33;489:11852;;-1:-1:-1;;;;489:11852:17;-1:-1:-1;;;489:11852:17;;;;4302:40;4352:14;;;489:11852;4352:14;:::i;:::-;;2943::19;;4352::17;489:11852;;4412:15;;;;4382:46;;;:::i;:::-;;;;489:11852;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;1500:62:7;;:::i;:::-;489:11852:17;;:::i;:::-;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;9505:13;489:11852;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;9576:53;489:11852;;;;;;;;;;;;;;;;;;;;;;;;;9505:13;489:11852;;9576:53;489:11852;;9613:15;;;;9576:53;;;:::i;:::-;;;;489:11852;;;;;;;;;;;9505:13;489:11852;;;-1:-1:-1;;489:11852:17;;-1:-1:-1;;;;;;;;;;;489:11852:17;;;;;;;;;;;;;;9576:53;489:11852;;;;;;;;;;;;9505:13;489:11852;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;4696:50;4704:17;;;:::i;4696:50::-;489:11852;;4763:13;489:11852;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;489:11852:17;;;;;-1:-1:-1;;;;;13048:27:19;489:11852:17;;13048:27:19;:::i;:::-;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;489:11852:17;9505:13;489:11852;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;9505:13;-1:-1:-1;489:11852:17;-1:-1:-1;;;;;;;;;;;489:11852:17;-1:-1:-1;489:11852:17;;;;;;;-1:-1:-1;489:11852:17;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;489:11852:17;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;-1:-1:-1;489:11852:17;902:61;489:11852;;;;-1:-1:-1;489:11852:17;902:61;;;:::i;:::-;;489:11852;902:61;;;489:11852;;902:61;;;;;:::i;:::-;;489:11852;902:61;;;489:11852;902:61;;489:11852;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1500:62:7;;:::i;:::-;3004:6;489:11852:17;;-1:-1:-1;;;;;;489:11852:17;;;;;;;-1:-1:-1;;;;;489:11852:17;3052:40:7;489:11852:17;;3052:40:7;489:11852:17;;;;;;;;-1:-1:-1;;489:11852:17;;;;1710:6:7;489:11852:17;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;:::i;:::-;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;1899:1:12;2702:7;489:11852:17;2702:18:12;2698:86;;3678:173:17;3649:13;2943:14:19;489:11852:17;2943:14:19;1899:1:12;2702:7;2943:14:19;2766:64:17;2774:29;;2792:10;489:11852;;;;;;;;2774:17;489:11852;;;;;;;2774:29;489:11852;;;;;2774:29;2766:64;:::i;:::-;-1:-1:-1;;;;;489:11852:17;;;3678:173;;2840:57;2848:17;;;2840:57;:::i;:::-;2907;489:11852;;2915:27;;2907:57;:::i;:::-;3002:2;2982:22;;;:49;;;489:11852;2974:86;;;:::i;:::-;3070:77;489:11852;;;:::i;:::-;;3078:29;3070:77;:::i;:::-;-1:-1:-1;489:11852:17;;;;;;;:::i;:::-;;;;;3260:261;;489:11852;;;;3260:261;;489:11852;;;3429:15;489:11852;3260:261;;489:11852;-1:-1:-1;;;;;489:11852:17;;;3260:261;;489:11852;-1:-1:-1;3260:261:17;;;489:11852;3235:22;;489:11852;;4232:13;489:11852;;;;;;;3235:22;489:11852;:::i;:::-;;;;;:::i;:::-;2943:14:19;3603:13:17;;;489:11852;3603:13;:::i;:::-;;2943:14:19;;3603:13:17;3649;:::i;:::-;489:11852;;3429:15;;;;3678:173;;;:::i;:::-;;;;2531:1:12;1857;3068:21;2943:14:19;2888:208:12;2531:1;489:11852:17;;;;;;;;;;;;;2982:49;-1:-1:-1;489:11852:17;3008:23;;;2982:49;;2698:86:12;489:11852:17;;-1:-1:-1;;;2743:30:12;;489:11852:17;;2743:30:12;489:11852:17;;;;;;;;;;;;;;;;;11830:7:19;489:11852:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;11830:7:19;489:11852:17;;;;;;;;;-1:-1:-1;;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;47819:10:19;;-1:-1:-1;489:11852:17;19280:18:19;489:11852:17;;19280:60:19;489:11852:17;19280:49:19;489:11852:17;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;19280:49:19;489:11852:17;;;;;;;;;;;;;;;19280:60:19;489:11852:17;;;;;;;-1:-1:-1;;;;;489:11852:17;;47819:10:19;;19355:55;;489:11852:17;;19355:55:19;489:11852:17;;;;;;;-1:-1:-1;;489:11852:17;;;;;1123:26;489:11852;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;-1:-1:-1;;;;;489:11852:17;;:::i;:::-;;-1:-1:-1;489:11852:17;1045:49;489:11852;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;489:11852:17;;;;;1155:27;489:11852;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;19687:35:19;489:11852:17;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;489:11852:17;;;-1:-1:-1;489:11852:17;;;19687:18:19;489:11852:17;;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;19687:35:19;489:11852:17;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:7;;;:::i;:::-;-1:-1:-1;;;;;489:11852:17;;9922:21;;489:11852;;;10044:55;489:11852;;9941:1;489:11852;9980:17;489:11852;;9980:40;489:11852;;9941:1;489:11852;;;;;;;;;;;;;;;;9980:40;489:11852;;;;;;;10083:15;489:11852;;;;10044:55;489:11852;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;:::i;:::-;1500:62:7;;:::i;:::-;-1:-1:-1;;;;;489:11852:17;;;;2627:22:7;;2623:91;;3004:6;489:11852:17;;;;;;;;3004:6:7;489:11852:17;;3052:40:7;-1:-1:-1;3052:40:7;;489:11852:17;2623:91:7;489:11852:17;;-1:-1:-1;;;2672:31:7;;-1:-1:-1;489:11852:17;2672:31:7;;489:11852:17;;;2672:31:7;489:11852:17;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;3078:13;489:11852;;;;;;;:::o;22796:3447:19:-;;;;22963:27;;;:::i;:::-;-1:-1:-1;;;;;489:11852:17;;;;;;;;23173:45:19;;;23169:95;;-1:-1:-1;489:11852:17;;;21929:15:19;489:11852:17;;;;;22057:132:19;;23463:69;-1:-1:-1;;;;;21135:472:19;;47819:10;21135:472;;;;;;;23463:69;;489:11852:17;23464:68:19;23463:69;;489:11852:17;23463:69:19;23459:188;;22796:3447;23604:42;;;;:::i;:::-;23764:190;;22796:3447;-1:-1:-1;;;;;;489:11852:17;;;;;;24316:18:19;489:11852:17;;;;;;;-1:-1:-1;;2943:14:19;;;-1:-1:-1;;;;;489:11852:17;;;;;;24316:18:19;489:11852:17;;;;;;;2943:14:19;;;;-1:-1:-1;;;;;17192:331:19;;;;;;-1:-1:-1;;;17192:331:19;24670:26;;489:11852:17;;24670:17:19;489:11852:17;;;;;;;24670:26:19;2943:14;-1:-1:-1;;;24959:47:19;;:52;24955:617;;22796:3447;489:11852:17;;25749:367:19;;;-1:-1:-1;25749:367:19;;26129:13;26125:58;;22796:3447::o;26125:58::-;26152:30;:::i;24955:617::-;23699:1;489:11852:17;;25184:30:19;;489:11852:17;;24670:17:19;489:11852:17;;;;;;;25184:30:19;489:11852:17;25184:35:19;25180:378;;24955:617;;;;25180:378;-1:-1:-1;489:11852:17;25301:239:19;;25180:378;25301:239;25465:30;;489:11852:17;;24670:17:19;489:11852:17;;;;;;;25465:30:19;2943:14;25301:239;;25180:378;;23764:190;;;;;;;23459:188;23550:44;19687:35;;47819:10;19687:25;;489:11852:17;;;;;;;;19687:18:19;489:11852:17;;;;;;;19687:25:19;489:11852:17;;;;;;;;;;;;;;;;23550:44:19;23546:101;23459:188;23546:101;23604:42;:::i;23169:95::-;23228:35;:::i;489:11852:17:-;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;;;;;;:::o;:::-;-1:-1:-1;;;;;489:11852:17;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;:::o;:::-;-1:-1:-1;;489:11852:17;;;;;;;:::o;:::-;11036:1;489:11852;;;11036:1;489:11852;;;:::o;:::-;;2537:1:8;489:11852:17;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;1530:1:8;489:11852:17;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;489:11852:17;9505:13;-1:-1:-1;489:11852:17;-1:-1:-1;;;;;;;;;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;489:11852:17;-1:-1:-1;489:11852:17;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;489:11852:17;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;8570:239:19:-;-1:-1:-1;;;;;489:11852:17;8665:19:19;;8661:69;;8682:1;489:11852:17;8747:18:19;489:11852:17;;-1:-1:-1;;;;;489:11852:17;8682:1:19;489:11852:17;;8747:55:19;8570:239;:::o;8661:69::-;8694:35;;;8682:1;49766:91;;8682:1;49766:91;489:11852:17;;;;:::o;:::-;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2943:14:19;489:11852:17;;;;;;;;;:::i;:::-;;;;;;;;2943:14:19;489:11852:17;;;;;;;;-1:-1:-1;;;;;;489:11852:17;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;489:11852:17;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;10682:195::-;10764:17;;;:::i;:::-;10763:18;10759:61;;-1:-1:-1;489:11852:17;10837:13;489:11852;;;10837:33;489:11852;-1:-1:-1;489:11852:17;10837:33;489:11852;;;;10836:34;10682:195;:::o;10759:61::-;10797:12;-1:-1:-1;10797:12:17;:::o;27102:405:19:-;;;;27294:7;;;;;:::i;:::-;27316:14;;27312:189;;27102:405;;;;;:::o;27312:189::-;27354:56;;;:::i;:::-;27353:57;27349:152;;27312:189;;;;;;27349:152;27438:47;;;27334:1;49766:91;;27334:1;49766:91;6085:386:17;6184:50;6192:17;;;:::i;6184:50::-;489:11852;-1:-1:-1;489:11852:17;6284:13;489:11852;;;-1:-1:-1;489:11852:17;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6326:87;;6430:34;;;:::i;6326:87::-;6371:31;;;;:::i;19978:465:19:-;489:11852:17;;19978:465:19;11036:1:17;;489:11852;20070:26:19;;;;20066:371;;19978:465;;;:::o;20066:371::-;489:11852:17;;20221:23:19;;20217:210;;19978:465;;;:::o;20217:210::-;20264:14;;;;489:11852:17;20264:14:19;;;20296:60;11036:1:17;;;20296:60:19;-1:-1:-1;;;;;;20383:24:19;:29;;19978:465::o;20296:60::-;489:11852:17;;;20313:17:19;489:11852:17;;;;;;;-1:-1:-1;489:11852:17;;;20303:42:19;;489:11852:17;;;;-1:-1:-1;;489:11852:17;;20296:60:19;;;;20303:42;;;49703:160;23228:35;;;49766:91;;;;;49703:160;23604:42;;;49766:91;;;;;49703:160;26152:30;;;49766:91;;;;;49703:160;14916:38;;;49766:91;;;;;14380:2173;11036:1:17;14477:26:19;;11036:1:17;14477:26:19;16507:38;14473:2017;14528:26;;489:11852:17;;24670:17:19;489:11852:17;;;;;;;14528:26:19;489:11852:17;14847:11:19;;;14843:1270;;14473:2017;-1:-1:-1;;;;;16435:24:19;;:29;16431:48;;14473:2017;16507:38;:::i;14843:1270::-;-1:-1:-1;489:11852:17;14882:24:19;;;14878:77;;15502:597;;11036:1:17;;14843:1270:19;11036:1:17;489:11852;;;;;2943:14:19;15578:28;;489:11852:17;;24670:17:19;489:11852:17;;;;;;;15578:28:19;489:11852:17;15654:11:19;;;15650:25;;-1:-1:-1;;;;;15701:24:19;;16041:38;15697:48;15732:13;:::o;15650:25::-;15502:597;;;;11148:530:17;-1:-1:-1;;;;;489:11852:17;11372:18;11368:55;;11388:1;;11507:12;23699:1:19;11507:12:17;;;;11148:530;;;:::o;11521:3::-;489:11852;;;;;;;;;;;11597:13;489:11852;;11597:32;489:11852;;;;;;;11597:32;489:11852;;;;;;11521:3;;;23699:1:19;2943:14;11492:13:17;;489:11852;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;;-1:-1:-1;489:11852:17;11368:55;11406:7;:::o;1796:162:7:-;1710:6;489:11852:17;-1:-1:-1;;;;;489:11852:17;47819:10:19;1855:23:7;1851:101;;1796:162::o;1851:101::-;489:11852:17;;-1:-1:-1;;;1901:40:7;;47819:10:19;1901:40:7;;;489:11852:17;;;1901:40:7;30652:2343:19;30747:13;489:11852:17;;;-1:-1:-1;;;;;17192:331:19;;;;;;-1:-1:-1;;;17192:331:19;31323:31;;489:11852:17;;24670:17:19;489:11852:17;;;;;;;31323:31:19;2943:14;-1:-1:-1;;;;;489:11852:17;;;;;24316:18:19;489:11852:17;;;;;;;31742:32:19;489:11852:17;2943:14:19;;31960:13;;31956:54;;3660:1:17;489:11852;;;;;;3660:1;;;;;32213:662:19;2943:14;;;;;30652:2343::o;32213:662::-;;;;;32857:16;32234:450;;;;;;;;32213:662;;;2943:14;;;32857:16;;;;32213:662;32857:16;;;;31956:54;-1:-1:-1;;;49766:91:19;;;31983:26;49766:91;489:11852:17;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;489:11852:17;;;;:::o;:::-;;;:::o;29533:673:19:-;;29711:88;29533:673;489:11852:17;29533:673:19;-1:-1:-1;489:11852:17;;;;;;;;;;;;;;;;;29711:88:19;;;;47819:10;29711:88;;;489:11852:17;;;;;;;;;;;;;;;;;;;;:::i;:::-;29711:88:19;489:11852:17;;29711:88:19;;-1:-1:-1;;29711:88:19;;;29533:673;-1:-1:-1;29707:493:19;;29943:257;;:::i;:::-;489:11852:17;;29989:18:19;29985:113;;30111:79;;;29711:88;30111:79;;29985:113;30035:47;:::i;29707:493::-;-1:-1:-1;;;;;;489:11852:17;29867:64:19;;29860:71::o;29711:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;489:11852:17;8954:13;489:11852;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;8954:13;-1:-1:-1;489:11852:17;-1:-1:-1;;;;;;;;;;;489:11852:17;-1:-1:-1;489:11852:17;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;489:11852:17;;;-1:-1:-1;;489:11852:17;;;;;;;;-1:-1:-1;489:11852:17:o;8477:829::-;9243:55;489:11852;753:27:8;8774:19:17;489:11852;8477:829;8774:19;:::i;:::-;489:11852;;;;;;;;8673:503;;;489:11852;8673:503;;;489:11852;;;;;;8673:503;489:11852;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;489:11852:17;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;8673:503;489:11852;8673:503;489:11852;;8673:503;;;;;;;;:::i;:::-;489:11852;;:::i;:::-;753:27:8;;:::i;:::-;489:11852:17;;;8673:503;9243:55;;489:11852;;;;;;;;;:::i;:::-;9243:55;;;;;;;;:::i;6639:1708::-;6995:19;6639:1708;6995:19;:::i;:::-;7371:18;;7561:25;;;;489:11852;7561:36;;;:::i;:::-;7719:17;;;;;7867:31;;;489:11852;7867:42;;;:::i;:::-;8117:18;;489:11852;7719:17;489:11852;6889:1328;;;7561:25;6889:1328;;489:11852;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;:::i;:::-;-1:-1:-1;;;489:11852:17;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;:::i;:::-;-1:-1:-1;;;489:11852:17;;;;-1:-1:-1;;;489:11852:17;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;:::i;:::-;-1:-1:-1;;;489:11852:17;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;:::i;:::-;-1:-1:-1;;;489:11852:17;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;:::i;:::-;-1:-1:-1;;;489:11852:17;;;;;;;;;;;;;;;;;-1:-1:-1;;;489:11852:17;;;;;;;;;:::i;:::-;-1:-1:-1;;;489:11852:17;;;;-1:-1:-1;;;489:11852:17;;;;6889:1328;489:11852;;;6889:1328;;;;;;;;;;:::i;:::-;489:11852;;:::i;:::-;753:27:8;;;:::i;:::-;7719:17:17;489:11852;;7561:25;8284:55;;489:11852;;;;;;;;;;;:::i;:::-;8284:55;;;;;;;;;;:::i;489:11852::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;1308:632:13:-;1430:17;-1:-1:-1;29291:8:14;;29282:17;;;;29278:103;;1308:632:13;29407:8:14;;29398:17;;;;29394:103;;1308:632:13;29523:8:14;;29514:17;;;;29510:103;;1308:632:13;29639:7:14;;29630:16;;;;29626:100;;1308:632:13;29752:7:14;;29743:16;;;;29739:100;;1308:632:13;29856:16:14;29865:7;29856:16;;;29852:100;;1308:632:13;29978:7:14;;29969:16;;;29965:66;;1308:632:13;1450:1;489:11852:17;;1545:92:13;1488:18;1450:1;489:11852:17;;1488:18:13;:::i;:::-;1520:11;1545:92;;;1650:247;1450:1;;;1650:247;1910:13;;;;1308:632;:::o;1650:247::-;-1:-1:-1;;2943:14:19;;489:11852:17;;-1:-1:-1;;;1704:111:13;;;;2943:14:19;1704:111:13;489:11852:17;1865:10:13;;;1861:21;;1650:247;;;;;1861:21;1877:5;;29965:66:14;489:11852:17;30015:1:14;489:11852:17;29965:66:14;;;29852:100;489:11852:17;;29865:7:14;29936:1;489:11852:17;;;;29852:100:14;;;29739;29823:1;489:11852:17;;;;;;29739:100:14;;;;29626;29710:1;489:11852:17;;;;;;29626:100:14;;;;29510:103;29596:2;489:11852:17;;;;;;29510:103:14;;;;29394;29480:2;489:11852:17;;;;;;29394:103:14;;;;29278;29364:2;;-1:-1:-1;489:11852:17;;;-1:-1:-1;29278:103:14;;;489:11852:17;;;;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;489:11852:17;;;;;:::o;1186:4022:8:-;;489:11852:17;;1515:16:8;1511:31;;2606:24;2517:27;2522:21;2523:15;489:11852:17;;2523:15:8;:::i;:::-;2542:1;489:11852:17;;;;2522:21:8;2517:27;:::i;:::-;2606:24;:::i;:::-;2641:2537;;;;;;;;;;;;;;;;;1530:1;2641:2537;;;;;;;;-1:-1:-1;;;2641:2537:8;;;;;;;;;;;;;;5188:13;1186:4022;:::o;2641:2537::-;;;-1:-1:-1;;2641:2537:8;;1186:4022;:::o;2641:2537::-;-1:-1:-1;2641:2537:8;;;-1:-1:-1;;2641:2537:8;;;-1:-1:-1;;2641:2537:8;;1186:4022;:::o;2641:2537::-;;;;;;;;;;;;;775:4;2641:2537;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:31;489:11852:17;;;;:::i"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","authorizedMinters(address)":"aa2fe91b","balanceOf(address)":"70a08231","baseURI()":"6c0360eb","getApproved(uint256)":"081812fc","getStatistics()":"372d6b27","getTokenIdByIPFS(string)":"b04458ca","getTokenMetadata(uint256)":"60316801","getTokensByOwner(address)":"40398d67","ipfsToTokenId(string)":"feb44988","isApprovedForAll(address,address)":"e985e9c5","isValidNFT(uint256)":"a2f1c87b","mintAuthenticityNFT(address,string,uint256,string)":"9450b3d6","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","revokeNFT(uint256,string)":"558381e7","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","setAuthorizedMinter(address,bool)":"ed58bad8","setBaseURI(string)":"55f804b3","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenMetadata(uint256)":"6914db60","tokenURI(uint256)":"c87b56dd","totalMinted()":"a2309ff8","totalRevoked()":"e62ce7ac","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"confidenceScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"aiModel\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AuthenticityNFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"oldBaseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"newBaseURI\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BaseURIUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"MinterAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NFTRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedMinters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStatistics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalMinted_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalRevoked_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalActive\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"getTokenIdByIPFS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getTokenMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"confidenceScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiModel\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"verificationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originalRequester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRevoked\",\"type\":\"bool\"}],\"internalType\":\"struct AuthenticityNFT.AuthenticityMetadata\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getTokensByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"ipfsToTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"isValidNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_confidenceScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_aiModel\",\"type\":\"string\"}],\"name\":\"mintAuthenticityNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_reason\",\"type\":\"string\"}],\"name\":\"revokeNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_authorized\",\"type\":\"bool\"}],\"name\":\"setAuthorizedMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenMetadata\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"confidenceScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiModel\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"verificationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"originalRequester\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isRevoked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRevoked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A NFT contract for authenticity certificates\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"baseURI()\":{\"returns\":{\"_0\":\"Base URI string\"}},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"_baseURI\":\"Base URI for token metadata\",\"_initialOwner\":\"Initial owner of the contract\",\"_name\":\"Token name\",\"_symbol\":\"Token symbol\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getStatistics()\":{\"returns\":{\"totalActive\":\"Total active NFTs\",\"totalMinted_\":\"Total NFTs minted\",\"totalRevoked_\":\"Total NFTs revoked\"}},\"getTokenIdByIPFS(string)\":{\"params\":{\"_ipfsHash\":\"IPFS hash of content\"},\"returns\":{\"_0\":\"tokenId Token ID (0 if no NFT exists)\"}},\"getTokenMetadata(uint256)\":{\"params\":{\"_tokenId\":\"Token ID\"},\"returns\":{\"_0\":\"metadata The token metadata\"}},\"getTokensByOwner(address)\":{\"params\":{\"_owner\":\"Owner address\"},\"returns\":{\"_0\":\"tokenIds Array of token IDs\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"isValidNFT(uint256)\":{\"params\":{\"_tokenId\":\"Token ID\"},\"returns\":{\"_0\":\"isValid Whether the NFT is valid\"}},\"mintAuthenticityNFT(address,string,uint256,string)\":{\"params\":{\"_aiModel\":\"AI model used for verification\",\"_confidenceScore\":\"AI confidence score (0-100)\",\"_ipfsHash\":\"IPFS hash of verified content\",\"_to\":\"Address to mint NFT to\"},\"returns\":{\"_0\":\"tokenId The ID of the minted token\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"revokeNFT(uint256,string)\":{\"params\":{\"_reason\":\"Reason for revocation\",\"_tokenId\":\"Token ID to revoke\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setAuthorizedMinter(address,bool)\":{\"params\":{\"_authorized\":\"Authorization status\",\"_minter\":\"Minter address\"}},\"setBaseURI(string)\":{\"params\":{\"_baseURI\":\"New base URI\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface ID\"},\"returns\":{\"_0\":\"Whether interface is supported\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"params\":{\"_tokenId\":\"Token ID\"},\"returns\":{\"_0\":\"Token URI string\"}},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"version()\":{\"returns\":{\"_0\":\"Version string\"}}},\"title\":\"AuthenticityNFT\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"baseURI()\":{\"notice\":\"Get base URI\"},\"getStatistics()\":{\"notice\":\"Get contract statistics\"},\"getTokenIdByIPFS(string)\":{\"notice\":\"Check if content has an NFT\"},\"getTokenMetadata(uint256)\":{\"notice\":\"Get NFT metadata for a token\"},\"getTokensByOwner(address)\":{\"notice\":\"Get tokens owned by an address\"},\"isValidNFT(uint256)\":{\"notice\":\"Check if NFT is valid (not revoked)\"},\"mintAuthenticityNFT(address,string,uint256,string)\":{\"notice\":\"Mint authenticity NFT (only authorized minters)\"},\"revokeNFT(uint256,string)\":{\"notice\":\"Revoke NFT (owner only - for emergency cases)\"},\"setAuthorizedMinter(address,bool)\":{\"notice\":\"Authorize/deauthorize minter (owner only)\"},\"setBaseURI(string)\":{\"notice\":\"Set base URI (owner only)\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check if contract supports interface\"},\"tokenURI(uint256)\":{\"notice\":\"Generate token URI with dynamic metadata\"},\"version()\":{\"notice\":\"Get contract version\"}},\"notice\":\"This contract creates NFT certificates for verified authentic content\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AuthenticityNFT.sol\":\"AuthenticityNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AuthenticityNFT.sol\":{\"keccak256\":\"0x7042c181cd9f976125382995cba5f8f1f44875abb54dc2d5f8ace82655cf7252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f24fac5a8f844f0afb3ffd2f818ccaedd0b03bf7b818fba2ef3c66e7ee9f6139\",\"dweb:/ipfs/QmUvZCEqUJHX6wBp52T4oQaqBUuWs6fv58SRHQ6otomyaS\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}"}},"contracts/AuthenticityRegistry.sol":{"AuthenticityRegistry":{"abi":[{"inputs":[{"internalType":"address","name":"_router","type":"address"},{"internalType":"uint64","name":"_subscriptionId","type":"uint64"},{"internalType":"uint32","name":"_gasLimit","type":"uint32"},{"internalType":"bytes32","name":"_donID","type":"bytes32"},{"internalType":"string","name":"_sourceCode","type":"string"},{"internalType":"address","name":"_nftContract","type":"address"},{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"EmptyArgs","type":"error"},{"inputs":[],"name":"EmptySource","type":"error"},{"inputs":[],"name":"EnforcedPause","type":"error"},{"inputs":[],"name":"ExpectedPause","type":"error"},{"inputs":[],"name":"NoInlineSecrets","type":"error"},{"inputs":[],"name":"OnlyRouterCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":true,"internalType":"address","name":"reporter","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"ContentFlagged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"verificationFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"nftMintFee","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"FeesUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"FundsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"NFTMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"RequestSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":true,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":false,"internalType":"bool","name":"isAuthentic","type":"bool"},{"indexed":false,"internalType":"uint256","name":"confidenceScore","type":"uint256"},{"indexed":false,"internalType":"string","name":"aiModel","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VerificationCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"requestId","type":"bytes32"},{"indexed":true,"internalType":"address","name":"requester","type":"address"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":false,"internalType":"string","name":"mediaType","type":"string"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"}],"name":"VerificationRequested","type":"event"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allFlaggedContent","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allRequestIds","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"allVerifiedContent","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"authenticityNFT","outputs":[{"internalType":"contract AuthenticityNFT","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"donID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"emergencyFlagContent","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"flaggedContent","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"gasLimit","outputs":[{"internalType":"uint32","name":"","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllFlaggedContent","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getAllVerifiedContent","outputs":[{"internalType":"string[]","name":"","type":"string[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getStatistics","outputs":[{"internalType":"uint256","name":"totalVerifications_","type":"uint256"},{"internalType":"uint256","name":"totalAuthentic_","type":"uint256"},{"internalType":"uint256","name":"totalFake_","type":"uint256"},{"internalType":"uint256","name":"totalNFTsMinted_","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getUserRequests","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"getVerificationResult","outputs":[{"components":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bool","name":"isAuthentic","type":"bool"},{"internalType":"uint256","name":"confidenceScore","type":"uint256"},{"internalType":"string","name":"aiModel","type":"string"},{"internalType":"string","name":"reasoning","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"internalType":"struct AuthenticityRegistry.VerificationResult","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bytes","name":"response","type":"bytes"},{"internalType":"bytes","name":"err","type":"bytes"}],"name":"handleOracleFulfillment","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ipfsHash","type":"string"}],"name":"mintAuthenticityNFT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"nftMintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_ipfsHash","type":"string"},{"internalType":"string","name":"_mediaType","type":"string"}],"name":"requestVerification","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"sourceCode","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"subscriptionId","outputs":[{"internalType":"uint64","name":"","type":"uint64"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAuthentic","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalFake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalNFTsMinted","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalVerifications","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subscriptionId","type":"uint64"},{"internalType":"uint32","name":"_gasLimit","type":"uint32"},{"internalType":"bytes32","name":"_donID","type":"bytes32"},{"internalType":"string","name":"_sourceCode","type":"string"}],"name":"updateChainlinkConfig","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_verificationFee","type":"uint256"},{"internalType":"uint256","name":"_nftMintFee","type":"uint256"}],"name":"updateFees","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userRequests","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"verificationFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"verificationRequests","outputs":[{"internalType":"address","name":"requester","type":"address"},{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"string","name":"mediaType","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isProcessed","type":"bool"},{"internalType":"bool","name":"isAuthentic","type":"bool"},{"internalType":"uint256","name":"confidenceScore","type":"uint256"},{"internalType":"string","name":"aiModel","type":"string"},{"internalType":"uint256","name":"nftTokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"verificationResults","outputs":[{"internalType":"bytes32","name":"requestId","type":"bytes32"},{"internalType":"bool","name":"isAuthentic","type":"bool"},{"internalType":"uint256","name":"confidenceScore","type":"uint256"},{"internalType":"string","name":"aiModel","type":"string"},{"internalType":"string","name":"reasoning","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"withdrawFunds","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":852,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":815,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"60c06040523461032a576138fe803803806100198161032f565b92833981019060e08183031261032a5761003281610354565b602082810151919390916001600160401b0390818116810361032a5760408501519063ffffffff8216820361032a57606086015193608087015184811161032a57870194601f9282848801121561032a5786518681116102e757601f199761009f8287018a168b0161032f565b948286528a838301011161032a57899060005b838110610316575050600091850101526100da60c06100d360a08c01610354565b9a01610354565b6001600160a01b039a8b166080528a1680156102fd57600080546001600160a01b03198116831782558c16907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180805566038d7ea4c68000601055662386f26fc1000060115560028054610100600160681b03191660089390931b68ffffffffffffffff00169290921760489690961b6cffffffff0000000000000000001695909517905560035580519384116102e75760049586548481811c911680156102dd575b828210146102c857838111610282575b508092851160011461021e575083945090839291600094610213575b50501b916000199060031b1c19161790555b1660a0526040516135959081610369823960805181818161042d01526129ad015260a05181818161027d01526110fc0152f35b0151925038806101ce565b9294849081168760005284600020946000905b88838310610268575050501061024f575b505050811b0190556101e0565b015160001960f88460031b161c19169055388080610242565b858701518855909601959485019487935090810190610231565b87600052816000208480880160051c8201928489106102bf575b0160051c019085905b8281106102b35750506101b2565b600081550185906102a5565b9250819261029c565b602288634e487b7160e01b6000525260246000fd5b90607f16906101a2565b634e487b7160e01b600052604160045260246000fd5b604051631e4fbdf760e01b815260006004820152602490fd5b8181018301518782018401528b92016100b2565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176102e757604052565b51906001600160a01b038216820361032a5756fe6080604052600436101561001257600080fd5b60003560e01c806301ff8b7d1461026757806309c1ba2e146102625780630ca761751461025d5780630f3908c81461025857806313c601771461025357806324600fc31461024e578063263cb6b61461024957806335c1260d14610244578063372d6b271461023f57806339ffbe0b1461023a5780633f4ba83a146102355780634de2bfbf146102305780634eb7e95f1461022b57806354fd4d50146102265780635a55977e146102215780635c975abb1461021c5780636bc9d5b3146102175780636db79437146102125780636e74336b1461020d578063715018a61461020857806379cb62b0146102035780638047bc1d146101fe5780638456cb59146101f95780638da5cb5b146101f4578063968e5a0d146101ef578063a8c278a2146101ea578063ac90c140146101e5578063b32eaa0e146101e0578063b337cf74146101db578063b9f83f06146101d6578063bc9df56f146101d1578063c8b22d24146101cc578063cddc911f146101c7578063f16fb433146101c2578063f2fde38b146101bd578063f33b2491146101b85763f68016b7146101b357600080fd5b6117ee565b611770565b6116e8565b6116a9565b611601565b611513565b6113ec565b6113ce565b611347565b6112e5565b6112c7565b6112a9565b611258565b61122f565b6111d5565b61101d565b610e9f565b610e44565b610e26565b610dc8565b610d77565b610d54565b610ccc565b610c0d565b610bef565b6109fa565b610990565b610972565b61093b565b61091d565b6108c5565b6107ab565b61077b565b6106f3565b6103de565b6102b1565b346102ac5760003660031901126102ac576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600080fd5b346102ac5760003660031901126102ac5760206001600160401b0360025460081c16604051908152f35b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b0382111761030c57604052565b6102db565b604081019081106001600160401b0382111761030c57604052565b90601f801991011681019081106001600160401b0382111761030c57604052565b6040519061012082018281106001600160401b0382111761030c57604052565b6040519061037a826102f1565b565b6001600160401b03811161030c57601f01601f191660200190565b81601f820112156102ac578035906103ae8261037c565b926103bc604051948561032c565b828452602083830101116102ac57816000926020809301838601378301015290565b346102ac5760603660031901126102ac576004356001600160401b036024358181116102ac57610412903690600401610397565b906044359081116102ac5761042b903690600401610397565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361048c576104659183612448565b7f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e6600080a2005b60405163c6829f8360e01b8152600490fd5b90600182811c921680156104ce575b60208310146104b857565b634e487b7160e01b600052602260045260246000fd5b91607f16916104ad565b60405190600082600454916104ec8361049e565b808352926020906001908181169081156105785750600114610517575b505061037a9250038361032c565b91509260046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b936000925b828410610560575061037a9450505081016020013880610509565b85548885018301529485019487945092810192610545565b9150506020925061037a94915060ff191682840152151560051b8201013880610509565b906040519182600082546105af8161049e565b9081845260209460019160018116908160001461061d57506001146105de575b50505061037a9250038361032c565b600090815285812095935091905b81831061060557505061037a93508201013880806105cf565b855488840185015294850194879450918301916105ec565b9250505061037a94925060ff191682840152151560051b8201013880806105cf565b60005b8381106106525750506000910152565b8181015183820152602001610642565b9060209161067b8151809281855285808601910161063f565b601f01601f1916010190565b99989793949061010097936106ba6106ee98946106c8938e6101209160018060a01b031681528160208201520190610662565b8c810360408e015290610662565b9460608b0152151560808a0152151560a089015260c088015286820360e0880152610662565b930152565b346102ac5760203660031901126102ac57600435600090815260056020526040902080546001600160a01b031661077761072f6001840161059c565b9161073c6002850161059c565b936003810154916004820154600583015491600761075c6006860161059c565b9401549460405198899860ff808660081c169516938a610687565b0390f35b346102ac5760003660031901126102ac576107776107976104d8565b604051918291602083526020830190610662565b346102ac57600080600319360112610879576107c56125cb565b47801561083d5781547ffbc3a599b784fe88772fc5abcc07223f64ca0b13acc341f4fb1e46bef0510eb490610837906001600160a01b039061081d908690819081908190899087165af1610817611838565b50611868565b845460408051958652426020870152911693918291820190565b0390a280f35b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b80fd5b600435906001600160a01b03821682036102ac57565b634e487b7160e01b600052603260045260246000fd5b80548210156108c05760005260206000200190600090565b610892565b346102ac5760403660031901126102ac576108de61087c565b6001600160a01b03166000908152600760205260409020805460243591908210156102ac5760209161090f916108a8565b90546040519160031b1c8152f35b346102ac5760003660031901126102ac576020600d54604051908152f35b346102ac5760003660031901126102ac576080600c54600d54600e54600f5491604051938452602084015260408301526060820152f35b346102ac5760003660031901126102ac576020600e54604051908152f35b346102ac5760003660031901126102ac576109a96125cb565b60025460ff8116156109e85760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b60403660031901126102ac576001600160401b036004358181116102ac57610a26903690600401610397565b90602435908082116102ac576020927f94238ad9433a44eacaeae5de7a6bed1a8c4d80b9a77ad9b5856d42646aa4a3b7610b30610a6a610bdb953690600401610397565b93610a736125f7565b610a7b61261a565b610a896010543410156118a8565b610a95845115156118e7565b610aa185511515611927565b610ab76005610aaf86610c80565b015415611968565b610b13610ac26119b4565b610ad3610acd6104d8565b82612a2f565b610b0e610ade611a14565b87610ae882611a5a565b52610af281611a5a565b5088610afd82611a67565b52610b0781611a67565b5082612638565b612787565b600254906003549263ffffffff8360481c169260081c1690612955565b938492610b95610b3e61034d565b338152828982015286604082015242606082015260006080820152600060a0820152600060c0820152610b6f611815565b60e08201526000610100820152610b90866000526005602052604060002090565b611c1c565b336000908152600760205260409020610baf908590611d1c565b610bb884611cd4565b610bcb610bc6600c54611d67565b600c55565b6040519182913396429184611d7b565b0390a3610be760018055565b604051908152f35b346102ac5760003660031901126102ac576020600f54604051908152f35b346102ac5760003660031901126102ac57610777604051610c2d81610311565b60058152640312e302e360dc1b6020820152604051918291602083526020830190610662565b60206003198201126102ac57600435906001600160401b0382116102ac57610c7d91600401610397565b90565b6020610c9991816040519382858094519384920161063f565b8101600681520301902090565b6020610cbf91816040519382858094519384920161063f565b8101600881520301902090565b346102ac57610ce2610cdd36610c53565b610c80565b805460ff60018301541691610d4a600282015491610d3c610d056003830161059c565b6005610d136004850161059c565b93015494604051978897885215156020880152604087015260c0606087015260c0860190610662565b908482036080860152610662565b9060a08301520390f35b346102ac5760003660031901126102ac57602060ff600254166040519015158152f35b346102ac5760203660031901126102ac57600435600a548110156102ac5761079761077791600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80161059c565b346102ac5760403660031901126102ac577fcf8a1e1d5f09cf3c97dbb653cd9a4d7aace9292fbc1bb8211febf2d400febbdd6060600435602435610e0a6125cb565b81601055806011556040519182526020820152426040820152a1005b346102ac5760003660031901126102ac576020600354604051908152f35b346102ac5760008060031936011261087957610e5e6125cb565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b346102ac5760803660031901126102ac576004356001600160401b0380821682036102ac576024359163ffffffff831683036102ac576064358281116102ac57610eed903690600401610397565b92610ef66125cb565b68ffffffffffffffff006cffffffff0000000000000000006002549260481b169260081b16906cffffffffffffffffffffffff0019161717600255604435600355815190811161030c57610f5481610f4f60045461049e565b611a8b565b602080601f8311600114610f9657508190610f8693600092610f8b575b50508160011b916000199060031b1c19161790565b600455005b015190503880610f71565b90601f19831693610fc960046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90565b926000905b8682106110055750508360019510610fec575b505050811b01600455005b015160001960f88460031b161c19169055388080610fe1565b80600185968294968601518155019501930190610fce565b6110f861102936610c53565b6110316125f7565b61103961261a565b611047601154341015611da4565b61105861105382610c80565b611df0565b9061106860a08301511515611e49565b61107d6110786020840151151590565b611e8c565b60206040830192611092605085511015611ed8565b6110a781516000526005602052604060002090565b80546001600160a01b0391606091600791906110c69085163314611f24565b01956110d3875415611f70565b51920151916000604051809881958294634a2859eb60e11b8452893360048601611fc0565b03927f0000000000000000000000000000000000000000000000000000000000000000165af19081156111d0576107779360009261119d575b508161115192935561114c611147600f54611d67565b600f55565b612006565b604080518381524260208201523392917f6d17924bd76c5e1fe0e46264cf6f9d66b1a75b860335729e9d45f1d0ab4446ab91a361118d60018055565b6040519081529081906020820190565b61115192506111c39060203d6020116111c9575b6111bb818361032c565b810190611fb1565b91611131565b503d6111b1565b611ffa565b346102ac5760003660031901126102ac576111ee6125cb565b6111f661261a565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102ac5760003660031901126102ac576000546040516001600160a01b039091168152602090f35b346102ac5760203660031901126102ac576004356009548110156102ac5760209060096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154604051908152f35b346102ac5760003660031901126102ac576020601054604051908152f35b346102ac5760003660031901126102ac576020600c54604051908152f35b346102ac57602060ff6112ff6112fa36610c53565b610ca6565b54166040519015158152f35b602090602060408183019282815285518094520193019160005b828110611333575050505090565b835185529381019392810192600101611325565b346102ac576020806003193601126102ac576001600160a01b0361136961087c565b1660005260076020526040600020906040519081602084549182815201936000526020600020916000905b8282106113b757610777856113ab8189038261032c565b6040519182918261130b565b835486529485019460019384019390910190611394565b346102ac5760003660031901126102ac576020601154604051908152f35b346102ac576113fa36610c53565b6114026125cb565b60ff61140d82610ca6565b541661146a578061143061142361143993610ca6565b805460ff19166001179055565b61114c81612026565b6040514281523391907fab9e11a26bcf11da1acec616512e75c224c85dbe525ebed13e7c583a299bbc5a90602090a3005b60405162461bcd60e51b815260206004820152601760248201527f436f6e74656e7420616c726561647920666c61676765640000000000000000006044820152606490fd5b6020808201906020835283518092526040830192602060408460051b8301019501936000915b8483106114e55750505050505090565b9091929394958480611503600193603f198682030187528a51610662565b98019301930191949392906114d5565b346102ac5760003660031901126102ac57600a54611530816119fd565b61153d604051918261032c565b81815260209160208201600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8936000915b838310611587576040518061077787826114af565b60018281926115958961059c565b815201960192019194611572565b60208152815160208201526020820151151560408201526040820151606082015260c060a06115f86115e3606086015184608087015260e0860190610662565b6080860151858203601f190184870152610662565b93015191015290565b346102ac5761077761164861161536610c53565b600060a0604051611625816102f1565b828152826020820152826040820152606080820152606060808201520152610c80565b600560405191611657836102f1565b8054835260ff60018201541615156020840152600281015460408401526116806003820161059c565b60608401526116916004820161059c565b6080840152015460a0820152604051918291826115a3565b346102ac5760203660031901126102ac57600435600b548110156102ac5761079761077791600b6000526000805160206135408339815191520161059c565b346102ac5760203660031901126102ac5761170161087c565b6117096125cb565b6001600160a01b03908116801561175757600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b604051631e4fbdf760e01b815260006004820152602490fd5b346102ac5760003660031901126102ac57600b5461178d816119fd565b61179a604051918261032c565b81815260209160208201600b600052600080516020613540833981519152936000915b8383106117d2576040518061077787826114af565b60018281926117e08961059c565b8152019601920191946117bd565b346102ac5760003660031901126102ac57602063ffffffff60025460481c16604051908152f35b60405190602082018281106001600160401b0382111761030c5760405260008252565b3d15611863573d906118498261037c565b91611857604051938461032c565b82523d6000602084013e565b606090565b1561186f57565b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b156118af57565b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b156118ee57565b60405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c84092a08ca640d0c2e6d607b1b6044820152606490fd5b1561192e57565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206d65646961207479706560701b6044820152606490fd5b1561196f57565b60405162461bcd60e51b815260206004820152601860248201527f436f6e74656e7420616c726561647920766572696669656400000000000000006044820152606490fd5b6040519060e082018281106001600160401b0382111761030c57604052606060c08360008152600060208201526000604082015282808201528260808201528260a08201520152565b6001600160401b03811161030c5760051b60200190565b6040906040519160608084018481106001600160401b0382111761030c57604052600284528360005b838110611a4a5750505050565b8083602080938501015201611a3d565b8051156108c05760200190565b8051600110156108c05760400190565b80518210156108c05760209160051b010190565b601f8111611a97575050565b60009060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906020601f850160051c83019410611af3575b601f0160051c01915b828110611ae857505050565b818155600101611adc565b9092508290611ad3565b90601f8111611b0b57505050565b6000916000526020600020906020601f850160051c83019410611b49575b601f0160051c01915b828110611b3e57505050565b818155600101611b32565b9092508290611b29565b91909182516001600160401b03811161030c57611b7a81611b74845461049e565b84611afd565b602080601f8311600114611bb157508190611bad939495600092610f8b5750508160011b916000199060031b1c19161790565b9055565b90601f19831695611bc785600052602060002090565b926000905b888210611c0457505083600195969710611beb575b505050811b019055565b015160001960f88460031b161c19169055388080611be1565b80600185968294968601518155019501930190611bcc565b815181546001600160a01b0319166001600160a01b039091161781559060079061010090611c51602082015160018601611b53565b611c62604082015160028601611b53565b60608101516003850155611cb260048501611c95611c836080850151151590565b829060ff801983541691151516179055565b60a08301511515815461ff00191690151560081b61ff0016179055565b60c08101516005850155611ccd60e082015160068601611b53565b0151910155565b600954600160401b81101561030c5760018101806009558110156108c05760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b8054600160401b81101561030c57611d39916001820181556108a8565b819291549060031b91821b91600019901b1916179055565b634e487b7160e01b600052601160045260246000fd5b6000198114611d765760010190565b611d51565b9392916106ee90611d96604093606088526060880190610662565b908682036020880152610662565b15611dab57565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e74204e4654206d696e7420666565000000000000006044820152606490fd5b90604051611dfd816102f1565b60a0600582948054845260ff6001820154161515602085015260028101546040850152611e2c6003820161059c565b6060850152611e3d6004820161059c565b60808501520154910152565b15611e5057565b60405162461bcd60e51b815260206004820152601460248201527310dbdb9d195b9d081b9bdd081d995c9a599a595960621b6044820152606490fd5b15611e9357565b60405162461bcd60e51b815260206004820152601860248201527f436f6e74656e74206973206e6f742061757468656e74696300000000000000006044820152606490fd5b15611edf57565b60405162461bcd60e51b815260206004820152601860248201527f436f6e666964656e63652073636f726520746f6f206c6f7700000000000000006044820152606490fd5b15611f2b57565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c79207265717565737465722063616e206d696e74204e465400000000006044820152606490fd5b15611f7757565b60405162461bcd60e51b815260206004820152601260248201527113919508185b1c9958591e481b5a5b9d195960721b6044820152606490fd5b908160209103126102ac575190565b6001600160a01b039091168152608060208201819052610c7d9492611fe791830190610662565b9260408201526060818403910152610662565b6040513d6000823e3d90fd5b61201e9060206040519282848094519384920161063f565b810103902090565b600b5490600160401b82101561030c576001820180600b558210156108c05761037a91600b60005260008051602061354083398151915201611b53565b1561206a57565b60405162461bcd60e51b815260206004820152601160248201527014995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606490fd5b156120aa57565b60405162461bcd60e51b815260206004820152601960248201527f5265717565737420616c72656164792070726f636573736564000000000000006044820152606490fd5b81601f820112156102ac5780516121058161037c565b92612113604051948561032c565b818452602082840101116102ac57610c7d916020808501910161063f565b906080828203126102ac57815180151581036102ac57926020830151926040810151926001600160401b03938481116102ac57816121709184016120ef565b9360608301519081116102ac57610c7d92016120ef565b6000929181546121968161049e565b926001918083169081156121f057506001146121b3575b50505050565b9091929394506000526020906020600020906000915b8583106121df57505050500190388080806121ad565b8054858401529183019181016121c9565b60ff19168452505050811515909102019150388080806121ad565b602061221d9160405192838092612187565b600681520301902090565b602061223a9160405192838092612187565b600881520301902090565b9060a06005918051845561226e60208201511515600186019060ff801983541691151516179055565b60408101516002850155612289606082015160038601611b53565b611ccd608082015160048601611b53565b91909182811461237d576122ae835461049e565b6001600160401b03811161030c576122ca81611b74845461049e565b600093601f821160011461230757611bad92939482916000926122fc5750508160011b916000199060031b1c19161790565b015490503880610f71565b61231b601f19831691600052602060002090565b9461232b84600052602060002090565b91815b8181106123655750958360019596971061234c57505050811b019055565b015460001960f88460031b161c19169055388080611be1565b8783015484556001938401939092019160200161232e565b509050565b600b5490600160401b82101561030c576001820180600b558210156108c05761037a91600b6000526000805160206135408339815191520161229a565b600a5490600160401b82101561030c576001820180600a558210156108c05761037a91600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80161229a565b61241e9060405191828092612187565b03902090565b9493926060926106ee92151587526020870152608060408701526080860190610662565b909161245e826000526005602052604060002090565b9261246e60038501541515612063565b600484019161248d612488612484855460ff1690565b1590565b6120a3565b516125b7579061250661258a61257b60016125546124d5876020807fa200e87a2f5086e32a1c23aced4fbe4be33197f26728243a2f4e04c31dc319579a518301019101612131565b9492896124ee829e949a939b600160ff19825416179055565b9061ff00825491151560081b169061ff001916179055565b8660058201556125198860068301611b53565b61252161036d565b8a81528b151560208201529387604086015288606086015260808501524260a0850152019161254f8361220b565b612245565b871561258f5761256d612568600d54611d67565b600d55565b612576816123bf565b61240e565b95604051938493429285612424565b0390a3565b6125a261259d600e54611d67565b600e55565b6125ae61142382612228565b61257681612382565b50805460ff191660011790555061037a9050565b6000546001600160a01b031633036125df57565b60405163118cdaa760e01b8152336004820152602490fd5b600260015414612608576002600155565b604051633ee5aeb560e01b8152600490fd5b60ff6002541661262657565b60405163d93c066560e01b8152600490fd5b8151156126455760a00152565b60405163fe936cb760e01b8152600490fd5b6040519061266482610311565b600c82526b31b7b232a637b1b0ba34b7b760a11b6020830152565b634e487b7160e01b600052602160045260246000fd5b6003111561269f57565b61267f565b604051906126b182610311565b60088252676c616e677561676560c01b6020830152565b6001111561269f57565b604051906126df82610311565b6006825265736f7572636560d01b6020830152565b6040519061270182610311565b60048252636172677360e01b6020830152565b6040519061272182610311565b600f82526e39b2b1b932ba39a637b1b0ba34b7b760891b6020830152565b6040519061274c82610311565b60078252667365637265747360c81b6020830152565b6040519061276f82610311565b600982526862797465734172677360b81b6020830152565b61278f612a72565b906127a161279b612657565b83612ac2565b6127be81516127af81612695565b6127b881612695565b83612b84565b6127c961279b6126a4565b6127e360408201516127da816126c8565b6127b8816126c8565b6127ee61279b6126d2565b6127fc606082015183612ac2565b60a081018051516128fc575b50608081019081515161287c575b60c0915001805151612829575b50515190565b9161283561279b612762565b61283e82612c40565b60005b83518051821015612869579061286361285c82600194611a77565b5185612d68565b01612841565b5050915061287681612cdb565b38612823565b60208101805161288b81612695565b61289481612695565b156128ea5760c0926128cd6128e5926128b46128ae612714565b88612ac2565b516128be81612695565b6128c781612695565b86612b84565b6128de6128d861273f565b86612ac2565b5184612d68565b612816565b60405163a80d31f760e01b8152600490fd5b9261290e6129086126f4565b84612ac2565b61291783612c40565b60005b84518051821015612942579061293c61293582600194611a77565b5186612ac2565b0161291a565b5050925061294f82612cdb565b38612808565b92906020926001600160401b039263ffffffff612994604051978896879663230e93b160e11b885216600487015260a0602487015260a4860190610662565b60016044860152921660648401526084830152038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156111d057600091612a10575b50807f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db8600080a290565b612a29915060203d6020116111c9576111bb818361032c565b386129e6565b815115612a46576000808252604082015260600152565b6040516322ce3edd60e01b8152600490fd5b60405190612a6582610311565b6000602083606081520152565b604051612a7e81610311565b612a86612a58565b8082526020820160008152612a99612a58565b5061010060208301526040518092526000825261012082019182106102ac576000916040525290565b8151612b069291906001600160401b0381169060178211612b0957612af19150606060ff84519216179061324c565b505b5190612afd612a58565b5080519161347c565b50565b5060ff8111612b2e57612b2890612b208351613053565b508251613408565b50612af3565b61ffff8111612b4d57612b2890612b458351612fee565b50825161339a565b63ffffffff8111612b6e57612b2890612b668351612f89565b50825161332a565b612b2890612b7c8351612f19565b5082516132b7565b90815191612b90612a58565b508251516001810190818111611d76576020850151811015612be9575b60c2602061037a9651928301015380518211612be1575b505060405191602083015260208252612bdc82610311565b612d68565b523880612bc4565b8160011b9482860460021483151715611d7657602081612c1b61037a98612c1460c295519184612dec565b5082612e3e565b5096505050612bad565b9060208201809211611d7657565b91908201809211611d7657565b805190612c4b612a58565b508151516001810190818111611d76576020840151811015612c99575b609f6020809551928301015380518211612c91575b50500180519060018201809211611d765752565b523880612c7d565b8160011b9382850460021483151715611d7657602081612cc28297612c14609f95519184612dec565b5095505050612c68565b601f19810191908211611d7657565b805190612ce6612a58565b508151516001810190818111611d76576020840151811015612d35575b60ff6020809551928301015380518211612d2d575b5050018051600019810191908211611d765752565b523880612d18565b8160011b9382850460021483151715611d7657602081612d5e8297612c1460ff95519184612dec565b5095505050612d03565b8151612b069291906001600160401b0381169060178211612d9757612af19150604060ff84519216179061324c565b5060ff8111612dae57612b2890612b2083516131e7565b61ffff8111612dc557612b2890612b458351613182565b63ffffffff8111612dde57612b2890612b66835161311d565b612b2890612b7c83516130b8565b90612df5612a58565b50601f811680612e24575b50806020830152604051908183526000825281016020019081106102ac5760405290565b60200360208111611d76578101809111611d765738612e00565b90612e47612a58565b50805190612e53612a58565b50612e618151831115613475565b82515191612e6f8184612c33565b60209260208601518211612eec575b602091865183815197820101968211612ee4575b505001915b80821015612ebc5750600019906020036101000a019081199051169082511617905290565b909192612ed8612ed2612ede9286518152612c25565b94612c25565b92612ccc565b90612e97565b523880612e92565b612efe612ef883612f03565b87613528565b612e7e565b908160011b9180830460021490151715611d7657565b612f21612a58565b508051516001810190818111611d76576020830151811015612f5a575b607b60208451928301015380518211612f5657505090565b5290565b8160011b82810460021483151715611d7657612f8390612f7c85519186612dec565b5084612e3e565b50612f3e565b612f91612a58565b508051516001810190818111611d76576020830151811015612fc6575b607a60208451928301015380518211612f5657505090565b8160011b82810460021483151715611d7657612fe890612f7c85519186612dec565b50612fae565b612ff6612a58565b508051516001810190818111611d7657602083015181101561302b575b607960208451928301015380518211612f5657505090565b8160011b82810460021483151715611d765761304d90612f7c85519186612dec565b50613013565b61305b612a58565b508051516001810190818111611d76576020830151811015613090575b607860208451928301015380518211612f5657505090565b8160011b82810460021483151715611d76576130b290612f7c85519186612dec565b50613078565b6130c0612a58565b508051516001810190818111611d765760208301518110156130f5575b605b60208451928301015380518211612f5657505090565b8160011b82810460021483151715611d765761311790612f7c85519186612dec565b506130dd565b613125612a58565b508051516001810190818111611d7657602083015181101561315a575b605a60208451928301015380518211612f5657505090565b8160011b82810460021483151715611d765761317c90612f7c85519186612dec565b50613142565b61318a612a58565b508051516001810190818111611d765760208301518110156131bf575b605960208451928301015380518211612f5657505090565b8160011b82810460021483151715611d76576131e190612f7c85519186612dec565b506131a7565b6131ef612a58565b508051516001810190818111611d76576020830151811015613224575b605860208451928301015380518211612f5657505090565b8160011b82810460021483151715611d765761324690612f7c85519186612dec565b5061320c565b90613255612a58565b508151516001810191828211611d76576020840151821015613288575b60208451928301015380518211612f5657505090565b8260011b83810460021484151715611d76576132b1906132aa86519187612dec565b5085612e3e565b50613272565b906132c0612a58565b50815151806008019182600811611d765760208401518311613302575b6008845192830101906001600160401b031982511617905280518211612f5657505090565b8260011b83810460021484151715611d7657613324906132aa86519187612dec565b506132dd565b90613333612a58565b50815151806004019182600411611d765760208401518311613372575b60048451928301019063ffffffff1982511617905280518211612f5657505090565b8260011b83810460021484151715611d7657613394906132aa86519187612dec565b50613350565b906133a3612a58565b50815151806002019182600211611d7657602084015183116133e0575b60028451928301019061ffff1982511617905280518211612f5657505090565b8260011b83810460021484151715611d7657613402906132aa86519187612dec565b506133c0565b90613411612a58565b50815151806001019182600111611d76576020840151831161344d575b60018451928301019060ff1982511617905280518211612f5657505090565b8260011b83810460021484151715611d765761346f906132aa86519187612dec565b5061342e565b156102ac57565b9190613486612a58565b506134948151831115613475565b8251519160206134a48285612c33565b928193828701518111613511575b865183815197820101968211613509575b505001915b808210156134ed5750600019906020036101000a019081199051169082511617905290565b909192612ed8612ed26135039286518152612c25565b906134c8565b5238806134c3565b61352361351d82612f03565b88613528565b6134b2565b90612b069161353981519282612dec565b50612e3e56fe0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9a26469706673582212203c7793dd1030ae7d0b7d42f3d243c95b66a529f013fac8ce271a26a6c205f92a64736f6c63430008190033","opcodes":"PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x32A JUMPI PUSH2 0x38FE DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x32F JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0xE0 DUP2 DUP4 SUB SLT PUSH2 0x32A JUMPI PUSH2 0x32 DUP2 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD SWAP2 SWAP4 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 AND DUP2 SUB PUSH2 0x32A JUMPI PUSH1 0x40 DUP6 ADD MLOAD SWAP1 PUSH4 0xFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x32A JUMPI PUSH1 0x60 DUP7 ADD MLOAD SWAP4 PUSH1 0x80 DUP8 ADD MLOAD DUP5 DUP2 GT PUSH2 0x32A JUMPI DUP8 ADD SWAP5 PUSH1 0x1F SWAP3 DUP3 DUP5 DUP9 ADD SLT ISZERO PUSH2 0x32A JUMPI DUP7 MLOAD DUP7 DUP2 GT PUSH2 0x2E7 JUMPI PUSH1 0x1F NOT SWAP8 PUSH2 0x9F DUP3 DUP8 ADD DUP11 AND DUP12 ADD PUSH2 0x32F JUMP JUMPDEST SWAP5 DUP3 DUP7 MSTORE DUP11 DUP4 DUP4 ADD ADD GT PUSH2 0x32A JUMPI DUP10 SWAP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x316 JUMPI POP POP PUSH1 0x0 SWAP2 DUP6 ADD ADD MSTORE PUSH2 0xDA PUSH1 0xC0 PUSH2 0xD3 PUSH1 0xA0 DUP13 ADD PUSH2 0x354 JUMP JUMPDEST SWAP11 ADD PUSH2 0x354 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP11 DUP12 AND PUSH1 0x80 MSTORE DUP11 AND DUP1 ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE DUP13 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 DUP1 SSTORE PUSH7 0x38D7EA4C68000 PUSH1 0x10 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0x11 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0x68 SHL SUB NOT AND PUSH1 0x8 SWAP4 SWAP1 SWAP4 SHL PUSH9 0xFFFFFFFFFFFFFFFF00 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0x48 SWAP7 SWAP1 SWAP7 SHL PUSH13 0xFFFFFFFF000000000000000000 AND SWAP6 SWAP1 SWAP6 OR SWAP1 SSTORE PUSH1 0x3 SSTORE DUP1 MLOAD SWAP4 DUP5 GT PUSH2 0x2E7 JUMPI PUSH1 0x4 SWAP6 DUP7 SLOAD DUP5 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2DD JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH2 0x2C8 JUMPI DUP4 DUP2 GT PUSH2 0x282 JUMPI JUMPDEST POP DUP1 SWAP3 DUP6 GT PUSH1 0x1 EQ PUSH2 0x21E JUMPI POP DUP4 SWAP5 POP SWAP1 DUP4 SWAP3 SWAP2 PUSH1 0x0 SWAP5 PUSH2 0x213 JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST AND PUSH1 0xA0 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3595 SWAP1 DUP2 PUSH2 0x369 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 DUP2 DUP2 PUSH2 0x42D ADD MSTORE PUSH2 0x29AD ADD MSTORE PUSH1 0xA0 MLOAD DUP2 DUP2 DUP2 PUSH2 0x27D ADD MSTORE PUSH2 0x10FC ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH2 0x1CE JUMP JUMPDEST SWAP3 SWAP5 DUP5 SWAP1 DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH2 0x268 JUMPI POP POP POP LT PUSH2 0x24F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1E0 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x242 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH2 0x231 JUMP JUMPDEST DUP8 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP9 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP10 LT PUSH2 0x2BF JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP6 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH2 0x2B3 JUMPI POP POP PUSH2 0x1B2 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP6 SWAP1 PUSH2 0x2A5 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH2 0x29C JUMP JUMPDEST PUSH1 0x22 DUP9 PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x1A2 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP8 DUP3 ADD DUP5 ADD MSTORE DUP12 SWAP3 ADD PUSH2 0xB2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x2E7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x32A JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FF8B7D EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x9C1BA2E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xCA76175 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xF3908C8 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x13C60177 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x263CB6B6 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x35C1260D EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x372D6B27 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x39FFBE0B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x4DE2BFBF EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x4EB7E95F EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x5A55977E EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x6BC9D5B3 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6DB79437 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6E74336B EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x79CB62B0 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x8047BC1D EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x968E5A0D EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA8C278A2 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xAC90C140 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xB32EAA0E EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xB337CF74 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB9F83F06 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xBC9DF56F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC8B22D24 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xCDDC911F EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xF16FB433 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xF33B2491 EQ PUSH2 0x1B8 JUMPI PUSH4 0xF68016B7 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x1770 JUMP JUMPDEST PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x1513 JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST PUSH2 0xE44 JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x2 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x120 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37A DUP3 PUSH2 0x2F1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x30C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2AC JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x3AE DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP3 PUSH2 0x3BC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x32C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2AC JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0x412 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0x42B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x48C JUMPI PUSH2 0x465 SWAP2 DUP4 PUSH2 0x2448 JUMP JUMPDEST PUSH32 0x85E1543BF2F84FE80C6BADBCE3648C8539AD1DF4D2B3D822938CA0538BE727E6 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6829F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x4CE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x4B8 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x4 SLOAD SWAP2 PUSH2 0x4EC DUP4 PUSH2 0x49E JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x578 JUMPI POP PUSH1 0x1 EQ PUSH2 0x517 JUMPI JUMPDEST POP POP PUSH2 0x37A SWAP3 POP SUB DUP4 PUSH2 0x32C JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x560 JUMPI POP PUSH2 0x37A SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x509 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x545 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x37A SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x509 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x5AF DUP2 PUSH2 0x49E JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x61D JUMPI POP PUSH1 0x1 EQ PUSH2 0x5DE JUMPI JUMPDEST POP POP POP PUSH2 0x37A SWAP3 POP SUB DUP4 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x605 JUMPI POP POP PUSH2 0x37A SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x5CF JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x5EC JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x37A SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x652 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x642 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x67B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP10 SWAP9 SWAP8 SWAP4 SWAP5 SWAP1 PUSH2 0x100 SWAP8 SWAP4 PUSH2 0x6BA PUSH2 0x6EE SWAP9 SWAP5 PUSH2 0x6C8 SWAP4 DUP15 PUSH2 0x120 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x40 DUP15 ADD MSTORE SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP12 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x777 PUSH2 0x72F PUSH1 0x1 DUP5 ADD PUSH2 0x59C JUMP JUMPDEST SWAP2 PUSH2 0x73C PUSH1 0x2 DUP6 ADD PUSH2 0x59C JUMP JUMPDEST SWAP4 PUSH1 0x3 DUP2 ADD SLOAD SWAP2 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD SWAP2 PUSH1 0x7 PUSH2 0x75C PUSH1 0x6 DUP7 ADD PUSH2 0x59C JUMP JUMPDEST SWAP5 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0xFF DUP1 DUP7 PUSH1 0x8 SHR AND SWAP6 AND SWAP4 DUP11 PUSH2 0x687 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x777 PUSH2 0x797 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x879 JUMPI PUSH2 0x7C5 PUSH2 0x25CB JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x83D JUMPI DUP2 SLOAD PUSH32 0xFBC3A599B784FE88772FC5ABCC07223F64CA0B13ACC341F4FB1E46BEF0510EB4 SWAP1 PUSH2 0x837 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x81D SWAP1 DUP7 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP10 SWAP1 DUP8 AND GAS CALL PUSH2 0x817 PUSH2 0x1838 JUMP JUMPDEST POP PUSH2 0x1868 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE TIMESTAMP PUSH1 0x20 DUP8 ADD MSTORE SWAP2 AND SWAP4 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2066756E647320746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2AC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x8DE PUSH2 0x87C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x20 SWAP2 PUSH2 0x90F SWAP2 PUSH2 0x8A8 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x80 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x9A9 PUSH2 0x25CB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x9E8 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0xA26 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP1 DUP3 GT PUSH2 0x2AC JUMPI PUSH1 0x20 SWAP3 PUSH32 0x94238AD9433A44EACAEAE5DE7A6BED1A8C4D80B9A77AD9B5856D42646AA4A3B7 PUSH2 0xB30 PUSH2 0xA6A PUSH2 0xBDB SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP4 PUSH2 0xA73 PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0xA7B PUSH2 0x261A JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0xA95 DUP5 MLOAD ISZERO ISZERO PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0xAA1 DUP6 MLOAD ISZERO ISZERO PUSH2 0x1927 JUMP JUMPDEST PUSH2 0xAB7 PUSH1 0x5 PUSH2 0xAAF DUP7 PUSH2 0xC80 JUMP JUMPDEST ADD SLOAD ISZERO PUSH2 0x1968 JUMP JUMPDEST PUSH2 0xB13 PUSH2 0xAC2 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0xAD3 PUSH2 0xACD PUSH2 0x4D8 JUMP JUMPDEST DUP3 PUSH2 0x2A2F JUMP JUMPDEST PUSH2 0xB0E PUSH2 0xADE PUSH2 0x1A14 JUMP JUMPDEST DUP8 PUSH2 0xAE8 DUP3 PUSH2 0x1A5A JUMP JUMPDEST MSTORE PUSH2 0xAF2 DUP2 PUSH2 0x1A5A JUMP JUMPDEST POP DUP9 PUSH2 0xAFD DUP3 PUSH2 0x1A67 JUMP JUMPDEST MSTORE PUSH2 0xB07 DUP2 PUSH2 0x1A67 JUMP JUMPDEST POP DUP3 PUSH2 0x2638 JUMP JUMPDEST PUSH2 0x2787 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0x3 SLOAD SWAP3 PUSH4 0xFFFFFFFF DUP4 PUSH1 0x48 SHR AND SWAP3 PUSH1 0x8 SHR AND SWAP1 PUSH2 0x2955 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xB95 PUSH2 0xB3E PUSH2 0x34D JUMP JUMPDEST CALLER DUP2 MSTORE DUP3 DUP10 DUP3 ADD MSTORE DUP7 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xB6F PUSH2 0x1815 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xB90 DUP7 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C1C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBAF SWAP1 DUP6 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0xBB8 DUP5 PUSH2 0x1CD4 JUMP JUMPDEST PUSH2 0xBCB PUSH2 0xBC6 PUSH1 0xC SLOAD PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP7 TIMESTAMP SWAP2 DUP5 PUSH2 0x1D7B JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0xBE7 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x777 PUSH1 0x40 MLOAD PUSH2 0xC2D DUP2 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2AC JUMPI PUSH2 0xC7D SWAP2 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0xC99 SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x63F JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0xCBF SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x63F JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH2 0xCE2 PUSH2 0xCDD CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH2 0xD4A PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0xD3C PUSH2 0xD05 PUSH1 0x3 DUP4 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x5 PUSH2 0xD13 PUSH1 0x4 DUP6 ADD PUSH2 0x59C JUMP JUMPDEST SWAP4 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE ISZERO ISZERO PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH2 0x797 PUSH2 0x777 SWAP2 PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD PUSH2 0x59C JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH32 0xCF8A1E1D5F09CF3C97DBB653CD9A4D7AACE9292FBC1BB8211FEBF2D400FEBBDD PUSH1 0x60 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xE0A PUSH2 0x25CB JUMP JUMPDEST DUP2 PUSH1 0x10 SSTORE DUP1 PUSH1 0x11 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x879 JUMPI PUSH2 0xE5E PUSH2 0x25CB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x2AC JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH4 0xFFFFFFFF DUP4 AND DUP4 SUB PUSH2 0x2AC JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0xEED SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP3 PUSH2 0xEF6 PUSH2 0x25CB JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFF00 PUSH13 0xFFFFFFFF000000000000000000 PUSH1 0x2 SLOAD SWAP3 PUSH1 0x48 SHL AND SWAP3 PUSH1 0x8 SHL AND SWAP1 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND OR OR PUSH1 0x2 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x3 SSTORE DUP2 MLOAD SWAP1 DUP2 GT PUSH2 0x30C JUMPI PUSH2 0xF54 DUP2 PUSH2 0xF4F PUSH1 0x4 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF96 JUMPI POP DUP2 SWAP1 PUSH2 0xF86 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xF8B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x4 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xF71 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0xFC9 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1005 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0xFEC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xFE1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x10F8 PUSH2 0x1029 CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1031 PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0x1039 PUSH2 0x261A JUMP JUMPDEST PUSH2 0x1047 PUSH1 0x11 SLOAD CALLVALUE LT ISZERO PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x1058 PUSH2 0x1053 DUP3 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x1DF0 JUMP JUMPDEST SWAP1 PUSH2 0x1068 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x107D PUSH2 0x1078 PUSH1 0x20 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP4 ADD SWAP3 PUSH2 0x1092 PUSH1 0x50 DUP6 MLOAD LT ISZERO PUSH2 0x1ED8 JUMP JUMPDEST PUSH2 0x10A7 DUP2 MLOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x7 SWAP2 SWAP1 PUSH2 0x10C6 SWAP1 DUP6 AND CALLER EQ PUSH2 0x1F24 JUMP JUMPDEST ADD SWAP6 PUSH2 0x10D3 DUP8 SLOAD ISZERO PUSH2 0x1F70 JUMP JUMPDEST MLOAD SWAP3 ADD MLOAD SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x4A2859EB PUSH1 0xE1 SHL DUP5 MSTORE DUP10 CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x1FC0 JUMP JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x777 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x119D JUMPI JUMPDEST POP DUP2 PUSH2 0x1151 SWAP3 SWAP4 SSTORE PUSH2 0x114C PUSH2 0x1147 PUSH1 0xF SLOAD PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP3 SWAP2 PUSH32 0x6D17924BD76C5E1FE0E46264CF6F9D66B1A75B860335729E9D45F1D0AB4446AB SWAP2 LOG3 PUSH2 0x118D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1151 SWAP3 POP PUSH2 0x11C3 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11C9 JUMPI JUMPDEST PUSH2 0x11BB DUP2 DUP4 PUSH2 0x32C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST SWAP2 PUSH2 0x1131 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x1FFA JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x11EE PUSH2 0x25CB JUMP JUMPDEST PUSH2 0x11F6 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x12FF PUSH2 0x12FA CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1333 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1325 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1369 PUSH2 0x87C JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x13B7 JUMPI PUSH2 0x777 DUP6 PUSH2 0x13AB DUP2 DUP10 SUB DUP3 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x130B JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1394 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH2 0x13FA CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1402 PUSH2 0x25CB JUMP JUMPDEST PUSH1 0xFF PUSH2 0x140D DUP3 PUSH2 0xCA6 JUMP JUMPDEST SLOAD AND PUSH2 0x146A JUMPI DUP1 PUSH2 0x1430 PUSH2 0x1423 PUSH2 0x1439 SWAP4 PUSH2 0xCA6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x114C DUP2 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP2 SWAP1 PUSH32 0xAB9E11A26BCF11DA1ACEC616512E75C224C85DBE525EBED13E7C583A299BBC5A SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E7420616C726561647920666C6167676564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x14E5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1503 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x662 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0xA SLOAD PUSH2 0x1530 DUP2 PUSH2 0x19FD JUMP JUMPDEST PUSH2 0x153D PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x32C JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1587 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x777 DUP8 DUP3 PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x1595 DUP10 PUSH2 0x59C JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0xA0 PUSH2 0x15F8 PUSH2 0x15E3 PUSH1 0x60 DUP7 ADD MLOAD DUP5 PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD DUP5 DUP8 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH2 0x777 PUSH2 0x1648 PUSH2 0x1615 CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x1625 DUP2 PUSH2 0x2F1 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xC80 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1657 DUP4 PUSH2 0x2F1 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0xFF PUSH1 0x1 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1680 PUSH1 0x3 DUP3 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1691 PUSH1 0x4 DUP3 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x15A3 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH2 0x797 PUSH2 0x777 SWAP2 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH2 0x59C JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x1701 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x1709 PUSH2 0x25CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0x1757 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0xB SLOAD PUSH2 0x178D DUP2 PUSH2 0x19FD JUMP JUMPDEST PUSH2 0x179A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x32C JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x17D2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x777 DUP8 DUP3 PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x17E0 DUP10 PUSH2 0x59C JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x17BD JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH1 0x2 SLOAD PUSH1 0x48 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1863 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1849 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP2 PUSH2 0x1857 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x32C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x186F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18AF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E73756666696369656E7420666565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18EE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x92DCECC2D8D2C84092A08CA640D0C2E6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x192E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C6964206D656469612074797065 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x196F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E7420616C72656164792076657269666965640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE PUSH1 0x60 PUSH1 0xC0 DUP4 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x30C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP1 DUP5 ADD DUP5 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE PUSH1 0x2 DUP5 MSTORE DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1A4A JUMPI POP POP POP POP JUMP JUMPDEST DUP1 DUP4 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x1A3D JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A97 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1AF3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1AE8 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1ADC JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1B0B JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1B49 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1B3E JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B32 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x30C JUMPI PUSH2 0x1B7A DUP2 PUSH2 0x1B74 DUP5 SLOAD PUSH2 0x49E JUMP JUMPDEST DUP5 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1BB1 JUMPI POP DUP2 SWAP1 PUSH2 0x1BAD SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0xF8B JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x1BC7 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x1C04 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1BEB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1BE1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1BCC JUMP JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 PUSH1 0x7 SWAP1 PUSH2 0x100 SWAP1 PUSH2 0x1C51 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x1C62 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x1CB2 PUSH1 0x4 DUP6 ADD PUSH2 0x1C95 PUSH2 0x1C83 PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x1CCD PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x6 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x9 SSTORE DUP2 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH2 0x1D39 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x8A8 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1D76 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D51 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 PUSH2 0x6EE SWAP1 PUSH2 0x1D96 PUSH1 0x40 SWAP4 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST ISZERO PUSH2 0x1DAB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204E4654206D696E742066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1DFD DUP2 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x5 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE PUSH1 0xFF PUSH1 0x1 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1E2C PUSH1 0x3 DUP3 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x1E3D PUSH1 0x4 DUP3 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1E50 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10DBDB9D195B9D081B9BDD081D995C9A599A5959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E93 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E74206973206E6F742061757468656E7469630000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1EDF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E666964656E63652073636F726520746F6F206C6F770000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F2B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207265717565737465722063616E206D696E74204E46540000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F77 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13919508185B1C9958591E481B5A5B9D1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2AC JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xC7D SWAP5 SWAP3 PUSH2 0x1FE7 SWAP2 DUP4 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x201E SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x63F JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xB SSTORE DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x37A SWAP2 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH2 0x1B53 JUMP JUMPDEST ISZERO PUSH2 0x206A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14995C5D595CDD081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x20AA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792070726F63657373656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2AC JUMPI DUP1 MLOAD PUSH2 0x2105 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 PUSH2 0x2113 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x32C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x2AC JUMPI PUSH2 0xC7D SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x63F JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2AC JUMPI DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2AC JUMPI SWAP3 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP2 GT PUSH2 0x2AC JUMPI DUP2 PUSH2 0x2170 SWAP2 DUP5 ADD PUSH2 0x20EF JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0xC7D SWAP3 ADD PUSH2 0x20EF JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD PUSH2 0x2196 DUP2 PUSH2 0x49E JUMP JUMPDEST SWAP3 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x21F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x21B3 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x21DF JUMPI POP POP POP POP ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x21AD JUMP JUMPDEST DUP1 SLOAD DUP6 DUP5 ADD MSTORE SWAP2 DUP4 ADD SWAP2 DUP2 ADD PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x20 PUSH2 0x221D SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x223A SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xA0 PUSH1 0x5 SWAP2 DUP1 MLOAD DUP5 SSTORE PUSH2 0x226E PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x1 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x2289 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x1CCD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP2 EQ PUSH2 0x237D JUMPI PUSH2 0x22AE DUP4 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x30C JUMPI PUSH2 0x22CA DUP2 PUSH2 0x1B74 DUP5 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2307 JUMPI PUSH2 0x1BAD SWAP3 SWAP4 SWAP5 DUP3 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x22FC JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x231B PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x232B DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x2365 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x234C JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD SLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1BE1 JUMP JUMPDEST DUP8 DUP4 ADD SLOAD DUP5 SSTORE PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 ADD PUSH2 0x232E JUMP JUMPDEST POP SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xB SSTORE DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x37A SWAP2 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH2 0x229A JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x37A SWAP2 PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD PUSH2 0x229A JUMP JUMPDEST PUSH2 0x241E SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH2 0x2187 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH2 0x6EE SWAP3 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x245E DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x246E PUSH1 0x3 DUP6 ADD SLOAD ISZERO ISZERO PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SWAP2 PUSH2 0x248D PUSH2 0x2488 PUSH2 0x2484 DUP6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x20A3 JUMP JUMPDEST MLOAD PUSH2 0x25B7 JUMPI SWAP1 PUSH2 0x2506 PUSH2 0x258A PUSH2 0x257B PUSH1 0x1 PUSH2 0x2554 PUSH2 0x24D5 DUP8 PUSH1 0x20 DUP1 PUSH32 0xA200E87A2F5086E32A1C23ACED4FBE4BE33197F26728243A2F4E04C31DC31957 SWAP11 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x2131 JUMP JUMPDEST SWAP5 SWAP3 DUP10 PUSH2 0x24EE DUP3 SWAP15 SWAP5 SWAP11 SWAP4 SWAP12 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP7 PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x2519 DUP9 PUSH1 0x6 DUP4 ADD PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x2521 PUSH2 0x36D JUMP JUMPDEST DUP11 DUP2 MSTORE DUP12 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE SWAP4 DUP8 PUSH1 0x40 DUP7 ADD MSTORE DUP9 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP6 ADD MSTORE ADD SWAP2 PUSH2 0x254F DUP4 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x2245 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x258F JUMPI PUSH2 0x256D PUSH2 0x2568 PUSH1 0xD SLOAD PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0x2576 DUP2 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x240E JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 PUSH2 0x2424 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x25A2 PUSH2 0x259D PUSH1 0xE SLOAD PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH2 0x25AE PUSH2 0x1423 DUP3 PUSH2 0x2228 JUMP JUMPDEST PUSH2 0x2576 DUP2 PUSH2 0x2382 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH2 0x37A SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x25DF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2608 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x2626 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2645 JUMPI PUSH1 0xA0 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFE936CB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2664 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x31B7B232A637B1B0BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x269F JUMPI JUMP JUMPDEST PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x26B1 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x8 DUP3 MSTORE PUSH8 0x6C616E6775616765 PUSH1 0xC0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 GT ISZERO PUSH2 0x269F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x26DF DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x736F75726365 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2701 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x61726773 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2721 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0xF DUP3 MSTORE PUSH15 0x39B2B1B932BA39A637B1B0BA34B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x274C DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73656372657473 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x276F DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x627974657341726773 PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x278F PUSH2 0x2A72 JUMP JUMPDEST SWAP1 PUSH2 0x27A1 PUSH2 0x279B PUSH2 0x2657 JUMP JUMPDEST DUP4 PUSH2 0x2AC2 JUMP JUMPDEST PUSH2 0x27BE DUP2 MLOAD PUSH2 0x27AF DUP2 PUSH2 0x2695 JUMP JUMPDEST PUSH2 0x27B8 DUP2 PUSH2 0x2695 JUMP JUMPDEST DUP4 PUSH2 0x2B84 JUMP JUMPDEST PUSH2 0x27C9 PUSH2 0x279B PUSH2 0x26A4 JUMP JUMPDEST PUSH2 0x27E3 PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x27DA DUP2 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x27B8 DUP2 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x27EE PUSH2 0x279B PUSH2 0x26D2 JUMP JUMPDEST PUSH2 0x27FC PUSH1 0x60 DUP3 ADD MLOAD DUP4 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP1 MLOAD MLOAD PUSH2 0x28FC JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD SWAP1 DUP2 MLOAD MLOAD PUSH2 0x287C JUMPI JUMPDEST PUSH1 0xC0 SWAP2 POP ADD DUP1 MLOAD MLOAD PUSH2 0x2829 JUMPI JUMPDEST POP MLOAD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2835 PUSH2 0x279B PUSH2 0x2762 JUMP JUMPDEST PUSH2 0x283E DUP3 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2869 JUMPI SWAP1 PUSH2 0x2863 PUSH2 0x285C DUP3 PUSH1 0x1 SWAP5 PUSH2 0x1A77 JUMP JUMPDEST MLOAD DUP6 PUSH2 0x2D68 JUMP JUMPDEST ADD PUSH2 0x2841 JUMP JUMPDEST POP POP SWAP2 POP PUSH2 0x2876 DUP2 PUSH2 0x2CDB JUMP JUMPDEST CODESIZE PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH2 0x288B DUP2 PUSH2 0x2695 JUMP JUMPDEST PUSH2 0x2894 DUP2 PUSH2 0x2695 JUMP JUMPDEST ISZERO PUSH2 0x28EA JUMPI PUSH1 0xC0 SWAP3 PUSH2 0x28CD PUSH2 0x28E5 SWAP3 PUSH2 0x28B4 PUSH2 0x28AE PUSH2 0x2714 JUMP JUMPDEST DUP9 PUSH2 0x2AC2 JUMP JUMPDEST MLOAD PUSH2 0x28BE DUP2 PUSH2 0x2695 JUMP JUMPDEST PUSH2 0x28C7 DUP2 PUSH2 0x2695 JUMP JUMPDEST DUP7 PUSH2 0x2B84 JUMP JUMPDEST PUSH2 0x28DE PUSH2 0x28D8 PUSH2 0x273F JUMP JUMPDEST DUP7 PUSH2 0x2AC2 JUMP JUMPDEST MLOAD DUP5 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0x2816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA80D31F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 PUSH2 0x290E PUSH2 0x2908 PUSH2 0x26F4 JUMP JUMPDEST DUP5 PUSH2 0x2AC2 JUMP JUMPDEST PUSH2 0x2917 DUP4 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2942 JUMPI SWAP1 PUSH2 0x293C PUSH2 0x2935 DUP3 PUSH1 0x1 SWAP5 PUSH2 0x1A77 JUMP JUMPDEST MLOAD DUP7 PUSH2 0x2AC2 JUMP JUMPDEST ADD PUSH2 0x291A JUMP JUMPDEST POP POP SWAP3 POP PUSH2 0x294F DUP3 PUSH2 0x2CDB JUMP JUMPDEST CODESIZE PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH4 0xFFFFFFFF PUSH2 0x2994 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x230E93B1 PUSH1 0xE1 SHL DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x44 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A10 JUMPI JUMPDEST POP DUP1 PUSH32 0x1131472297A800FEE664D1D89CFA8F7676FF07189ECC53F80BBB5F4969099DB8 PUSH1 0x0 DUP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x2A29 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11C9 JUMPI PUSH2 0x11BB DUP2 DUP4 PUSH2 0x32C JUMP JUMPDEST CODESIZE PUSH2 0x29E6 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2A46 JUMPI PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22CE3EDD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A65 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH1 0x60 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7E DUP2 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x2A86 PUSH2 0x2A58 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH2 0x2A99 PUSH2 0x2A58 JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP2 DUP3 LT PUSH2 0x2AC JUMPI PUSH1 0x0 SWAP2 PUSH1 0x40 MSTORE MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x2B06 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x2B09 JUMPI PUSH2 0x2AF1 SWAP2 POP PUSH1 0x60 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x324C JUMP JUMPDEST POP JUMPDEST MLOAD SWAP1 PUSH2 0x2AFD PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD SWAP2 PUSH2 0x347C JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x2B2E JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B20 DUP4 MLOAD PUSH2 0x3053 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x3408 JUMP JUMPDEST POP PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x2B4D JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B45 DUP4 MLOAD PUSH2 0x2FEE JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x339A JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x2B6E JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B66 DUP4 MLOAD PUSH2 0x2F89 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x332A JUMP JUMPDEST PUSH2 0x2B28 SWAP1 PUSH2 0x2B7C DUP4 MLOAD PUSH2 0x2F19 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x32B7 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH2 0x2B90 PUSH2 0x2A58 JUMP JUMPDEST POP DUP3 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2BE9 JUMPI JUMPDEST PUSH1 0xC2 PUSH1 0x20 PUSH2 0x37A SWAP7 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2BE1 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH2 0x2BDC DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x2D68 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x2BC4 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP5 DUP3 DUP7 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP2 PUSH2 0x2C1B PUSH2 0x37A SWAP9 PUSH2 0x2C14 PUSH1 0xC2 SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x2DEC JUMP JUMPDEST POP DUP3 PUSH2 0x2E3E JUMP JUMPDEST POP SWAP7 POP POP POP PUSH2 0x2BAD JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D76 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D76 JUMPI JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x2C4B PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2C99 JUMPI JUMPDEST PUSH1 0x9F PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2C91 JUMPI JUMPDEST POP POP ADD DUP1 MLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D76 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x2C7D JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP2 PUSH2 0x2CC2 DUP3 SWAP8 PUSH2 0x2C14 PUSH1 0x9F SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x2DEC JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x2C68 JUMP JUMPDEST PUSH1 0x1F NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1D76 JUMPI JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x2CE6 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2D35 JUMPI JUMPDEST PUSH1 0xFF PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2D2D JUMPI JUMPDEST POP POP ADD DUP1 MLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1D76 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x2D18 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP2 PUSH2 0x2D5E DUP3 SWAP8 PUSH2 0x2C14 PUSH1 0xFF SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x2DEC JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x2D03 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x2B06 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x2D97 JUMPI PUSH2 0x2AF1 SWAP2 POP PUSH1 0x40 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x324C JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x2DAE JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B20 DUP4 MLOAD PUSH2 0x31E7 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x2DC5 JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B45 DUP4 MLOAD PUSH2 0x3182 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x2DDE JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B66 DUP4 MLOAD PUSH2 0x311D JUMP JUMPDEST PUSH2 0x2B28 SWAP1 PUSH2 0x2B7C DUP4 MLOAD PUSH2 0x30B8 JUMP JUMPDEST SWAP1 PUSH2 0x2DF5 PUSH2 0x2A58 JUMP JUMPDEST POP PUSH1 0x1F DUP2 AND DUP1 PUSH2 0x2E24 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 MSTORE PUSH1 0x0 DUP3 MSTORE DUP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 LT PUSH2 0x2AC JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 SUB PUSH1 0x20 DUP2 GT PUSH2 0x1D76 JUMPI DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1D76 JUMPI CODESIZE PUSH2 0x2E00 JUMP JUMPDEST SWAP1 PUSH2 0x2E47 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH2 0x2E53 PUSH2 0x2A58 JUMP JUMPDEST POP PUSH2 0x2E61 DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x3475 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH2 0x2E6F DUP2 DUP5 PUSH2 0x2C33 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 ADD MLOAD DUP3 GT PUSH2 0x2EEC JUMPI JUMPDEST PUSH1 0x20 SWAP2 DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x2EE4 JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2EBC JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2ED8 PUSH2 0x2ED2 PUSH2 0x2EDE SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2C25 JUMP JUMPDEST SWAP5 PUSH2 0x2C25 JUMP JUMPDEST SWAP3 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 PUSH2 0x2E97 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x2EFE PUSH2 0x2EF8 DUP4 PUSH2 0x2F03 JUMP JUMPDEST DUP8 PUSH2 0x3528 JUMP JUMPDEST PUSH2 0x2E7E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI JUMP JUMPDEST PUSH2 0x2F21 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2F5A JUMPI JUMPDEST PUSH1 0x7B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x2F83 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP DUP5 PUSH2 0x2E3E JUMP JUMPDEST POP PUSH2 0x2F3E JUMP JUMPDEST PUSH2 0x2F91 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2FC6 JUMPI JUMPDEST PUSH1 0x7A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x2FE8 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x2FAE JUMP JUMPDEST PUSH2 0x2FF6 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x302B JUMPI JUMPDEST PUSH1 0x79 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x304D SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x305B PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3090 JUMPI JUMPDEST PUSH1 0x78 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x30B2 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x30C0 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x30F5 JUMPI JUMPDEST PUSH1 0x5B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3117 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x30DD JUMP JUMPDEST PUSH2 0x3125 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x315A JUMPI JUMPDEST PUSH1 0x5A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x317C SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x3142 JUMP JUMPDEST PUSH2 0x318A PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x31BF JUMPI JUMPDEST PUSH1 0x59 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x31E1 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x31A7 JUMP JUMPDEST PUSH2 0x31EF PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3224 JUMPI JUMPDEST PUSH1 0x58 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3246 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x320C JUMP JUMPDEST SWAP1 PUSH2 0x3255 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP3 LT ISZERO PUSH2 0x3288 JUMPI JUMPDEST PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x32B1 SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP DUP6 PUSH2 0x2E3E JUMP JUMPDEST POP PUSH2 0x3272 JUMP JUMPDEST SWAP1 PUSH2 0x32C0 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x8 ADD SWAP2 DUP3 PUSH1 0x8 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3302 JUMPI JUMPDEST PUSH1 0x8 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3324 SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x32DD JUMP JUMPDEST SWAP1 PUSH2 0x3333 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x4 ADD SWAP2 DUP3 PUSH1 0x4 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3372 JUMPI JUMPDEST PUSH1 0x4 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH4 0xFFFFFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3394 SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x3350 JUMP JUMPDEST SWAP1 PUSH2 0x33A3 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x2 ADD SWAP2 DUP3 PUSH1 0x2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x33E0 JUMPI JUMPDEST PUSH1 0x2 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH2 0xFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3402 SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x33C0 JUMP JUMPDEST SWAP1 PUSH2 0x3411 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x1 ADD SWAP2 DUP3 PUSH1 0x1 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x344D JUMPI JUMPDEST PUSH1 0x1 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0xFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x346F SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x342E JUMP JUMPDEST ISZERO PUSH2 0x2AC JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3486 PUSH2 0x2A58 JUMP JUMPDEST POP PUSH2 0x3494 DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x3475 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH1 0x20 PUSH2 0x34A4 DUP3 DUP6 PUSH2 0x2C33 JUMP JUMPDEST SWAP3 DUP2 SWAP4 DUP3 DUP8 ADD MLOAD DUP2 GT PUSH2 0x3511 JUMPI JUMPDEST DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x3509 JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x34ED JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2ED8 PUSH2 0x2ED2 PUSH2 0x3503 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2C25 JUMP JUMPDEST SWAP1 PUSH2 0x34C8 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x34C3 JUMP JUMPDEST PUSH2 0x3523 PUSH2 0x351D DUP3 PUSH2 0x2F03 JUMP JUMPDEST DUP9 PUSH2 0x3528 JUMP JUMPDEST PUSH2 0x34B2 JUMP JUMPDEST SWAP1 PUSH2 0x2B06 SWAP2 PUSH2 0x3539 DUP2 MLOAD SWAP3 DUP3 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x2E3E JUMP INVALID ADD PUSH22 0xB7A638427703F0DBE7BB9BBF987A2551717B34E79F33 0xB5 0xB1 STOP DUP14 0x1F LOG0 SAR 0xB9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY PUSH24 0x93DD1030AE7D0B7D42F3D243C95B66A529F013FAC8CE271A 0x26 0xA6 0xC2 SDIV 0xF9 0x2A PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"640:13094:18:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;;;;;640:13094:18;;;;736:35:0;640:13094:18;;1273:26:7;;1269:95;;-1:-1:-1;640:13094:18;;-1:-1:-1;;;;;;640:13094:18;;;;;;;;;3052:40:7;;-1:-1:-1;3052:40:7;640:13094:18;;;;2289:11;;640:13094;2357:10;;640:13094;4123:32;640:13094;;-1:-1:-1;;;;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;4195:14;640:13094;;;;;;;;4219:24;640:13094;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;4195:14;640:13094;;;;;;;;;;4253:47;640:13094;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4195:14;640:13094;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;-1:-1:-1;640:13094:18;;4219:24;640:13094;;-1:-1:-1;640:13094:18;1269:95:7;640:13094:18;;-1:-1:-1;;;1322:31:7;;-1:-1:-1;1322:31:7;;;640:13094:18;;;1322:31:7;640:13094:18;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;-1:-1:-1;;640:13094:18;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;640:13094:18;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":2172,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_boolt_uint256t_stringt_string_fromMemory":{"entryPoint":8497,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_bytes":{"entryPoint":919,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_string":{"entryPoint":3155,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_string_fromMemory":{"entryPoint":8431,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256_fromMemory":{"entryPoint":8113,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_string_string_uint256_bool_bool_uint256_string_uint256":{"entryPoint":1671,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_address_string_uint256_string":{"entryPoint":8128,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_bytes32_dyn":{"entryPoint":4875,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_string_dyn":{"entryPoint":5295,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool_uint256_string_uint256":{"entryPoint":9252,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_string":{"entryPoint":1634,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_storage":{"entryPoint":8583,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_string_uint256":{"entryPoint":7547,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_struct_VerificationResult":{"entryPoint":5539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_and_zero_memory_array_array_string_dyn":{"entryPoint":6676,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_Request":{"entryPoint":6580,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_and_zero_memory_struct_struct_buffer":{"entryPoint":10840,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory":{"entryPoint":845,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_15398":{"entryPoint":877,"id":null,"parameterSlots":0,"returnSlots":1},"allocate_memory_array_bytes":{"entryPoint":6165,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_array_string_dyn":{"entryPoint":6653,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage_25549":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_push_from_bytes32_to_array_bytes32_dyn_storage_ptr":{"entryPoint":7452,"id":null,"parameterSlots":2,"returnSlots":0},"array_push_from_bytes32_to_array_bytes32_dyn_storage_ptr_15335":{"entryPoint":7380,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_string_storage_to_array_string__dyn_ptr":{"entryPoint":9090,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_string_storage_to_array_string_storage_dyn_ptr":{"entryPoint":9151,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_string_to_array_string_storage_dyn_ptr":{"entryPoint":8230,"id":null,"parameterSlots":1,"returnSlots":0},"checked_add_uint256":{"entryPoint":11315,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256_15435":{"entryPoint":11301,"id":null,"parameterSlots":1,"returnSlots":1},"checked_mul_uint256":{"entryPoint":12035,"id":null,"parameterSlots":1,"returnSlots":1},"checked_sub_uint256":{"entryPoint":11468,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":6909,"id":null,"parameterSlots":3,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_25548":{"entryPoint":6795,"id":null,"parameterSlots":2,"returnSlots":0},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"convert_contract_AuthenticityNFT_to_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":1436,"id":null,"parameterSlots":1,"returnSlots":1},"copy_array_from_storage_to_memory_string_15276":{"entryPoint":1240,"id":null,"parameterSlots":0,"returnSlots":1},"copy_byte_array_to_storage_from_string__to_string":{"entryPoint":8858,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":6995,"id":null,"parameterSlots":2,"returnSlots":0},"copy_literal_to_memory_3549a38a23cb1774056dbdf96dbc8ece30f733b8dd04641913d46a279936ce0b":{"entryPoint":10082,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_829231cb167e02f32beea96e7533af0ebdf9e1f7ccf9a7270e717c48fe6f0e8e":{"entryPoint":9892,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_82e791741c7274b123c7599c398a59441cc81a8ed229387daff72172292ba931":{"entryPoint":9815,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_d66480a2fe9622f21e4ac7cf8871545e676a686cade1079d79e2fb1df6a4f3ac":{"entryPoint":10047,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_e5edaa566e23eea054bbd292b7924839b5627321873e67e30cd0052468eaf099":{"entryPoint":9972,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_f7e3126f87228afb82c9b18537eed25aaeb8171a78814781c26ed2cfeff27e69":{"entryPoint":9938,"id":null,"parameterSlots":0,"returnSlots":1},"copy_literal_to_memory_fc4236fa30b862c671ead413b1a0f61e653ce5b99e29091ee0dc6fc114ee9cc8":{"entryPoint":10004,"id":null,"parameterSlots":0,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":1599,"id":null,"parameterSlots":3,"returnSlots":0},"copy_struct_to_storage_from_struct_VerificationRequest_to_struct_VerificationRequest":{"entryPoint":7196,"id":null,"parameterSlots":2,"returnSlots":0},"copy_struct_to_storage_from_struct_VerificationResult_to_struct_VerificationResult":{"entryPoint":8773,"id":null,"parameterSlots":2,"returnSlots":0},"external_fun_allFlaggedContent":{"entryPoint":5801,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allRequestIds":{"entryPoint":4696,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_allVerifiedContent":{"entryPoint":3447,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_authenticityNFT":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_donID":{"entryPoint":3622,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_emergencyFlagContent":{"entryPoint":5100,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_flaggedContent":{"entryPoint":4837,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_gasLimit":{"entryPoint":6126,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAllFlaggedContent":{"entryPoint":6000,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getAllVerifiedContent":{"entryPoint":5395,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getStatistics":{"entryPoint":2363,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getUserRequests":{"entryPoint":4935,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getVerificationResult":{"entryPoint":5633,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_handleOracleFulfillment":{"entryPoint":990,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_mintAuthenticityNFT":{"entryPoint":4125,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_nftMintFee":{"entryPoint":5070,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_owner":{"entryPoint":4655,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_pause":{"entryPoint":4565,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_paused":{"entryPoint":3412,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_renounceOwnership":{"entryPoint":3652,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_requestVerification":{"entryPoint":2554,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_sourceCode":{"entryPoint":1915,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_subscriptionId":{"entryPoint":689,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalAuthentic":{"entryPoint":2333,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalFake":{"entryPoint":2418,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalNFTsMinted":{"entryPoint":3055,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalVerifications":{"entryPoint":4807,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferOwnership":{"entryPoint":5864,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_unpause":{"entryPoint":2448,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateChainlinkConfig":{"entryPoint":3743,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_updateFees":{"entryPoint":3528,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_userRequests":{"entryPoint":2245,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verificationFee":{"entryPoint":4777,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verificationRequests":{"entryPoint":1779,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_verificationResults":{"entryPoint":3276,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_version":{"entryPoint":3085,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_withdrawFunds":{"entryPoint":1963,"id":null,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1182,"id":null,"parameterSlots":1,"returnSlots":1},"extract_from_storage_value_offsett_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":6200,"id":null,"parameterSlots":0,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":812,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_15308":{"entryPoint":753,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_15415":{"entryPoint":785,"id":null,"parameterSlots":1,"returnSlots":0},"fun_append":{"entryPoint":11838,"id":1008,"parameterSlots":2,"returnSlots":1},"fun_appendInt":{"entryPoint":13320,"id":1207,"parameterSlots":2,"returnSlots":1},"fun_appendInt_15425":{"entryPoint":12983,"id":1207,"parameterSlots":2,"returnSlots":1},"fun_appendInt_15427":{"entryPoint":13098,"id":1207,"parameterSlots":2,"returnSlots":1},"fun_appendInt_15429":{"entryPoint":13210,"id":1207,"parameterSlots":2,"returnSlots":1},"fun_appendUint8":{"entryPoint":12876,"id":1049,"parameterSlots":2,"returnSlots":1},"fun_appendUint8_25565":{"entryPoint":12057,"id":1049,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_25566":{"entryPoint":12169,"id":1049,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_25567":{"entryPoint":12270,"id":1049,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_25568":{"entryPoint":12371,"id":1049,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_25572":{"entryPoint":12472,"id":1049,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_25573":{"entryPoint":12573,"id":1049,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_25574":{"entryPoint":12674,"id":1049,"parameterSlots":1,"returnSlots":1},"fun_appendUint8_25575":{"entryPoint":12775,"id":1049,"parameterSlots":1,"returnSlots":1},"fun_append_988":{"entryPoint":13436,"id":988,"parameterSlots":3,"returnSlots":1},"fun_checkOwner":{"entryPoint":9675,"id":2152,"parameterSlots":0,"returnSlots":0},"fun_create":{"entryPoint":10866,"id":1289,"parameterSlots":0,"returnSlots":1},"fun_encodeCBOR":{"entryPoint":10119,"id":521,"parameterSlots":1,"returnSlots":1},"fun_endSequence":{"entryPoint":11483,"id":1632,"parameterSlots":1,"returnSlots":0},"fun_fulfillRequest":{"entryPoint":9288,"id":8754,"parameterSlots":3,"returnSlots":0},"fun_init":{"entryPoint":11756,"id":833,"parameterSlots":2,"returnSlots":1},"fun_initializeRequest":{"entryPoint":10799,"id":566,"parameterSlots":2,"returnSlots":0},"fun_nonReentrantAfter":{"entryPoint":null,"id":2557,"parameterSlots":0,"returnSlots":0},"fun_nonReentrantBefore":{"entryPoint":9719,"id":2549,"parameterSlots":0,"returnSlots":0},"fun_requireNotPaused":{"entryPoint":9754,"id":2454,"parameterSlots":0,"returnSlots":0},"fun_resize":{"entryPoint":13608,"id":886,"parameterSlots":2,"returnSlots":0},"fun_sendRequest":{"entryPoint":10581,"id":72,"parameterSlots":4,"returnSlots":1},"fun_setArgs":{"entryPoint":9784,"id":702,"parameterSlots":2,"returnSlots":0},"fun_startArray":{"entryPoint":11328,"id":1566,"parameterSlots":1,"returnSlots":0},"fun_writeBytes":{"entryPoint":11624,"id":1474,"parameterSlots":2,"returnSlots":0},"fun_writeString":{"entryPoint":10946,"id":1507,"parameterSlots":2,"returnSlots":0},"fun_writeUInt256":{"entryPoint":11140,"id":1343,"parameterSlots":2,"returnSlots":0},"increment_uint256":{"entryPoint":7527,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_array_bytes32_dyn_storage_of_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_bytes32_struct_VerificationRequest_storage_of_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_string_dyn":{"entryPoint":6775,"id":null,"parameterSlots":2,"returnSlots":1},"memory_array_index_access_string_dyn_15325":{"entryPoint":6746,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_string_dyn_15327":{"entryPoint":6759,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_storage_to_string":{"entryPoint":9230,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_storage_uint256_to_string_uint":{"entryPoint":8744,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_storage_uint256_to_string_uint_15399":{"entryPoint":8715,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_to_string":{"entryPoint":8198,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_uint256_to_string_uint":{"entryPoint":3238,"id":null,"parameterSlots":1,"returnSlots":1},"packed_hashed_string_uint256_to_string_uint_15285":{"entryPoint":3200,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":7505,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":9855,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":2194,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":731,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_reference_type_struct_VerificationResult":{"entryPoint":7664,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper":{"entryPoint":13429,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral":{"entryPoint":8048,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_08d9":{"entryPoint":8291,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_0a06":{"entryPoint":7820,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_14e7":{"entryPoint":6504,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_16b9":{"entryPoint":6375,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_1e26":{"entryPoint":7753,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_535f":{"entryPoint":8355,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_73a1":{"entryPoint":6439,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_7d42":{"entryPoint":6312,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_8406":{"entryPoint":7896,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_9566":{"entryPoint":7972,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_d471":{"entryPoint":7588,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ec24":{"entryPoint":6248,"id":null,"parameterSlots":1,"returnSlots":0},"revert_forward":{"entryPoint":8186,"id":null,"parameterSlots":0,"returnSlots":0},"storage_array_index_access_bytes32_dyn":{"entryPoint":2216,"id":null,"parameterSlots":2,"returnSlots":2},"update_storage_value_offsett_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool_15305":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_t_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_15296":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_15336":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_uint256_to_uint256_15404":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_CodeLanguage":{"entryPoint":9928,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_enum_Location":{"entryPoint":9877,"id":null,"parameterSlots":1,"returnSlots":0},"write_to_memory_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"17":[{"length":32,"start":1069},{"length":32,"start":10669}],"8293":[{"length":32,"start":637},{"length":32,"start":4348}]},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ff8b7d1461026757806309c1ba2e146102625780630ca761751461025d5780630f3908c81461025857806313c601771461025357806324600fc31461024e578063263cb6b61461024957806335c1260d14610244578063372d6b271461023f57806339ffbe0b1461023a5780633f4ba83a146102355780634de2bfbf146102305780634eb7e95f1461022b57806354fd4d50146102265780635a55977e146102215780635c975abb1461021c5780636bc9d5b3146102175780636db79437146102125780636e74336b1461020d578063715018a61461020857806379cb62b0146102035780638047bc1d146101fe5780638456cb59146101f95780638da5cb5b146101f4578063968e5a0d146101ef578063a8c278a2146101ea578063ac90c140146101e5578063b32eaa0e146101e0578063b337cf74146101db578063b9f83f06146101d6578063bc9df56f146101d1578063c8b22d24146101cc578063cddc911f146101c7578063f16fb433146101c2578063f2fde38b146101bd578063f33b2491146101b85763f68016b7146101b357600080fd5b6117ee565b611770565b6116e8565b6116a9565b611601565b611513565b6113ec565b6113ce565b611347565b6112e5565b6112c7565b6112a9565b611258565b61122f565b6111d5565b61101d565b610e9f565b610e44565b610e26565b610dc8565b610d77565b610d54565b610ccc565b610c0d565b610bef565b6109fa565b610990565b610972565b61093b565b61091d565b6108c5565b6107ab565b61077b565b6106f3565b6103de565b6102b1565b346102ac5760003660031901126102ac576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600080fd5b346102ac5760003660031901126102ac5760206001600160401b0360025460081c16604051908152f35b634e487b7160e01b600052604160045260246000fd5b60c081019081106001600160401b0382111761030c57604052565b6102db565b604081019081106001600160401b0382111761030c57604052565b90601f801991011681019081106001600160401b0382111761030c57604052565b6040519061012082018281106001600160401b0382111761030c57604052565b6040519061037a826102f1565b565b6001600160401b03811161030c57601f01601f191660200190565b81601f820112156102ac578035906103ae8261037c565b926103bc604051948561032c565b828452602083830101116102ac57816000926020809301838601378301015290565b346102ac5760603660031901126102ac576004356001600160401b036024358181116102ac57610412903690600401610397565b906044359081116102ac5761042b903690600401610397565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316330361048c576104659183612448565b7f85e1543bf2f84fe80c6badbce3648c8539ad1df4d2b3d822938ca0538be727e6600080a2005b60405163c6829f8360e01b8152600490fd5b90600182811c921680156104ce575b60208310146104b857565b634e487b7160e01b600052602260045260246000fd5b91607f16916104ad565b60405190600082600454916104ec8361049e565b808352926020906001908181169081156105785750600114610517575b505061037a9250038361032c565b91509260046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b936000925b828410610560575061037a9450505081016020013880610509565b85548885018301529485019487945092810192610545565b9150506020925061037a94915060ff191682840152151560051b8201013880610509565b906040519182600082546105af8161049e565b9081845260209460019160018116908160001461061d57506001146105de575b50505061037a9250038361032c565b600090815285812095935091905b81831061060557505061037a93508201013880806105cf565b855488840185015294850194879450918301916105ec565b9250505061037a94925060ff191682840152151560051b8201013880806105cf565b60005b8381106106525750506000910152565b8181015183820152602001610642565b9060209161067b8151809281855285808601910161063f565b601f01601f1916010190565b99989793949061010097936106ba6106ee98946106c8938e6101209160018060a01b031681528160208201520190610662565b8c810360408e015290610662565b9460608b0152151560808a0152151560a089015260c088015286820360e0880152610662565b930152565b346102ac5760203660031901126102ac57600435600090815260056020526040902080546001600160a01b031661077761072f6001840161059c565b9161073c6002850161059c565b936003810154916004820154600583015491600761075c6006860161059c565b9401549460405198899860ff808660081c169516938a610687565b0390f35b346102ac5760003660031901126102ac576107776107976104d8565b604051918291602083526020830190610662565b346102ac57600080600319360112610879576107c56125cb565b47801561083d5781547ffbc3a599b784fe88772fc5abcc07223f64ca0b13acc341f4fb1e46bef0510eb490610837906001600160a01b039061081d908690819081908190899087165af1610817611838565b50611868565b845460408051958652426020870152911693918291820190565b0390a280f35b60405162461bcd60e51b81526020600482015260146024820152734e6f2066756e647320746f20776974686472617760601b6044820152606490fd5b80fd5b600435906001600160a01b03821682036102ac57565b634e487b7160e01b600052603260045260246000fd5b80548210156108c05760005260206000200190600090565b610892565b346102ac5760403660031901126102ac576108de61087c565b6001600160a01b03166000908152600760205260409020805460243591908210156102ac5760209161090f916108a8565b90546040519160031b1c8152f35b346102ac5760003660031901126102ac576020600d54604051908152f35b346102ac5760003660031901126102ac576080600c54600d54600e54600f5491604051938452602084015260408301526060820152f35b346102ac5760003660031901126102ac576020600e54604051908152f35b346102ac5760003660031901126102ac576109a96125cb565b60025460ff8116156109e85760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b604051638dfc202b60e01b8152600490fd5b60403660031901126102ac576001600160401b036004358181116102ac57610a26903690600401610397565b90602435908082116102ac576020927f94238ad9433a44eacaeae5de7a6bed1a8c4d80b9a77ad9b5856d42646aa4a3b7610b30610a6a610bdb953690600401610397565b93610a736125f7565b610a7b61261a565b610a896010543410156118a8565b610a95845115156118e7565b610aa185511515611927565b610ab76005610aaf86610c80565b015415611968565b610b13610ac26119b4565b610ad3610acd6104d8565b82612a2f565b610b0e610ade611a14565b87610ae882611a5a565b52610af281611a5a565b5088610afd82611a67565b52610b0781611a67565b5082612638565b612787565b600254906003549263ffffffff8360481c169260081c1690612955565b938492610b95610b3e61034d565b338152828982015286604082015242606082015260006080820152600060a0820152600060c0820152610b6f611815565b60e08201526000610100820152610b90866000526005602052604060002090565b611c1c565b336000908152600760205260409020610baf908590611d1c565b610bb884611cd4565b610bcb610bc6600c54611d67565b600c55565b6040519182913396429184611d7b565b0390a3610be760018055565b604051908152f35b346102ac5760003660031901126102ac576020600f54604051908152f35b346102ac5760003660031901126102ac57610777604051610c2d81610311565b60058152640312e302e360dc1b6020820152604051918291602083526020830190610662565b60206003198201126102ac57600435906001600160401b0382116102ac57610c7d91600401610397565b90565b6020610c9991816040519382858094519384920161063f565b8101600681520301902090565b6020610cbf91816040519382858094519384920161063f565b8101600881520301902090565b346102ac57610ce2610cdd36610c53565b610c80565b805460ff60018301541691610d4a600282015491610d3c610d056003830161059c565b6005610d136004850161059c565b93015494604051978897885215156020880152604087015260c0606087015260c0860190610662565b908482036080860152610662565b9060a08301520390f35b346102ac5760003660031901126102ac57602060ff600254166040519015158152f35b346102ac5760203660031901126102ac57600435600a548110156102ac5761079761077791600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80161059c565b346102ac5760403660031901126102ac577fcf8a1e1d5f09cf3c97dbb653cd9a4d7aace9292fbc1bb8211febf2d400febbdd6060600435602435610e0a6125cb565b81601055806011556040519182526020820152426040820152a1005b346102ac5760003660031901126102ac576020600354604051908152f35b346102ac5760008060031936011261087957610e5e6125cb565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b346102ac5760803660031901126102ac576004356001600160401b0380821682036102ac576024359163ffffffff831683036102ac576064358281116102ac57610eed903690600401610397565b92610ef66125cb565b68ffffffffffffffff006cffffffff0000000000000000006002549260481b169260081b16906cffffffffffffffffffffffff0019161717600255604435600355815190811161030c57610f5481610f4f60045461049e565b611a8b565b602080601f8311600114610f9657508190610f8693600092610f8b575b50508160011b916000199060031b1c19161790565b600455005b015190503880610f71565b90601f19831693610fc960046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90565b926000905b8682106110055750508360019510610fec575b505050811b01600455005b015160001960f88460031b161c19169055388080610fe1565b80600185968294968601518155019501930190610fce565b6110f861102936610c53565b6110316125f7565b61103961261a565b611047601154341015611da4565b61105861105382610c80565b611df0565b9061106860a08301511515611e49565b61107d6110786020840151151590565b611e8c565b60206040830192611092605085511015611ed8565b6110a781516000526005602052604060002090565b80546001600160a01b0391606091600791906110c69085163314611f24565b01956110d3875415611f70565b51920151916000604051809881958294634a2859eb60e11b8452893360048601611fc0565b03927f0000000000000000000000000000000000000000000000000000000000000000165af19081156111d0576107779360009261119d575b508161115192935561114c611147600f54611d67565b600f55565b612006565b604080518381524260208201523392917f6d17924bd76c5e1fe0e46264cf6f9d66b1a75b860335729e9d45f1d0ab4446ab91a361118d60018055565b6040519081529081906020820190565b61115192506111c39060203d6020116111c9575b6111bb818361032c565b810190611fb1565b91611131565b503d6111b1565b611ffa565b346102ac5760003660031901126102ac576111ee6125cb565b6111f661261a565b600160ff1960025416176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b346102ac5760003660031901126102ac576000546040516001600160a01b039091168152602090f35b346102ac5760203660031901126102ac576004356009548110156102ac5760209060096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0154604051908152f35b346102ac5760003660031901126102ac576020601054604051908152f35b346102ac5760003660031901126102ac576020600c54604051908152f35b346102ac57602060ff6112ff6112fa36610c53565b610ca6565b54166040519015158152f35b602090602060408183019282815285518094520193019160005b828110611333575050505090565b835185529381019392810192600101611325565b346102ac576020806003193601126102ac576001600160a01b0361136961087c565b1660005260076020526040600020906040519081602084549182815201936000526020600020916000905b8282106113b757610777856113ab8189038261032c565b6040519182918261130b565b835486529485019460019384019390910190611394565b346102ac5760003660031901126102ac576020601154604051908152f35b346102ac576113fa36610c53565b6114026125cb565b60ff61140d82610ca6565b541661146a578061143061142361143993610ca6565b805460ff19166001179055565b61114c81612026565b6040514281523391907fab9e11a26bcf11da1acec616512e75c224c85dbe525ebed13e7c583a299bbc5a90602090a3005b60405162461bcd60e51b815260206004820152601760248201527f436f6e74656e7420616c726561647920666c61676765640000000000000000006044820152606490fd5b6020808201906020835283518092526040830192602060408460051b8301019501936000915b8483106114e55750505050505090565b9091929394958480611503600193603f198682030187528a51610662565b98019301930191949392906114d5565b346102ac5760003660031901126102ac57600a54611530816119fd565b61153d604051918261032c565b81815260209160208201600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8936000915b838310611587576040518061077787826114af565b60018281926115958961059c565b815201960192019194611572565b60208152815160208201526020820151151560408201526040820151606082015260c060a06115f86115e3606086015184608087015260e0860190610662565b6080860151858203601f190184870152610662565b93015191015290565b346102ac5761077761164861161536610c53565b600060a0604051611625816102f1565b828152826020820152826040820152606080820152606060808201520152610c80565b600560405191611657836102f1565b8054835260ff60018201541615156020840152600281015460408401526116806003820161059c565b60608401526116916004820161059c565b6080840152015460a0820152604051918291826115a3565b346102ac5760203660031901126102ac57600435600b548110156102ac5761079761077791600b6000526000805160206135408339815191520161059c565b346102ac5760203660031901126102ac5761170161087c565b6117096125cb565b6001600160a01b03908116801561175757600080546001600160a01b03198116831782559092167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b604051631e4fbdf760e01b815260006004820152602490fd5b346102ac5760003660031901126102ac57600b5461178d816119fd565b61179a604051918261032c565b81815260209160208201600b600052600080516020613540833981519152936000915b8383106117d2576040518061077787826114af565b60018281926117e08961059c565b8152019601920191946117bd565b346102ac5760003660031901126102ac57602063ffffffff60025460481c16604051908152f35b60405190602082018281106001600160401b0382111761030c5760405260008252565b3d15611863573d906118498261037c565b91611857604051938461032c565b82523d6000602084013e565b606090565b1561186f57565b60405162461bcd60e51b815260206004820152601160248201527015da5d1a191c985dd85b0819985a5b1959607a1b6044820152606490fd5b156118af57565b60405162461bcd60e51b815260206004820152601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b156118ee57565b60405162461bcd60e51b8152602060048201526011602482015270092dcecc2d8d2c84092a08ca640d0c2e6d607b1b6044820152606490fd5b1561192e57565b60405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206d65646961207479706560701b6044820152606490fd5b1561196f57565b60405162461bcd60e51b815260206004820152601860248201527f436f6e74656e7420616c726561647920766572696669656400000000000000006044820152606490fd5b6040519060e082018281106001600160401b0382111761030c57604052606060c08360008152600060208201526000604082015282808201528260808201528260a08201520152565b6001600160401b03811161030c5760051b60200190565b6040906040519160608084018481106001600160401b0382111761030c57604052600284528360005b838110611a4a5750505050565b8083602080938501015201611a3d565b8051156108c05760200190565b8051600110156108c05760400190565b80518210156108c05760209160051b010190565b601f8111611a97575050565b60009060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906020601f850160051c83019410611af3575b601f0160051c01915b828110611ae857505050565b818155600101611adc565b9092508290611ad3565b90601f8111611b0b57505050565b6000916000526020600020906020601f850160051c83019410611b49575b601f0160051c01915b828110611b3e57505050565b818155600101611b32565b9092508290611b29565b91909182516001600160401b03811161030c57611b7a81611b74845461049e565b84611afd565b602080601f8311600114611bb157508190611bad939495600092610f8b5750508160011b916000199060031b1c19161790565b9055565b90601f19831695611bc785600052602060002090565b926000905b888210611c0457505083600195969710611beb575b505050811b019055565b015160001960f88460031b161c19169055388080611be1565b80600185968294968601518155019501930190611bcc565b815181546001600160a01b0319166001600160a01b039091161781559060079061010090611c51602082015160018601611b53565b611c62604082015160028601611b53565b60608101516003850155611cb260048501611c95611c836080850151151590565b829060ff801983541691151516179055565b60a08301511515815461ff00191690151560081b61ff0016179055565b60c08101516005850155611ccd60e082015160068601611b53565b0151910155565b600954600160401b81101561030c5760018101806009558110156108c05760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0155565b8054600160401b81101561030c57611d39916001820181556108a8565b819291549060031b91821b91600019901b1916179055565b634e487b7160e01b600052601160045260246000fd5b6000198114611d765760010190565b611d51565b9392916106ee90611d96604093606088526060880190610662565b908682036020880152610662565b15611dab57565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e74204e4654206d696e7420666565000000000000006044820152606490fd5b90604051611dfd816102f1565b60a0600582948054845260ff6001820154161515602085015260028101546040850152611e2c6003820161059c565b6060850152611e3d6004820161059c565b60808501520154910152565b15611e5057565b60405162461bcd60e51b815260206004820152601460248201527310dbdb9d195b9d081b9bdd081d995c9a599a595960621b6044820152606490fd5b15611e9357565b60405162461bcd60e51b815260206004820152601860248201527f436f6e74656e74206973206e6f742061757468656e74696300000000000000006044820152606490fd5b15611edf57565b60405162461bcd60e51b815260206004820152601860248201527f436f6e666964656e63652073636f726520746f6f206c6f7700000000000000006044820152606490fd5b15611f2b57565b60405162461bcd60e51b815260206004820152601b60248201527f4f6e6c79207265717565737465722063616e206d696e74204e465400000000006044820152606490fd5b15611f7757565b60405162461bcd60e51b815260206004820152601260248201527113919508185b1c9958591e481b5a5b9d195960721b6044820152606490fd5b908160209103126102ac575190565b6001600160a01b039091168152608060208201819052610c7d9492611fe791830190610662565b9260408201526060818403910152610662565b6040513d6000823e3d90fd5b61201e9060206040519282848094519384920161063f565b810103902090565b600b5490600160401b82101561030c576001820180600b558210156108c05761037a91600b60005260008051602061354083398151915201611b53565b1561206a57565b60405162461bcd60e51b815260206004820152601160248201527014995c5d595cdd081b9bdd08199bdd5b99607a1b6044820152606490fd5b156120aa57565b60405162461bcd60e51b815260206004820152601960248201527f5265717565737420616c72656164792070726f636573736564000000000000006044820152606490fd5b81601f820112156102ac5780516121058161037c565b92612113604051948561032c565b818452602082840101116102ac57610c7d916020808501910161063f565b906080828203126102ac57815180151581036102ac57926020830151926040810151926001600160401b03938481116102ac57816121709184016120ef565b9360608301519081116102ac57610c7d92016120ef565b6000929181546121968161049e565b926001918083169081156121f057506001146121b3575b50505050565b9091929394506000526020906020600020906000915b8583106121df57505050500190388080806121ad565b8054858401529183019181016121c9565b60ff19168452505050811515909102019150388080806121ad565b602061221d9160405192838092612187565b600681520301902090565b602061223a9160405192838092612187565b600881520301902090565b9060a06005918051845561226e60208201511515600186019060ff801983541691151516179055565b60408101516002850155612289606082015160038601611b53565b611ccd608082015160048601611b53565b91909182811461237d576122ae835461049e565b6001600160401b03811161030c576122ca81611b74845461049e565b600093601f821160011461230757611bad92939482916000926122fc5750508160011b916000199060031b1c19161790565b015490503880610f71565b61231b601f19831691600052602060002090565b9461232b84600052602060002090565b91815b8181106123655750958360019596971061234c57505050811b019055565b015460001960f88460031b161c19169055388080611be1565b8783015484556001938401939092019160200161232e565b509050565b600b5490600160401b82101561030c576001820180600b558210156108c05761037a91600b6000526000805160206135408339815191520161229a565b600a5490600160401b82101561030c576001820180600a558210156108c05761037a91600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80161229a565b61241e9060405191828092612187565b03902090565b9493926060926106ee92151587526020870152608060408701526080860190610662565b909161245e826000526005602052604060002090565b9261246e60038501541515612063565b600484019161248d612488612484855460ff1690565b1590565b6120a3565b516125b7579061250661258a61257b60016125546124d5876020807fa200e87a2f5086e32a1c23aced4fbe4be33197f26728243a2f4e04c31dc319579a518301019101612131565b9492896124ee829e949a939b600160ff19825416179055565b9061ff00825491151560081b169061ff001916179055565b8660058201556125198860068301611b53565b61252161036d565b8a81528b151560208201529387604086015288606086015260808501524260a0850152019161254f8361220b565b612245565b871561258f5761256d612568600d54611d67565b600d55565b612576816123bf565b61240e565b95604051938493429285612424565b0390a3565b6125a261259d600e54611d67565b600e55565b6125ae61142382612228565b61257681612382565b50805460ff191660011790555061037a9050565b6000546001600160a01b031633036125df57565b60405163118cdaa760e01b8152336004820152602490fd5b600260015414612608576002600155565b604051633ee5aeb560e01b8152600490fd5b60ff6002541661262657565b60405163d93c066560e01b8152600490fd5b8151156126455760a00152565b60405163fe936cb760e01b8152600490fd5b6040519061266482610311565b600c82526b31b7b232a637b1b0ba34b7b760a11b6020830152565b634e487b7160e01b600052602160045260246000fd5b6003111561269f57565b61267f565b604051906126b182610311565b60088252676c616e677561676560c01b6020830152565b6001111561269f57565b604051906126df82610311565b6006825265736f7572636560d01b6020830152565b6040519061270182610311565b60048252636172677360e01b6020830152565b6040519061272182610311565b600f82526e39b2b1b932ba39a637b1b0ba34b7b760891b6020830152565b6040519061274c82610311565b60078252667365637265747360c81b6020830152565b6040519061276f82610311565b600982526862797465734172677360b81b6020830152565b61278f612a72565b906127a161279b612657565b83612ac2565b6127be81516127af81612695565b6127b881612695565b83612b84565b6127c961279b6126a4565b6127e360408201516127da816126c8565b6127b8816126c8565b6127ee61279b6126d2565b6127fc606082015183612ac2565b60a081018051516128fc575b50608081019081515161287c575b60c0915001805151612829575b50515190565b9161283561279b612762565b61283e82612c40565b60005b83518051821015612869579061286361285c82600194611a77565b5185612d68565b01612841565b5050915061287681612cdb565b38612823565b60208101805161288b81612695565b61289481612695565b156128ea5760c0926128cd6128e5926128b46128ae612714565b88612ac2565b516128be81612695565b6128c781612695565b86612b84565b6128de6128d861273f565b86612ac2565b5184612d68565b612816565b60405163a80d31f760e01b8152600490fd5b9261290e6129086126f4565b84612ac2565b61291783612c40565b60005b84518051821015612942579061293c61293582600194611a77565b5186612ac2565b0161291a565b5050925061294f82612cdb565b38612808565b92906020926001600160401b039263ffffffff612994604051978896879663230e93b160e11b885216600487015260a0602487015260a4860190610662565b60016044860152921660648401526084830152038160007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af19081156111d057600091612a10575b50807f1131472297a800fee664d1d89cfa8f7676ff07189ecc53f80bbb5f4969099db8600080a290565b612a29915060203d6020116111c9576111bb818361032c565b386129e6565b815115612a46576000808252604082015260600152565b6040516322ce3edd60e01b8152600490fd5b60405190612a6582610311565b6000602083606081520152565b604051612a7e81610311565b612a86612a58565b8082526020820160008152612a99612a58565b5061010060208301526040518092526000825261012082019182106102ac576000916040525290565b8151612b069291906001600160401b0381169060178211612b0957612af19150606060ff84519216179061324c565b505b5190612afd612a58565b5080519161347c565b50565b5060ff8111612b2e57612b2890612b208351613053565b508251613408565b50612af3565b61ffff8111612b4d57612b2890612b458351612fee565b50825161339a565b63ffffffff8111612b6e57612b2890612b668351612f89565b50825161332a565b612b2890612b7c8351612f19565b5082516132b7565b90815191612b90612a58565b508251516001810190818111611d76576020850151811015612be9575b60c2602061037a9651928301015380518211612be1575b505060405191602083015260208252612bdc82610311565b612d68565b523880612bc4565b8160011b9482860460021483151715611d7657602081612c1b61037a98612c1460c295519184612dec565b5082612e3e565b5096505050612bad565b9060208201809211611d7657565b91908201809211611d7657565b805190612c4b612a58565b508151516001810190818111611d76576020840151811015612c99575b609f6020809551928301015380518211612c91575b50500180519060018201809211611d765752565b523880612c7d565b8160011b9382850460021483151715611d7657602081612cc28297612c14609f95519184612dec565b5095505050612c68565b601f19810191908211611d7657565b805190612ce6612a58565b508151516001810190818111611d76576020840151811015612d35575b60ff6020809551928301015380518211612d2d575b5050018051600019810191908211611d765752565b523880612d18565b8160011b9382850460021483151715611d7657602081612d5e8297612c1460ff95519184612dec565b5095505050612d03565b8151612b069291906001600160401b0381169060178211612d9757612af19150604060ff84519216179061324c565b5060ff8111612dae57612b2890612b2083516131e7565b61ffff8111612dc557612b2890612b458351613182565b63ffffffff8111612dde57612b2890612b66835161311d565b612b2890612b7c83516130b8565b90612df5612a58565b50601f811680612e24575b50806020830152604051908183526000825281016020019081106102ac5760405290565b60200360208111611d76578101809111611d765738612e00565b90612e47612a58565b50805190612e53612a58565b50612e618151831115613475565b82515191612e6f8184612c33565b60209260208601518211612eec575b602091865183815197820101968211612ee4575b505001915b80821015612ebc5750600019906020036101000a019081199051169082511617905290565b909192612ed8612ed2612ede9286518152612c25565b94612c25565b92612ccc565b90612e97565b523880612e92565b612efe612ef883612f03565b87613528565b612e7e565b908160011b9180830460021490151715611d7657565b612f21612a58565b508051516001810190818111611d76576020830151811015612f5a575b607b60208451928301015380518211612f5657505090565b5290565b8160011b82810460021483151715611d7657612f8390612f7c85519186612dec565b5084612e3e565b50612f3e565b612f91612a58565b508051516001810190818111611d76576020830151811015612fc6575b607a60208451928301015380518211612f5657505090565b8160011b82810460021483151715611d7657612fe890612f7c85519186612dec565b50612fae565b612ff6612a58565b508051516001810190818111611d7657602083015181101561302b575b607960208451928301015380518211612f5657505090565b8160011b82810460021483151715611d765761304d90612f7c85519186612dec565b50613013565b61305b612a58565b508051516001810190818111611d76576020830151811015613090575b607860208451928301015380518211612f5657505090565b8160011b82810460021483151715611d76576130b290612f7c85519186612dec565b50613078565b6130c0612a58565b508051516001810190818111611d765760208301518110156130f5575b605b60208451928301015380518211612f5657505090565b8160011b82810460021483151715611d765761311790612f7c85519186612dec565b506130dd565b613125612a58565b508051516001810190818111611d7657602083015181101561315a575b605a60208451928301015380518211612f5657505090565b8160011b82810460021483151715611d765761317c90612f7c85519186612dec565b50613142565b61318a612a58565b508051516001810190818111611d765760208301518110156131bf575b605960208451928301015380518211612f5657505090565b8160011b82810460021483151715611d76576131e190612f7c85519186612dec565b506131a7565b6131ef612a58565b508051516001810190818111611d76576020830151811015613224575b605860208451928301015380518211612f5657505090565b8160011b82810460021483151715611d765761324690612f7c85519186612dec565b5061320c565b90613255612a58565b508151516001810191828211611d76576020840151821015613288575b60208451928301015380518211612f5657505090565b8260011b83810460021484151715611d76576132b1906132aa86519187612dec565b5085612e3e565b50613272565b906132c0612a58565b50815151806008019182600811611d765760208401518311613302575b6008845192830101906001600160401b031982511617905280518211612f5657505090565b8260011b83810460021484151715611d7657613324906132aa86519187612dec565b506132dd565b90613333612a58565b50815151806004019182600411611d765760208401518311613372575b60048451928301019063ffffffff1982511617905280518211612f5657505090565b8260011b83810460021484151715611d7657613394906132aa86519187612dec565b50613350565b906133a3612a58565b50815151806002019182600211611d7657602084015183116133e0575b60028451928301019061ffff1982511617905280518211612f5657505090565b8260011b83810460021484151715611d7657613402906132aa86519187612dec565b506133c0565b90613411612a58565b50815151806001019182600111611d76576020840151831161344d575b60018451928301019060ff1982511617905280518211612f5657505090565b8260011b83810460021484151715611d765761346f906132aa86519187612dec565b5061342e565b156102ac57565b9190613486612a58565b506134948151831115613475565b8251519160206134a48285612c33565b928193828701518111613511575b865183815197820101968211613509575b505001915b808210156134ed5750600019906020036101000a019081199051169082511617905290565b909192612ed8612ed26135039286518152612c25565b906134c8565b5238806134c3565b61352361351d82612f03565b88613528565b6134b2565b90612b069161353981519282612dec565b50612e3e56fe0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9a26469706673582212203c7793dd1030ae7d0b7d42f3d243c95b66a529f013fac8ce271a26a6c205f92a64736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FF8B7D EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x9C1BA2E EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0xCA76175 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0xF3908C8 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x13C60177 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x24600FC3 EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x263CB6B6 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x35C1260D EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x372D6B27 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x39FFBE0B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x4DE2BFBF EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x4EB7E95F EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x54FD4D50 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x5A55977E EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x6BC9D5B3 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6DB79437 EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x6E74336B EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x79CB62B0 EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x8047BC1D EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x968E5A0D EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xA8C278A2 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xAC90C140 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xB32EAA0E EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xB337CF74 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB9F83F06 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xBC9DF56F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC8B22D24 EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xCDDC911F EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xF16FB433 EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xF33B2491 EQ PUSH2 0x1B8 JUMPI PUSH4 0xF68016B7 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17EE JUMP JUMPDEST PUSH2 0x1770 JUMP JUMPDEST PUSH2 0x16E8 JUMP JUMPDEST PUSH2 0x16A9 JUMP JUMPDEST PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x1513 JUMP JUMPDEST PUSH2 0x13EC JUMP JUMPDEST PUSH2 0x13CE JUMP JUMPDEST PUSH2 0x1347 JUMP JUMPDEST PUSH2 0x12E5 JUMP JUMPDEST PUSH2 0x12C7 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH2 0x122F JUMP JUMPDEST PUSH2 0x11D5 JUMP JUMPDEST PUSH2 0x101D JUMP JUMPDEST PUSH2 0xE9F JUMP JUMPDEST PUSH2 0xE44 JUMP JUMPDEST PUSH2 0xE26 JUMP JUMPDEST PUSH2 0xDC8 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH2 0xD54 JUMP JUMPDEST PUSH2 0xCCC JUMP JUMPDEST PUSH2 0xC0D JUMP JUMPDEST PUSH2 0xBEF JUMP JUMPDEST PUSH2 0x9FA JUMP JUMPDEST PUSH2 0x990 JUMP JUMPDEST PUSH2 0x972 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH2 0x91D JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x7AB JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST PUSH2 0x3DE JUMP JUMPDEST PUSH2 0x2B1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x2 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x120 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x37A DUP3 PUSH2 0x2F1 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x30C JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2AC JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x3AE DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP3 PUSH2 0x3BC PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x32C JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x2AC JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0x412 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0x42B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x48C JUMPI PUSH2 0x465 SWAP2 DUP4 PUSH2 0x2448 JUMP JUMPDEST PUSH32 0x85E1543BF2F84FE80C6BADBCE3648C8539AD1DF4D2B3D822938CA0538BE727E6 PUSH1 0x0 DUP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC6829F83 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x4CE JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x4B8 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x4AD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x0 DUP3 PUSH1 0x4 SLOAD SWAP2 PUSH2 0x4EC DUP4 PUSH2 0x49E JUMP JUMPDEST DUP1 DUP4 MSTORE SWAP3 PUSH1 0x20 SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x578 JUMPI POP PUSH1 0x1 EQ PUSH2 0x517 JUMPI JUMPDEST POP POP PUSH2 0x37A SWAP3 POP SUB DUP4 PUSH2 0x32C JUMP JUMPDEST SWAP2 POP SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP4 PUSH1 0x0 SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x560 JUMPI POP PUSH2 0x37A SWAP5 POP POP POP DUP2 ADD PUSH1 0x20 ADD CODESIZE DUP1 PUSH2 0x509 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP6 ADD DUP4 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x545 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 SWAP3 POP PUSH2 0x37A SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x509 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD PUSH2 0x5AF DUP2 PUSH2 0x49E JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x1 SWAP2 PUSH1 0x1 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x61D JUMPI POP PUSH1 0x1 EQ PUSH2 0x5DE JUMPI JUMPDEST POP POP POP PUSH2 0x37A SWAP3 POP SUB DUP4 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP6 DUP2 KECCAK256 SWAP6 SWAP4 POP SWAP2 SWAP1 JUMPDEST DUP2 DUP4 LT PUSH2 0x605 JUMPI POP POP PUSH2 0x37A SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x5CF JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x5EC JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x37A SWAP5 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 DUP1 PUSH2 0x5CF JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x652 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x642 JUMP JUMPDEST SWAP1 PUSH1 0x20 SWAP2 PUSH2 0x67B DUP2 MLOAD DUP1 SWAP3 DUP2 DUP6 MSTORE DUP6 DUP1 DUP7 ADD SWAP2 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP10 SWAP9 SWAP8 SWAP4 SWAP5 SWAP1 PUSH2 0x100 SWAP8 SWAP4 PUSH2 0x6BA PUSH2 0x6EE SWAP9 SWAP5 PUSH2 0x6C8 SWAP4 DUP15 PUSH2 0x120 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE DUP2 PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST DUP13 DUP2 SUB PUSH1 0x40 DUP15 ADD MSTORE SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP5 PUSH1 0x60 DUP12 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP11 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP10 ADD MSTORE PUSH1 0xC0 DUP9 ADD MSTORE DUP7 DUP3 SUB PUSH1 0xE0 DUP9 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST SWAP4 ADD MSTORE JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x777 PUSH2 0x72F PUSH1 0x1 DUP5 ADD PUSH2 0x59C JUMP JUMPDEST SWAP2 PUSH2 0x73C PUSH1 0x2 DUP6 ADD PUSH2 0x59C JUMP JUMPDEST SWAP4 PUSH1 0x3 DUP2 ADD SLOAD SWAP2 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD SWAP2 PUSH1 0x7 PUSH2 0x75C PUSH1 0x6 DUP7 ADD PUSH2 0x59C JUMP JUMPDEST SWAP5 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 PUSH1 0xFF DUP1 DUP7 PUSH1 0x8 SHR AND SWAP6 AND SWAP4 DUP11 PUSH2 0x687 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x777 PUSH2 0x797 PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x879 JUMPI PUSH2 0x7C5 PUSH2 0x25CB JUMP JUMPDEST SELFBALANCE DUP1 ISZERO PUSH2 0x83D JUMPI DUP2 SLOAD PUSH32 0xFBC3A599B784FE88772FC5ABCC07223F64CA0B13ACC341F4FB1E46BEF0510EB4 SWAP1 PUSH2 0x837 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x81D SWAP1 DUP7 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP10 SWAP1 DUP8 AND GAS CALL PUSH2 0x817 PUSH2 0x1838 JUMP JUMPDEST POP PUSH2 0x1868 JUMP JUMPDEST DUP5 SLOAD PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE TIMESTAMP PUSH1 0x20 DUP8 ADD MSTORE SWAP2 AND SWAP4 SWAP2 DUP3 SWAP2 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F2066756E647320746F207769746864726177 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2AC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x892 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x8DE PUSH2 0x87C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 DUP3 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x20 SWAP2 PUSH2 0x90F SWAP2 PUSH2 0x8A8 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x3 SHL SHR DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x80 PUSH1 0xC SLOAD PUSH1 0xD SLOAD PUSH1 0xE SLOAD PUSH1 0xF SLOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x9A9 PUSH2 0x25CB JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0x9E8 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0xA26 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP1 DUP3 GT PUSH2 0x2AC JUMPI PUSH1 0x20 SWAP3 PUSH32 0x94238AD9433A44EACAEAE5DE7A6BED1A8C4D80B9A77AD9B5856D42646AA4A3B7 PUSH2 0xB30 PUSH2 0xA6A PUSH2 0xBDB SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP4 PUSH2 0xA73 PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0xA7B PUSH2 0x261A JUMP JUMPDEST PUSH2 0xA89 PUSH1 0x10 SLOAD CALLVALUE LT ISZERO PUSH2 0x18A8 JUMP JUMPDEST PUSH2 0xA95 DUP5 MLOAD ISZERO ISZERO PUSH2 0x18E7 JUMP JUMPDEST PUSH2 0xAA1 DUP6 MLOAD ISZERO ISZERO PUSH2 0x1927 JUMP JUMPDEST PUSH2 0xAB7 PUSH1 0x5 PUSH2 0xAAF DUP7 PUSH2 0xC80 JUMP JUMPDEST ADD SLOAD ISZERO PUSH2 0x1968 JUMP JUMPDEST PUSH2 0xB13 PUSH2 0xAC2 PUSH2 0x19B4 JUMP JUMPDEST PUSH2 0xAD3 PUSH2 0xACD PUSH2 0x4D8 JUMP JUMPDEST DUP3 PUSH2 0x2A2F JUMP JUMPDEST PUSH2 0xB0E PUSH2 0xADE PUSH2 0x1A14 JUMP JUMPDEST DUP8 PUSH2 0xAE8 DUP3 PUSH2 0x1A5A JUMP JUMPDEST MSTORE PUSH2 0xAF2 DUP2 PUSH2 0x1A5A JUMP JUMPDEST POP DUP9 PUSH2 0xAFD DUP3 PUSH2 0x1A67 JUMP JUMPDEST MSTORE PUSH2 0xB07 DUP2 PUSH2 0x1A67 JUMP JUMPDEST POP DUP3 PUSH2 0x2638 JUMP JUMPDEST PUSH2 0x2787 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 PUSH1 0x3 SLOAD SWAP3 PUSH4 0xFFFFFFFF DUP4 PUSH1 0x48 SHR AND SWAP3 PUSH1 0x8 SHR AND SWAP1 PUSH2 0x2955 JUMP JUMPDEST SWAP4 DUP5 SWAP3 PUSH2 0xB95 PUSH2 0xB3E PUSH2 0x34D JUMP JUMPDEST CALLER DUP2 MSTORE DUP3 DUP10 DUP3 ADD MSTORE DUP7 PUSH1 0x40 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0xB6F PUSH2 0x1815 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xB90 DUP7 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x1C1C JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xBAF SWAP1 DUP6 SWAP1 PUSH2 0x1D1C JUMP JUMPDEST PUSH2 0xBB8 DUP5 PUSH2 0x1CD4 JUMP JUMPDEST PUSH2 0xBCB PUSH2 0xBC6 PUSH1 0xC SLOAD PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0xC SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP7 TIMESTAMP SWAP2 DUP5 PUSH2 0x1D7B JUMP JUMPDEST SUB SWAP1 LOG3 PUSH2 0xBE7 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xF SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x777 PUSH1 0x40 MLOAD PUSH2 0xC2D DUP2 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x5 DUP2 MSTORE PUSH5 0x312E302E3 PUSH1 0xDC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2AC JUMPI PUSH2 0xC7D SWAP2 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0xC99 SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x63F JUMP JUMPDEST DUP2 ADD PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0xCBF SWAP2 DUP2 PUSH1 0x40 MLOAD SWAP4 DUP3 DUP6 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x63F JUMP JUMPDEST DUP2 ADD PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH2 0xCE2 PUSH2 0xCDD CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xC80 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH2 0xD4A PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0xD3C PUSH2 0xD05 PUSH1 0x3 DUP4 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x5 PUSH2 0xD13 PUSH1 0x4 DUP6 ADD PUSH2 0x59C JUMP JUMPDEST SWAP4 ADD SLOAD SWAP5 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 MSTORE ISZERO ISZERO PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0xC0 PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x80 DUP7 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST SWAP1 PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xA SLOAD DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH2 0x797 PUSH2 0x777 SWAP2 PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD PUSH2 0x59C JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH32 0xCF8A1E1D5F09CF3C97DBB653CD9A4D7AACE9292FBC1BB8211FEBF2D400FEBBDD PUSH1 0x60 PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH2 0xE0A PUSH2 0x25CB JUMP JUMPDEST DUP2 PUSH1 0x10 SSTORE DUP1 PUSH1 0x11 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x40 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x879 JUMPI PUSH2 0xE5E PUSH2 0x25CB JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x2AC JUMPI PUSH1 0x24 CALLDATALOAD SWAP2 PUSH4 0xFFFFFFFF DUP4 AND DUP4 SUB PUSH2 0x2AC JUMPI PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0xEED SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x397 JUMP JUMPDEST SWAP3 PUSH2 0xEF6 PUSH2 0x25CB JUMP JUMPDEST PUSH9 0xFFFFFFFFFFFFFFFF00 PUSH13 0xFFFFFFFF000000000000000000 PUSH1 0x2 SLOAD SWAP3 PUSH1 0x48 SHL AND SWAP3 PUSH1 0x8 SHL AND SWAP1 PUSH13 0xFFFFFFFFFFFFFFFFFFFFFFFF00 NOT AND OR OR PUSH1 0x2 SSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x3 SSTORE DUP2 MLOAD SWAP1 DUP2 GT PUSH2 0x30C JUMPI PUSH2 0xF54 DUP2 PUSH2 0xF4F PUSH1 0x4 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH2 0x1A8B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0xF96 JUMPI POP DUP2 SWAP1 PUSH2 0xF86 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0xF8B JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x4 SSTORE STOP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xF71 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0xFC9 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1005 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0xFEC JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0xFE1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x10F8 PUSH2 0x1029 CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1031 PUSH2 0x25F7 JUMP JUMPDEST PUSH2 0x1039 PUSH2 0x261A JUMP JUMPDEST PUSH2 0x1047 PUSH1 0x11 SLOAD CALLVALUE LT ISZERO PUSH2 0x1DA4 JUMP JUMPDEST PUSH2 0x1058 PUSH2 0x1053 DUP3 PUSH2 0xC80 JUMP JUMPDEST PUSH2 0x1DF0 JUMP JUMPDEST SWAP1 PUSH2 0x1068 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH2 0x1E49 JUMP JUMPDEST PUSH2 0x107D PUSH2 0x1078 PUSH1 0x20 DUP5 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1E8C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 DUP4 ADD SWAP3 PUSH2 0x1092 PUSH1 0x50 DUP6 MLOAD LT ISZERO PUSH2 0x1ED8 JUMP JUMPDEST PUSH2 0x10A7 DUP2 MLOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x7 SWAP2 SWAP1 PUSH2 0x10C6 SWAP1 DUP6 AND CALLER EQ PUSH2 0x1F24 JUMP JUMPDEST ADD SWAP6 PUSH2 0x10D3 DUP8 SLOAD ISZERO PUSH2 0x1F70 JUMP JUMPDEST MLOAD SWAP3 ADD MLOAD SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 SWAP9 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x4A2859EB PUSH1 0xE1 SHL DUP5 MSTORE DUP10 CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x1FC0 JUMP JUMPDEST SUB SWAP3 PUSH32 0x0 AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x11D0 JUMPI PUSH2 0x777 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x119D JUMPI JUMPDEST POP DUP2 PUSH2 0x1151 SWAP3 SWAP4 SSTORE PUSH2 0x114C PUSH2 0x1147 PUSH1 0xF SLOAD PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0xF SSTORE JUMP JUMPDEST PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE CALLER SWAP3 SWAP2 PUSH32 0x6D17924BD76C5E1FE0E46264CF6F9D66B1A75B860335729E9D45F1D0AB4446AB SWAP2 LOG3 PUSH2 0x118D PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1151 SWAP3 POP PUSH2 0x11C3 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11C9 JUMPI JUMPDEST PUSH2 0x11BB DUP2 DUP4 PUSH2 0x32C JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1FB1 JUMP JUMPDEST SWAP2 PUSH2 0x1131 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x11B1 JUMP JUMPDEST PUSH2 0x1FFA JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x11EE PUSH2 0x25CB JUMP JUMPDEST PUSH2 0x11F6 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF NOT PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH1 0x20 SWAP1 PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x12FF PUSH2 0x12FA CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1333 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1325 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1369 PUSH2 0x87C JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x20 DUP5 SLOAD SWAP2 DUP3 DUP2 MSTORE ADD SWAP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x13B7 JUMPI PUSH2 0x777 DUP6 PUSH2 0x13AB DUP2 DUP10 SUB DUP3 PUSH2 0x32C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x130B JUMP JUMPDEST DUP4 SLOAD DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1394 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH2 0x13FA CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x1402 PUSH2 0x25CB JUMP JUMPDEST PUSH1 0xFF PUSH2 0x140D DUP3 PUSH2 0xCA6 JUMP JUMPDEST SLOAD AND PUSH2 0x146A JUMPI DUP1 PUSH2 0x1430 PUSH2 0x1423 PUSH2 0x1439 SWAP4 PUSH2 0xCA6 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x114C DUP2 PUSH2 0x2026 JUMP JUMPDEST PUSH1 0x40 MLOAD TIMESTAMP DUP2 MSTORE CALLER SWAP2 SWAP1 PUSH32 0xAB9E11A26BCF11DA1ACEC616512E75C224C85DBE525EBED13E7C583A299BBC5A SWAP1 PUSH1 0x20 SWAP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E7420616C726561647920666C6167676564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 ADD SWAP1 PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP4 ADD SWAP3 PUSH1 0x20 PUSH1 0x40 DUP5 PUSH1 0x5 SHL DUP4 ADD ADD SWAP6 ADD SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x14E5 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 DUP5 DUP1 PUSH2 0x1503 PUSH1 0x1 SWAP4 PUSH1 0x3F NOT DUP7 DUP3 SUB ADD DUP8 MSTORE DUP11 MLOAD PUSH2 0x662 JUMP JUMPDEST SWAP9 ADD SWAP4 ADD SWAP4 ADD SWAP2 SWAP5 SWAP4 SWAP3 SWAP1 PUSH2 0x14D5 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0xA SLOAD PUSH2 0x1530 DUP2 PUSH2 0x19FD JUMP JUMPDEST PUSH2 0x153D PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x32C JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1587 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x777 DUP8 DUP3 PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x1595 DUP10 PUSH2 0x59C JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x1572 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xC0 PUSH1 0xA0 PUSH2 0x15F8 PUSH2 0x15E3 PUSH1 0x60 DUP7 ADD MLOAD DUP5 PUSH1 0x80 DUP8 ADD MSTORE PUSH1 0xE0 DUP7 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x80 DUP7 ADD MLOAD DUP6 DUP3 SUB PUSH1 0x1F NOT ADD DUP5 DUP8 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST SWAP4 ADD MLOAD SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH2 0x777 PUSH2 0x1648 PUSH2 0x1615 CALLDATASIZE PUSH2 0xC53 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 PUSH1 0x40 MLOAD PUSH2 0x1625 DUP2 PUSH2 0x2F1 JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH2 0xC80 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1657 DUP4 PUSH2 0x2F1 JUMP JUMPDEST DUP1 SLOAD DUP4 MSTORE PUSH1 0xFF PUSH1 0x1 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x1680 PUSH1 0x3 DUP3 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1691 PUSH1 0x4 DUP3 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x80 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x15A3 JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2AC JUMPI PUSH2 0x797 PUSH2 0x777 SWAP2 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH2 0x59C JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH2 0x1701 PUSH2 0x87C JUMP JUMPDEST PUSH2 0x1709 PUSH2 0x25CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 ISZERO PUSH2 0x1757 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE SWAP1 SWAP3 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0xB SLOAD PUSH2 0x178D DUP2 PUSH2 0x19FD JUMP JUMPDEST PUSH2 0x179A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x32C JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x20 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x17D2 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x777 DUP8 DUP3 PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 SWAP3 PUSH2 0x17E0 DUP10 PUSH2 0x59C JUMP JUMPDEST DUP2 MSTORE ADD SWAP7 ADD SWAP3 ADD SWAP2 SWAP5 PUSH2 0x17BD JUMP JUMPDEST CALLVALUE PUSH2 0x2AC JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2AC JUMPI PUSH1 0x20 PUSH4 0xFFFFFFFF PUSH1 0x2 SLOAD PUSH1 0x48 SHR AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x1863 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x1849 DUP3 PUSH2 0x37C JUMP JUMPDEST SWAP2 PUSH2 0x1857 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x32C JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x186F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x15DA5D1A191C985DD85B0819985A5B1959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18AF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E73756666696369656E7420666565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x18EE JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x92DCECC2D8D2C84092A08CA640D0C2E6D PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x192E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C6964206D656469612074797065 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x196F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E7420616C72656164792076657269666965640000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE PUSH1 0x60 PUSH1 0xC0 DUP4 PUSH1 0x0 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE DUP3 DUP1 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x30C JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP1 DUP5 ADD DUP5 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x30C JUMPI PUSH1 0x40 MSTORE PUSH1 0x2 DUP5 MSTORE DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x1A4A JUMPI POP POP POP POP JUMP JUMPDEST DUP1 DUP4 PUSH1 0x20 DUP1 SWAP4 DUP6 ADD ADD MSTORE ADD PUSH2 0x1A3D JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1A97 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1AF3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1AE8 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1ADC JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP2 GT PUSH2 0x1B0B JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x1B49 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x1B3E JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1B32 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x1B29 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x30C JUMPI PUSH2 0x1B7A DUP2 PUSH2 0x1B74 DUP5 SLOAD PUSH2 0x49E JUMP JUMPDEST DUP5 PUSH2 0x1AFD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1BB1 JUMPI POP DUP2 SWAP1 PUSH2 0x1BAD SWAP4 SWAP5 SWAP6 PUSH1 0x0 SWAP3 PUSH2 0xF8B JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP6 PUSH2 0x1BC7 DUP6 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP3 LT PUSH2 0x1C04 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x1BEB JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1BE1 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1BCC JUMP JUMPDEST DUP2 MLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP2 SSTORE SWAP1 PUSH1 0x7 SWAP1 PUSH2 0x100 SWAP1 PUSH2 0x1C51 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x1C62 PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x1CB2 PUSH1 0x4 DUP6 ADD PUSH2 0x1C95 PUSH2 0x1C83 PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO DUP2 SLOAD PUSH2 0xFF00 NOT AND SWAP1 ISZERO ISZERO PUSH1 0x8 SHL PUSH2 0xFF00 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x5 DUP6 ADD SSTORE PUSH2 0x1CCD PUSH1 0xE0 DUP3 ADD MLOAD PUSH1 0x6 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST ADD MLOAD SWAP2 ADD SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x1 DUP2 ADD DUP1 PUSH1 0x9 SSTORE DUP2 LT ISZERO PUSH2 0x8C0 JUMPI PUSH1 0x9 PUSH1 0x0 MSTORE PUSH32 0x6E1540171B6C0C960B71A7020D9F60077F6AF931A8BBF590DA0223DACF75C7AF ADD SSTORE JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x30C JUMPI PUSH2 0x1D39 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x8A8 JUMP JUMPDEST DUP2 SWAP3 SWAP2 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 DUP3 SHL SWAP2 PUSH1 0x0 NOT SWAP1 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1D76 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1D51 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 PUSH2 0x6EE SWAP1 PUSH2 0x1D96 PUSH1 0x40 SWAP4 PUSH1 0x60 DUP9 MSTORE PUSH1 0x60 DUP9 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP1 DUP7 DUP3 SUB PUSH1 0x20 DUP9 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST ISZERO PUSH2 0x1DAB JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74204E4654206D696E742066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1DFD DUP2 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x5 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE PUSH1 0xFF PUSH1 0x1 DUP3 ADD SLOAD AND ISZERO ISZERO PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP6 ADD MSTORE PUSH2 0x1E2C PUSH1 0x3 DUP3 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH2 0x1E3D PUSH1 0x4 DUP3 ADD PUSH2 0x59C JUMP JUMPDEST PUSH1 0x80 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0x1E50 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x10DBDB9D195B9D081B9BDD081D995C9A599A5959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1E93 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E74206973206E6F742061757468656E7469630000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1EDF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E666964656E63652073636F726520746F6F206C6F770000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F2B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79207265717565737465722063616E206D696E74204E46540000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1F77 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x13919508185B1C9958591E481B5A5B9D1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2AC JUMPI MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0xC7D SWAP5 SWAP3 PUSH2 0x1FE7 SWAP2 DUP4 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x662 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x201E SWAP1 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 DUP1 SWAP5 MLOAD SWAP4 DUP5 SWAP3 ADD PUSH2 0x63F JUMP JUMPDEST DUP2 ADD SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xB SSTORE DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x37A SWAP2 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH2 0x1B53 JUMP JUMPDEST ISZERO PUSH2 0x206A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x14995C5D595CDD081B9BDD08199BDD5B99 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x20AA JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265717565737420616C72656164792070726F63657373656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x2AC JUMPI DUP1 MLOAD PUSH2 0x2105 DUP2 PUSH2 0x37C JUMP JUMPDEST SWAP3 PUSH2 0x2113 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x32C JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP3 DUP5 ADD ADD GT PUSH2 0x2AC JUMPI PUSH2 0xC7D SWAP2 PUSH1 0x20 DUP1 DUP6 ADD SWAP2 ADD PUSH2 0x63F JUMP JUMPDEST SWAP1 PUSH1 0x80 DUP3 DUP3 SUB SLT PUSH2 0x2AC JUMPI DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x2AC JUMPI SWAP3 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP4 DUP5 DUP2 GT PUSH2 0x2AC JUMPI DUP2 PUSH2 0x2170 SWAP2 DUP5 ADD PUSH2 0x20EF JUMP JUMPDEST SWAP4 PUSH1 0x60 DUP4 ADD MLOAD SWAP1 DUP2 GT PUSH2 0x2AC JUMPI PUSH2 0xC7D SWAP3 ADD PUSH2 0x20EF JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 DUP2 SLOAD PUSH2 0x2196 DUP2 PUSH2 0x49E JUMP JUMPDEST SWAP3 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x21F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x21B3 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP2 JUMPDEST DUP6 DUP4 LT PUSH2 0x21DF JUMPI POP POP POP POP ADD SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x21AD JUMP JUMPDEST DUP1 SLOAD DUP6 DUP5 ADD MSTORE SWAP2 DUP4 ADD SWAP2 DUP2 ADD PUSH2 0x21C9 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP5 MSTORE POP POP POP DUP2 ISZERO ISZERO SWAP1 SWAP2 MUL ADD SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x20 PUSH2 0x221D SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH2 0x223A SWAP2 PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x8 DUP2 MSTORE SUB ADD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0xA0 PUSH1 0x5 SWAP2 DUP1 MLOAD DUP5 SSTORE PUSH2 0x226E PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x1 DUP7 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH2 0x2289 PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x1CCD PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP7 ADD PUSH2 0x1B53 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 DUP3 DUP2 EQ PUSH2 0x237D JUMPI PUSH2 0x22AE DUP4 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x30C JUMPI PUSH2 0x22CA DUP2 PUSH2 0x1B74 DUP5 SLOAD PUSH2 0x49E JUMP JUMPDEST PUSH1 0x0 SWAP4 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2307 JUMPI PUSH2 0x1BAD SWAP3 SWAP4 SWAP5 DUP3 SWAP2 PUSH1 0x0 SWAP3 PUSH2 0x22FC JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST ADD SLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xF71 JUMP JUMPDEST PUSH2 0x231B PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 PUSH2 0x232B DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x2365 JUMPI POP SWAP6 DUP4 PUSH1 0x1 SWAP6 SWAP7 SWAP8 LT PUSH2 0x234C JUMPI POP POP POP DUP2 SHL ADD SWAP1 SSTORE JUMP JUMPDEST ADD SLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1BE1 JUMP JUMPDEST DUP8 DUP4 ADD SLOAD DUP5 SSTORE PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 ADD PUSH2 0x232E JUMP JUMPDEST POP SWAP1 POP JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xB SSTORE DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x37A SWAP2 PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x3540 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH2 0x229A JUMP JUMPDEST PUSH1 0xA SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x30C JUMPI PUSH1 0x1 DUP3 ADD DUP1 PUSH1 0xA SSTORE DUP3 LT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x37A SWAP2 PUSH1 0xA PUSH1 0x0 MSTORE PUSH32 0xC65A7BB8D6351C1CF70C95A316CC6A92839C986682D98BC35F958F4883F9D2A8 ADD PUSH2 0x229A JUMP JUMPDEST PUSH2 0x241E SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 DUP1 SWAP3 PUSH2 0x2187 JUMP JUMPDEST SUB SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 SWAP3 PUSH1 0x60 SWAP3 PUSH2 0x6EE SWAP3 ISZERO ISZERO DUP8 MSTORE PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x245E DUP3 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP3 PUSH2 0x246E PUSH1 0x3 DUP6 ADD SLOAD ISZERO ISZERO PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SWAP2 PUSH2 0x248D PUSH2 0x2488 PUSH2 0x2484 DUP6 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x20A3 JUMP JUMPDEST MLOAD PUSH2 0x25B7 JUMPI SWAP1 PUSH2 0x2506 PUSH2 0x258A PUSH2 0x257B PUSH1 0x1 PUSH2 0x2554 PUSH2 0x24D5 DUP8 PUSH1 0x20 DUP1 PUSH32 0xA200E87A2F5086E32A1C23ACED4FBE4BE33197F26728243A2F4E04C31DC31957 SWAP11 MLOAD DUP4 ADD ADD SWAP2 ADD PUSH2 0x2131 JUMP JUMPDEST SWAP5 SWAP3 DUP10 PUSH2 0x24EE DUP3 SWAP15 SWAP5 SWAP11 SWAP4 SWAP12 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH2 0xFF00 DUP3 SLOAD SWAP2 ISZERO ISZERO PUSH1 0x8 SHL AND SWAP1 PUSH2 0xFF00 NOT AND OR SWAP1 SSTORE JUMP JUMPDEST DUP7 PUSH1 0x5 DUP3 ADD SSTORE PUSH2 0x2519 DUP9 PUSH1 0x6 DUP4 ADD PUSH2 0x1B53 JUMP JUMPDEST PUSH2 0x2521 PUSH2 0x36D JUMP JUMPDEST DUP11 DUP2 MSTORE DUP12 ISZERO ISZERO PUSH1 0x20 DUP3 ADD MSTORE SWAP4 DUP8 PUSH1 0x40 DUP7 ADD MSTORE DUP9 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP6 ADD MSTORE ADD SWAP2 PUSH2 0x254F DUP4 PUSH2 0x220B JUMP JUMPDEST PUSH2 0x2245 JUMP JUMPDEST DUP8 ISZERO PUSH2 0x258F JUMPI PUSH2 0x256D PUSH2 0x2568 PUSH1 0xD SLOAD PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0xD SSTORE JUMP JUMPDEST PUSH2 0x2576 DUP2 PUSH2 0x23BF JUMP JUMPDEST PUSH2 0x240E JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 TIMESTAMP SWAP3 DUP6 PUSH2 0x2424 JUMP JUMPDEST SUB SWAP1 LOG3 JUMP JUMPDEST PUSH2 0x25A2 PUSH2 0x259D PUSH1 0xE SLOAD PUSH2 0x1D67 JUMP JUMPDEST PUSH1 0xE SSTORE JUMP JUMPDEST PUSH2 0x25AE PUSH2 0x1423 DUP3 PUSH2 0x2228 JUMP JUMPDEST PUSH2 0x2576 DUP2 PUSH2 0x2382 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP PUSH2 0x37A SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x25DF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x2608 JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH2 0x2626 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2645 JUMPI PUSH1 0xA0 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFE936CB7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2664 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0xC DUP3 MSTORE PUSH12 0x31B7B232A637B1B0BA34B7B7 PUSH1 0xA1 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 GT ISZERO PUSH2 0x269F JUMPI JUMP JUMPDEST PUSH2 0x267F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x26B1 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x8 DUP3 MSTORE PUSH8 0x6C616E6775616765 PUSH1 0xC0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 GT ISZERO PUSH2 0x269F JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x26DF DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x6 DUP3 MSTORE PUSH6 0x736F75726365 PUSH1 0xD0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2701 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x4 DUP3 MSTORE PUSH4 0x61726773 PUSH1 0xE0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2721 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0xF DUP3 MSTORE PUSH15 0x39B2B1B932BA39A637B1B0BA34B7B7 PUSH1 0x89 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x274C DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x7 DUP3 MSTORE PUSH7 0x73656372657473 PUSH1 0xC8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x276F DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x9 DUP3 MSTORE PUSH9 0x627974657341726773 PUSH1 0xB8 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0x278F PUSH2 0x2A72 JUMP JUMPDEST SWAP1 PUSH2 0x27A1 PUSH2 0x279B PUSH2 0x2657 JUMP JUMPDEST DUP4 PUSH2 0x2AC2 JUMP JUMPDEST PUSH2 0x27BE DUP2 MLOAD PUSH2 0x27AF DUP2 PUSH2 0x2695 JUMP JUMPDEST PUSH2 0x27B8 DUP2 PUSH2 0x2695 JUMP JUMPDEST DUP4 PUSH2 0x2B84 JUMP JUMPDEST PUSH2 0x27C9 PUSH2 0x279B PUSH2 0x26A4 JUMP JUMPDEST PUSH2 0x27E3 PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x27DA DUP2 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x27B8 DUP2 PUSH2 0x26C8 JUMP JUMPDEST PUSH2 0x27EE PUSH2 0x279B PUSH2 0x26D2 JUMP JUMPDEST PUSH2 0x27FC PUSH1 0x60 DUP3 ADD MLOAD DUP4 PUSH2 0x2AC2 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD DUP1 MLOAD MLOAD PUSH2 0x28FC JUMPI JUMPDEST POP PUSH1 0x80 DUP2 ADD SWAP1 DUP2 MLOAD MLOAD PUSH2 0x287C JUMPI JUMPDEST PUSH1 0xC0 SWAP2 POP ADD DUP1 MLOAD MLOAD PUSH2 0x2829 JUMPI JUMPDEST POP MLOAD MLOAD SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x2835 PUSH2 0x279B PUSH2 0x2762 JUMP JUMPDEST PUSH2 0x283E DUP3 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2869 JUMPI SWAP1 PUSH2 0x2863 PUSH2 0x285C DUP3 PUSH1 0x1 SWAP5 PUSH2 0x1A77 JUMP JUMPDEST MLOAD DUP6 PUSH2 0x2D68 JUMP JUMPDEST ADD PUSH2 0x2841 JUMP JUMPDEST POP POP SWAP2 POP PUSH2 0x2876 DUP2 PUSH2 0x2CDB JUMP JUMPDEST CODESIZE PUSH2 0x2823 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH2 0x288B DUP2 PUSH2 0x2695 JUMP JUMPDEST PUSH2 0x2894 DUP2 PUSH2 0x2695 JUMP JUMPDEST ISZERO PUSH2 0x28EA JUMPI PUSH1 0xC0 SWAP3 PUSH2 0x28CD PUSH2 0x28E5 SWAP3 PUSH2 0x28B4 PUSH2 0x28AE PUSH2 0x2714 JUMP JUMPDEST DUP9 PUSH2 0x2AC2 JUMP JUMPDEST MLOAD PUSH2 0x28BE DUP2 PUSH2 0x2695 JUMP JUMPDEST PUSH2 0x28C7 DUP2 PUSH2 0x2695 JUMP JUMPDEST DUP7 PUSH2 0x2B84 JUMP JUMPDEST PUSH2 0x28DE PUSH2 0x28D8 PUSH2 0x273F JUMP JUMPDEST DUP7 PUSH2 0x2AC2 JUMP JUMPDEST MLOAD DUP5 PUSH2 0x2D68 JUMP JUMPDEST PUSH2 0x2816 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA80D31F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP3 PUSH2 0x290E PUSH2 0x2908 PUSH2 0x26F4 JUMP JUMPDEST DUP5 PUSH2 0x2AC2 JUMP JUMPDEST PUSH2 0x2917 DUP4 PUSH2 0x2C40 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2942 JUMPI SWAP1 PUSH2 0x293C PUSH2 0x2935 DUP3 PUSH1 0x1 SWAP5 PUSH2 0x1A77 JUMP JUMPDEST MLOAD DUP7 PUSH2 0x2AC2 JUMP JUMPDEST ADD PUSH2 0x291A JUMP JUMPDEST POP POP SWAP3 POP PUSH2 0x294F DUP3 PUSH2 0x2CDB JUMP JUMPDEST CODESIZE PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP1 PUSH1 0x20 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH4 0xFFFFFFFF PUSH2 0x2994 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH4 0x230E93B1 PUSH1 0xE1 SHL DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0xA0 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0xA4 DUP7 ADD SWAP1 PUSH2 0x662 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x44 DUP7 ADD MSTORE SWAP3 AND PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD MSTORE SUB DUP2 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x11D0 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x2A10 JUMPI JUMPDEST POP DUP1 PUSH32 0x1131472297A800FEE664D1D89CFA8F7676FF07189ECC53F80BBB5F4969099DB8 PUSH1 0x0 DUP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x2A29 SWAP2 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x11C9 JUMPI PUSH2 0x11BB DUP2 DUP4 PUSH2 0x32C JUMP JUMPDEST CODESIZE PUSH2 0x29E6 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x2A46 JUMPI PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x22CE3EDD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A65 DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 PUSH1 0x60 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7E DUP2 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x2A86 PUSH2 0x2A58 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x0 DUP2 MSTORE PUSH2 0x2A99 PUSH2 0x2A58 JUMP JUMPDEST POP PUSH2 0x100 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD DUP1 SWAP3 MSTORE PUSH1 0x0 DUP3 MSTORE PUSH2 0x120 DUP3 ADD SWAP2 DUP3 LT PUSH2 0x2AC JUMPI PUSH1 0x0 SWAP2 PUSH1 0x40 MSTORE MSTORE SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x2B06 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x2B09 JUMPI PUSH2 0x2AF1 SWAP2 POP PUSH1 0x60 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x324C JUMP JUMPDEST POP JUMPDEST MLOAD SWAP1 PUSH2 0x2AFD PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD SWAP2 PUSH2 0x347C JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x2B2E JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B20 DUP4 MLOAD PUSH2 0x3053 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x3408 JUMP JUMPDEST POP PUSH2 0x2AF3 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x2B4D JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B45 DUP4 MLOAD PUSH2 0x2FEE JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x339A JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x2B6E JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B66 DUP4 MLOAD PUSH2 0x2F89 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x332A JUMP JUMPDEST PUSH2 0x2B28 SWAP1 PUSH2 0x2B7C DUP4 MLOAD PUSH2 0x2F19 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x32B7 JUMP JUMPDEST SWAP1 DUP2 MLOAD SWAP2 PUSH2 0x2B90 PUSH2 0x2A58 JUMP JUMPDEST POP DUP3 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP6 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2BE9 JUMPI JUMPDEST PUSH1 0xC2 PUSH1 0x20 PUSH2 0x37A SWAP7 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2BE1 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP2 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x20 DUP3 MSTORE PUSH2 0x2BDC DUP3 PUSH2 0x311 JUMP JUMPDEST PUSH2 0x2D68 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x2BC4 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP5 DUP3 DUP7 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP2 PUSH2 0x2C1B PUSH2 0x37A SWAP9 PUSH2 0x2C14 PUSH1 0xC2 SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x2DEC JUMP JUMPDEST POP DUP3 PUSH2 0x2E3E JUMP JUMPDEST POP SWAP7 POP POP POP PUSH2 0x2BAD JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D76 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D76 JUMPI JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x2C4B PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2C99 JUMPI JUMPDEST PUSH1 0x9F PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2C91 JUMPI JUMPDEST POP POP ADD DUP1 MLOAD SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1D76 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x2C7D JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP2 PUSH2 0x2CC2 DUP3 SWAP8 PUSH2 0x2C14 PUSH1 0x9F SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x2DEC JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x2C68 JUMP JUMPDEST PUSH1 0x1F NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1D76 JUMPI JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH2 0x2CE6 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2D35 JUMPI JUMPDEST PUSH1 0xFF PUSH1 0x20 DUP1 SWAP6 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2D2D JUMPI JUMPDEST POP POP ADD DUP1 MLOAD PUSH1 0x0 NOT DUP2 ADD SWAP2 SWAP1 DUP3 GT PUSH2 0x1D76 JUMPI MSTORE JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x2D18 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL SWAP4 DUP3 DUP6 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP2 PUSH2 0x2D5E DUP3 SWAP8 PUSH2 0x2C14 PUSH1 0xFF SWAP6 MLOAD SWAP2 DUP5 PUSH2 0x2DEC JUMP JUMPDEST POP SWAP6 POP POP POP PUSH2 0x2D03 JUMP JUMPDEST DUP2 MLOAD PUSH2 0x2B06 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 AND SWAP1 PUSH1 0x17 DUP3 GT PUSH2 0x2D97 JUMPI PUSH2 0x2AF1 SWAP2 POP PUSH1 0x40 PUSH1 0xFF DUP5 MLOAD SWAP3 AND OR SWAP1 PUSH2 0x324C JUMP JUMPDEST POP PUSH1 0xFF DUP2 GT PUSH2 0x2DAE JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B20 DUP4 MLOAD PUSH2 0x31E7 JUMP JUMPDEST PUSH2 0xFFFF DUP2 GT PUSH2 0x2DC5 JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B45 DUP4 MLOAD PUSH2 0x3182 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT PUSH2 0x2DDE JUMPI PUSH2 0x2B28 SWAP1 PUSH2 0x2B66 DUP4 MLOAD PUSH2 0x311D JUMP JUMPDEST PUSH2 0x2B28 SWAP1 PUSH2 0x2B7C DUP4 MLOAD PUSH2 0x30B8 JUMP JUMPDEST SWAP1 PUSH2 0x2DF5 PUSH2 0x2A58 JUMP JUMPDEST POP PUSH1 0x1F DUP2 AND DUP1 PUSH2 0x2E24 JUMPI JUMPDEST POP DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 DUP4 MSTORE PUSH1 0x0 DUP3 MSTORE DUP2 ADD PUSH1 0x20 ADD SWAP1 DUP2 LT PUSH2 0x2AC JUMPI PUSH1 0x40 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x20 SUB PUSH1 0x20 DUP2 GT PUSH2 0x1D76 JUMPI DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1D76 JUMPI CODESIZE PUSH2 0x2E00 JUMP JUMPDEST SWAP1 PUSH2 0x2E47 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD SWAP1 PUSH2 0x2E53 PUSH2 0x2A58 JUMP JUMPDEST POP PUSH2 0x2E61 DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x3475 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH2 0x2E6F DUP2 DUP5 PUSH2 0x2C33 JUMP JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 ADD MLOAD DUP3 GT PUSH2 0x2EEC JUMPI JUMPDEST PUSH1 0x20 SWAP2 DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x2EE4 JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x2EBC JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2ED8 PUSH2 0x2ED2 PUSH2 0x2EDE SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2C25 JUMP JUMPDEST SWAP5 PUSH2 0x2C25 JUMP JUMPDEST SWAP3 PUSH2 0x2CCC JUMP JUMPDEST SWAP1 PUSH2 0x2E97 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x2E92 JUMP JUMPDEST PUSH2 0x2EFE PUSH2 0x2EF8 DUP4 PUSH2 0x2F03 JUMP JUMPDEST DUP8 PUSH2 0x3528 JUMP JUMPDEST PUSH2 0x2E7E JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x1 SHL SWAP2 DUP1 DUP4 DIV PUSH1 0x2 EQ SWAP1 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI JUMP JUMPDEST PUSH2 0x2F21 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2F5A JUMPI JUMPDEST PUSH1 0x7B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x2F83 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP DUP5 PUSH2 0x2E3E JUMP JUMPDEST POP PUSH2 0x2F3E JUMP JUMPDEST PUSH2 0x2F91 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x2FC6 JUMPI JUMPDEST PUSH1 0x7A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x2FE8 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x2FAE JUMP JUMPDEST PUSH2 0x2FF6 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x302B JUMPI JUMPDEST PUSH1 0x79 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x304D SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x3013 JUMP JUMPDEST PUSH2 0x305B PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3090 JUMPI JUMPDEST PUSH1 0x78 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x30B2 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x3078 JUMP JUMPDEST PUSH2 0x30C0 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x30F5 JUMPI JUMPDEST PUSH1 0x5B PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3117 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x30DD JUMP JUMPDEST PUSH2 0x3125 PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x315A JUMPI JUMPDEST PUSH1 0x5A PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x317C SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x3142 JUMP JUMPDEST PUSH2 0x318A PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x31BF JUMPI JUMPDEST PUSH1 0x59 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x31E1 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x31A7 JUMP JUMPDEST PUSH2 0x31EF PUSH2 0x2A58 JUMP JUMPDEST POP DUP1 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP1 DUP2 DUP2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP4 ADD MLOAD DUP2 LT ISZERO PUSH2 0x3224 JUMPI JUMPDEST PUSH1 0x58 PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 SHL DUP3 DUP2 DIV PUSH1 0x2 EQ DUP4 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3246 SWAP1 PUSH2 0x2F7C DUP6 MLOAD SWAP2 DUP7 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x320C JUMP JUMPDEST SWAP1 PUSH2 0x3255 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD PUSH1 0x1 DUP2 ADD SWAP2 DUP3 DUP3 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP3 LT ISZERO PUSH2 0x3288 JUMPI JUMPDEST PUSH1 0x20 DUP5 MLOAD SWAP3 DUP4 ADD ADD MSTORE8 DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x32B1 SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP DUP6 PUSH2 0x2E3E JUMP JUMPDEST POP PUSH2 0x3272 JUMP JUMPDEST SWAP1 PUSH2 0x32C0 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x8 ADD SWAP2 DUP3 PUSH1 0x8 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3302 JUMPI JUMPDEST PUSH1 0x8 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3324 SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x32DD JUMP JUMPDEST SWAP1 PUSH2 0x3333 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x4 ADD SWAP2 DUP3 PUSH1 0x4 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x3372 JUMPI JUMPDEST PUSH1 0x4 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH4 0xFFFFFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3394 SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x3350 JUMP JUMPDEST SWAP1 PUSH2 0x33A3 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x2 ADD SWAP2 DUP3 PUSH1 0x2 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x33E0 JUMPI JUMPDEST PUSH1 0x2 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH2 0xFFFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x3402 SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x33C0 JUMP JUMPDEST SWAP1 PUSH2 0x3411 PUSH2 0x2A58 JUMP JUMPDEST POP DUP2 MLOAD MLOAD DUP1 PUSH1 0x1 ADD SWAP2 DUP3 PUSH1 0x1 GT PUSH2 0x1D76 JUMPI PUSH1 0x20 DUP5 ADD MLOAD DUP4 GT PUSH2 0x344D JUMPI JUMPDEST PUSH1 0x1 DUP5 MLOAD SWAP3 DUP4 ADD ADD SWAP1 PUSH1 0xFF NOT DUP3 MLOAD AND OR SWAP1 MSTORE DUP1 MLOAD DUP3 GT PUSH2 0x2F56 JUMPI POP POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x1 SHL DUP4 DUP2 DIV PUSH1 0x2 EQ DUP5 ISZERO OR ISZERO PUSH2 0x1D76 JUMPI PUSH2 0x346F SWAP1 PUSH2 0x32AA DUP7 MLOAD SWAP2 DUP8 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x342E JUMP JUMPDEST ISZERO PUSH2 0x2AC JUMPI JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x3486 PUSH2 0x2A58 JUMP JUMPDEST POP PUSH2 0x3494 DUP2 MLOAD DUP4 GT ISZERO PUSH2 0x3475 JUMP JUMPDEST DUP3 MLOAD MLOAD SWAP2 PUSH1 0x20 PUSH2 0x34A4 DUP3 DUP6 PUSH2 0x2C33 JUMP JUMPDEST SWAP3 DUP2 SWAP4 DUP3 DUP8 ADD MLOAD DUP2 GT PUSH2 0x3511 JUMPI JUMPDEST DUP7 MLOAD DUP4 DUP2 MLOAD SWAP8 DUP3 ADD ADD SWAP7 DUP3 GT PUSH2 0x3509 JUMPI JUMPDEST POP POP ADD SWAP2 JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x34ED JUMPI POP PUSH1 0x0 NOT SWAP1 PUSH1 0x20 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 NOT SWAP1 MLOAD AND SWAP1 DUP3 MLOAD AND OR SWAP1 MSTORE SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH2 0x2ED8 PUSH2 0x2ED2 PUSH2 0x3503 SWAP3 DUP7 MLOAD DUP2 MSTORE PUSH2 0x2C25 JUMP JUMPDEST SWAP1 PUSH2 0x34C8 JUMP JUMPDEST MSTORE CODESIZE DUP1 PUSH2 0x34C3 JUMP JUMPDEST PUSH2 0x3523 PUSH2 0x351D DUP3 PUSH2 0x2F03 JUMP JUMPDEST DUP9 PUSH2 0x3528 JUMP JUMPDEST PUSH2 0x34B2 JUMP JUMPDEST SWAP1 PUSH2 0x2B06 SWAP2 PUSH2 0x3539 DUP2 MLOAD SWAP3 DUP3 PUSH2 0x2DEC JUMP JUMPDEST POP PUSH2 0x2E3E JUMP INVALID ADD PUSH22 0xB7A638427703F0DBE7BB9BBF987A2551717B34E79F33 0xB5 0xB1 STOP DUP14 0x1F LOG0 SAR 0xB9 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY PUSH24 0x93DD1030AE7D0B7D42F3D243C95B66A529F013FAC8CE271A 0x26 0xA6 0xC2 SDIV 0xF9 0x2A PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"640:13094:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;640:13094:18;;;;;;1428:48;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;-1:-1:-1;;;;;1482:28:18;640:13094;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;640:13094:18;;;;;;-1:-1:-1;;640:13094:18;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;640:13094:18;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2221:8:0;-1:-1:-1;;;;;640:13094:18;2199:10:0;:31;2195:81;;2317:3;;;;:::i;:::-;2332:27;-1:-1:-1;2332:27:0;;640:13094:18;2195:81:0;640:13094:18;;-1:-1:-1;;;2247:22:0;;640:13094:18;;2247:22:0;640:13094:18;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;640:13094:18;;;-1:-1:-1;640:13094:18;;;;;;;-1:-1:-1;640:13094:18;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;640:13094:18;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;640:13094:18;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;-1:-1:-1;;640:13094:18;;;;;;-1:-1:-1;640:13094:18;;;1621:67;640:13094;;;;;;;-1:-1:-1;;;;;640:13094:18;;1621:67;640:13094;1621:67;;;:::i;:::-;;;;;;;:::i;:::-;;;;;640:13094;1621:67;640:13094;1621:67;;640:13094;1621:67;;;640:13094;1621:67;;;;;;;:::i;:::-;;;640:13094;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1500:62:7;;:::i;:::-;12545:21:18;12584:11;;640:13094;;;;12770:49;;;;-1:-1:-1;;;;;640:13094:18;12709:37;;640:13094;;;;;;;;;;;;12658:41;;;;:::i;:::-;;12709:37;:::i;:::-;640:13094;;;;;;;;12803:15;640:13094;;;;;;;;;;;;;;12770:49;;;;640:13094;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;;-1:-1:-1;640:13094:18;:::o;:::-;;:::i;:::-;;;;;;-1:-1:-1;;640:13094:18;;;;;;:::i;:::-;-1:-1:-1;;;;;640:13094:18;-1:-1:-1;640:13094:18;;;1786:49;640:13094;;;;;;;;;;;1786:49;;;;;640:13094;1786:49;;;;:::i;:::-;640:13094;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;2129:29;640:13094;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;11320:18;640:13094;11340:14;640:13094;11356:9;640:13094;11367:15;640:13094;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;2164:24;640:13094;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;1500:62:7;;:::i;:::-;1796:7:11;640:13094:18;;;;2140:9:11;2136:62;;640:13094:18;;;1796:7:11;640:13094:18;2674:22:11;640:13094:18;;;735:10:9;640:13094:18;;2674:22:11;640:13094:18;2136:62:11;640:13094:18;;-1:-1:-1;;;2172:15:11;;640:13094:18;;2172:15:11;640:13094:18;;;-1:-1:-1;;640:13094:18;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5650:322;640:13094;6146:154;5454:121;640:13094;6146:154;640:13094;;;;;;:::i;:::-;2466:103:12;;;:::i;:::-;1315:72:11;;:::i;:::-;4735:57:18;4756:15;640:13094;4743:9;:28;;4735:57;:::i;:::-;4802;640:13094;;4810:27;;4802:57;:::i;:::-;4869:59;640:13094;;4877:28;;4869:59;:::i;:::-;4938:116;4959:40;640:13094;;;:::i;:::-;4959:40;640:13094;4959:45;4938:116;:::i;:::-;5480:16;640:13094;;:::i;:::-;4508:16:3;640:13094:18;;:::i;:::-;4508:16:3;;:::i;:::-;5394:4:18;5298:15;;:::i;:::-;5323:19;;;;:::i;:::-;;;;;:::i;:::-;;5352:20;;;;:::i;:::-;;;;;:::i;:::-;;5394:4;;:::i;:::-;5480:16;:::i;:::-;5311:1;640:13094;;5560:5;640:13094;;;;;;;;;;;5454:121;;:::i;:::-;640:13094;;;;;;:::i;:::-;5695:10;640:13094;;5650:322;;;;640:13094;5650:322;640:13094;5650:322;;640:13094;5798:15;5650:322;;;640:13094;-1:-1:-1;5650:322:18;;;640:13094;-1:-1:-1;5650:322:18;;;640:13094;-1:-1:-1;5650:322:18;;;640:13094;;;:::i;:::-;5650:322;;;640:13094;-1:-1:-1;5650:322:18;;;640:13094;5616:31;;640:13094;;9191:20;640:13094;;;;;;;5616:31;640:13094;:::i;:::-;5695:10;640:13094;;;;6021:12;640:13094;;;;;6021:40;;5695:10;;6021:40;:::i;:::-;6071:29;;;:::i;:::-;6110:20;;;640:13094;6110:20;:::i;:::-;;640:13094;;6110:20;640:13094;;5695:10;;;;5798:15;;6146:154;;;:::i;:::-;;;;2531:1:12;1857;640:13094:18;;2888:208:12;2531:1;640:13094:18;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;2194:30;640:13094;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;640:13094:18;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;1694:64;640:13094;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;1841:45;640:13094;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;1694:64;;;640:13094;;1694:64;640:13094;1694:64;;;640:13094;1694:64;640:13094;1694:64;;;;;:::i;:::-;;;640:13094;1694:64;;;:::i;:::-;;;640:13094;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;1796:7:11;640:13094:18;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;1988:34;640:13094;1988:34;;;;;640:13094;;;1988:34;-1:-1:-1;640:13094:18;;;;:::i;:::-;;;;;;-1:-1:-1;;640:13094:18;;;;11770:59;640:13094;;;;;1500:62:7;;:::i;:::-;640:13094:18;11678:34;640:13094;;11722:24;640:13094;;;;;;;;;;11813:15;640:13094;;;;11770:59;640:13094;;;;;;;-1:-1:-1;;640:13094:18;;;;;1544:20;640:13094;;;;;;;;;;;;;;;;;;;;1500:62:7;;:::i;:::-;640:13094:18;;-1:-1:-1;;;;;;640:13094:18;;;;;;-1:-1:-1;;;;;640:13094:18;3052:40:7;640:13094:18;;3052:40:7;640:13094:18;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1500:62:7;;;:::i;:::-;640:13094:18;;12272:32;640:13094;;;;;;;;;;;;;;;12272:32;640:13094;;;12344:14;640:13094;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;12344:14;640:13094;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9416:156;640:13094;;;:::i;:::-;2466:103:12;;:::i;:::-;1315:72:11;;:::i;:::-;8692:61:18;8713:10;640:13094;8700:9;:23;;8692:61;:::i;:::-;640:13094;;;;:::i;:::-;;:::i;:::-;8855:16;8847:53;8855:16;;;640:13094;8855:20;;8847:53;:::i;:::-;8910:55;640:13094;8918:18;;;640:13094;;;;;;8910:55;:::i;:::-;8918:18;8983:22;;;640:13094;8975:65;9009:2;640:13094;;8983:28;;8975:65;:::i;:::-;9191:31;640:13094;;;;9191:20;640:13094;;;;;;;9191:31;640:13094;;-1:-1:-1;;;;;640:13094:18;9548:14;;9321:18;;640:13094;9232:71;;640:13094;;9261:10;9240:31;9232:71;:::i;:::-;9321:18;640:13094;9313:54;640:13094;;9321:23;9313:54;:::i;:::-;640:13094;9548:14;;;640:13094;-1:-1:-1;8983:22:18;640:13094;;;;;;;;;;9416:156;;9261:10;;640:13094;9416:156;;;:::i;:::-;;:15;;640:13094;9416:156;;;;;;;640:13094;9416:156;-1:-1:-1;9416:156:18;;;640:13094;;;9680:58;640:13094;;;9647:17;;;640:13094;9647:17;:::i;:::-;;640:13094;;9647:17;9680:58;:::i;:::-;8983:22;640:13094;;;;;9722:15;640:13094;;;;9261:10;;;9680:58;;;2531:1:12;1857;640:13094:18;;2888:208:12;2531:1;8983:22:18;640:13094;;;;;;;;;;;;9416:156;9680:58;9416:156;;;;8918:18;9416:156;8918:18;9416:156;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;640:13094::-;;;;;;-1:-1:-1;;640:13094:18;;;;1500:62:7;;:::i;:::-;1315:72:11;;:::i;:::-;2408:4;640:13094:18;;2398:14:11;640:13094:18;;;2398:14:11;640:13094:18;2427:20:11;640:13094:18;;;735:10:9;640:13094:18;;2427:20:11;640:13094:18;;;;;;;-1:-1:-1;;640:13094:18;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;1952:30;640:13094;1952:30;;;;;640:13094;;1952:30;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;2256:44;640:13094;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;2090:33;640:13094;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;:::i;:::-;;-1:-1:-1;640:13094:18;10381:12;640:13094;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;2329:38;640:13094;;;;;;;;;;;;;;:::i;:::-;1500:62:7;;:::i;:::-;640:13094:18;;;;:::i;:::-;;;;;;13396:32;640:13094;13495:54;640:13094;;:::i;:::-;;;-1:-1:-1;;640:13094:18;13424:4;640:13094;;;;13396:32;13438:33;;;:::i;13495:54::-;640:13094;;13533:15;640:13094;;13521:10;;;13495:54;;640:13094;;13495:54;640:13094;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;10605:18;640:13094;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;10605:18;640:13094;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;:::i;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;-1:-1:-1;640:13094:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;640:13094:18;;;;;;2028:33;640:13094;2028:33;;;;;640:13094;;;2028:33;-1:-1:-1;640:13094:18;-1:-1:-1;;;;;;;;;;;640:13094:18;;:::i;:::-;;;;;;-1:-1:-1;;640:13094:18;;;;;;:::i;:::-;1500:62:7;;:::i;:::-;-1:-1:-1;;;;;640:13094:18;;;2627:22:7;;2623:91;;3004:6;640:13094:18;;-1:-1:-1;;;;;;640:13094:18;;;;;;3004:6:7;;640:13094:18;3052:40:7;3004:6;;3052:40;640:13094:18;;2623:91:7;640:13094:18;;-1:-1:-1;;;2672:31:7;;-1:-1:-1;640:13094:18;2672:31:7;;640:13094:18;;;2672:31:7;640:13094:18;;;;;;-1:-1:-1;;640:13094:18;;;;10816:17;640:13094;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;10816:17;640:13094;;-1:-1:-1;;;;;;;;;;;640:13094:18;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;1516:22;640:13094;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;-1:-1:-1;640:13094:18;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;640:13094:18;;;;:::o;:::-;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;640:13094:18;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;5311:1;640:13094;;;-1:-1:-1;640:13094:18;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;5357:1;640:13094;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;640:13094:18;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;640:13094:18;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;6071:13;640:13094;-1:-1:-1;;;640:13094:18;;;;;;;;;6071:13;640:13094;;;;;;6071:13;-1:-1:-1;640:13094:18;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;13438:17;640:13094;;-1:-1:-1;;;640:13094:18;;;;;;;;;13438:17;640:13094;;;;;;;;13438:17;-1:-1:-1;640:13094:18;-1:-1:-1;;;;;;;;;;;640:13094:18;;:::i;:::-;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;640:13094:18;;;;-1:-1:-1;640:13094:18;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;640:13094:18;;;-1:-1:-1;;;640:13094:18;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;:::i;:::-;7492:15;640:13094;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;8042:14;640:13094;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;640:13094:18;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;640:13094:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;8095:17;640:13094;;-1:-1:-1;;;640:13094:18;;;;;;;;;8095:17;640:13094;;;;;;;;8095:17;-1:-1:-1;640:13094:18;-1:-1:-1;;;;;;;;;;;640:13094:18;;:::i;:::-;7945:18;640:13094;;-1:-1:-1;;;640:13094:18;;;;;;;;;7945:18;640:13094;;;;;;;;7945:18;-1:-1:-1;640:13094:18;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6601:1755::-;;;6781:31;;640:13094;;9191:20;640:13094;;;;;;;6781:31;6830:17;6822:51;6830:17;;;640:13094;6830:21;;6822:51;:::i;:::-;6892:19;;;640:13094;6883:58;6891:20;640:13094;;;;;;;;6891:20;;640:13094;6891:20;6883:58;:::i;:::-;640:13094;6952:124;;640:13094;7398:33;8161:188;;7384:4;640:13094;7272:53;640:13094;7272:53;640:13094;8161:188;640:13094;;7272:53;;;;;;:::i;:::-;7362:26;;;;;;;;;;13424:4;640:13094;;;;;;;;;7362:26;640:13094;;;;;;;;;;;;;;;;;;7398:33;7441:23;6781:20;7441:23;;640:13094;;7492:15;;;;640:13094;:::i;:::-;;;:::i;:::-;;;;;;;7272:53;7592:252;;640:13094;;7592:252;;;;640:13094;7592:252;;;;640:13094;7592:252;;;640:13094;7818:15;7592:252;;;640:13094;7572:16;640:13094;;;;:::i;:::-;;:::i;:::-;7884:262;;;;7915:16;;;640:13094;7915:16;:::i;:::-;;640:13094;;7915:16;7945:41;;;:::i;:::-;8161:188;:::i;:::-;640:13094;7592:252;640:13094;7818:15;;;;8161:188;;;:::i;:::-;;;;6601:1755::o;7884:262::-;8017:11;;;640:13094;8017:11;:::i;:::-;;640:13094;;8017:11;8042:39;640:13094;;;:::i;8042:39::-;8095:40;;;:::i;6952:124::-;-1:-1:-1;640:13094:18;;-1:-1:-1;;640:13094:18;13424:4;640:13094;;;-1:-1:-1;7019:26:18;;-1:-1:-1;640:13094:18;1796:162:7;1710:6;640:13094:18;-1:-1:-1;;;;;640:13094:18;735:10:9;1855:23:7;1851:101;;1796:162::o;1851:101::-;640:13094:18;;-1:-1:-1;;;1901:40:7;;735:10:9;1901:40:7;;;640:13094:18;;;1901:40:7;2575:307:12;1899:1;2702:7;640:13094:18;2702:18:12;2698:86;;1899:1;2702:7;640:13094:18;2575:307:12:o;2698:86::-;640:13094:18;;-1:-1:-1;;;2743:30:12;;;;;1878:128:11;640:13094:18;1796:7:11;640:13094:18;;1939:61:11;;1878:128::o;1939:61::-;640:13094:18;;-1:-1:-1;;;1974:15:11;;;;;5827:148:3;640:13094:18;;5911:16:3;5907:40;;5954:9;;:16;5827:148::o;5907:40::-;640:13094:18;;-1:-1:-1;;;5936:11:3;;;;;375:3;640:13094:18;;;;;;:::i;:::-;375:3:3;640:13094:18;;-1:-1:-1;;;375:3:3;;;;:::o;:::-;640:13094:18;;;375:3:3;;;;;;;;;;-1:-1:-1;375:3:3;;;:::o;:::-;;:::i;:::-;640:13094:18;;;;;;:::i;:::-;375:3:3;640:13094:18;;-1:-1:-1;;;375:3:3;;;;:::o;:::-;;-1:-1:-1;375:3:3;;;:::o;:::-;640:13094:18;;;;;;:::i;:::-;375:3:3;640:13094:18;;-1:-1:-1;;;375:3:3;;;;:::o;:::-;640:13094:18;;;;;;:::i;:::-;375:3:3;640:13094:18;;-1:-1:-1;;;375:3:3;;;;:::o;:::-;640:13094:18;;;;;;:::i;:::-;375:3:3;640:13094:18;;-1:-1:-1;;;375:3:3;;;;:::o;:::-;640:13094:18;;;;;;:::i;:::-;375:3:3;640:13094:18;;-1:-1:-1;;;375:3:3;;;;:::o;:::-;640:13094:18;;;;;;:::i;:::-;375:3:3;640:13094:18;;-1:-1:-1;;;375:3:3;;;;:::o;2158:1270::-;2274:32;;:::i;:::-;375:3;2313:34;375:3;;:::i;:::-;2313:34;;:::i;:::-;2373:26;375:3;;;;;:::i;:::-;;;;:::i;:::-;2373:26;;:::i;:::-;2407:30;375:3;;:::i;2407:30::-;2463:22;2471:13;;;375:3;;;;:::i;:::-;;;;:::i;2463:22::-;2493:28;375:3;;:::i;2493:28::-;2546:11;;;;;;;:::i;:::-;2569:9;;;;;640:13094:18;2565:227:3;;2158:1270;2802:30;;;;;;;640:13094:18;2798:346:3;;2158:1270;3154:14;;;;;;640:13094:18;3150:246:3;;2158:1270;3409:10;;:14;2158:1270;:::o;3150:246::-;375:3;3189:31;375:3;;:::i;3189:31::-;3228:17;;;:::i;:::-;-1:-1:-1;3302:3:3;3279:14;;640:13094:18;;3275:25:3;;;;;3335:17;;;;375:3;3335:17;;:::i;:::-;;;;:::i;:::-;375:3;3260:13;;3275:25;;;;;3369:18;;;:::i;:::-;3150:246;;;2798:346;2857:20;;;375:3;;;;;:::i;:::-;;;;:::i;:::-;2857:39;2853:88;;3154:14;375:3;3013:29;3106:30;375:3;2948:37;375:3;;:::i;:::-;2948:37;;:::i;:::-;375:3;;;;:::i;:::-;;;;:::i;:::-;3013:29;;:::i;:::-;3051;375:3;;:::i;:::-;3051:29;;:::i;:::-;3106:30;;;:::i;:::-;2798:346;;2853:88;2471:13;640:13094:18;-1:-1:-1;;;2915:17:3;;;;;2565:227;375:3;2599:26;375:3;;:::i;:::-;2599:26;;:::i;:::-;2633:17;;;:::i;:::-;-1:-1:-1;2702:3:3;2684:9;;640:13094:18;;2680:20:3;;;;;2736:12;;;;375:3;2736:12;;:::i;:::-;;;;:::i;:::-;375:3;2665:13;;2680:20;;;;;2765:18;;;:::i;:::-;2565:227;;;1158:379:0;;;1335:142;1158:379;-1:-1:-1;;;;;1158:379:0;640:13094:18;322:1:3;640:13094:18;;;;;;;;;;1335:142:0;;640:13094:18;1335:142:0;;;640:13094:18;322:1:3;;;;;;;;;;:::i;:::-;;;;;;640:13094:18;;322:1:3;;;640:13094:18;322:1:3;;;640:13094:18;1335:142:0;640:13094:18;-1:-1:-1;1335:8:0;-1:-1:-1;;;;;640:13094:18;1335:142:0;;;;;;;-1:-1:-1;1335:142:0;;;1158:379;1488:22;;;-1:-1:-1;1488:22:0;;1158:379;:::o;1335:142::-;;;;;;;;;;;;;;:::i;:::-;;;;3777:307:3;640:13094:18;;3937:25:3;3933:51;;-1:-1:-1;640:13094:18;;;4029:13:3;;;640:13094:18;4059:11:3;;:20;3777:307::o;3933:51::-;640:13094:18;;-1:-1:-1;;;3971:13:3;;;;;640:13094:18;;;;;;;:::i;:::-;-1:-1:-1;640:13094:18;;;;;;;:::o;1490:173:6:-;640:13094:18;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;640:13094:18;;;;:::i;:::-;;375:3:3;640:13094:18;1251:12:5;;640:13094:18;;1284:265:5;;;;-1:-1:-1;1284:265:5;;;;;;;;;;-1:-1:-1;1284:265:5;640:13094:18;1284:265:5;640:13094:18;1490:173:6;:::o;3021:204::-;640:13094:18;;4648:30:5;;3021:204:6;;-1:-1:-1;;;;;640:13094:18;;;6299:2:6;6290:11;;6299:2;;6317:48;:7;;640:13094:18;;6317:7:6;;640:13094:18;;;6317:48:6;;:::i;:::-;;6286:623;3190:7;640:13094:18;;;:::i;:::-;;;;4648:30:5;;:::i;:::-;;3021:204:6:o;6286:623::-;-1:-1:-1;6395:4:6;6386:13;;6395:4;;6474:27;6415:7;:45;:7;;:45;:::i;:::-;;6474:7;;:27;:::i;:::-;;6286:623;;6382:527;6531:6;6522:15;;6531:6;;6612:27;6553:7;:45;:7;;:45;:::i;:::-;;6612:7;;:27;:::i;6518:391::-;6669:10;6660:19;;6669:10;;6754:27;6695:7;:45;:7;;:45;:::i;:::-;;6754:7;;:27;:::i;6656:253::-;6871:27;6812:7;:45;:7;;:45;:::i;:::-;;6871:7;;:27;:::i;1832:202::-;;1916:7;;640:13094:18;;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;1832:202:6;1942:39;5128:12:5;2009:17:6;5204:416:5;;;;;;;;;;;;;1832:202:6;640:13094:18;;;;2009:17:6;5128:12:5;2009:17:6;;640:13094:18;5128:12:5;2009:17:6;;;;;:::i;:::-;;:::i;5204:416:5:-;;;;;;5117:77;640:13094:18;5106:1:5;640:13094:18;;;;;5181:1:5;640:13094:18;;;;;;;5128:12:5;2099:7;2145:19;2009:17:6;2099:7:5;2116:19;1942:39:6;2099:7:5;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;;;;;1047:1:6;;3084:12:5;1047:1:6;;;;;;;:::o;:::-;;;;;;;;;;:::o;3607:146::-;7035:7;;640:13094:18;;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;3607:146:6;7061:17;5128:12:5;5204:416;;;;;;;;;;;;;;3607:146:6;3732:9;;;640:13094:18;;1047:1:6;5106::5;1047::6;;;;;;;640:13094:18;3607:146:6:o;5204:416:5:-;;;;;;5117:77;640:13094:18;5106:1:5;640:13094:18;;;;;5181:1:5;640:13094:18;;;;;;;5128:12:5;2099:7;2145:19;2099:7;;2116:19;7061:17:6;2099:7:5;;2116:19;;;:::i;2145:::-;;5117:77;;;;;;1197:1:6;-1:-1:-1;;1197:1:6;;;;;;;;:::o;4211:154::-;7035:7;;640:13094:18;;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4211:154:6;640:13094:18;5128:12:5;5204:416;;;;;;;;;;;;;;4211:154:6;-1:-1:-1;;4344:9:6;640:13094:18;;-1:-1:-1;;1197:1:6;;;4344:9;1197:1;;;;640:13094:18;4211:154:6:o;5204:416:5:-;;;;;;5117:77;640:13094:18;5106:1:5;640:13094:18;;;;;5181:1:5;640:13094:18;;;;;;;5128:12:5;2099:7;2145:19;2099:7;;2116:19;640:13094:18;2099:7:5;;2116:19;;;:::i;2145:::-;;5117:77;;;;;;2828:187:6;640:13094:18;;4648:30:5;;2828:187:6;;-1:-1:-1;;;;;640:13094:18;;;6299:2:6;6290:11;;6299:2;;6317:48;:7;;640:13094:18;;6317:7:6;;640:13094:18;;;6317:48:6;;:::i;6286:623::-;-1:-1:-1;6395:4:6;6386:13;;6395:4;;6474:27;6415:7;:45;:7;;:45;:::i;6382:527::-;6531:6;6522:15;;6531:6;;6612:27;6553:7;:45;:7;;:45;:::i;6518:391::-;6669:10;6660:19;;6669:10;;6754:27;6695:7;:45;:7;;:45;:::i;6656:253::-;6871:27;6812:7;:45;:7;;:45;:::i;1020:555:5:-;;640:13094:18;;:::i;:::-;;;;;1119:18:5;1115:81;;1020:555;1251:12;;1130:2;1251:12;;640:13094:18;1284:265:5;;;;;;-1:-1:-1;1284:265:5;;;;1130:2;1284:265;;;;;;;;1020:555;:::o;1115:81::-;1130:2;1197:1:6;1130:2:5;1197:1:6;;;;1047;;;;;;;1115:81:5;;;4539:146;;640:13094:18;;:::i;:::-;;;;;;;:::i;:::-;;2955:27:5;640:13094:18;;2963:18:5;;;2955:27;:::i;:::-;3004:7;;640:13094:18;3047:9:5;;;;;:::i;:::-;3084:12;;;;;640:13094:18;3070:26:5;;3066:85;;4539:146;3084:12;3161:9;3198:507;;;;;;;;;;;;;;4539:146;3198:507;;;3765:165;3772:9;;;;;;;640:13094:18;;;;3084:12:5;640:13094:18;4009:3:5;640:13094:18;;4045:189:5;;;;;;;;;;;;;4539:146;:::o;3783:9::-;3808:65;;;3910:9;3886:10;3783:9;3808:65;;;;;3886:10;:::i;:::-;3910:9;;:::i;:::-;3783;;:::i;:::-;3765:165;;;3198:507;;;;;;3066:85;3124:15;;;;:::i;:::-;;;:::i;:::-;3066:85;;640:13094:18;;;;;;;;;3138:1:5;640:13094:18;;;;;;;:::o;4948:699:5:-;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;6838:17:6;5128:12:5;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5204:416::-;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;4948:699;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;6721:17:6;5128:12:5;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;6579:17:6;5128:12:5;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;6441:17:6;5128:12:5;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;6838:17:6;5128:12:5;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;6721:17:6;5128:12:5;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;6579:17:6;5128:12:5;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;6441:17:6;5128:12:5;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;5117:77;;4948:699;;640:13094:18;;:::i;:::-;;5058:7:5;;640:13094:18;5106:1:5;1047::6;;;;;;;;5128:12:5;;;640:13094:18;5121:19:5;;;5117:77;;4948:699;5128:12;5204:416;;;;;;;;;;;;;5630:10;;4948:699;:::o;5117:77::-;640:13094:18;5106:1:5;640:13094:18;;;;5181:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;;:::i;:::-;;5117:77;;8083:795;;640:13094:18;;:::i;:::-;;8200:7:5;;640:13094:18;1047:1:6;6896;1047;;;6896;1047;;;8280:12:5;;;640:13094:18;8266:26:5;;8262:85;;8083:795;6896:1:6;8395:457:5;;;;;;;-1:-1:-1;;;;;8395:457:5;;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;640:13094:18;;;;;;8334:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;640:13094:18;;:::i;:::-;;8200:7:5;;640:13094:18;1047:1:6;6779;1047;;;6779;1047;;;8280:12:5;;;640:13094:18;8266:26:5;;8262:85;;8083:795;6779:1:6;8395:457:5;;;;;;;640:13094:18;8395:457:5;;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;640:13094:18;;;;;;8334:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;640:13094:18;;:::i;:::-;;8200:7:5;;640:13094:18;1047:1:6;6637;1047;;;6637;1047;;;8280:12:5;;;640:13094:18;8266:26:5;;8262:85;;8083:795;6637:1:6;8395:457:5;;;;;;;;;;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;640:13094:18;;;;;;6637:1:6;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;8083:795;;640:13094:18;;:::i;:::-;;8200:7:5;;640:13094:18;1047:1:6;6499;1047;;;6499;1047;;;8280:12:5;;;640:13094:18;8266:26:5;;8262:85;;8083:795;6499:1:6;8395:457:5;;;;;;640:13094:18;;;8395:457:5;;;;;;;;;;;;8861:10;;8083:795;:::o;8262:85::-;640:13094:18;6499:1:6;640:13094:18;;;;8334:1:5;640:13094:18;;;;;;;2145:19:5;2099:7;2116:19;2099:7;;2116:19;;;:::i;2145:::-;;8262:85;;640:13094:18;;;;:::o;2844:1427:5:-;;;640:13094:18;;:::i;:::-;;2955:27:5;640:13094:18;;2963:18:5;;;2955:27;:::i;:::-;3004:7;;640:13094:18;3047:9:5;3084:12;3047:9;;;;:::i;:::-;3084:12;;;;;;640:13094:18;3070:26:5;;3066:85;;2844:1427;3198:507;;;;;;;;;;;;;;2844:1427;3198:507;;;3765:165;3772:9;;;;;;;640:13094:18;;;;3084:12:5;640:13094:18;4009:3:5;640:13094:18;;4045:189:5;;;;;;;;;;;;;2844:1427;:::o;3783:9::-;3808:65;;;3910:9;3886:10;3783:9;3808:65;;;;;3886:10;:::i;3783:9::-;3765:165;;;3198:507;;;;;;3066:85;3124:15;;;;:::i;:::-;;;:::i;:::-;3066:85;;2004:167;;2145:19;2004:167;2116:19;2099:7;;2116:19;;;:::i;:::-;;2145;:::i"},"methodIdentifiers":{"allFlaggedContent(uint256)":"f16fb433","allRequestIds(uint256)":"968e5a0d","allVerifiedContent(uint256)":"6bc9d5b3","authenticityNFT()":"01ff8b7d","donID()":"6e74336b","emergencyFlagContent(string)":"bc9df56f","flaggedContent(string)":"b32eaa0e","gasLimit()":"f68016b7","getAllFlaggedContent()":"f33b2491","getAllVerifiedContent()":"c8b22d24","getStatistics()":"372d6b27","getUserRequests(address)":"b337cf74","getVerificationResult(string)":"cddc911f","handleOracleFulfillment(bytes32,bytes,bytes)":"0ca76175","mintAuthenticityNFT(string)":"8047bc1d","nftMintFee()":"b9f83f06","owner()":"8da5cb5b","pause()":"8456cb59","paused()":"5c975abb","renounceOwnership()":"715018a6","requestVerification(string,string)":"4de2bfbf","sourceCode()":"13c60177","subscriptionId()":"09c1ba2e","totalAuthentic()":"35c1260d","totalFake()":"39ffbe0b","totalNFTsMinted()":"4eb7e95f","totalVerifications()":"ac90c140","transferOwnership(address)":"f2fde38b","unpause()":"3f4ba83a","updateChainlinkConfig(uint64,uint32,bytes32,string)":"79cb62b0","updateFees(uint256,uint256)":"6db79437","userRequests(address,uint256)":"263cb6b6","verificationFee()":"a8c278a2","verificationRequests(bytes32)":"0f3908c8","verificationResults(string)":"5a55977e","version()":"54fd4d50","withdrawFunds()":"24600fc3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_router\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_donID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_sourceCode\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EmptyArgs\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySource\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoInlineSecrets\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyRouterCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reporter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ContentFlagged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"verificationFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"nftMintFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FeesUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"NFTMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"RequestSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isAuthentic\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"confidenceScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"aiModel\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VerificationCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"mediaType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"VerificationRequested\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allFlaggedContent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allRequestIds\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allVerifiedContent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"authenticityNFT\",\"outputs\":[{\"internalType\":\"contract AuthenticityNFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"emergencyFlagContent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"flaggedContent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gasLimit\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFlaggedContent\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllVerifiedContent\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStatistics\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalVerifications_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalAuthentic_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalFake_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalNFTsMinted_\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserRequests\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"getVerificationResult\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isAuthentic\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"confidenceScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiModel\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reasoning\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"internalType\":\"struct AuthenticityRegistry.VerificationResult\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"response\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"handleOracleFulfillment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"}],\"name\":\"mintAuthenticityNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_ipfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_mediaType\",\"type\":\"string\"}],\"name\":\"requestVerification\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sourceCode\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subscriptionId\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAuthentic\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalNFTsMinted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVerifications\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"uint32\",\"name\":\"_gasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"_donID\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_sourceCode\",\"type\":\"string\"}],\"name\":\"updateChainlinkConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_verificationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_nftMintFee\",\"type\":\"uint256\"}],\"name\":\"updateFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userRequests\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verificationFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"verificationRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"mediaType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isProcessed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isAuthentic\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"confidenceScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiModel\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"nftTokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"verificationResults\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isAuthentic\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"confidenceScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiModel\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reasoning\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for verifying media authenticity using Chainlink Functions\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructor to initialize the contract\",\"params\":{\"_donID\":\"Decentralized Oracle Network ID\",\"_gasLimit\":\"Gas limit for Functions requests\",\"_initialOwner\":\"Initial owner of the contract\",\"_nftContract\":\"Address of the AuthenticityNFT contract\",\"_router\":\"Chainlink Functions router address\",\"_sourceCode\":\"JavaScript source code for Chainlink Functions\",\"_subscriptionId\":\"Chainlink subscription ID\"}},\"emergencyFlagContent(string)\":{\"params\":{\"_ipfsHash\":\"IPFS hash of content to flag\"}},\"getAllFlaggedContent()\":{\"returns\":{\"_0\":\"Array of IPFS hashes\"}},\"getAllVerifiedContent()\":{\"returns\":{\"_0\":\"Array of IPFS hashes\"}},\"getStatistics()\":{\"returns\":{\"totalAuthentic_\":\"Total authentic content\",\"totalFake_\":\"Total fake content\",\"totalNFTsMinted_\":\"Total NFTs minted\",\"totalVerifications_\":\"Total number of verifications\"}},\"getUserRequests(address)\":{\"params\":{\"_user\":\"Address of the user\"},\"returns\":{\"_0\":\"requestIds Array of request IDs\"}},\"getVerificationResult(string)\":{\"params\":{\"_ipfsHash\":\"IPFS hash of the content\"},\"returns\":{\"_0\":\"result The verification result\"}},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"details\":\"Either response or error parameter will be set, but never both.\",\"params\":{\"err\":\"Aggregated error either from the request's source code or from the execution pipeline.\",\"requestId\":\"The requestId returned by FunctionsClient.sendRequest().\",\"response\":\"Aggregated response from the request's source code.\"}},\"mintAuthenticityNFT(string)\":{\"params\":{\"_ipfsHash\":\"IPFS hash of the verified authentic content\"},\"returns\":{\"_0\":\"tokenId The ID of the minted NFT\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"requestVerification(string,string)\":{\"params\":{\"_ipfsHash\":\"IPFS hash of the media to verify\",\"_mediaType\":\"Type of media (image, video, audio)\"},\"returns\":{\"_0\":\"requestId The ID of the verification request\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateChainlinkConfig(uint64,uint32,bytes32,string)\":{\"params\":{\"_donID\":\"New DON ID\",\"_gasLimit\":\"New gas limit\",\"_sourceCode\":\"New source code\",\"_subscriptionId\":\"New subscription ID\"}},\"updateFees(uint256,uint256)\":{\"params\":{\"_nftMintFee\":\"New NFT mint fee\",\"_verificationFee\":\"New verification fee\"}},\"version()\":{\"returns\":{\"_0\":\"Version string\"}}},\"title\":\"AuthenticityRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyFlagContent(string)\":{\"notice\":\"Emergency function to flag content manually (owner only)\"},\"getAllFlaggedContent()\":{\"notice\":\"Get all flagged content\"},\"getAllVerifiedContent()\":{\"notice\":\"Get all verified authentic content\"},\"getStatistics()\":{\"notice\":\"Get platform statistics\"},\"getUserRequests(address)\":{\"notice\":\"Get user's verification requests\"},\"getVerificationResult(string)\":{\"notice\":\"Get verification result for content\"},\"handleOracleFulfillment(bytes32,bytes,bytes)\":{\"notice\":\"Chainlink Functions response handler called by the Functions Router during fullilment from the designated transmitter node in an OCR round.\"},\"mintAuthenticityNFT(string)\":{\"notice\":\"Mint NFT certificate for authentic content\"},\"pause()\":{\"notice\":\"Pause contract (owner only)\"},\"requestVerification(string,string)\":{\"notice\":\"Request verification for media content\"},\"unpause()\":{\"notice\":\"Unpause contract (owner only)\"},\"updateChainlinkConfig(uint64,uint32,bytes32,string)\":{\"notice\":\"Update Chainlink Functions configuration (owner only)\"},\"updateFees(uint256,uint256)\":{\"notice\":\"Update verification fees (owner only)\"},\"version()\":{\"notice\":\"Get contract version\"},\"withdrawFunds()\":{\"notice\":\"Withdraw contract funds (owner only)\"}},\"notice\":\"This contract integrates with AI services via Chainlink Functions to detect deepfakes\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AuthenticityRegistry.sol\":\"AuthenticityRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol\":{\"keccak256\":\"0x40224641403cb9fa03d4f060296d7420a9ff11b46abadc958ae048459205e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d1dabc1ca292b93c373589b1827f01b404d0d66669f58c03b6d2f92a6e64f2c\",\"dweb:/ipfs/QmP3yzaUfqUqb7qk4fBYw8U6rMgWsSgNKjSUGJncjwaHCq\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsClient.sol\":{\"keccak256\":\"0x6117b82e7c4eec44ce557b0fc8bc1ac5f49e5d160ac6d4485452d6aafdd762ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e0828ef423afef9f6f709bb173a7e3991fe555bf9337a4941d65da525ac4ad3\",\"dweb:/ipfs/QmXz1jHRZFTqdnNxP2tffVQ9NnUE1xgtBMRWuyUrTVY4pm\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/interfaces/IFunctionsRouter.sol\":{\"keccak256\":\"0x44db41e8ff90c2828ca0ada125abc4b411921a86514a4a047fd9fd43ba9d7e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4c3228edc2cff7c55301d3764e54cd7ada6af81ef9aadf8bc116a2c982523d6\",\"dweb:/ipfs/QmXjJQgCu2gvX6QQJ9GC1gEoy3vrmpf1PiRPLqWqKddwRe\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsRequest.sol\":{\"keccak256\":\"0xed75be0eaba358d468f1fe18adc377d5044f57eff0070081f884a1f212d0adc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7c96e993b253723ed5461008c34b847d7b067221736068d45f029db4d92b0d\",\"dweb:/ipfs/QmTMMXAWXeDgSChnToydej6e3p331KiJZT3S27ZiPkht9t\"]},\"@chainlink/contracts/src/v0.8/functions/v1_0_0/libraries/FunctionsResponse.sol\":{\"keccak256\":\"0xc72eb037effef32146f7cd4086af00f44f28c8649d891e5e404fec5fda7e802b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eeeaeadc797b7656fd30201ab8c8ed24fe8fb3f83a480142bb55c7c7babb2b4b\",\"dweb:/ipfs/Qmdb55a1iWJetog7qUpZ6FHKGSA8g3Vu68LGsXfqfec9k5\"]},\"@chainlink/contracts/src/v0.8/vendor/@ensdomains/buffer/v0.1.0/Buffer.sol\":{\"keccak256\":\"0x0d86b367813922094e02594a406ba89f5e97d3d74ec2ce3c4032566840e302b0\",\"license\":\"BSD-2-Clause\",\"urls\":[\"bzz-raw://2c65ceaef4ce70e8638275da75f4c384d4e404d588fcac404028da7e634c81a8\",\"dweb:/ipfs/QmV3vMmjseNombFaRGw7K4PgDj6rrWcEzNY9S5jtLAdJqG\"]},\"@chainlink/contracts/src/v0.8/vendor/solidity-cborutils/v2.0.0/CBOR.sol\":{\"keccak256\":\"0xdecf04203502670ac72ba466c75e4f87f4419907365005f0d73e7d07ee3e5715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39c9937cf45f840cf3a45a83dec3719dbd2f1d71198088db48b909ec656f77dd\",\"dweb:/ipfs/QmQx9mEREaFyJGC2KpqWBqBV712NY8vUBrcqTR4RdVNBiu\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Base64.sol\":{\"keccak256\":\"0xbee2b819e1b4bf569ffc1b1b9d560b4abd6a589575f3093edaab9244de18a0c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e478c0e9bbf3eb8cd3b7784f9b397603e34747f9ffd16571ed1d89ce102de389\",\"dweb:/ipfs/QmZ6zXpwy5xRxx9RkodJmDZSUTeEqPQUanAC5TUoYqW2VR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AuthenticityNFT.sol\":{\"keccak256\":\"0x7042c181cd9f976125382995cba5f8f1f44875abb54dc2d5f8ace82655cf7252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f24fac5a8f844f0afb3ffd2f818ccaedd0b03bf7b818fba2ef3c66e7ee9f6139\",\"dweb:/ipfs/QmUvZCEqUJHX6wBp52T4oQaqBUuWs6fv58SRHQ6otomyaS\"]},\"contracts/AuthenticityRegistry.sol\":{\"keccak256\":\"0x004e9212956e3f407e82bb749be498ceb23ddb9ab4c682d4283e7200210ee777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0a0cbb686de2a94d24bb84f5cbfeba7689b04f1027dca8468959e8a5362e9307\",\"dweb:/ipfs/QmdbDqtwxEnXCPPnsgkq2PUhD2kZtRVQz8PAoGFPixVhRB\"]},\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}"}},"erc721a/contracts/ERC721A.sol":{"ERC721A":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"_data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"result","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_string_fromMemory":{"entryPoint":428,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":391,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_1049":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":679,"id":null,"parameterSlots":2,"returnSlots":0},"clean_up_bytearray_end_slots_string_storage_1048":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":0},"copy_byte_array_to_storage_from_string_to_string":{"entryPoint":765,"id":null,"parameterSlots":1,"returnSlots":0},"extract_byte_array_length":{"entryPoint":535,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":369,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16C JUMPI PUSH2 0x1061 DUP1 CODESIZE SUB DUP1 PUSH2 0x19 DUP2 PUSH2 0x187 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH2 0x16C JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 SWAP1 DUP4 DUP2 GT PUSH2 0x16C JUMPI DUP2 PUSH2 0x48 SWAP2 DUP5 ADD PUSH2 0x1AC JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x20 DUP3 ADD MLOAD DUP6 DUP2 GT PUSH2 0x16C JUMPI PUSH2 0x62 SWAP3 ADD PUSH2 0x1AC JUMP JUMPDEST SWAP2 DUP1 MLOAD SWAP4 DUP5 GT PUSH2 0x167 JUMPI PUSH2 0x80 DUP5 PUSH2 0x7B PUSH1 0x2 SLOAD PUSH2 0x217 JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST PUSH1 0x20 SWAP2 PUSH1 0x1F DUP6 GT PUSH1 0x1 EQ PUSH2 0xDC JUMPI POP SWAP3 DUP1 PUSH2 0xB6 SWAP3 PUSH2 0xBE SWAP6 PUSH1 0x0 SWAP3 PUSH2 0xD1 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH2 0x2FD JUMP JUMPDEST PUSH1 0x0 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0xC81 SWAP1 DUP2 PUSH2 0x3E0 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x14F JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0xBE SWAP8 SWAP5 LT PUSH2 0x136 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH2 0x2FD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x128 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x10E JUMP JUMPDEST PUSH2 0x171 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x167 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x16C JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x167 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x1DE PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH2 0x187 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH2 0x16C JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x204 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH2 0x1EF JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x231 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x226 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x25D JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x29D JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x292 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x286 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x27D JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2B3 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x2F3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x2E8 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2DC JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x2D3 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x167 JUMPI PUSH2 0x324 DUP2 PUSH2 0x31F PUSH1 0x3 SLOAD PUSH2 0x217 JUMP JUMPDEST PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x35B JUMPI POP DUP2 SWAP1 PUSH2 0x356 SWAP4 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0xD1 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3C7 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3AE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3A3 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x38F JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xBB JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x132 DUP2 PUSH2 0xFC JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x170 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x15F JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x154 JUMP JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x14D JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1AD JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x18C JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1D2 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x2D7 JUMPI JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 LT DUP6 EQ PUSH2 0x2C3 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x2A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x249 JUMPI JUMPDEST PUSH2 0x245 DUP8 PUSH2 0x239 DUP2 DUP10 SUB DUP3 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP7 LT PUSH2 0x291 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x239 DUP3 PUSH2 0x245 CODESIZE DUP1 PUSH2 0x229 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x275 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x239 DUP3 PUSH2 0x245 CODESIZE DUP1 PUSH2 0x229 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x204 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x301 DUP2 PUSH2 0xA34 JUMP JUMPDEST ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x377 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 PUSH2 0x38E DUP4 PUSH2 0xAD2 JUMP JUMPDEST AND DUP1 CALLER SUB PUSH2 0x3E7 JUMPI JUMPDEST PUSH1 0x0 SWAP4 DUP4 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x397 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x10E JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x10E JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x47D CALLDATASIZE PUSH2 0x43C JUMP JUMPDEST SWAP2 PUSH2 0x844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x483 PUSH2 0x491 CALLDATASIZE PUSH2 0x43C JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x49F DUP5 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x9F1 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4CE PUSH1 0x4 CALLDATALOAD PUSH2 0xAD2 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4F8 PUSH2 0x337 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x5EE JUMPI JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 LT DUP6 EQ PUSH2 0x2C3 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x2A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x595 JUMPI PUSH2 0x245 DUP8 PUSH2 0x239 DUP2 DUP10 SUB DUP3 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP7 LT PUSH2 0x5DD JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x239 DUP3 PUSH2 0x245 CODESIZE DUP1 PUSH2 0x229 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x561 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x611 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x10E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6B8 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x70F PUSH2 0x337 JUMP JUMPDEST PUSH2 0x717 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x10E JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x10E JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x744 DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP3 PUSH2 0x752 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x6BD JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x10E JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x483 SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x9F1 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x79B PUSH1 0x4 CALLDATALOAD PUSH2 0xA34 JUMP JUMPDEST ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x7AE DUP2 PUSH2 0x69C JUMP JUMPDEST MSTORE PUSH2 0x245 PUSH1 0x40 MLOAD PUSH2 0x7BE DUP2 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x838 PUSH2 0x807 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x80F PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x850 DUP3 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 DUP3 DUP2 AND DUP6 SWAP1 SUB PUSH2 0x9EC JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x894 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x99E JUMPI JUMPDEST PUSH2 0x994 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH2 0x907 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP2 AND ISZERO PUSH2 0x94A JUMPI JUMPDEST POP AND DUP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x945 JUMPI JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x962 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x96F JUMPI JUMPDEST POP PUSH2 0x915 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x969 JUMPI PUSH2 0x98C SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x89E JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x890 PUSH2 0x9DB CALLER PUSH2 0x9C4 DUP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x899 JUMPI PUSH2 0xA9F JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x9FF DUP3 DUP3 DUP7 PUSH2 0x844 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xA0C JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA15 SWAP4 PUSH2 0xB94 JUMP JUMPDEST ISZERO PUSH2 0xA23 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA06 JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0xA46 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP1 PUSH2 0xA81 JUMPI POP DUP2 ISZERO PUSH2 0xA6E JUMPI POP PUSH1 0x0 NOT ADD PUSH2 0xA4A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAE6 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0xAFD JUMPI POP PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0xAC1 JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xAC1 JUMPI JUMPDEST PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xB48 JUMPI POP PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND ISZERO PUSH2 0xB43 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xB0D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x10E JUMPI MLOAD PUSH2 0x1D2 DUP2 PUSH2 0xFC JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE SWAP1 PUSH2 0xB75 DUP3 PUSH2 0x6DF JUMP JUMPDEST SWAP2 PUSH2 0xB83 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6BD JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0xBDD SWAP4 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 DUP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP13 DUP14 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xC1A JUMPI JUMPDEST POP PUSH2 0xC0C JUMPI PUSH2 0xBF8 PUSH2 0xB64 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xC07 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0xC3D SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC44 JUMPI JUMPDEST PUSH2 0xC35 DUP2 DUP4 PUSH2 0x6BD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB4F JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xBEB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC2B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xAC SWAP5 0xE3 EXTCODECOPY BYTE RETURNDATASIZE 0x4E PUSH29 0x6F12D596CD503E8C1AE5CB95AA11B22E1F51FC0ACCB03464736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1053:48812:19:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:19;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;5327:13;1053:48812;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13;1053:48812;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1053:48812:19;;;;;5327:13;1053:48812;;;;-1:-1:-1;;1053:48812:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13;1053:48812;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1053:48812:19;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:19;;;-1:-1:-1;;;;;1053:48812:19;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:19;;;;;;;;;;-1:-1:-1;;1053:48812:19;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1053:48812:19;;;;;;;;-1:-1:-1;1053:48812:19;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1053:48812:19;5327:13;-1:-1:-1;1053:48812:19;;-1:-1:-1;1053:48812:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1053:48812:19;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1053:48812:19;5350:17;-1:-1:-1;1053:48812:19;;-1:-1:-1;1053:48812:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1053:48812:19;;;;;;;;;;-1:-1:-1;;;;;1053:48812:19;;;;;;;5350:17;1053:48812;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17;1053:48812;:::o;:::-;5350:17;1053:48812;;-1:-1:-1;;1053:48812:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17;1053:48812;:::o;:::-;;;;;;;5350:17;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":845,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4365":{"entryPoint":823,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":1084,"id":null,"parameterSlots":1,"returnSlots":3},"abi_decode_bytes4_fromMemory":{"entryPoint":2895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":449,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_to_string":{"entryPoint":385,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1759,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_string_storage_4363":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"decrement_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"external_fun_approve":{"entryPoint":867,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_balanceOf":{"entryPoint":1239,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_getApproved":{"entryPoint":740,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":2023,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_name":{"entryPoint":469,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_ownerOf":{"entryPoint":1192,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":1157,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom_10251":{"entryPoint":1787,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":1528,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":275,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_symbol":{"entryPoint":1330,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_tokenURI":{"entryPoint":1919,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_totalSupply":{"entryPoint":1049,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_transferFrom":{"entryPoint":1137,"id":null,"parameterSlots":0,"returnSlots":0},"extract_returndata":{"entryPoint":2916,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":1725,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_6584":{"entryPoint":1692,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkContractOnERC721Received":{"entryPoint":2964,"id":10333,"parameterSlots":4,"returnSlots":1},"fun_exists":{"entryPoint":2612,"id":9976,"parameterSlots":1,"returnSlots":1},"fun_getApprovedSlotAndAddress":{"entryPoint":null,"id":10019,"parameterSlots":1,"returnSlots":2},"fun_isSenderApprovedOrOwner":{"entryPoint":null,"id":10000,"parameterSlots":3,"returnSlots":1},"fun_packOwnershipData":{"entryPoint":null,"id":9827,"parameterSlots":1,"returnSlots":1},"fun_packedOwnershipOf":{"entryPoint":2770,"id":9761,"parameterSlots":1,"returnSlots":1},"fun_revert":{"entryPoint":2753,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_revert_4386":{"entryPoint":2703,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_revert_4388":{"entryPoint":2719,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_revert_4394":{"entryPoint":2736,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_revert_4407":{"entryPoint":null,"id":11204,"parameterSlots":0,"returnSlots":0},"fun_safeTransferFrom":{"entryPoint":2545,"id":10251,"parameterSlots":4,"returnSlots":0},"fun_transferFrom":{"entryPoint":2116,"id":10192,"parameterSlots":3,"returnSlots":0},"increment_wrapping_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_4387":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_address_uint256_of_address_4389":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_uint256_struct_TokenApprovalRef_storage_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":1670,"id":null,"parameterSlots":0,"returnSlots":0},"read_from_storage_split_offset_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_bytes4":{"entryPoint":252,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f757806306fdde03146100f2578063081812fc146100ed578063095ea7b3146100e857806318160ddd146100e357806323b872dd146100de57806342842e0e146100d95780636352211e146100d457806370a08231146100cf57806395d89b41146100ca578063a22cb465146100c5578063b88d4fde146100c0578063c87b56dd146100bb5763e985e9c5146100b657600080fd5b6107e7565b61077f565b6106fb565b6105f8565b610532565b6104d7565b6104a8565b610485565b610471565b610419565b610363565b6102e4565b6101d5565b610113565b6001600160e01b031981160361010e57565b600080fd5b3461010e57602036600319011261010e576020600435610132816100fc565b63ffffffff60e01b166301ffc9a760e01b8114908115610170575b811561015f575b506040519015158152f35b635b5e139f60e01b14905038610154565b6380ac58cd60e01b8114915061014d565b919082519283825260005b8481106101ad575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161018c565b9060206101d2928181520190610181565b90565b3461010e576000806003193601126102e1576040519080600254906001918060011c92600182169283156102d7575b6020926020861085146102c35785885260208801949081156102a25750600114610249575b61024587610239818903826106bd565b604051918291826101c1565b0390f35b600260005294509192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8386106102915750505091019050610239826102453880610229565b805485870152948201948101610275565b60ff191685525050505090151560051b019050610239826102453880610229565b634e487b7160e01b82526022600452602482fd5b93607f1693610204565b80fd5b3461010e57602036600319011261010e5760043561030181610a34565b15610326576000526006602052602060018060a01b0360406000205416604051908152f35b6333d1c03960e21b60005260046000fd5b600435906001600160a01b038216820361010e57565b602435906001600160a01b038216820361010e57565b604036600319011261010e57610377610337565b6001600160a01b0390602435908261038e83610ad2565b168033036103e7575b600093838552600660205260408520921691826bffffffffffffffffffffffff60a01b8254161790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b600081815260076020908152604080832033845290915290205460ff16610397576367d9dca160e11b60005260046000fd5b3461010e57600036600319011261010e5760206000546001549003604051908152f35b606090600319011261010e576001600160a01b0390600435828116810361010e5791602435908116810361010e579060443590565b61048361047d3661043c565b91610844565b005b6104836104913661043c565b906040519261049f8461069c565b600084526109f1565b3461010e57602036600319011261010e5760206001600160a01b036104ce600435610ad2565b16604051908152f35b3461010e57602036600319011261010e576001600160a01b036104f8610337565b168015610521576000526005602052602067ffffffffffffffff60406000205416604051908152f35b6323d3ad8160e21b60005260046000fd5b3461010e576000806003193601126102e1576040519080600354906001918060011c92600182169283156105ee575b6020926020861085146102c35785885260208801949081156102a257506001146105955761024587610239818903826106bd565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8386106105dd5750505091019050610239826102453880610229565b8054858701529482019481016105c1565b93607f1693610561565b3461010e57604036600319011261010e57610611610337565b6024359081151580920361010e573360009081526007602090815260408083206001600160a01b0385168452909152902060ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106b857604052565b610686565b90601f8019910116810190811067ffffffffffffffff8211176106b857604052565b67ffffffffffffffff81116106b857601f01601f191660200190565b608036600319011261010e5761070f610337565b61071761034d565b6064359167ffffffffffffffff831161010e573660238401121561010e57826004013591610744836106df565b9261075260405194856106bd565b808452366024828701011161010e57602081600092602461048398018388013785010152604435916109f1565b3461010e57602036600319011261010e5761079b600435610a34565b156107d65760006040516107ae8161069c565b526102456040516107be8161069c565b60008152604051918291602083526020830190610181565b630a14c4b560e41b60005260046000fd5b3461010e57604036600319011261010e57602060ff610838610807610337565b61080f61034d565b6001600160a01b0391821660009081526007865260408082209290931681526020919091522090565b54166040519015158152f35b91909161085082610ad2565b6001600160a01b0391821693908281168590036109ec57600084815260066020526040902080546108946001600160a01b03881633908114908314171590565b1590565b61099e575b610994575b506001600160a01b038516600090815260056020526040902080546000190190556001600160a01b0382166000908152600560205260409020805460010190556001600160a01b0382164260a01b17600160e11b17610907856000526004602052604060002090565b55600160e11b81161561094a575b501680927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a41561094557565b610ab0565b60018401610962816000526004602052604060002090565b541561096f575b50610915565b60005481146109695761098c906000526004602052604060002090565b553880610969565b600090553861089e565b6109e26108906109db336109c48b60018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b1561089957610a9f565b610a8f565b9291906109ff828286610844565b803b610a0c575b50505050565b610a1593610b94565b15610a235738808080610a06565b6368d2bf6b60e11b60005260046000fd5b90600091600080548210610a46575050565b9192505b808252600480602052604083205480610a8157508115610a6e575060001901610a4a565b634e487b7160e01b835260119052602482fd5b600160e01b16159392505050565b62a1148160e81b60005260046000fd5b632ce44b5f60e11b60005260046000fd5b633a954ecd60e21b60005260046000fd5b636f96cda160e11b60005260046000fd5b610ae6816000526004602052604060002090565b54908115610afd5750600160e01b8116610ac15790565b9050600090600054811015610ac1575b60001901600081815260046020526040902054908115610b485750600160e01b811615610b4357636f96cda160e11b8252600482fd5b905090565b9050610b0d565b9081602091031261010e57516101d2816100fc565b3d15610b8f573d90610b75826106df565b91610b8360405193846106bd565b82523d6000602084013e565b606090565b92602091610bdd93600060018060a01b0360405180978196829584630a85bd0160e11b9c8d86523360048701521660248501526044840152608060648401526084830190610181565b0393165af160009181610c1a575b50610c0c57610bf8610b64565b805115610c0757805190602001fd5b610a23565b6001600160e01b0319161490565b610c3d91925060203d602011610c44575b610c3581836106bd565b810190610b4f565b9038610beb565b503d610c2b56fea264697066735822122001ac94e33c1a3d4e7c6f12d596cd503e8c1ae5cb95aa11b22e1f51fc0accb03464736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xBB JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E7 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST PUSH2 0x6FB JUMP JUMPDEST PUSH2 0x5F8 JUMP JUMPDEST PUSH2 0x532 JUMP JUMPDEST PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x4A8 JUMP JUMPDEST PUSH2 0x485 JUMP JUMPDEST PUSH2 0x471 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST PUSH2 0x2E4 JUMP JUMPDEST PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x113 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x132 DUP2 PUSH2 0xFC JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x170 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x15F JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x154 JUMP JUMPDEST PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x14D JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1AD JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x18C JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1D2 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x2D7 JUMPI JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 LT DUP6 EQ PUSH2 0x2C3 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x2A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x249 JUMPI JUMPDEST PUSH2 0x245 DUP8 PUSH2 0x239 DUP2 DUP10 SUB DUP3 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1C1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP7 LT PUSH2 0x291 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x239 DUP3 PUSH2 0x245 CODESIZE DUP1 PUSH2 0x229 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x275 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x239 DUP3 PUSH2 0x245 CODESIZE DUP1 PUSH2 0x229 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP3 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x204 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x301 DUP2 PUSH2 0xA34 JUMP JUMPDEST ISZERO PUSH2 0x326 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x33D1C039 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x10E JUMPI JUMP JUMPDEST PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x377 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP3 PUSH2 0x38E DUP4 PUSH2 0xAD2 JUMP JUMPDEST AND DUP1 CALLER SUB PUSH2 0x3E7 JUMPI JUMPDEST PUSH1 0x0 SWAP4 DUP4 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x397 JUMPI PUSH4 0x67D9DCA1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x10E JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x10E JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x483 PUSH2 0x47D CALLDATASIZE PUSH2 0x43C JUMP JUMPDEST SWAP2 PUSH2 0x844 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x483 PUSH2 0x491 CALLDATASIZE PUSH2 0x43C JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x49F DUP5 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x9F1 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4CE PUSH1 0x4 CALLDATALOAD PUSH2 0xAD2 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x4F8 PUSH2 0x337 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x23D3AD81 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2E1 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 PUSH1 0x1 SHR SWAP3 PUSH1 0x1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x5EE JUMPI JUMPDEST PUSH1 0x20 SWAP3 PUSH1 0x20 DUP7 LT DUP6 EQ PUSH2 0x2C3 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x2A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x595 JUMPI PUSH2 0x245 DUP8 PUSH2 0x239 DUP2 DUP10 SUB DUP3 PUSH2 0x6BD JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP7 LT PUSH2 0x5DD JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x239 DUP3 PUSH2 0x245 CODESIZE DUP1 PUSH2 0x229 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x5C1 JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x561 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x611 PUSH2 0x337 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x10E JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6B8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6B8 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x70F PUSH2 0x337 JUMP JUMPDEST PUSH2 0x717 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x10E JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x10E JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x744 DUP4 PUSH2 0x6DF JUMP JUMPDEST SWAP3 PUSH2 0x752 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x6BD JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x10E JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x483 SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x9F1 JUMP JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH2 0x79B PUSH1 0x4 CALLDATALOAD PUSH2 0xA34 JUMP JUMPDEST ISZERO PUSH2 0x7D6 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x7AE DUP2 PUSH2 0x69C JUMP JUMPDEST MSTORE PUSH2 0x245 PUSH1 0x40 MLOAD PUSH2 0x7BE DUP2 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST PUSH4 0xA14C4B5 PUSH1 0xE4 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x10E JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x10E JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x838 PUSH2 0x807 PUSH2 0x337 JUMP JUMPDEST PUSH2 0x80F PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x850 DUP3 PUSH2 0xAD2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP4 SWAP1 DUP3 DUP2 AND DUP6 SWAP1 SUB PUSH2 0x9EC JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x894 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x99E JUMPI JUMPDEST PUSH2 0x994 JUMPI JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND TIMESTAMP PUSH1 0xA0 SHL OR PUSH1 0x1 PUSH1 0xE1 SHL OR PUSH2 0x907 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 PUSH1 0xE1 SHL DUP2 AND ISZERO PUSH2 0x94A JUMPI JUMPDEST POP AND DUP1 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x945 JUMPI JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x962 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x96F JUMPI JUMPDEST POP PUSH2 0x915 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x969 JUMPI PUSH2 0x98C SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x969 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x89E JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x890 PUSH2 0x9DB CALLER PUSH2 0x9C4 DUP12 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x899 JUMPI PUSH2 0xA9F JUMP JUMPDEST PUSH2 0xA8F JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x9FF DUP3 DUP3 DUP7 PUSH2 0x844 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xA0C JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xA15 SWAP4 PUSH2 0xB94 JUMP JUMPDEST ISZERO PUSH2 0xA23 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xA06 JUMP JUMPDEST PUSH4 0x68D2BF6B PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0xA46 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP1 PUSH2 0xA81 JUMPI POP DUP2 ISZERO PUSH2 0xA6E JUMPI POP PUSH1 0x0 NOT ADD PUSH2 0xA4A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x11 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xE0 SHL AND ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH3 0xA11481 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2CE44B5F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x3A954ECD PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAE6 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0xAFD JUMPI POP PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND PUSH2 0xAC1 JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 PUSH1 0x0 SLOAD DUP2 LT ISZERO PUSH2 0xAC1 JUMPI JUMPDEST PUSH1 0x0 NOT ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 DUP2 ISZERO PUSH2 0xB48 JUMPI POP PUSH1 0x1 PUSH1 0xE0 SHL DUP2 AND ISZERO PUSH2 0xB43 JUMPI PUSH4 0x6F96CDA1 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0xB0D JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x10E JUMPI MLOAD PUSH2 0x1D2 DUP2 PUSH2 0xFC JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xB8F JUMPI RETURNDATASIZE SWAP1 PUSH2 0xB75 DUP3 PUSH2 0x6DF JUMP JUMPDEST SWAP2 PUSH2 0xB83 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x6BD JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0xBDD SWAP4 PUSH1 0x0 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 DUP5 PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP13 DUP14 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x181 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xC1A JUMPI JUMPDEST POP PUSH2 0xC0C JUMPI PUSH2 0xBF8 PUSH2 0xB64 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xC07 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0xA23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND EQ SWAP1 JUMP JUMPDEST PUSH2 0xC3D SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC44 JUMPI JUMPDEST PUSH2 0xC35 DUP2 DUP4 PUSH2 0x6BD JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB4F JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xBEB JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC2B JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xAC SWAP5 0xE3 EXTCODECOPY BYTE RETURNDATASIZE 0x4E PUSH29 0x6F12D596CD503E8C1AE5CB95AA11B22E1F51FC0ACCB03464736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"1053:48812:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;-1:-1:-1;;;;;;1053:48812:19;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;1053:48812:19;;;;;;;;;;:::i;:::-;;;;;;;;11092:25;;:101;;;;;1053:48812;11092:177;;;;1053:48812;;;;;;;;;;11092:177;-1:-1:-1;;;11244:25:19;;-1:-1:-1;11092:177:19;;;:101;-1:-1:-1;;;11168:25:19;;;-1:-1:-1;11092:101:19;;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;11659:5;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;11659:5;1053:48812;;;-1:-1:-1;1053:48812:19;;;;;;;;;;-1:-1:-1;;;1053:48812:19;;;-1:-1:-1;1053:48812:19;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:19;;;-1:-1:-1;;;;1053:48812:19;;;;;;;-1:-1:-1;1053:48812:19;;;;;;;;-1:-1:-1;;;1053:48812:19;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:19;;;;;;18736:16;;;:::i;:::-;18735:17;18731:73;;-1:-1:-1;1053:48812:19;18822:15;1053:48812;;;;;;;;;-1:-1:-1;1053:48812:19;;;;;;;;;18731:73;18762:41;;;-1:-1:-1;49766:91:19;1053:48812;-1:-1:-1;49766:91:19;1053:48812;;;;-1:-1:-1;;;;;1053:48812:19;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1053:48812:19;;;;;;:::o;:::-;;;-1:-1:-1;;1053:48812:19;;;;;;:::i;:::-;-1:-1:-1;;;;;1053:48812:19;;;;;13048:27;1053:48812;13048:27;:::i;:::-;1053:48812;47819:10;;41521:28;41500:198;;1053:48812;-1:-1:-1;1053:48812:19;;;;41708:15;1053:48812;;;;;;;;;;;;;;;;;;41758:28;;;;1053:48812;;41500:198;-1:-1:-1;2943:14:19;;;19687:18;1053:48812;2943:14;;;1053:48812;2943:14;;;47819:10;2943:14;;;;;;;1053:48812;;;41500:198;41563:135;41640:42;;;-1:-1:-1;49766:91:19;;-1:-1:-1;49766:91:19;1053:48812;;;;;;-1:-1:-1;;1053:48812:19;;;;;;;7328:12;1053:48812;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:19;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;26475:39;1053:48812;;;:::i;:::-;;;;;;;;:::i;:::-;;;;26475:39;:::i;1053:48812::-;;;;;;-1:-1:-1;;1053:48812:19;;;;;-1:-1:-1;;;;;13048:27:19;1053:48812;;13048:27;:::i;:::-;1053:48812;;;;;;;;;;;;;-1:-1:-1;;1053:48812:19;;;;-1:-1:-1;;;;;1053:48812:19;;:::i;:::-;;8665:19;;8661:69;;-1:-1:-1;2943:14:19;8747:18;1053:48812;2943:14;1053:48812;1518:13;2943:14;-1:-1:-1;2943:14:19;1053:48812;8747:55;2943:14;1053:48812;;;;;8661:69;8694:35;;;-1:-1:-1;49766:91:19;1053:48812;-1:-1:-1;49766:91:19;1053:48812;;;;;;;;;;;;;;;;;11830:7;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11830:7;1053:48812;;;-1:-1:-1;1053:48812:19;;;;;;;;;;-1:-1:-1;;;1053:48812:19;;;-1:-1:-1;1053:48812:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:19;;;;;;:::i;:::-;;;;;;;;;;;;47819:10;-1:-1:-1;2943:14:19;;;19280:18;1053:48812;2943:14;;;1053:48812;2943:14;;;-1:-1:-1;;;;;1053:48812:19;;2943:14;;;;;;;1053:48812;;;;;;;;;;;;;;;;;;;;;;47819:10;19355:55;1053:48812;47819:10;19355:55;;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1053:48812:19;;;;:::o;:::-;;;-1:-1:-1;;1053:48812:19;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1053:48812:19;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1053:48812:19;;;;12048:16;1053:48812;;12048:16;:::i;:::-;12047:17;12043:68;;-1:-1:-1;1053:48812:19;;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;1053:48812:19;;;;;;;;;;;;;;;:::i;12043:68::-;12074:36;;;-1:-1:-1;49766:91:19;1053:48812;-1:-1:-1;49766:91:19;1053:48812;;;;;;-1:-1:-1;;1053:48812:19;;;;;;19687:35;1053:48812;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;1053:48812:19;;;-1:-1:-1;2943:14:19;;;19687:18;2943:14;;1053:48812;2943:14;;;1053:48812;;;;2943:14;;-1:-1:-1;2943:14:19;;;;;;;19687:35;1053:48812;;;;;;;;;;22796:3447;;;;22963:27;;;:::i;:::-;-1:-1:-1;;;;;1053:48812:19;;;;;;;;23173:45;;;23169:95;;-1:-1:-1;1053:48812:19;;;21929:15;1053:48812;;;;;22057:132;;23463:69;-1:-1:-1;;;;;21135:472:19;;47819:10;21135:472;;;;;;;23463:69;;1053:48812;23464:68;23463:69;;1053:48812;23463:69;23459:188;;22796:3447;23764:190;;22796:3447;-1:-1:-1;;;;;;1053:48812:19;;2943:14;;;;24316:18;2943:14;;;;;1053:48812;;-1:-1:-1;;2943:14:19;;;-1:-1:-1;;;;;1053:48812:19;;2943:14;;;;24316:18;2943:14;;;;;1053:48812;;2943:14;;;;-1:-1:-1;;;;;17192:331:19;;;;;;-1:-1:-1;;;17192:331:19;24670:26;;1053:48812;;24670:17;1053:48812;;;;;;;24670:26;2943:14;-1:-1:-1;;;24959:47:19;;:52;24955:617;;22796:3447;1053:48812;;25749:367;;;-1:-1:-1;25749:367:19;;26129:13;26125:58;;22796:3447::o;26125:58::-;26152:30;:::i;24955:617::-;25063:1;1053:48812;;25184:30;;1053:48812;;24670:17;1053:48812;;;;;;;25184:30;1053:48812;25184:35;25180:378;;24955:617;;;;25180:378;-1:-1:-1;1053:48812:19;25301:239;;25180:378;25301:239;25465:30;;1053:48812;;24670:17;1053:48812;;;;;;;25465:30;2943:14;25301:239;;25180:378;;23764:190;;;;;;;23459:188;23550:44;19687:35;;47819:10;19687:25;;1053:48812;;;;;;2943:14;;19687:18;2943:14;;;;;;;19687:25;2943:14;1053:48812;;;;;;2943:14;;;;;;;;;19687:35;1053:48812;;;;;23550:44;23546:101;23459:188;23546:101;23604:42;:::i;23169:95::-;23228:35;:::i;27102:405::-;;;;27294:7;;;;;:::i;:::-;27316:14;;27312:189;;27102:405;;;;;:::o;27312:189::-;27354:56;;;:::i;:::-;27353:57;27349:152;;27312:189;;;;;;27349:152;27438:47;;;27334:1;49766:91;;27334:1;49766:91;19978:465;;1053:48812;20043:11;1053:48812;;;20221:23;;20217:210;;19978:465;;:::o;20217:210::-;20264:14;;-1:-1:-1;20296:60:19;1053:48812;;;20313:17;1053:48812;;;;;;;20303:42;;;1053:48812;;;;;-1:-1:-1;;;1053:48812:19;20296:60;;1053:48812;-1:-1:-1;;;1053:48812:19;;;;;;;;20303:42;-1:-1:-1;;;20383:24:19;:29;;20217:210;-1:-1:-1;;;19978:465:19:o;49703:160::-;23228:35;;;49766:91;;;;;49703:160;23604:42;;;49766:91;;;;;49703:160;26152:30;;;49766:91;;;;;49703:160;14916:38;;;49766:91;;;;;14380:2173;14528:26;;1053:48812;;24670:17;1053:48812;;;;;;;14528:26;1053:48812;14847:11;;;14843:1270;;-1:-1:-1;;;;16435:24:19;;16507:38;16431:48;16466:13;:::o;14843:1270::-;6048:1;;;1053:48812;6048:1;1053:48812;14882:24;;;14878:77;;15502:597;-1:-1:-1;;2943:14:19;;1053:48812;;;24670:17;1053:48812;;;;;;15654:11;;;15650:25;;-1:-1:-1;;;;15701:24:19;;:29;15697:48;;-1:-1:-1;;;49766:91:19;;;14916:38;49766:91;15697:48;15732:13;;;:::o;15650:25::-;15502:597;-1:-1:-1;15502:597:19;;1053:48812;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1053:48812:19;;;;:::o;:::-;;;:::o;29533:673::-;;29711:88;29533:673;1053:48812;29533:673;-1:-1:-1;1053:48812:19;;;;;;;;;;;;;;;;;29711:88;;;;47819:10;29711:88;;;1053:48812;;;;;;;;;;;;;;;;;;;;:::i;:::-;29711:88;1053:48812;;29711:88;;-1:-1:-1;;29711:88:19;;;29533:673;-1:-1:-1;29707:493:19;;29943:257;;:::i;:::-;1053:48812;;29989:18;29985:113;;30111:79;;;29711:88;30111:79;;29985:113;30035:47;:::i;29707:493::-;-1:-1:-1;;;;;;1053:48812:19;29867:64;;29860:71::o;29711:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}"},"ERC721A__IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}"}},"erc721a/contracts/IERC721A.sol":{"IERC721A":{"abi":[{"inputs":[],"name":"ApprovalCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"ApprovalQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"BalanceQueryForZeroAddress","type":"error"},{"inputs":[],"name":"MintERC2309QuantityExceedsLimit","type":"error"},{"inputs":[],"name":"MintToZeroAddress","type":"error"},{"inputs":[],"name":"MintZeroQuantity","type":"error"},{"inputs":[],"name":"NotCompatibleWithSpotMints","type":"error"},{"inputs":[],"name":"OwnerQueryForNonexistentToken","type":"error"},{"inputs":[],"name":"OwnershipNotInitializedForExtraData","type":"error"},{"inputs":[],"name":"SequentialMintExceedsLimit","type":"error"},{"inputs":[],"name":"SequentialUpToTooSmall","type":"error"},{"inputs":[],"name":"SpotMintTokenIdTooSmall","type":"error"},{"inputs":[],"name":"TokenAlreadyExists","type":"error"},{"inputs":[],"name":"TransferCallerNotOwnerNorApproved","type":"error"},{"inputs":[],"name":"TransferFromIncorrectOwner","type":"error"},{"inputs":[],"name":"TransferToNonERC721ReceiverImplementer","type":"error"},{"inputs":[],"name":"TransferToZeroAddress","type":"error"},{"inputs":[],"name":"URIQueryForNonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"toTokenId","type":"uint256"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"}],"name":"ConsecutiveTransfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}"}}}}}