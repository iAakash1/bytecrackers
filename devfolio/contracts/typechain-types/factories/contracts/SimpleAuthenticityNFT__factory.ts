/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SimpleAuthenticityNFT,
  SimpleAuthenticityNFTInterface,
} from "../../contracts/SimpleAuthenticityNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346103a1576001600160401b0390601f90601f1961124e3881900384810183168401868111858210176103a6578492829160405283396020938491810103126103a157516001600160a01b039485821693918490036103a1576100626103bc565b94601886527f41757468656e7469636974792043657274696669636174650000000000000000838701526100946103bc565b60049384825263082aaa8960e31b8183015287519584871161038c5760009687549960019a8b81811c91168015610382575b8582101461036f57908187849311610321575b5084908783116001146102bc578a926102b1575b5050600019600383901b1c1916908a1b1787555b825194851161029e5788548981811c91168015610294575b838210146102815790818587969594931161022d575b50819385116001146101cd57505085926101c2575b5050600019600383901b1c191690851b1784555b82156101ac5750600680546001600160a01b0319811684179091556040519416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600755610e7290816103dc8239f35b60249160405191631e4fbdf760e01b8352820152fd5b015190503880610144565b899593929193168588528388209388905b82821061021457505084116101fb575b505050811b018455610158565b015160001960f88460031b161c191690553880806101ee565b8484015186558b979095019493840193908101906101de565b9091929394508988528288208580880160051c820192858910610278575b9188978d9297969594930160051c01915b82811061026a57505061012f565b8a81558897508c910161025c565b9250819261024b565b634e487b7160e01b885260228752602488fd5b90607f1690610119565b634e487b7160e01b875260418652602487fd5b0151905038806100ed565b90848d9416918b8052868c20928c5b8882821061030257505084116102e9575b505050811b018755610101565b015160001960f88460031b161c191690553880806102dc565b91929395968291958786015181550195019301908e95949392916102cb565b909150898052848a208780850160051c820192878610610366575b918e91869594930160051c01915b8281106103585750506100d9565b8c81558594508e910161034a565b9250819261033c565b634e487b7160e01b8a526022895260248afd5b90607f16906100c6565b604186634e487b7160e01b6000525260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60408051919082016001600160401b038111838210176103a65760405256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146109815750806306fdde03146108b4578063081812fc14610879578063095ea7b31461079d57806323b872dd1461078557806342842e0e146107365780636352211e146107055780636a627842146105d057806370a082311461057b578063715018a61461051e5780638da5cb5b146104f557806395d89b41146103d8578063a22cb46514610337578063b88d4fde146102ae578063c87b56dd146101c2578063e985e9c5146101705763f2fde38b146100de57600080fd5b3461016c57602036600319011261016c576100f7610a2d565b90610100610e10565b6001600160a01b03918216928315610156575050600654826bffffffffffffffffffffffff60a01b821617600655167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101be57806003193601126101be5760ff81602093610190610a2d565b610198610a48565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b509190346101be576020908160031936011261016c578335835260028252808320546001600160a01b03161561027657805192606084019084821067ffffffffffffffff83111761026357509061025f918152602a84527f68747470733a2f2f6170692e6465657066616b652d636865636b65722e636f6d83850152692f6d657461646174612f60b01b81850152519282849384528301906109ed565b0390f35b634e487b7160e01b815260418652602490fd5b5162461bcd60e51b815292830152506014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b50903461016c57608036600319011261016c576102c9610a2d565b6102d1610a48565b846064359467ffffffffffffffff86116101be57366023870112156101be578501359461030961030087610acb565b95519586610a93565b85855236602487830101116101be578561033496602460209301838801378501015260443591610c86565b80f35b50903461016c578060031936011261016c57610351610a2d565b90602435918215158093036103d4576001600160a01b03169283156103bf5750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b8480fd5b5091346104f257806003193601126104f25781519181600192600154938460011c91600186169586156104e8575b60209687851081146104d5578899509688969785829a5291826000146104ae575050600114610452575b50505061025f9291610443910385610a93565b519282849384528301906109ed565b9190869350600183527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b828410610496575050508201018161044361025f610430565b8054848a01860152889550879490930192810161047d565b60ff19168782015293151560051b86019093019350849250610443915061025f9050610430565b634e487b7160e01b835260228a52602483fd5b92607f1692610406565b80fd5b5050346101be57816003193601126101be5760065490516001600160a01b039091168152602090f35b83346104f257806003193601126104f257610537610e10565b600680546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5091346104f25760203660031901126104f2576001600160a01b0361059e610a2d565b169283156105bb5750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b509190346101be576020928360031936011261016c576105ee610a2d565b926105f7610e10565b60075493600019908186146106f257600186016007556001600160a01b039081169081156106da5790869182855260028952868520541680151593846106a8575b5081855260038952868520805460010190558285526002895286852080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8580a461069457505051908152f35b60249251916339e3563760e11b8352820152fd5b600084815260046020526040902080546001600160a01b031916905581865260038a5287862090815401905538610638565b50509251633250574960e11b81529182015260249150fd5b634e487b7160e01b835260118452602483fd5b5091346104f25760203660031901126104f2575061072560209235610dd5565b90516001600160a01b039091168152f35b509190346101be5761074736610a5e565b91835193602085019085821067ffffffffffffffff8311176107725761033496975052858452610c86565b634e487b7160e01b875260418852602487fd5b83346104f25761033461079736610a5e565b91610ae7565b50903461016c578060031936011261016c576107b7610a2d565b916024356107c481610dd5565b33151580610866575b8061083d575b610827576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff16156107d3565b506001600160a01b0381163314156107cd565b503461016c57602036600319011261016c5791826020933561089a81610dd5565b50825283528190205490516001600160a01b039091168152f35b5091346104f257806003193601126104f2578151918182549260018460011c9160018616958615610977575b60209687851081146104d5578899509688969785829a5291826000146104ae57505060011461091c5750505061025f9291610443910385610a93565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061095f575050508201018161044361025f610430565b8054848a018601528895508794909301928101610946565b92607f16926108e0565b9250503461016c57602036600319011261016c573563ffffffff60e01b811680910361016c57602092506380ac58cd60e01b81149081156109dc575b81156109cb575b5015158152f35b6301ffc9a760e01b149050386109c4565b635b5e139f60e01b811491506109bd565b919082519283825260005b848110610a19575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016109f8565b600435906001600160a01b0382168203610a4357565b600080fd5b602435906001600160a01b0382168203610a4357565b6060906003190112610a43576001600160a01b03906004358281168103610a4357916024359081168103610a43579060443590565b90601f8019910116810190811067ffffffffffffffff821117610ab557604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff8111610ab557601f01601f191660200190565b6001600160a01b039182169290918315610c6d57600092828452826020956002875260409684888820541696879133151580610bd7575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610ba4575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610b835750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610b4a565b91939450915080610c2c575b15610bf357859291879138610b1e565b878688610c10576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610c51575b80610be35750858252600481523385898420541614610be3565b5086825260058152878220338352815260ff8883205416610c37565b604051633250574960e11b815260006004820152602490fd5b610c91838383610ae7565b813b610c9e575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b03928316602483015260448201949094526080606482015260209592909116939092908390610cec9060848301906109ed565b039285816000958187895af1849181610d95575b50610d60575050503d600014610d58573d610d1a81610acb565b90610d286040519283610a93565b81528091843d92013e5b80519283610d5357604051633250574960e11b815260048101849052602490fd5b019050fd5b506060610d32565b919450915063ffffffff60e01b1603610d7d575038808080610c98565b60249060405190633250574960e11b82526004820152fd5b9091508681813d8311610dce575b610dad8183610a93565b810103126103d457516001600160e01b0319811681036103d4579038610d00565b503d610da3565b6000818152600260205260409020546001600160a01b0316908115610df8575090565b60249060405190637e27328960e01b82526004820152fd5b6006546001600160a01b03163303610e2457565b60405163118cdaa760e01b8152336004820152602490fdfea2646970667358221220ab879ccd27836874ac2f54b0c5e7380f8aa1b0c8b1b9eb33994e0785abe8150764736f6c63430008190033";

type SimpleAuthenticityNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleAuthenticityNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleAuthenticityNFT__factory extends ContractFactory {
  constructor(...args: SimpleAuthenticityNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      SimpleAuthenticityNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SimpleAuthenticityNFT__factory {
    return super.connect(runner) as SimpleAuthenticityNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleAuthenticityNFTInterface {
    return new Interface(_abi) as SimpleAuthenticityNFTInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SimpleAuthenticityNFT {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SimpleAuthenticityNFT;
  }
}
